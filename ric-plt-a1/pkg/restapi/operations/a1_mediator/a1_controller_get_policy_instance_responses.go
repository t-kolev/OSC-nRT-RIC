/*
==================================================================================
  Copyright (c) 2021 Samsung

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   This source code is part of the near-RT RIC (RAN Intelligent Controller)
   platform project (RICP).
==================================================================================
*/
// Code generated by go-swagger; DO NOT EDIT.

package a1_mediator

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// A1ControllerGetPolicyInstanceOKCode is the HTTP code returned for type A1ControllerGetPolicyInstanceOK
const A1ControllerGetPolicyInstanceOKCode int = 200

/*A1ControllerGetPolicyInstanceOK The policy instance. the schema of this object is defined by the create_schema field of the policy type


swagger:response a1ControllerGetPolicyInstanceOK
*/
type A1ControllerGetPolicyInstanceOK struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewA1ControllerGetPolicyInstanceOK creates A1ControllerGetPolicyInstanceOK with default headers values
func NewA1ControllerGetPolicyInstanceOK() *A1ControllerGetPolicyInstanceOK {

	return &A1ControllerGetPolicyInstanceOK{}
}

// WithPayload adds the payload to the a1 controller get policy instance o k response
func (o *A1ControllerGetPolicyInstanceOK) WithPayload(payload interface{}) *A1ControllerGetPolicyInstanceOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the a1 controller get policy instance o k response
func (o *A1ControllerGetPolicyInstanceOK) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *A1ControllerGetPolicyInstanceOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// A1ControllerGetPolicyInstanceNotFoundCode is the HTTP code returned for type A1ControllerGetPolicyInstanceNotFound
const A1ControllerGetPolicyInstanceNotFoundCode int = 404

/*A1ControllerGetPolicyInstanceNotFound there is no policy instance with this policy_instance_id or there is no policy type with this policy_type_id


swagger:response a1ControllerGetPolicyInstanceNotFound
*/
type A1ControllerGetPolicyInstanceNotFound struct {
}

// NewA1ControllerGetPolicyInstanceNotFound creates A1ControllerGetPolicyInstanceNotFound with default headers values
func NewA1ControllerGetPolicyInstanceNotFound() *A1ControllerGetPolicyInstanceNotFound {

	return &A1ControllerGetPolicyInstanceNotFound{}
}

// WriteResponse to the client
func (o *A1ControllerGetPolicyInstanceNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// A1ControllerGetPolicyInstanceServiceUnavailableCode is the HTTP code returned for type A1ControllerGetPolicyInstanceServiceUnavailable
const A1ControllerGetPolicyInstanceServiceUnavailableCode int = 503

/*A1ControllerGetPolicyInstanceServiceUnavailable Potentially transient backend database error. Client should attempt to retry later.

swagger:response a1ControllerGetPolicyInstanceServiceUnavailable
*/
type A1ControllerGetPolicyInstanceServiceUnavailable struct {
}

// NewA1ControllerGetPolicyInstanceServiceUnavailable creates A1ControllerGetPolicyInstanceServiceUnavailable with default headers values
func NewA1ControllerGetPolicyInstanceServiceUnavailable() *A1ControllerGetPolicyInstanceServiceUnavailable {

	return &A1ControllerGetPolicyInstanceServiceUnavailable{}
}

// WriteResponse to the client
func (o *A1ControllerGetPolicyInstanceServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(503)
}
