/*
==================================================================================
  Copyright (c) 2021 Samsung

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   This source code is part of the near-RT RIC (RAN Intelligent Controller)
   platform project (RICP).
==================================================================================
*/
// Code generated by go-swagger; DO NOT EDIT.

package a1_mediator

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"gerrit.o-ran-sc.org/r/ric-plt/a1/pkg/models"
)

// A1ControllerGetAllPolicyTypesOKCode is the HTTP code returned for type A1ControllerGetAllPolicyTypesOK
const A1ControllerGetAllPolicyTypesOKCode int = 200

/*A1ControllerGetAllPolicyTypesOK list of all registered policy type ids

swagger:response a1ControllerGetAllPolicyTypesOK
*/
type A1ControllerGetAllPolicyTypesOK struct {

	/*
	  In: Body
	*/
	Payload []models.PolicyTypeID `json:"body,omitempty"`
}

// NewA1ControllerGetAllPolicyTypesOK creates A1ControllerGetAllPolicyTypesOK with default headers values
func NewA1ControllerGetAllPolicyTypesOK() *A1ControllerGetAllPolicyTypesOK {

	return &A1ControllerGetAllPolicyTypesOK{}
}

// WithPayload adds the payload to the a1 controller get all policy types o k response
func (o *A1ControllerGetAllPolicyTypesOK) WithPayload(payload []models.PolicyTypeID) *A1ControllerGetAllPolicyTypesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the a1 controller get all policy types o k response
func (o *A1ControllerGetAllPolicyTypesOK) SetPayload(payload []models.PolicyTypeID) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *A1ControllerGetAllPolicyTypesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]models.PolicyTypeID, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// A1ControllerGetAllPolicyTypesServiceUnavailableCode is the HTTP code returned for type A1ControllerGetAllPolicyTypesServiceUnavailable
const A1ControllerGetAllPolicyTypesServiceUnavailableCode int = 503

/*A1ControllerGetAllPolicyTypesServiceUnavailable Potentially transient backend database error. Client should attempt to retry later.

swagger:response a1ControllerGetAllPolicyTypesServiceUnavailable
*/
type A1ControllerGetAllPolicyTypesServiceUnavailable struct {
}

// NewA1ControllerGetAllPolicyTypesServiceUnavailable creates A1ControllerGetAllPolicyTypesServiceUnavailable with default headers values
func NewA1ControllerGetAllPolicyTypesServiceUnavailable() *A1ControllerGetAllPolicyTypesServiceUnavailable {

	return &A1ControllerGetAllPolicyTypesServiceUnavailable{}
}

// WriteResponse to the client
func (o *A1ControllerGetAllPolicyTypesServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(503)
}
