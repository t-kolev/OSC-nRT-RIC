/*
   Copyright (c) 2019 AT&T Intellectual Property.
   Copyright (c) 2019 Nokia.

   Licensed under the Creative Commons Attribution 4.0 International
   Public License (the "License"); you may not use this file except
   in compliance with the License. You may obtain a copy of the License at

       https://creativecommons.org/licenses/by/4.0/

   Unless required by applicable law or agreed to in writing, documentation
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/

syntax ="proto3";

package streaming_protobufs;

option go_package = "gerrit.o-ran-sc.org/r/ric-plt/streaming-protobufs";

import "google/protobuf/wrappers.proto";
import "rrc_general_message_types.proto";

/*
   Protocol Buffer definition for RRC TRANSFER message.
   (3GPP 36.423, ver 15.4.0)

   Naming convention follows the ASN.1 field naming defined in chapter
   '9.3 Message and Information Element Abstract Syntax (with ASN.1)' of below document:
   http://www.3gpp.org/ftp//Specs/archive/36_series/36.423/36423-f40.zip

   Dashes converted to underscores to make protobuf message syntax correct.
*/


message UENRMeasurement_ExtIEs
{
}

message UENRMeasurement
{
    RRCContainer uENRMeasurements = 1;
    repeated UENRMeasurement_ExtIEs iE_Extensions = 2;
}

message SplitSRB_ExtIEs
{
}

message DeliveryStatus_ExtIEs
{
}

message DeliveryStatus
{
    uint32 highestSuccessDeliveredPDCPSN = 1;
    repeated DeliveryStatus_ExtIEs iE_Extensions = 2;
}

message SplitSRB
{
    enum SRBType {
        protobuf_unspecified = 0;
        srb1 = 1;
        srb2 = 2;
    }

    /*UNNECESSARILY LONG - CANNOT COMPLETE 36.331 RRCContainer -
      ALSO SPLIT SRB IS NOT SUPPORTED IN NOKIA gNB. THIS WILL BE A HEAVILY
      UNNECESSARY EXERCISE TO DO PROTOBUF SPEC. FOR THE TIME BEING, IT IS
      OK TO USE 38.331*/
    RRCContainer rrcContainer = 1;
    SRBType srbType = 2;
    DeliveryStatus deliveryStatus = 3;
    repeated SplitSRB_ExtIEs iE_Extensions = 4;
}

message RRCTransfer_IEs
{
    uint32 id_MeNB_UE_X2AP_ID = 1;
    uint32 id_SgNB_UE_X2AP_ID = 2;
    SplitSRB id_SplitSRB = 3;
    UENRMeasurement id_UENRMeasurement = 4;
    google.protobuf.UInt32Value id_MeNB_UE_X2AP_ID_Extension = 5;
}

message RRCTransfer
{
    RRCTransfer_IEs rrcTransfer_IEs = 1;
}
