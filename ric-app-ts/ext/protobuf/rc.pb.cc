// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rc.proto

#include "rc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_rc_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Guami;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RICControlMessage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RICE2APHeader;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rc_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RICControlHeader;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rc_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UeId;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rc_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_gNBUEID;
}  // namespace protobuf_rc_2eproto
namespace rc {
class RICE2APHeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RICE2APHeader>
      _instance;
} _RICE2APHeader_default_instance_;
class RICControlHeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RICControlHeader>
      _instance;
} _RICControlHeader_default_instance_;
class UeIdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UeId>
      _instance;
} _UeId_default_instance_;
class gNBUEIDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<gNBUEID>
      _instance;
} _gNBUEID_default_instance_;
class GuamiDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Guami>
      _instance;
} _Guami_default_instance_;
class RICControlMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RICControlMessage>
      _instance;
} _RICControlMessage_default_instance_;
class RicControlGrpcReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RicControlGrpcReq>
      _instance;
} _RicControlGrpcReq_default_instance_;
class RicControlGrpcRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RicControlGrpcRsp>
      _instance;
} _RicControlGrpcRsp_default_instance_;
}  // namespace rc
namespace protobuf_rc_2eproto {
static void InitDefaultsRICE2APHeader() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rc::_RICE2APHeader_default_instance_;
    new (ptr) ::rc::RICE2APHeader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rc::RICE2APHeader::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RICE2APHeader =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRICE2APHeader}, {}};

static void InitDefaultsRICControlHeader() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rc::_RICControlHeader_default_instance_;
    new (ptr) ::rc::RICControlHeader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rc::RICControlHeader::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RICControlHeader =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRICControlHeader}, {
      &protobuf_rc_2eproto::scc_info_UeId.base,}};

static void InitDefaultsUeId() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rc::_UeId_default_instance_;
    new (ptr) ::rc::UeId();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rc::UeId::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UeId =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUeId}, {
      &protobuf_rc_2eproto::scc_info_gNBUEID.base,}};

static void InitDefaultsgNBUEID() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rc::_gNBUEID_default_instance_;
    new (ptr) ::rc::gNBUEID();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rc::gNBUEID::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_gNBUEID =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsgNBUEID}, {
      &protobuf_rc_2eproto::scc_info_Guami.base,}};

static void InitDefaultsGuami() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rc::_Guami_default_instance_;
    new (ptr) ::rc::Guami();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rc::Guami::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Guami =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGuami}, {}};

static void InitDefaultsRICControlMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rc::_RICControlMessage_default_instance_;
    new (ptr) ::rc::RICControlMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rc::RICControlMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RICControlMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRICControlMessage}, {}};

static void InitDefaultsRicControlGrpcReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rc::_RicControlGrpcReq_default_instance_;
    new (ptr) ::rc::RicControlGrpcReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rc::RicControlGrpcReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_RicControlGrpcReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsRicControlGrpcReq}, {
      &protobuf_rc_2eproto::scc_info_RICE2APHeader.base,
      &protobuf_rc_2eproto::scc_info_RICControlHeader.base,
      &protobuf_rc_2eproto::scc_info_RICControlMessage.base,}};

static void InitDefaultsRicControlGrpcRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rc::_RicControlGrpcRsp_default_instance_;
    new (ptr) ::rc::RicControlGrpcRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rc::RicControlGrpcRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RicControlGrpcRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRicControlGrpcRsp}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_RICE2APHeader.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RICControlHeader.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UeId.base);
  ::google::protobuf::internal::InitSCC(&scc_info_gNBUEID.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Guami.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RICControlMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RicControlGrpcReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RicControlGrpcRsp.base);
}

::google::protobuf::Metadata file_level_metadata[8];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rc::RICE2APHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rc::RICE2APHeader, ranfuncid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rc::RICE2APHeader, ricrequestorid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rc::RICControlHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rc::RICControlHeader, controlstyle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rc::RICControlHeader, controlactionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rc::RICControlHeader, ueid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rc::UeId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rc::UeId, gnbueid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rc::gNBUEID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rc::gNBUEID, amfuengapid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rc::gNBUEID, guami_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rc::gNBUEID, gnbcuuef1apid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rc::gNBUEID, gnbcucpuee1apid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rc::Guami, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rc::Guami, plmnidentity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rc::Guami, amfregionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rc::Guami, amfsetid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rc::Guami, amfpointer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rc::RICControlMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rc::RICControlMessage, riccontrolcelltypeval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rc::RICControlMessage, targetcellid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rc::RicControlGrpcReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rc::RicControlGrpcReq, e2nodeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rc::RicControlGrpcReq, plmnid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rc::RicControlGrpcReq, ranname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rc::RicControlGrpcReq, rice2apheaderdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rc::RicControlGrpcReq, riccontrolheaderdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rc::RicControlGrpcReq, riccontrolmessagedata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rc::RicControlGrpcReq, riccontrolackreqval_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rc::RicControlGrpcRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rc::RicControlGrpcRsp, rspcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rc::RicControlGrpcRsp, description_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::rc::RICE2APHeader)},
  { 7, -1, sizeof(::rc::RICControlHeader)},
  { 15, -1, sizeof(::rc::UeId)},
  { 21, -1, sizeof(::rc::gNBUEID)},
  { 30, -1, sizeof(::rc::Guami)},
  { 39, -1, sizeof(::rc::RICControlMessage)},
  { 46, -1, sizeof(::rc::RicControlGrpcReq)},
  { 58, -1, sizeof(::rc::RicControlGrpcRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::rc::_RICE2APHeader_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rc::_RICControlHeader_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rc::_UeId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rc::_gNBUEID_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rc::_Guami_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rc::_RICControlMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rc::_RicControlGrpcReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rc::_RicControlGrpcRsp_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "rc.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\010rc.proto\022\002rc\":\n\rRICE2APHeader\022\021\n\tRanFu"
      "ncId\030\001 \001(\003\022\026\n\016RICRequestorID\030\002 \001(\003\"Y\n\020RI"
      "CControlHeader\022\024\n\014ControlStyle\030\001 \001(\003\022\027\n\017"
      "ControlActionId\030\002 \001(\003\022\026\n\004UEID\030\003 \001(\0132\010.rc"
      ".UeId\"$\n\004UeId\022\034\n\007GnbUEID\030\001 \001(\0132\013.rc.gNBU"
      "EID\"h\n\007gNBUEID\022\023\n\013amfUENGAPID\030\001 \001(\003\022\030\n\005g"
      "uami\030\002 \001(\0132\t.rc.Guami\022\025\n\rgNBCUUEF1APID\030\003"
      " \003(\003\022\027\n\017gNBCUCPUEE1APID\030\004 \003(\003\"X\n\005Guami\022\024"
      "\n\014pLMNIdentity\030\001 \001(\t\022\023\n\013aMFRegionID\030\002 \001("
      "\t\022\020\n\010aMFSetID\030\003 \001(\t\022\022\n\naMFPointer\030\004 \001(\t\""
      "d\n\021RICControlMessage\0229\n\025RICControlCellTy"
      "peVal\030\001 \001(\0162\032.rc.RICControlCellTypeEnum\022"
      "\024\n\014TargetCellID\030\002 \001(\t\"\222\002\n\021RicControlGrpc"
      "Req\022\020\n\010e2NodeID\030\001 \001(\t\022\016\n\006plmnID\030\002 \001(\t\022\017\n"
      "\007ranName\030\003 \001(\t\022,\n\021RICE2APHeaderData\030\004 \001("
      "\0132\021.rc.RICE2APHeader\0222\n\024RICControlHeader"
      "Data\030\005 \001(\0132\024.rc.RICControlHeader\0224\n\025RICC"
      "ontrolMessageData\030\006 \001(\0132\025.rc.RICControlM"
      "essage\0222\n\023RICControlAckReqVal\030\007 \001(\0162\025.rc"
      ".RICControlAckEnum\"9\n\021RicControlGrpcRsp\022"
      "\017\n\007rspCode\030\001 \001(\005\022\023\n\013description\030\002 \001(\t*k\n"
      "\026RICControlCellTypeEnum\022\033\n\027RIC_CONTROL_C"
      "ELL_UNKWON\020\000\022\027\n\023RIC_CONTROL_NR_CELL\020\001\022\033\n"
      "\027RIC_CONTROL_EUTRAN_CELL\020\002*r\n\021RICControl"
      "AckEnum\022\032\n\026RIC_CONTROL_ACK_UNKWON\020\000\022\026\n\022R"
      "IC_CONTROL_NO_ACK\020\001\022\023\n\017RIC_CONTROL_ACK\020\002"
      "\022\024\n\020RIC_CONTROL_NACK\020\0032W\n\007MsgComm\022L\n\034Sen"
      "dRICControlReqServiceGrpc\022\025.rc.RicContro"
      "lGrpcReq\032\025.rc.RicControlGrpcRspb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1159);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "rc.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_rc_2eproto
namespace rc {
const ::google::protobuf::EnumDescriptor* RICControlCellTypeEnum_descriptor() {
  protobuf_rc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rc_2eproto::file_level_enum_descriptors[0];
}
bool RICControlCellTypeEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RICControlAckEnum_descriptor() {
  protobuf_rc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rc_2eproto::file_level_enum_descriptors[1];
}
bool RICControlAckEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void RICE2APHeader::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RICE2APHeader::kRanFuncIdFieldNumber;
const int RICE2APHeader::kRICRequestorIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RICE2APHeader::RICE2APHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rc_2eproto::scc_info_RICE2APHeader.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rc.RICE2APHeader)
}
RICE2APHeader::RICE2APHeader(const RICE2APHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ranfuncid_, &from.ranfuncid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ricrequestorid_) -
    reinterpret_cast<char*>(&ranfuncid_)) + sizeof(ricrequestorid_));
  // @@protoc_insertion_point(copy_constructor:rc.RICE2APHeader)
}

void RICE2APHeader::SharedCtor() {
  ::memset(&ranfuncid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ricrequestorid_) -
      reinterpret_cast<char*>(&ranfuncid_)) + sizeof(ricrequestorid_));
}

RICE2APHeader::~RICE2APHeader() {
  // @@protoc_insertion_point(destructor:rc.RICE2APHeader)
  SharedDtor();
}

void RICE2APHeader::SharedDtor() {
}

void RICE2APHeader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RICE2APHeader::descriptor() {
  ::protobuf_rc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RICE2APHeader& RICE2APHeader::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rc_2eproto::scc_info_RICE2APHeader.base);
  return *internal_default_instance();
}


void RICE2APHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:rc.RICE2APHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ranfuncid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ricrequestorid_) -
      reinterpret_cast<char*>(&ranfuncid_)) + sizeof(ricrequestorid_));
  _internal_metadata_.Clear();
}

bool RICE2APHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rc.RICE2APHeader)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 RanFuncId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ranfuncid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 RICRequestorID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ricrequestorid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rc.RICE2APHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rc.RICE2APHeader)
  return false;
#undef DO_
}

void RICE2APHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rc.RICE2APHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 RanFuncId = 1;
  if (this->ranfuncid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->ranfuncid(), output);
  }

  // int64 RICRequestorID = 2;
  if (this->ricrequestorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->ricrequestorid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rc.RICE2APHeader)
}

::google::protobuf::uint8* RICE2APHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rc.RICE2APHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 RanFuncId = 1;
  if (this->ranfuncid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->ranfuncid(), target);
  }

  // int64 RICRequestorID = 2;
  if (this->ricrequestorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->ricrequestorid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rc.RICE2APHeader)
  return target;
}

size_t RICE2APHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rc.RICE2APHeader)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 RanFuncId = 1;
  if (this->ranfuncid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ranfuncid());
  }

  // int64 RICRequestorID = 2;
  if (this->ricrequestorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->ricrequestorid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RICE2APHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rc.RICE2APHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const RICE2APHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RICE2APHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rc.RICE2APHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rc.RICE2APHeader)
    MergeFrom(*source);
  }
}

void RICE2APHeader::MergeFrom(const RICE2APHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rc.RICE2APHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ranfuncid() != 0) {
    set_ranfuncid(from.ranfuncid());
  }
  if (from.ricrequestorid() != 0) {
    set_ricrequestorid(from.ricrequestorid());
  }
}

void RICE2APHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rc.RICE2APHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RICE2APHeader::CopyFrom(const RICE2APHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rc.RICE2APHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RICE2APHeader::IsInitialized() const {
  return true;
}

void RICE2APHeader::Swap(RICE2APHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RICE2APHeader::InternalSwap(RICE2APHeader* other) {
  using std::swap;
  swap(ranfuncid_, other->ranfuncid_);
  swap(ricrequestorid_, other->ricrequestorid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RICE2APHeader::GetMetadata() const {
  protobuf_rc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RICControlHeader::InitAsDefaultInstance() {
  ::rc::_RICControlHeader_default_instance_._instance.get_mutable()->ueid_ = const_cast< ::rc::UeId*>(
      ::rc::UeId::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RICControlHeader::kControlStyleFieldNumber;
const int RICControlHeader::kControlActionIdFieldNumber;
const int RICControlHeader::kUEIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RICControlHeader::RICControlHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rc_2eproto::scc_info_RICControlHeader.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rc.RICControlHeader)
}
RICControlHeader::RICControlHeader(const RICControlHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ueid()) {
    ueid_ = new ::rc::UeId(*from.ueid_);
  } else {
    ueid_ = NULL;
  }
  ::memcpy(&controlstyle_, &from.controlstyle_,
    static_cast<size_t>(reinterpret_cast<char*>(&controlactionid_) -
    reinterpret_cast<char*>(&controlstyle_)) + sizeof(controlactionid_));
  // @@protoc_insertion_point(copy_constructor:rc.RICControlHeader)
}

void RICControlHeader::SharedCtor() {
  ::memset(&ueid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&controlactionid_) -
      reinterpret_cast<char*>(&ueid_)) + sizeof(controlactionid_));
}

RICControlHeader::~RICControlHeader() {
  // @@protoc_insertion_point(destructor:rc.RICControlHeader)
  SharedDtor();
}

void RICControlHeader::SharedDtor() {
  if (this != internal_default_instance()) delete ueid_;
}

void RICControlHeader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RICControlHeader::descriptor() {
  ::protobuf_rc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RICControlHeader& RICControlHeader::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rc_2eproto::scc_info_RICControlHeader.base);
  return *internal_default_instance();
}


void RICControlHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:rc.RICControlHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && ueid_ != NULL) {
    delete ueid_;
  }
  ueid_ = NULL;
  ::memset(&controlstyle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&controlactionid_) -
      reinterpret_cast<char*>(&controlstyle_)) + sizeof(controlactionid_));
  _internal_metadata_.Clear();
}

bool RICControlHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rc.RICControlHeader)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 ControlStyle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &controlstyle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ControlActionId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &controlactionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rc.UeId UEID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ueid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rc.RICControlHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rc.RICControlHeader)
  return false;
#undef DO_
}

void RICControlHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rc.RICControlHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 ControlStyle = 1;
  if (this->controlstyle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->controlstyle(), output);
  }

  // int64 ControlActionId = 2;
  if (this->controlactionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->controlactionid(), output);
  }

  // .rc.UeId UEID = 3;
  if (this->has_ueid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_ueid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rc.RICControlHeader)
}

::google::protobuf::uint8* RICControlHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rc.RICControlHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 ControlStyle = 1;
  if (this->controlstyle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->controlstyle(), target);
  }

  // int64 ControlActionId = 2;
  if (this->controlactionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->controlactionid(), target);
  }

  // .rc.UeId UEID = 3;
  if (this->has_ueid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_ueid(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rc.RICControlHeader)
  return target;
}

size_t RICControlHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rc.RICControlHeader)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .rc.UeId UEID = 3;
  if (this->has_ueid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ueid_);
  }

  // int64 ControlStyle = 1;
  if (this->controlstyle() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->controlstyle());
  }

  // int64 ControlActionId = 2;
  if (this->controlactionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->controlactionid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RICControlHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rc.RICControlHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const RICControlHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RICControlHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rc.RICControlHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rc.RICControlHeader)
    MergeFrom(*source);
  }
}

void RICControlHeader::MergeFrom(const RICControlHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rc.RICControlHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ueid()) {
    mutable_ueid()->::rc::UeId::MergeFrom(from.ueid());
  }
  if (from.controlstyle() != 0) {
    set_controlstyle(from.controlstyle());
  }
  if (from.controlactionid() != 0) {
    set_controlactionid(from.controlactionid());
  }
}

void RICControlHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rc.RICControlHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RICControlHeader::CopyFrom(const RICControlHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rc.RICControlHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RICControlHeader::IsInitialized() const {
  return true;
}

void RICControlHeader::Swap(RICControlHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RICControlHeader::InternalSwap(RICControlHeader* other) {
  using std::swap;
  swap(ueid_, other->ueid_);
  swap(controlstyle_, other->controlstyle_);
  swap(controlactionid_, other->controlactionid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RICControlHeader::GetMetadata() const {
  protobuf_rc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UeId::InitAsDefaultInstance() {
  ::rc::_UeId_default_instance_._instance.get_mutable()->gnbueid_ = const_cast< ::rc::gNBUEID*>(
      ::rc::gNBUEID::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UeId::kGnbUEIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UeId::UeId()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rc_2eproto::scc_info_UeId.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rc.UeId)
}
UeId::UeId(const UeId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_gnbueid()) {
    gnbueid_ = new ::rc::gNBUEID(*from.gnbueid_);
  } else {
    gnbueid_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:rc.UeId)
}

void UeId::SharedCtor() {
  gnbueid_ = NULL;
}

UeId::~UeId() {
  // @@protoc_insertion_point(destructor:rc.UeId)
  SharedDtor();
}

void UeId::SharedDtor() {
  if (this != internal_default_instance()) delete gnbueid_;
}

void UeId::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UeId::descriptor() {
  ::protobuf_rc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UeId& UeId::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rc_2eproto::scc_info_UeId.base);
  return *internal_default_instance();
}


void UeId::Clear() {
// @@protoc_insertion_point(message_clear_start:rc.UeId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && gnbueid_ != NULL) {
    delete gnbueid_;
  }
  gnbueid_ = NULL;
  _internal_metadata_.Clear();
}

bool UeId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rc.UeId)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .rc.gNBUEID GnbUEID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gnbueid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rc.UeId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rc.UeId)
  return false;
#undef DO_
}

void UeId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rc.UeId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .rc.gNBUEID GnbUEID = 1;
  if (this->has_gnbueid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_gnbueid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rc.UeId)
}

::google::protobuf::uint8* UeId::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rc.UeId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .rc.gNBUEID GnbUEID = 1;
  if (this->has_gnbueid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_gnbueid(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rc.UeId)
  return target;
}

size_t UeId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rc.UeId)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .rc.gNBUEID GnbUEID = 1;
  if (this->has_gnbueid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *gnbueid_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UeId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rc.UeId)
  GOOGLE_DCHECK_NE(&from, this);
  const UeId* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UeId>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rc.UeId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rc.UeId)
    MergeFrom(*source);
  }
}

void UeId::MergeFrom(const UeId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rc.UeId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_gnbueid()) {
    mutable_gnbueid()->::rc::gNBUEID::MergeFrom(from.gnbueid());
  }
}

void UeId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rc.UeId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UeId::CopyFrom(const UeId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rc.UeId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UeId::IsInitialized() const {
  return true;
}

void UeId::Swap(UeId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UeId::InternalSwap(UeId* other) {
  using std::swap;
  swap(gnbueid_, other->gnbueid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UeId::GetMetadata() const {
  protobuf_rc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void gNBUEID::InitAsDefaultInstance() {
  ::rc::_gNBUEID_default_instance_._instance.get_mutable()->guami_ = const_cast< ::rc::Guami*>(
      ::rc::Guami::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int gNBUEID::kAmfUENGAPIDFieldNumber;
const int gNBUEID::kGuamiFieldNumber;
const int gNBUEID::kGNBCUUEF1APIDFieldNumber;
const int gNBUEID::kGNBCUCPUEE1APIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

gNBUEID::gNBUEID()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rc_2eproto::scc_info_gNBUEID.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rc.gNBUEID)
}
gNBUEID::gNBUEID(const gNBUEID& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      gnbcuuef1apid_(from.gnbcuuef1apid_),
      gnbcucpuee1apid_(from.gnbcucpuee1apid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_guami()) {
    guami_ = new ::rc::Guami(*from.guami_);
  } else {
    guami_ = NULL;
  }
  amfuengapid_ = from.amfuengapid_;
  // @@protoc_insertion_point(copy_constructor:rc.gNBUEID)
}

void gNBUEID::SharedCtor() {
  ::memset(&guami_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&amfuengapid_) -
      reinterpret_cast<char*>(&guami_)) + sizeof(amfuengapid_));
}

gNBUEID::~gNBUEID() {
  // @@protoc_insertion_point(destructor:rc.gNBUEID)
  SharedDtor();
}

void gNBUEID::SharedDtor() {
  if (this != internal_default_instance()) delete guami_;
}

void gNBUEID::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* gNBUEID::descriptor() {
  ::protobuf_rc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const gNBUEID& gNBUEID::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rc_2eproto::scc_info_gNBUEID.base);
  return *internal_default_instance();
}


void gNBUEID::Clear() {
// @@protoc_insertion_point(message_clear_start:rc.gNBUEID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gnbcuuef1apid_.Clear();
  gnbcucpuee1apid_.Clear();
  if (GetArenaNoVirtual() == NULL && guami_ != NULL) {
    delete guami_;
  }
  guami_ = NULL;
  amfuengapid_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool gNBUEID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rc.gNBUEID)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 amfUENGAPID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &amfuengapid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rc.Guami guami = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_guami()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 gNBCUUEF1APID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_gnbcuuef1apid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 26u, input, this->mutable_gnbcuuef1apid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 gNBCUCPUEE1APID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_gnbcucpuee1apid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 34u, input, this->mutable_gnbcucpuee1apid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rc.gNBUEID)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rc.gNBUEID)
  return false;
#undef DO_
}

void gNBUEID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rc.gNBUEID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 amfUENGAPID = 1;
  if (this->amfuengapid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->amfuengapid(), output);
  }

  // .rc.Guami guami = 2;
  if (this->has_guami()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_guami(), output);
  }

  // repeated int64 gNBCUUEF1APID = 3;
  if (this->gnbcuuef1apid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _gnbcuuef1apid_cached_byte_size_));
  }
  for (int i = 0, n = this->gnbcuuef1apid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->gnbcuuef1apid(i), output);
  }

  // repeated int64 gNBCUCPUEE1APID = 4;
  if (this->gnbcucpuee1apid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _gnbcucpuee1apid_cached_byte_size_));
  }
  for (int i = 0, n = this->gnbcucpuee1apid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->gnbcucpuee1apid(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rc.gNBUEID)
}

::google::protobuf::uint8* gNBUEID::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rc.gNBUEID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 amfUENGAPID = 1;
  if (this->amfuengapid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->amfuengapid(), target);
  }

  // .rc.Guami guami = 2;
  if (this->has_guami()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_guami(), deterministic, target);
  }

  // repeated int64 gNBCUUEF1APID = 3;
  if (this->gnbcuuef1apid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _gnbcuuef1apid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->gnbcuuef1apid_, target);
  }

  // repeated int64 gNBCUCPUEE1APID = 4;
  if (this->gnbcucpuee1apid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _gnbcucpuee1apid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->gnbcucpuee1apid_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rc.gNBUEID)
  return target;
}

size_t gNBUEID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rc.gNBUEID)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 gNBCUUEF1APID = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->gnbcuuef1apid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _gnbcuuef1apid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 gNBCUCPUEE1APID = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->gnbcucpuee1apid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _gnbcucpuee1apid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .rc.Guami guami = 2;
  if (this->has_guami()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *guami_);
  }

  // int64 amfUENGAPID = 1;
  if (this->amfuengapid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->amfuengapid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void gNBUEID::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rc.gNBUEID)
  GOOGLE_DCHECK_NE(&from, this);
  const gNBUEID* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const gNBUEID>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rc.gNBUEID)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rc.gNBUEID)
    MergeFrom(*source);
  }
}

void gNBUEID::MergeFrom(const gNBUEID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rc.gNBUEID)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gnbcuuef1apid_.MergeFrom(from.gnbcuuef1apid_);
  gnbcucpuee1apid_.MergeFrom(from.gnbcucpuee1apid_);
  if (from.has_guami()) {
    mutable_guami()->::rc::Guami::MergeFrom(from.guami());
  }
  if (from.amfuengapid() != 0) {
    set_amfuengapid(from.amfuengapid());
  }
}

void gNBUEID::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rc.gNBUEID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void gNBUEID::CopyFrom(const gNBUEID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rc.gNBUEID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool gNBUEID::IsInitialized() const {
  return true;
}

void gNBUEID::Swap(gNBUEID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void gNBUEID::InternalSwap(gNBUEID* other) {
  using std::swap;
  gnbcuuef1apid_.InternalSwap(&other->gnbcuuef1apid_);
  gnbcucpuee1apid_.InternalSwap(&other->gnbcucpuee1apid_);
  swap(guami_, other->guami_);
  swap(amfuengapid_, other->amfuengapid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata gNBUEID::GetMetadata() const {
  protobuf_rc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Guami::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Guami::kPLMNIdentityFieldNumber;
const int Guami::kAMFRegionIDFieldNumber;
const int Guami::kAMFSetIDFieldNumber;
const int Guami::kAMFPointerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Guami::Guami()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rc_2eproto::scc_info_Guami.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rc.Guami)
}
Guami::Guami(const Guami& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  plmnidentity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plmnidentity().size() > 0) {
    plmnidentity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plmnidentity_);
  }
  amfregionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.amfregionid().size() > 0) {
    amfregionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.amfregionid_);
  }
  amfsetid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.amfsetid().size() > 0) {
    amfsetid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.amfsetid_);
  }
  amfpointer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.amfpointer().size() > 0) {
    amfpointer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.amfpointer_);
  }
  // @@protoc_insertion_point(copy_constructor:rc.Guami)
}

void Guami::SharedCtor() {
  plmnidentity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amfregionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amfsetid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amfpointer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Guami::~Guami() {
  // @@protoc_insertion_point(destructor:rc.Guami)
  SharedDtor();
}

void Guami::SharedDtor() {
  plmnidentity_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amfregionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amfsetid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amfpointer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Guami::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Guami::descriptor() {
  ::protobuf_rc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Guami& Guami::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rc_2eproto::scc_info_Guami.base);
  return *internal_default_instance();
}


void Guami::Clear() {
// @@protoc_insertion_point(message_clear_start:rc.Guami)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  plmnidentity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amfregionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amfsetid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amfpointer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Guami::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rc.Guami)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string pLMNIdentity = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plmnidentity()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->plmnidentity().data(), static_cast<int>(this->plmnidentity().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rc.Guami.pLMNIdentity"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string aMFRegionID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_amfregionid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->amfregionid().data(), static_cast<int>(this->amfregionid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rc.Guami.aMFRegionID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string aMFSetID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_amfsetid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->amfsetid().data(), static_cast<int>(this->amfsetid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rc.Guami.aMFSetID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string aMFPointer = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_amfpointer()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->amfpointer().data(), static_cast<int>(this->amfpointer().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rc.Guami.aMFPointer"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rc.Guami)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rc.Guami)
  return false;
#undef DO_
}

void Guami::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rc.Guami)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pLMNIdentity = 1;
  if (this->plmnidentity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plmnidentity().data(), static_cast<int>(this->plmnidentity().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rc.Guami.pLMNIdentity");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->plmnidentity(), output);
  }

  // string aMFRegionID = 2;
  if (this->amfregionid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->amfregionid().data(), static_cast<int>(this->amfregionid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rc.Guami.aMFRegionID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->amfregionid(), output);
  }

  // string aMFSetID = 3;
  if (this->amfsetid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->amfsetid().data(), static_cast<int>(this->amfsetid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rc.Guami.aMFSetID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->amfsetid(), output);
  }

  // string aMFPointer = 4;
  if (this->amfpointer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->amfpointer().data(), static_cast<int>(this->amfpointer().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rc.Guami.aMFPointer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->amfpointer(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rc.Guami)
}

::google::protobuf::uint8* Guami::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rc.Guami)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pLMNIdentity = 1;
  if (this->plmnidentity().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plmnidentity().data(), static_cast<int>(this->plmnidentity().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rc.Guami.pLMNIdentity");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->plmnidentity(), target);
  }

  // string aMFRegionID = 2;
  if (this->amfregionid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->amfregionid().data(), static_cast<int>(this->amfregionid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rc.Guami.aMFRegionID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->amfregionid(), target);
  }

  // string aMFSetID = 3;
  if (this->amfsetid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->amfsetid().data(), static_cast<int>(this->amfsetid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rc.Guami.aMFSetID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->amfsetid(), target);
  }

  // string aMFPointer = 4;
  if (this->amfpointer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->amfpointer().data(), static_cast<int>(this->amfpointer().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rc.Guami.aMFPointer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->amfpointer(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rc.Guami)
  return target;
}

size_t Guami::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rc.Guami)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string pLMNIdentity = 1;
  if (this->plmnidentity().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plmnidentity());
  }

  // string aMFRegionID = 2;
  if (this->amfregionid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->amfregionid());
  }

  // string aMFSetID = 3;
  if (this->amfsetid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->amfsetid());
  }

  // string aMFPointer = 4;
  if (this->amfpointer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->amfpointer());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Guami::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rc.Guami)
  GOOGLE_DCHECK_NE(&from, this);
  const Guami* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Guami>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rc.Guami)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rc.Guami)
    MergeFrom(*source);
  }
}

void Guami::MergeFrom(const Guami& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rc.Guami)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.plmnidentity().size() > 0) {

    plmnidentity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plmnidentity_);
  }
  if (from.amfregionid().size() > 0) {

    amfregionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.amfregionid_);
  }
  if (from.amfsetid().size() > 0) {

    amfsetid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.amfsetid_);
  }
  if (from.amfpointer().size() > 0) {

    amfpointer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.amfpointer_);
  }
}

void Guami::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rc.Guami)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Guami::CopyFrom(const Guami& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rc.Guami)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Guami::IsInitialized() const {
  return true;
}

void Guami::Swap(Guami* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Guami::InternalSwap(Guami* other) {
  using std::swap;
  plmnidentity_.Swap(&other->plmnidentity_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  amfregionid_.Swap(&other->amfregionid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  amfsetid_.Swap(&other->amfsetid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  amfpointer_.Swap(&other->amfpointer_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Guami::GetMetadata() const {
  protobuf_rc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RICControlMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RICControlMessage::kRICControlCellTypeValFieldNumber;
const int RICControlMessage::kTargetCellIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RICControlMessage::RICControlMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rc_2eproto::scc_info_RICControlMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rc.RICControlMessage)
}
RICControlMessage::RICControlMessage(const RICControlMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  targetcellid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.targetcellid().size() > 0) {
    targetcellid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.targetcellid_);
  }
  riccontrolcelltypeval_ = from.riccontrolcelltypeval_;
  // @@protoc_insertion_point(copy_constructor:rc.RICControlMessage)
}

void RICControlMessage::SharedCtor() {
  targetcellid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  riccontrolcelltypeval_ = 0;
}

RICControlMessage::~RICControlMessage() {
  // @@protoc_insertion_point(destructor:rc.RICControlMessage)
  SharedDtor();
}

void RICControlMessage::SharedDtor() {
  targetcellid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RICControlMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RICControlMessage::descriptor() {
  ::protobuf_rc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RICControlMessage& RICControlMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rc_2eproto::scc_info_RICControlMessage.base);
  return *internal_default_instance();
}


void RICControlMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:rc.RICControlMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  targetcellid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  riccontrolcelltypeval_ = 0;
  _internal_metadata_.Clear();
}

bool RICControlMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rc.RICControlMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .rc.RICControlCellTypeEnum RICControlCellTypeVal = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_riccontrolcelltypeval(static_cast< ::rc::RICControlCellTypeEnum >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string TargetCellID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_targetcellid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->targetcellid().data(), static_cast<int>(this->targetcellid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rc.RICControlMessage.TargetCellID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rc.RICControlMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rc.RICControlMessage)
  return false;
#undef DO_
}

void RICControlMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rc.RICControlMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .rc.RICControlCellTypeEnum RICControlCellTypeVal = 1;
  if (this->riccontrolcelltypeval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->riccontrolcelltypeval(), output);
  }

  // string TargetCellID = 2;
  if (this->targetcellid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->targetcellid().data(), static_cast<int>(this->targetcellid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rc.RICControlMessage.TargetCellID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->targetcellid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rc.RICControlMessage)
}

::google::protobuf::uint8* RICControlMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rc.RICControlMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .rc.RICControlCellTypeEnum RICControlCellTypeVal = 1;
  if (this->riccontrolcelltypeval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->riccontrolcelltypeval(), target);
  }

  // string TargetCellID = 2;
  if (this->targetcellid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->targetcellid().data(), static_cast<int>(this->targetcellid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rc.RICControlMessage.TargetCellID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->targetcellid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rc.RICControlMessage)
  return target;
}

size_t RICControlMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rc.RICControlMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string TargetCellID = 2;
  if (this->targetcellid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->targetcellid());
  }

  // .rc.RICControlCellTypeEnum RICControlCellTypeVal = 1;
  if (this->riccontrolcelltypeval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->riccontrolcelltypeval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RICControlMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rc.RICControlMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const RICControlMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RICControlMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rc.RICControlMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rc.RICControlMessage)
    MergeFrom(*source);
  }
}

void RICControlMessage::MergeFrom(const RICControlMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rc.RICControlMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.targetcellid().size() > 0) {

    targetcellid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.targetcellid_);
  }
  if (from.riccontrolcelltypeval() != 0) {
    set_riccontrolcelltypeval(from.riccontrolcelltypeval());
  }
}

void RICControlMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rc.RICControlMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RICControlMessage::CopyFrom(const RICControlMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rc.RICControlMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RICControlMessage::IsInitialized() const {
  return true;
}

void RICControlMessage::Swap(RICControlMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RICControlMessage::InternalSwap(RICControlMessage* other) {
  using std::swap;
  targetcellid_.Swap(&other->targetcellid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(riccontrolcelltypeval_, other->riccontrolcelltypeval_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RICControlMessage::GetMetadata() const {
  protobuf_rc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RicControlGrpcReq::InitAsDefaultInstance() {
  ::rc::_RicControlGrpcReq_default_instance_._instance.get_mutable()->rice2apheaderdata_ = const_cast< ::rc::RICE2APHeader*>(
      ::rc::RICE2APHeader::internal_default_instance());
  ::rc::_RicControlGrpcReq_default_instance_._instance.get_mutable()->riccontrolheaderdata_ = const_cast< ::rc::RICControlHeader*>(
      ::rc::RICControlHeader::internal_default_instance());
  ::rc::_RicControlGrpcReq_default_instance_._instance.get_mutable()->riccontrolmessagedata_ = const_cast< ::rc::RICControlMessage*>(
      ::rc::RICControlMessage::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RicControlGrpcReq::kE2NodeIDFieldNumber;
const int RicControlGrpcReq::kPlmnIDFieldNumber;
const int RicControlGrpcReq::kRanNameFieldNumber;
const int RicControlGrpcReq::kRICE2APHeaderDataFieldNumber;
const int RicControlGrpcReq::kRICControlHeaderDataFieldNumber;
const int RicControlGrpcReq::kRICControlMessageDataFieldNumber;
const int RicControlGrpcReq::kRICControlAckReqValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RicControlGrpcReq::RicControlGrpcReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rc_2eproto::scc_info_RicControlGrpcReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rc.RicControlGrpcReq)
}
RicControlGrpcReq::RicControlGrpcReq(const RicControlGrpcReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  e2nodeid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.e2nodeid().size() > 0) {
    e2nodeid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.e2nodeid_);
  }
  plmnid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plmnid().size() > 0) {
    plmnid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plmnid_);
  }
  ranname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ranname().size() > 0) {
    ranname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ranname_);
  }
  if (from.has_rice2apheaderdata()) {
    rice2apheaderdata_ = new ::rc::RICE2APHeader(*from.rice2apheaderdata_);
  } else {
    rice2apheaderdata_ = NULL;
  }
  if (from.has_riccontrolheaderdata()) {
    riccontrolheaderdata_ = new ::rc::RICControlHeader(*from.riccontrolheaderdata_);
  } else {
    riccontrolheaderdata_ = NULL;
  }
  if (from.has_riccontrolmessagedata()) {
    riccontrolmessagedata_ = new ::rc::RICControlMessage(*from.riccontrolmessagedata_);
  } else {
    riccontrolmessagedata_ = NULL;
  }
  riccontrolackreqval_ = from.riccontrolackreqval_;
  // @@protoc_insertion_point(copy_constructor:rc.RicControlGrpcReq)
}

void RicControlGrpcReq::SharedCtor() {
  e2nodeid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plmnid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ranname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&rice2apheaderdata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&riccontrolackreqval_) -
      reinterpret_cast<char*>(&rice2apheaderdata_)) + sizeof(riccontrolackreqval_));
}

RicControlGrpcReq::~RicControlGrpcReq() {
  // @@protoc_insertion_point(destructor:rc.RicControlGrpcReq)
  SharedDtor();
}

void RicControlGrpcReq::SharedDtor() {
  e2nodeid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plmnid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ranname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete rice2apheaderdata_;
  if (this != internal_default_instance()) delete riccontrolheaderdata_;
  if (this != internal_default_instance()) delete riccontrolmessagedata_;
}

void RicControlGrpcReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RicControlGrpcReq::descriptor() {
  ::protobuf_rc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RicControlGrpcReq& RicControlGrpcReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rc_2eproto::scc_info_RicControlGrpcReq.base);
  return *internal_default_instance();
}


void RicControlGrpcReq::Clear() {
// @@protoc_insertion_point(message_clear_start:rc.RicControlGrpcReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  e2nodeid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plmnid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ranname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && rice2apheaderdata_ != NULL) {
    delete rice2apheaderdata_;
  }
  rice2apheaderdata_ = NULL;
  if (GetArenaNoVirtual() == NULL && riccontrolheaderdata_ != NULL) {
    delete riccontrolheaderdata_;
  }
  riccontrolheaderdata_ = NULL;
  if (GetArenaNoVirtual() == NULL && riccontrolmessagedata_ != NULL) {
    delete riccontrolmessagedata_;
  }
  riccontrolmessagedata_ = NULL;
  riccontrolackreqval_ = 0;
  _internal_metadata_.Clear();
}

bool RicControlGrpcReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rc.RicControlGrpcReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string e2NodeID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_e2nodeid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->e2nodeid().data(), static_cast<int>(this->e2nodeid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rc.RicControlGrpcReq.e2NodeID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string plmnID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plmnid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->plmnid().data(), static_cast<int>(this->plmnid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rc.RicControlGrpcReq.plmnID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ranName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ranname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ranname().data(), static_cast<int>(this->ranname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rc.RicControlGrpcReq.ranName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rc.RICE2APHeader RICE2APHeaderData = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rice2apheaderdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rc.RICControlHeader RICControlHeaderData = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_riccontrolheaderdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rc.RICControlMessage RICControlMessageData = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_riccontrolmessagedata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rc.RICControlAckEnum RICControlAckReqVal = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_riccontrolackreqval(static_cast< ::rc::RICControlAckEnum >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rc.RicControlGrpcReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rc.RicControlGrpcReq)
  return false;
#undef DO_
}

void RicControlGrpcReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rc.RicControlGrpcReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string e2NodeID = 1;
  if (this->e2nodeid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->e2nodeid().data(), static_cast<int>(this->e2nodeid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rc.RicControlGrpcReq.e2NodeID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->e2nodeid(), output);
  }

  // string plmnID = 2;
  if (this->plmnid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plmnid().data(), static_cast<int>(this->plmnid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rc.RicControlGrpcReq.plmnID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->plmnid(), output);
  }

  // string ranName = 3;
  if (this->ranname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ranname().data(), static_cast<int>(this->ranname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rc.RicControlGrpcReq.ranName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ranname(), output);
  }

  // .rc.RICE2APHeader RICE2APHeaderData = 4;
  if (this->has_rice2apheaderdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_rice2apheaderdata(), output);
  }

  // .rc.RICControlHeader RICControlHeaderData = 5;
  if (this->has_riccontrolheaderdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_riccontrolheaderdata(), output);
  }

  // .rc.RICControlMessage RICControlMessageData = 6;
  if (this->has_riccontrolmessagedata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_riccontrolmessagedata(), output);
  }

  // .rc.RICControlAckEnum RICControlAckReqVal = 7;
  if (this->riccontrolackreqval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->riccontrolackreqval(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rc.RicControlGrpcReq)
}

::google::protobuf::uint8* RicControlGrpcReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rc.RicControlGrpcReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string e2NodeID = 1;
  if (this->e2nodeid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->e2nodeid().data(), static_cast<int>(this->e2nodeid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rc.RicControlGrpcReq.e2NodeID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->e2nodeid(), target);
  }

  // string plmnID = 2;
  if (this->plmnid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plmnid().data(), static_cast<int>(this->plmnid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rc.RicControlGrpcReq.plmnID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->plmnid(), target);
  }

  // string ranName = 3;
  if (this->ranname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ranname().data(), static_cast<int>(this->ranname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rc.RicControlGrpcReq.ranName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ranname(), target);
  }

  // .rc.RICE2APHeader RICE2APHeaderData = 4;
  if (this->has_rice2apheaderdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_rice2apheaderdata(), deterministic, target);
  }

  // .rc.RICControlHeader RICControlHeaderData = 5;
  if (this->has_riccontrolheaderdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_riccontrolheaderdata(), deterministic, target);
  }

  // .rc.RICControlMessage RICControlMessageData = 6;
  if (this->has_riccontrolmessagedata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_riccontrolmessagedata(), deterministic, target);
  }

  // .rc.RICControlAckEnum RICControlAckReqVal = 7;
  if (this->riccontrolackreqval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->riccontrolackreqval(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rc.RicControlGrpcReq)
  return target;
}

size_t RicControlGrpcReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rc.RicControlGrpcReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string e2NodeID = 1;
  if (this->e2nodeid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->e2nodeid());
  }

  // string plmnID = 2;
  if (this->plmnid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plmnid());
  }

  // string ranName = 3;
  if (this->ranname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ranname());
  }

  // .rc.RICE2APHeader RICE2APHeaderData = 4;
  if (this->has_rice2apheaderdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rice2apheaderdata_);
  }

  // .rc.RICControlHeader RICControlHeaderData = 5;
  if (this->has_riccontrolheaderdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *riccontrolheaderdata_);
  }

  // .rc.RICControlMessage RICControlMessageData = 6;
  if (this->has_riccontrolmessagedata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *riccontrolmessagedata_);
  }

  // .rc.RICControlAckEnum RICControlAckReqVal = 7;
  if (this->riccontrolackreqval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->riccontrolackreqval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RicControlGrpcReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rc.RicControlGrpcReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RicControlGrpcReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RicControlGrpcReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rc.RicControlGrpcReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rc.RicControlGrpcReq)
    MergeFrom(*source);
  }
}

void RicControlGrpcReq::MergeFrom(const RicControlGrpcReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rc.RicControlGrpcReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.e2nodeid().size() > 0) {

    e2nodeid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.e2nodeid_);
  }
  if (from.plmnid().size() > 0) {

    plmnid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plmnid_);
  }
  if (from.ranname().size() > 0) {

    ranname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ranname_);
  }
  if (from.has_rice2apheaderdata()) {
    mutable_rice2apheaderdata()->::rc::RICE2APHeader::MergeFrom(from.rice2apheaderdata());
  }
  if (from.has_riccontrolheaderdata()) {
    mutable_riccontrolheaderdata()->::rc::RICControlHeader::MergeFrom(from.riccontrolheaderdata());
  }
  if (from.has_riccontrolmessagedata()) {
    mutable_riccontrolmessagedata()->::rc::RICControlMessage::MergeFrom(from.riccontrolmessagedata());
  }
  if (from.riccontrolackreqval() != 0) {
    set_riccontrolackreqval(from.riccontrolackreqval());
  }
}

void RicControlGrpcReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rc.RicControlGrpcReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RicControlGrpcReq::CopyFrom(const RicControlGrpcReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rc.RicControlGrpcReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RicControlGrpcReq::IsInitialized() const {
  return true;
}

void RicControlGrpcReq::Swap(RicControlGrpcReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RicControlGrpcReq::InternalSwap(RicControlGrpcReq* other) {
  using std::swap;
  e2nodeid_.Swap(&other->e2nodeid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  plmnid_.Swap(&other->plmnid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ranname_.Swap(&other->ranname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(rice2apheaderdata_, other->rice2apheaderdata_);
  swap(riccontrolheaderdata_, other->riccontrolheaderdata_);
  swap(riccontrolmessagedata_, other->riccontrolmessagedata_);
  swap(riccontrolackreqval_, other->riccontrolackreqval_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RicControlGrpcReq::GetMetadata() const {
  protobuf_rc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RicControlGrpcRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RicControlGrpcRsp::kRspCodeFieldNumber;
const int RicControlGrpcRsp::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RicControlGrpcRsp::RicControlGrpcRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rc_2eproto::scc_info_RicControlGrpcRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rc.RicControlGrpcRsp)
}
RicControlGrpcRsp::RicControlGrpcRsp(const RicControlGrpcRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  rspcode_ = from.rspcode_;
  // @@protoc_insertion_point(copy_constructor:rc.RicControlGrpcRsp)
}

void RicControlGrpcRsp::SharedCtor() {
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rspcode_ = 0;
}

RicControlGrpcRsp::~RicControlGrpcRsp() {
  // @@protoc_insertion_point(destructor:rc.RicControlGrpcRsp)
  SharedDtor();
}

void RicControlGrpcRsp::SharedDtor() {
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RicControlGrpcRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RicControlGrpcRsp::descriptor() {
  ::protobuf_rc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RicControlGrpcRsp& RicControlGrpcRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rc_2eproto::scc_info_RicControlGrpcRsp.base);
  return *internal_default_instance();
}


void RicControlGrpcRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:rc.RicControlGrpcRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rspcode_ = 0;
  _internal_metadata_.Clear();
}

bool RicControlGrpcRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rc.RicControlGrpcRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rspCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rspcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rc.RicControlGrpcRsp.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rc.RicControlGrpcRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rc.RicControlGrpcRsp)
  return false;
#undef DO_
}

void RicControlGrpcRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rc.RicControlGrpcRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rspCode = 1;
  if (this->rspcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rspcode(), output);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rc.RicControlGrpcRsp.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rc.RicControlGrpcRsp)
}

::google::protobuf::uint8* RicControlGrpcRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rc.RicControlGrpcRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rspCode = 1;
  if (this->rspcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rspcode(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rc.RicControlGrpcRsp.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rc.RicControlGrpcRsp)
  return target;
}

size_t RicControlGrpcRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rc.RicControlGrpcRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // int32 rspCode = 1;
  if (this->rspcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rspcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RicControlGrpcRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rc.RicControlGrpcRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RicControlGrpcRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RicControlGrpcRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rc.RicControlGrpcRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rc.RicControlGrpcRsp)
    MergeFrom(*source);
  }
}

void RicControlGrpcRsp::MergeFrom(const RicControlGrpcRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rc.RicControlGrpcRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.rspcode() != 0) {
    set_rspcode(from.rspcode());
  }
}

void RicControlGrpcRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rc.RicControlGrpcRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RicControlGrpcRsp::CopyFrom(const RicControlGrpcRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rc.RicControlGrpcRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RicControlGrpcRsp::IsInitialized() const {
  return true;
}

void RicControlGrpcRsp::Swap(RicControlGrpcRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RicControlGrpcRsp::InternalSwap(RicControlGrpcRsp* other) {
  using std::swap;
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(rspcode_, other->rspcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RicControlGrpcRsp::GetMetadata() const {
  protobuf_rc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace rc
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rc::RICE2APHeader* Arena::CreateMaybeMessage< ::rc::RICE2APHeader >(Arena* arena) {
  return Arena::CreateInternal< ::rc::RICE2APHeader >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rc::RICControlHeader* Arena::CreateMaybeMessage< ::rc::RICControlHeader >(Arena* arena) {
  return Arena::CreateInternal< ::rc::RICControlHeader >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rc::UeId* Arena::CreateMaybeMessage< ::rc::UeId >(Arena* arena) {
  return Arena::CreateInternal< ::rc::UeId >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rc::gNBUEID* Arena::CreateMaybeMessage< ::rc::gNBUEID >(Arena* arena) {
  return Arena::CreateInternal< ::rc::gNBUEID >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rc::Guami* Arena::CreateMaybeMessage< ::rc::Guami >(Arena* arena) {
  return Arena::CreateInternal< ::rc::Guami >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rc::RICControlMessage* Arena::CreateMaybeMessage< ::rc::RICControlMessage >(Arena* arena) {
  return Arena::CreateInternal< ::rc::RICControlMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rc::RicControlGrpcReq* Arena::CreateMaybeMessage< ::rc::RicControlGrpcReq >(Arena* arena) {
  return Arena::CreateInternal< ::rc::RicControlGrpcReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rc::RicControlGrpcRsp* Arena::CreateMaybeMessage< ::rc::RicControlGrpcRsp >(Arena* arena) {
  return Arena::CreateInternal< ::rc::RicControlGrpcRsp >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
