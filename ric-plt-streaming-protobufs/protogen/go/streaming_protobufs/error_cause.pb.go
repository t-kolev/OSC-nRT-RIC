// Code generated by protoc-gen-go. DO NOT EDIT.
// source: error_cause.proto

package streaming_protobufs

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CauseRadioNetwork_Value int32

const (
	CauseRadioNetwork_protobuf_unspecified                                            CauseRadioNetwork_Value = 0
	CauseRadioNetwork_handover_desirable_for_radio_reasons                            CauseRadioNetwork_Value = 1
	CauseRadioNetwork_time_critical_handover                                          CauseRadioNetwork_Value = 2
	CauseRadioNetwork_resource_optimisation_handover                                  CauseRadioNetwork_Value = 3
	CauseRadioNetwork_reduce_load_in_serving_cell                                     CauseRadioNetwork_Value = 4
	CauseRadioNetwork_partial_handover                                                CauseRadioNetwork_Value = 5
	CauseRadioNetwork_unknown_new_eNB_UE_X2AP_ID                                      CauseRadioNetwork_Value = 6
	CauseRadioNetwork_unknown_old_eNB_UE_X2AP_ID                                      CauseRadioNetwork_Value = 7
	CauseRadioNetwork_unknown_pair_of_UE_X2AP_ID                                      CauseRadioNetwork_Value = 8
	CauseRadioNetwork_ho_target_not_allowed                                           CauseRadioNetwork_Value = 9
	CauseRadioNetwork_tx2relocoverall_expiry                                          CauseRadioNetwork_Value = 10
	CauseRadioNetwork_trelocprep_expiry                                               CauseRadioNetwork_Value = 11
	CauseRadioNetwork_cell_not_available                                              CauseRadioNetwork_Value = 12
	CauseRadioNetwork_no_radio_resources_available_in_target_cell                     CauseRadioNetwork_Value = 13
	CauseRadioNetwork_invalid_MME_GroupID                                             CauseRadioNetwork_Value = 14
	CauseRadioNetwork_unknown_MME_Code                                                CauseRadioNetwork_Value = 15
	CauseRadioNetwork_encryption_and_or_integrity_protection_algorithms_not_supported CauseRadioNetwork_Value = 16
	CauseRadioNetwork_reportCharacteristicsEmpty                                      CauseRadioNetwork_Value = 17
	CauseRadioNetwork_noReportPeriodicity                                             CauseRadioNetwork_Value = 18
	CauseRadioNetwork_existingMeasurementID                                           CauseRadioNetwork_Value = 19
	CauseRadioNetwork_unknown_eNB_Measurement_ID                                      CauseRadioNetwork_Value = 20
	CauseRadioNetwork_measurement_temporarily_not_available                           CauseRadioNetwork_Value = 21
	CauseRadioNetwork_unspecified                                                     CauseRadioNetwork_Value = 22
	CauseRadioNetwork_load_balancing                                                  CauseRadioNetwork_Value = 23
	CauseRadioNetwork_handover_optimisation                                           CauseRadioNetwork_Value = 24
	CauseRadioNetwork_value_out_of_allowed_range                                      CauseRadioNetwork_Value = 25
	CauseRadioNetwork_multiple_E_RAB_ID_instances                                     CauseRadioNetwork_Value = 26
	CauseRadioNetwork_switch_off_ongoing                                              CauseRadioNetwork_Value = 27
	CauseRadioNetwork_not_supported_QCI_value                                         CauseRadioNetwork_Value = 28
	CauseRadioNetwork_measurement_not_supported_for_the_object                        CauseRadioNetwork_Value = 29
	CauseRadioNetwork_tDCoverall_expiry                                               CauseRadioNetwork_Value = 30
	CauseRadioNetwork_tDCprep_expiry                                                  CauseRadioNetwork_Value = 31
	CauseRadioNetwork_action_desirable_for_radio_reasons                              CauseRadioNetwork_Value = 32
	CauseRadioNetwork_reduce_load                                                     CauseRadioNetwork_Value = 33
	CauseRadioNetwork_resource_optimisation                                           CauseRadioNetwork_Value = 34
	CauseRadioNetwork_time_critical_action                                            CauseRadioNetwork_Value = 35
	CauseRadioNetwork_target_not_allowed                                              CauseRadioNetwork_Value = 36
	CauseRadioNetwork_no_radio_resources_available                                    CauseRadioNetwork_Value = 37
	CauseRadioNetwork_invalid_QoS_combination                                         CauseRadioNetwork_Value = 38
	CauseRadioNetwork_encryption_algorithms_not_aupported                             CauseRadioNetwork_Value = 39
	CauseRadioNetwork_procedure_cancelled                                             CauseRadioNetwork_Value = 40
	CauseRadioNetwork_rRM_purpose                                                     CauseRadioNetwork_Value = 41
	CauseRadioNetwork_improve_user_bit_rate                                           CauseRadioNetwork_Value = 42
	CauseRadioNetwork_user_inactivity                                                 CauseRadioNetwork_Value = 43
	CauseRadioNetwork_radio_connection_with_UE_lost                                   CauseRadioNetwork_Value = 44
	CauseRadioNetwork_failure_in_the_radio_interface_procedure                        CauseRadioNetwork_Value = 45
	CauseRadioNetwork_bearer_option_not_supported                                     CauseRadioNetwork_Value = 46
	CauseRadioNetwork_mCG_Mobility                                                    CauseRadioNetwork_Value = 47
	CauseRadioNetwork_sCG_Mobility                                                    CauseRadioNetwork_Value = 48
	CauseRadioNetwork_count_reaches_max_value                                         CauseRadioNetwork_Value = 49
	CauseRadioNetwork_unknown_old_en_gNB_UE_X2AP_ID                                   CauseRadioNetwork_Value = 50
	CauseRadioNetwork_pDCP_Overload                                                   CauseRadioNetwork_Value = 51
)

var CauseRadioNetwork_Value_name = map[int32]string{
	0:  "protobuf_unspecified",
	1:  "handover_desirable_for_radio_reasons",
	2:  "time_critical_handover",
	3:  "resource_optimisation_handover",
	4:  "reduce_load_in_serving_cell",
	5:  "partial_handover",
	6:  "unknown_new_eNB_UE_X2AP_ID",
	7:  "unknown_old_eNB_UE_X2AP_ID",
	8:  "unknown_pair_of_UE_X2AP_ID",
	9:  "ho_target_not_allowed",
	10: "tx2relocoverall_expiry",
	11: "trelocprep_expiry",
	12: "cell_not_available",
	13: "no_radio_resources_available_in_target_cell",
	14: "invalid_MME_GroupID",
	15: "unknown_MME_Code",
	16: "encryption_and_or_integrity_protection_algorithms_not_supported",
	17: "reportCharacteristicsEmpty",
	18: "noReportPeriodicity",
	19: "existingMeasurementID",
	20: "unknown_eNB_Measurement_ID",
	21: "measurement_temporarily_not_available",
	22: "unspecified",
	23: "load_balancing",
	24: "handover_optimisation",
	25: "value_out_of_allowed_range",
	26: "multiple_E_RAB_ID_instances",
	27: "switch_off_ongoing",
	28: "not_supported_QCI_value",
	29: "measurement_not_supported_for_the_object",
	30: "tDCoverall_expiry",
	31: "tDCprep_expiry",
	32: "action_desirable_for_radio_reasons",
	33: "reduce_load",
	34: "resource_optimisation",
	35: "time_critical_action",
	36: "target_not_allowed",
	37: "no_radio_resources_available",
	38: "invalid_QoS_combination",
	39: "encryption_algorithms_not_aupported",
	40: "procedure_cancelled",
	41: "rRM_purpose",
	42: "improve_user_bit_rate",
	43: "user_inactivity",
	44: "radio_connection_with_UE_lost",
	45: "failure_in_the_radio_interface_procedure",
	46: "bearer_option_not_supported",
	47: "mCG_Mobility",
	48: "sCG_Mobility",
	49: "count_reaches_max_value",
	50: "unknown_old_en_gNB_UE_X2AP_ID",
	51: "pDCP_Overload",
}

var CauseRadioNetwork_Value_value = map[string]int32{
	"protobuf_unspecified":                        0,
	"handover_desirable_for_radio_reasons":        1,
	"time_critical_handover":                      2,
	"resource_optimisation_handover":              3,
	"reduce_load_in_serving_cell":                 4,
	"partial_handover":                            5,
	"unknown_new_eNB_UE_X2AP_ID":                  6,
	"unknown_old_eNB_UE_X2AP_ID":                  7,
	"unknown_pair_of_UE_X2AP_ID":                  8,
	"ho_target_not_allowed":                       9,
	"tx2relocoverall_expiry":                      10,
	"trelocprep_expiry":                           11,
	"cell_not_available":                          12,
	"no_radio_resources_available_in_target_cell": 13,
	"invalid_MME_GroupID":                         14,
	"unknown_MME_Code":                            15,
	"encryption_and_or_integrity_protection_algorithms_not_supported": 16,
	"reportCharacteristicsEmpty":                                      17,
	"noReportPeriodicity":                                             18,
	"existingMeasurementID":                                           19,
	"unknown_eNB_Measurement_ID":                                      20,
	"measurement_temporarily_not_available":                           21,
	"unspecified":                                                     22,
	"load_balancing":                                                  23,
	"handover_optimisation":                                           24,
	"value_out_of_allowed_range":                                      25,
	"multiple_E_RAB_ID_instances":                                     26,
	"switch_off_ongoing":                                              27,
	"not_supported_QCI_value":                                         28,
	"measurement_not_supported_for_the_object":                        29,
	"tDCoverall_expiry":                                               30,
	"tDCprep_expiry":                                                  31,
	"action_desirable_for_radio_reasons":                              32,
	"reduce_load":                                                     33,
	"resource_optimisation":                                           34,
	"time_critical_action":                                            35,
	"target_not_allowed":                                              36,
	"no_radio_resources_available":                                    37,
	"invalid_QoS_combination":                                         38,
	"encryption_algorithms_not_aupported":                             39,
	"procedure_cancelled":                                             40,
	"rRM_purpose":                                                     41,
	"improve_user_bit_rate":                                           42,
	"user_inactivity":                                                 43,
	"radio_connection_with_UE_lost":                                   44,
	"failure_in_the_radio_interface_procedure":                        45,
	"bearer_option_not_supported":                                     46,
	"mCG_Mobility":                                                    47,
	"sCG_Mobility":                                                    48,
	"count_reaches_max_value":                                         49,
	"unknown_old_en_gNB_UE_X2AP_ID":                                   50,
	"pDCP_Overload":                                                   51,
}

func (x CauseRadioNetwork_Value) String() string {
	return proto.EnumName(CauseRadioNetwork_Value_name, int32(x))
}

func (CauseRadioNetwork_Value) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1f54086b8cf16318, []int{1, 0}
}

type CauseTransport_Value int32

const (
	CauseTransport_protobuf_unspecified           CauseTransport_Value = 0
	CauseTransport_transport_resource_unavailable CauseTransport_Value = 1
	CauseTransport_unspecified                    CauseTransport_Value = 2
)

var CauseTransport_Value_name = map[int32]string{
	0: "protobuf_unspecified",
	1: "transport_resource_unavailable",
	2: "unspecified",
}

var CauseTransport_Value_value = map[string]int32{
	"protobuf_unspecified":           0,
	"transport_resource_unavailable": 1,
	"unspecified":                    2,
}

func (x CauseTransport_Value) String() string {
	return proto.EnumName(CauseTransport_Value_name, int32(x))
}

func (CauseTransport_Value) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1f54086b8cf16318, []int{2, 0}
}

type CauseProtocol_Value int32

const (
	CauseProtocol_protobuf_unspecified                              CauseProtocol_Value = 0
	CauseProtocol_transfer_syntax_error                             CauseProtocol_Value = 1
	CauseProtocol_abstract_syntax_error_reject                      CauseProtocol_Value = 2
	CauseProtocol_abstract_syntax_error_ignore_and_notify           CauseProtocol_Value = 3
	CauseProtocol_message_not_compatible_with_receiver_state        CauseProtocol_Value = 4
	CauseProtocol_semantic_error                                    CauseProtocol_Value = 5
	CauseProtocol_unspecified                                       CauseProtocol_Value = 6
	CauseProtocol_abstract_syntax_error_falsely_constructed_message CauseProtocol_Value = 7
)

var CauseProtocol_Value_name = map[int32]string{
	0: "protobuf_unspecified",
	1: "transfer_syntax_error",
	2: "abstract_syntax_error_reject",
	3: "abstract_syntax_error_ignore_and_notify",
	4: "message_not_compatible_with_receiver_state",
	5: "semantic_error",
	6: "unspecified",
	7: "abstract_syntax_error_falsely_constructed_message",
}

var CauseProtocol_Value_value = map[string]int32{
	"protobuf_unspecified":                              0,
	"transfer_syntax_error":                             1,
	"abstract_syntax_error_reject":                      2,
	"abstract_syntax_error_ignore_and_notify":           3,
	"message_not_compatible_with_receiver_state":        4,
	"semantic_error":                                    5,
	"unspecified":                                       6,
	"abstract_syntax_error_falsely_constructed_message": 7,
}

func (x CauseProtocol_Value) String() string {
	return proto.EnumName(CauseProtocol_Value_name, int32(x))
}

func (CauseProtocol_Value) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1f54086b8cf16318, []int{3, 0}
}

type CauseMisc_Value int32

const (
	CauseMisc_protobuf_unspecified                       CauseMisc_Value = 0
	CauseMisc_control_processing_overload                CauseMisc_Value = 1
	CauseMisc_hardware_failure                           CauseMisc_Value = 2
	CauseMisc_om_intervention                            CauseMisc_Value = 3
	CauseMisc_not_enough_user_plane_processing_resources CauseMisc_Value = 4
	CauseMisc_unspecified                                CauseMisc_Value = 5
)

var CauseMisc_Value_name = map[int32]string{
	0: "protobuf_unspecified",
	1: "control_processing_overload",
	2: "hardware_failure",
	3: "om_intervention",
	4: "not_enough_user_plane_processing_resources",
	5: "unspecified",
}

var CauseMisc_Value_value = map[string]int32{
	"protobuf_unspecified":                       0,
	"control_processing_overload":                1,
	"hardware_failure":                           2,
	"om_intervention":                            3,
	"not_enough_user_plane_processing_resources": 4,
	"unspecified":                                5,
}

func (x CauseMisc_Value) String() string {
	return proto.EnumName(CauseMisc_Value_name, int32(x))
}

func (CauseMisc_Value) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1f54086b8cf16318, []int{4, 0}
}

type Cause struct {
	// Types that are valid to be assigned to Value:
	//	*Cause_RadioNetwork
	//	*Cause_Transport
	//	*Cause_Protocol
	//	*Cause_Misc
	Value                isCause_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Cause) Reset()         { *m = Cause{} }
func (m *Cause) String() string { return proto.CompactTextString(m) }
func (*Cause) ProtoMessage()    {}
func (*Cause) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f54086b8cf16318, []int{0}
}

func (m *Cause) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cause.Unmarshal(m, b)
}
func (m *Cause) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cause.Marshal(b, m, deterministic)
}
func (m *Cause) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cause.Merge(m, src)
}
func (m *Cause) XXX_Size() int {
	return xxx_messageInfo_Cause.Size(m)
}
func (m *Cause) XXX_DiscardUnknown() {
	xxx_messageInfo_Cause.DiscardUnknown(m)
}

var xxx_messageInfo_Cause proto.InternalMessageInfo

type isCause_Value interface {
	isCause_Value()
}

type Cause_RadioNetwork struct {
	RadioNetwork *CauseRadioNetwork `protobuf:"bytes,1,opt,name=radioNetwork,proto3,oneof"`
}

type Cause_Transport struct {
	Transport *CauseTransport `protobuf:"bytes,2,opt,name=transport,proto3,oneof"`
}

type Cause_Protocol struct {
	Protocol *CauseProtocol `protobuf:"bytes,3,opt,name=protocol,proto3,oneof"`
}

type Cause_Misc struct {
	Misc *CauseMisc `protobuf:"bytes,4,opt,name=misc,proto3,oneof"`
}

func (*Cause_RadioNetwork) isCause_Value() {}

func (*Cause_Transport) isCause_Value() {}

func (*Cause_Protocol) isCause_Value() {}

func (*Cause_Misc) isCause_Value() {}

func (m *Cause) GetValue() isCause_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Cause) GetRadioNetwork() *CauseRadioNetwork {
	if x, ok := m.GetValue().(*Cause_RadioNetwork); ok {
		return x.RadioNetwork
	}
	return nil
}

func (m *Cause) GetTransport() *CauseTransport {
	if x, ok := m.GetValue().(*Cause_Transport); ok {
		return x.Transport
	}
	return nil
}

func (m *Cause) GetProtocol() *CauseProtocol {
	if x, ok := m.GetValue().(*Cause_Protocol); ok {
		return x.Protocol
	}
	return nil
}

func (m *Cause) GetMisc() *CauseMisc {
	if x, ok := m.GetValue().(*Cause_Misc); ok {
		return x.Misc
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Cause) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Cause_RadioNetwork)(nil),
		(*Cause_Transport)(nil),
		(*Cause_Protocol)(nil),
		(*Cause_Misc)(nil),
	}
}

type CauseRadioNetwork struct {
	Value                CauseRadioNetwork_Value `protobuf:"varint,1,opt,name=value,proto3,enum=streaming_protobufs.CauseRadioNetwork_Value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CauseRadioNetwork) Reset()         { *m = CauseRadioNetwork{} }
func (m *CauseRadioNetwork) String() string { return proto.CompactTextString(m) }
func (*CauseRadioNetwork) ProtoMessage()    {}
func (*CauseRadioNetwork) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f54086b8cf16318, []int{1}
}

func (m *CauseRadioNetwork) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CauseRadioNetwork.Unmarshal(m, b)
}
func (m *CauseRadioNetwork) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CauseRadioNetwork.Marshal(b, m, deterministic)
}
func (m *CauseRadioNetwork) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CauseRadioNetwork.Merge(m, src)
}
func (m *CauseRadioNetwork) XXX_Size() int {
	return xxx_messageInfo_CauseRadioNetwork.Size(m)
}
func (m *CauseRadioNetwork) XXX_DiscardUnknown() {
	xxx_messageInfo_CauseRadioNetwork.DiscardUnknown(m)
}

var xxx_messageInfo_CauseRadioNetwork proto.InternalMessageInfo

func (m *CauseRadioNetwork) GetValue() CauseRadioNetwork_Value {
	if m != nil {
		return m.Value
	}
	return CauseRadioNetwork_protobuf_unspecified
}

type CauseTransport struct {
	Value                CauseTransport_Value `protobuf:"varint,1,opt,name=value,proto3,enum=streaming_protobufs.CauseTransport_Value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CauseTransport) Reset()         { *m = CauseTransport{} }
func (m *CauseTransport) String() string { return proto.CompactTextString(m) }
func (*CauseTransport) ProtoMessage()    {}
func (*CauseTransport) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f54086b8cf16318, []int{2}
}

func (m *CauseTransport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CauseTransport.Unmarshal(m, b)
}
func (m *CauseTransport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CauseTransport.Marshal(b, m, deterministic)
}
func (m *CauseTransport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CauseTransport.Merge(m, src)
}
func (m *CauseTransport) XXX_Size() int {
	return xxx_messageInfo_CauseTransport.Size(m)
}
func (m *CauseTransport) XXX_DiscardUnknown() {
	xxx_messageInfo_CauseTransport.DiscardUnknown(m)
}

var xxx_messageInfo_CauseTransport proto.InternalMessageInfo

func (m *CauseTransport) GetValue() CauseTransport_Value {
	if m != nil {
		return m.Value
	}
	return CauseTransport_protobuf_unspecified
}

type CauseProtocol struct {
	Value                CauseProtocol_Value `protobuf:"varint,1,opt,name=value,proto3,enum=streaming_protobufs.CauseProtocol_Value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CauseProtocol) Reset()         { *m = CauseProtocol{} }
func (m *CauseProtocol) String() string { return proto.CompactTextString(m) }
func (*CauseProtocol) ProtoMessage()    {}
func (*CauseProtocol) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f54086b8cf16318, []int{3}
}

func (m *CauseProtocol) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CauseProtocol.Unmarshal(m, b)
}
func (m *CauseProtocol) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CauseProtocol.Marshal(b, m, deterministic)
}
func (m *CauseProtocol) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CauseProtocol.Merge(m, src)
}
func (m *CauseProtocol) XXX_Size() int {
	return xxx_messageInfo_CauseProtocol.Size(m)
}
func (m *CauseProtocol) XXX_DiscardUnknown() {
	xxx_messageInfo_CauseProtocol.DiscardUnknown(m)
}

var xxx_messageInfo_CauseProtocol proto.InternalMessageInfo

func (m *CauseProtocol) GetValue() CauseProtocol_Value {
	if m != nil {
		return m.Value
	}
	return CauseProtocol_protobuf_unspecified
}

type CauseMisc struct {
	Value                CauseMisc_Value `protobuf:"varint,1,opt,name=value,proto3,enum=streaming_protobufs.CauseMisc_Value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CauseMisc) Reset()         { *m = CauseMisc{} }
func (m *CauseMisc) String() string { return proto.CompactTextString(m) }
func (*CauseMisc) ProtoMessage()    {}
func (*CauseMisc) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f54086b8cf16318, []int{4}
}

func (m *CauseMisc) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CauseMisc.Unmarshal(m, b)
}
func (m *CauseMisc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CauseMisc.Marshal(b, m, deterministic)
}
func (m *CauseMisc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CauseMisc.Merge(m, src)
}
func (m *CauseMisc) XXX_Size() int {
	return xxx_messageInfo_CauseMisc.Size(m)
}
func (m *CauseMisc) XXX_DiscardUnknown() {
	xxx_messageInfo_CauseMisc.DiscardUnknown(m)
}

var xxx_messageInfo_CauseMisc proto.InternalMessageInfo

func (m *CauseMisc) GetValue() CauseMisc_Value {
	if m != nil {
		return m.Value
	}
	return CauseMisc_protobuf_unspecified
}

func init() {
	proto.RegisterEnum("streaming_protobufs.CauseRadioNetwork_Value", CauseRadioNetwork_Value_name, CauseRadioNetwork_Value_value)
	proto.RegisterEnum("streaming_protobufs.CauseTransport_Value", CauseTransport_Value_name, CauseTransport_Value_value)
	proto.RegisterEnum("streaming_protobufs.CauseProtocol_Value", CauseProtocol_Value_name, CauseProtocol_Value_value)
	proto.RegisterEnum("streaming_protobufs.CauseMisc_Value", CauseMisc_Value_name, CauseMisc_Value_value)
	proto.RegisterType((*Cause)(nil), "streaming_protobufs.Cause")
	proto.RegisterType((*CauseRadioNetwork)(nil), "streaming_protobufs.CauseRadioNetwork")
	proto.RegisterType((*CauseTransport)(nil), "streaming_protobufs.CauseTransport")
	proto.RegisterType((*CauseProtocol)(nil), "streaming_protobufs.CauseProtocol")
	proto.RegisterType((*CauseMisc)(nil), "streaming_protobufs.CauseMisc")
}

func init() { proto.RegisterFile("error_cause.proto", fileDescriptor_1f54086b8cf16318) }

var fileDescriptor_1f54086b8cf16318 = []byte{
	// 1304 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0xcb, 0x72, 0x1b, 0xb7,
	0x12, 0x15, 0x69, 0xc9, 0x0f, 0x58, 0x96, 0x21, 0xc8, 0xb2, 0x65, 0xcb, 0x96, 0x6d, 0xfa, 0x25,
	0x3f, 0x44, 0x5d, 0xcb, 0xf7, 0x6e, 0xee, 0x22, 0x8e, 0x45, 0xa9, 0x2c, 0x55, 0x45, 0x8e, 0xcc,
	0x24, 0xae, 0x54, 0x36, 0x28, 0x10, 0xd3, 0x1c, 0x22, 0xc6, 0x00, 0x53, 0x0d, 0x0c, 0x25, 0xfe,
	0x43, 0xf6, 0x59, 0xe4, 0x0b, 0xb2, 0xc9, 0x67, 0xa5, 0x2a, 0x7f, 0x90, 0x65, 0x0a, 0xe0, 0x43,
	0x33, 0x8c, 0x6c, 0x79, 0x47, 0xa2, 0xbb, 0x81, 0xee, 0xd3, 0xe7, 0x74, 0x0f, 0x59, 0x04, 0x44,
	0x8b, 0x5c, 0x8a, 0xc2, 0x41, 0x33, 0x47, 0xeb, 0x2d, 0x5b, 0x72, 0x1e, 0x41, 0x64, 0xca, 0xa4,
	0x3c, 0x1e, 0x74, 0x8a, 0xae, 0x6b, 0xfc, 0x56, 0x27, 0x73, 0xad, 0xe0, 0xc4, 0xbe, 0x21, 0xf3,
	0x28, 0x12, 0x65, 0xdf, 0x81, 0x3f, 0xb2, 0xf8, 0x71, 0xa5, 0x76, 0xaf, 0xb6, 0x7e, 0x79, 0xeb,
	0x71, 0xf3, 0x94, 0xa8, 0x66, 0x8c, 0x68, 0x97, 0xbc, 0xf7, 0x66, 0xda, 0x95, 0x68, 0xd6, 0x22,
	0x97, 0x3c, 0x0a, 0xe3, 0x72, 0x8b, 0x7e, 0xa5, 0x1e, 0xaf, 0x7a, 0xf0, 0xe9, 0xab, 0xbe, 0x1f,
	0xbb, 0xee, 0xcd, 0xb4, 0x4f, 0xe2, 0xd8, 0xd7, 0xe4, 0x62, 0x74, 0x94, 0x56, 0xaf, 0x9c, 0x8b,
	0x77, 0x34, 0x3e, 0x7d, 0xc7, 0xe1, 0xc8, 0x73, 0x6f, 0xa6, 0x3d, 0x89, 0x62, 0xff, 0x25, 0xb3,
	0x99, 0x72, 0x72, 0x65, 0x36, 0x46, 0xaf, 0x7d, 0x3a, 0xfa, 0x40, 0x39, 0xb9, 0x37, 0xd3, 0x8e,
	0xde, 0xdb, 0x17, 0xc8, 0x5c, 0x5f, 0xe8, 0x02, 0x1a, 0x7f, 0xce, 0x93, 0xc5, 0x7f, 0xd5, 0xca,
	0xb6, 0x47, 0xe6, 0x08, 0xd1, 0xc2, 0xd6, 0x8b, 0x2f, 0x83, 0xa8, 0xf9, 0x21, 0xc4, 0xb4, 0x47,
	0x37, 0xff, 0x32, 0x4f, 0xe6, 0xe2, 0x01, 0x5b, 0x21, 0xd7, 0xc6, 0x51, 0xbc, 0x30, 0x2e, 0x07,
	0xa9, 0xba, 0x0a, 0x12, 0x3a, 0xc3, 0xd6, 0xc9, 0xc3, 0x9e, 0x30, 0x89, 0xed, 0x03, 0xf2, 0x04,
	0x9c, 0x42, 0xd1, 0xd1, 0xc0, 0xbb, 0x16, 0x79, 0x84, 0x9a, 0x23, 0x08, 0x67, 0x8d, 0xa3, 0x35,
	0x76, 0x8b, 0x5c, 0xf7, 0x2a, 0x03, 0x2e, 0x51, 0x79, 0x25, 0x85, 0xe6, 0xe3, 0x38, 0x5a, 0x67,
	0x0d, 0xb2, 0x86, 0xe0, 0x6c, 0x81, 0x12, 0xb8, 0xcd, 0xbd, 0xca, 0x94, 0x13, 0x5e, 0x59, 0x73,
	0xe2, 0x73, 0x8e, 0xdd, 0x25, 0xab, 0x08, 0x49, 0x21, 0x81, 0x6b, 0x2b, 0x12, 0xae, 0x0c, 0x77,
	0x80, 0xfd, 0x50, 0x90, 0x04, 0xad, 0xe9, 0x2c, 0xbb, 0x46, 0x68, 0x2e, 0xd0, 0xab, 0xf2, 0xd5,
	0x73, 0x6c, 0x8d, 0xdc, 0x2a, 0xcc, 0x47, 0x63, 0x8f, 0x0c, 0x37, 0x70, 0xc4, 0xe1, 0xdd, 0x36,
	0xff, 0x61, 0x97, 0xff, 0xb8, 0xf5, 0xe6, 0x90, 0xef, 0xef, 0xd0, 0xf3, 0x65, 0xbb, 0xd5, 0xc9,
	0xb4, 0xfd, 0x42, 0xd9, 0x9e, 0x0b, 0x85, 0xdc, 0x76, 0xcb, 0xf6, 0x8b, 0xec, 0x26, 0x59, 0xee,
	0x59, 0xee, 0x05, 0xa6, 0xe0, 0xb9, 0xb1, 0x9e, 0x0b, 0xad, 0xed, 0x11, 0x24, 0xf4, 0x52, 0xac,
	0xf8, 0x78, 0x0b, 0x41, 0x5b, 0x19, 0x92, 0x11, 0x5a, 0x73, 0x38, 0xce, 0x15, 0x0e, 0x28, 0x61,
	0xcb, 0x64, 0xd1, 0x47, 0x4b, 0x8e, 0x90, 0x8f, 0x8f, 0x2f, 0xb3, 0xeb, 0x84, 0x85, 0x6a, 0x86,
	0x17, 0xf5, 0x85, 0xd2, 0x01, 0x4e, 0x3a, 0xcf, 0x36, 0xc9, 0x73, 0x63, 0x27, 0x90, 0x0e, 0x91,
	0x72, 0x27, 0x1e, 0x01, 0x8d, 0x51, 0x0a, 0x11, 0x8c, 0x2b, 0xec, 0x06, 0x59, 0x52, 0xa6, 0x2f,
	0xb4, 0x4a, 0xf8, 0xc1, 0xc1, 0x2e, 0x7f, 0x8b, 0xb6, 0xc8, 0xf7, 0x77, 0xe8, 0x42, 0x40, 0x69,
	0x5c, 0x4f, 0x30, 0xb4, 0x6c, 0x02, 0xf4, 0x2a, 0x6b, 0x91, 0xd7, 0x60, 0x24, 0x0e, 0xf2, 0x88,
	0xba, 0x30, 0x09, 0xb7, 0xc8, 0x95, 0xf1, 0x90, 0xa2, 0xf2, 0x83, 0x48, 0x19, 0x90, 0x43, 0x9b,
	0x4e, 0x2d, 0x2a, 0xdf, 0xcb, 0x5c, 0x4c, 0xd2, 0x15, 0x79, 0x90, 0x01, 0x24, 0x94, 0x06, 0xa8,
	0x10, 0xc2, 0xbf, 0x56, 0x4f, 0xa0, 0x90, 0x1e, 0x50, 0x39, 0xaf, 0xa4, 0xdb, 0xcd, 0x72, 0x3f,
	0xa0, 0x8b, 0x21, 0x27, 0x63, 0xdb, 0xd1, 0xe3, 0x10, 0x50, 0xd9, 0x44, 0x49, 0xe5, 0x07, 0x94,
	0x05, 0x0c, 0xe1, 0x38, 0xf8, 0x9a, 0xf4, 0x00, 0x84, 0x2b, 0x10, 0x32, 0x30, 0x7e, 0x7f, 0x87,
	0x2e, 0x95, 0xe1, 0x0f, 0xad, 0x29, 0x99, 0x03, 0xfc, 0xd7, 0xd8, 0x53, 0xf2, 0x28, 0x2b, 0x9d,
	0x79, 0xc8, 0x72, 0x8b, 0x02, 0x95, 0x1e, 0x4c, 0x61, 0xb8, 0xcc, 0xae, 0x92, 0xcb, 0x65, 0xee,
	0x5e, 0x67, 0x8c, 0x2c, 0x44, 0x2a, 0x75, 0x84, 0x16, 0x46, 0x2a, 0x93, 0xd2, 0x1b, 0xb1, 0x9d,
	0x63, 0x3e, 0x97, 0x99, 0x48, 0x57, 0x42, 0x2a, 0x51, 0x17, 0xdc, 0x16, 0x3e, 0xd0, 0x60, 0xd4,
	0x68, 0x8e, 0xc2, 0xa4, 0x40, 0x6f, 0x06, 0x82, 0x66, 0x85, 0xf6, 0x2a, 0xd7, 0xc0, 0x77, 0x79,
	0xfb, 0xcd, 0x36, 0xdf, 0xdf, 0xe1, 0xca, 0x38, 0x2f, 0x8c, 0x04, 0x47, 0x6f, 0x85, 0xe6, 0xba,
	0x23, 0xe5, 0x65, 0x8f, 0xdb, 0x6e, 0x97, 0x5b, 0x93, 0xda, 0xf0, 0xe6, 0x2a, 0x5b, 0x25, 0x37,
	0x2a, 0x50, 0xf2, 0xf7, 0xad, 0x7d, 0x1e, 0x9f, 0xa2, 0xb7, 0xd9, 0x0b, 0xb2, 0x5e, 0x2e, 0xb0,
	0xea, 0x18, 0x74, 0xe6, 0x7b, 0xc0, 0x6d, 0xe7, 0x67, 0x90, 0x9e, 0xde, 0x89, 0xb4, 0xda, 0x69,
	0x4d, 0xb1, 0x6d, 0x2d, 0x54, 0xea, 0x77, 0x5a, 0x65, 0xaa, 0xdd, 0x65, 0x8f, 0x49, 0x43, 0x0c,
	0x5b, 0xfa, 0x39, 0xdd, 0xde, 0x0b, 0xb0, 0x95, 0x74, 0x47, 0xef, 0x07, 0x88, 0x4e, 0x15, 0x2b,
	0x6d, 0x84, 0x39, 0x51, 0xd5, 0xf8, 0xf0, 0x05, 0xfa, 0x20, 0xd4, 0x7e, 0x8a, 0x46, 0x1e, 0xb2,
	0x7b, 0xe4, 0xf6, 0xe7, 0x88, 0x4d, 0x1f, 0x05, 0x74, 0xc6, 0x4c, 0x7e, 0x6f, 0xbf, 0xe3, 0xd2,
	0x66, 0x1d, 0x65, 0x86, 0x0f, 0x3e, 0x66, 0x4f, 0xc8, 0x83, 0x32, 0x6f, 0xab, 0xdc, 0x14, 0x13,
	0x6e, 0x3e, 0x09, 0xdc, 0xcb, 0xd1, 0x4a, 0x48, 0x0a, 0x04, 0x2e, 0x43, 0x47, 0xb4, 0x86, 0x84,
	0xae, 0xc7, 0xf2, 0xda, 0x07, 0x3c, 0x2f, 0x30, 0xb7, 0x0e, 0xe8, 0xd3, 0x50, 0x9e, 0xca, 0x72,
	0xb4, 0x7d, 0xe0, 0x85, 0x03, 0xe4, 0x1d, 0xe5, 0x39, 0x0a, 0x0f, 0xf4, 0x19, 0x5b, 0x22, 0x57,
	0xe3, 0x91, 0x32, 0xa1, 0xae, 0x7e, 0x20, 0xef, 0x73, 0x76, 0x9f, 0xdc, 0x19, 0xa6, 0x2f, 0xad,
	0x31, 0x23, 0x91, 0x1c, 0x29, 0xdf, 0x0b, 0x63, 0x42, 0x5b, 0xe7, 0xe9, 0x8b, 0xd0, 0xc3, 0xae,
	0x50, 0x3a, 0x3c, 0x1d, 0x84, 0xda, 0x83, 0x51, 0xc1, 0x41, 0x60, 0xd8, 0x15, 0x12, 0xf8, 0x24,
	0x37, 0xba, 0x11, 0x78, 0xd4, 0x01, 0x81, 0x23, 0x02, 0x5a, 0x33, 0xa5, 0xb3, 0x26, 0xa3, 0x64,
	0x3e, 0x6b, 0xbd, 0xe5, 0x07, 0xb6, 0xa3, 0x74, 0xc8, 0x61, 0x33, 0x9c, 0xb8, 0xf2, 0xc9, 0x7f,
	0x02, 0x6a, 0xd2, 0x16, 0xc6, 0x87, 0x46, 0xca, 0x1e, 0x38, 0x9e, 0x89, 0xe3, 0x11, 0xa7, 0x5e,
	0x86, 0x94, 0x2b, 0x33, 0xcf, 0xf0, 0xb4, 0x3a, 0xf6, 0xb6, 0xd8, 0x22, 0xb9, 0x92, 0xef, 0xb4,
	0x0e, 0xf9, 0xb7, 0x7d, 0xc0, 0xd8, 0xf7, 0x57, 0x8d, 0xdf, 0x6b, 0x64, 0xa1, 0xba, 0x09, 0xd9,
	0xeb, 0xea, 0x96, 0x79, 0xfa, 0x05, 0xdb, 0xb3, 0xba, 0x62, 0x3e, 0x9c, 0xbd, 0x61, 0x1a, 0x64,
	0x6d, 0xb2, 0x6d, 0x27, 0x14, 0xe1, 0x85, 0x39, 0xe1, 0x48, 0x6d, 0x5a, 0xda, 0xf5, 0xc6, 0x5f,
	0x75, 0x72, 0xa5, 0xb2, 0x71, 0xd9, 0x57, 0xd5, 0x54, 0xd7, 0xcf, 0x5e, 0xd2, 0xd5, 0x4c, 0x7f,
	0xad, 0x9f, 0x9d, 0xea, 0x4d, 0xb2, 0x1c, 0x53, 0xed, 0x02, 0x72, 0x37, 0x30, 0x5e, 0x1c, 0xf3,
	0xf8, 0x89, 0x43, 0x6b, 0x81, 0xe7, 0xa2, 0xe3, 0x7c, 0x18, 0x8b, 0x15, 0x13, 0x47, 0x88, 0xd2,
	0xad, 0xb3, 0xe7, 0xe4, 0xc9, 0xe9, 0x1e, 0x2a, 0x35, 0x16, 0x21, 0x0e, 0x65, 0x63, 0xbd, 0xea,
	0x0e, 0xe8, 0x39, 0xd6, 0x24, 0xcf, 0x32, 0x70, 0x4e, 0xa4, 0x10, 0xd9, 0x21, 0x6d, 0x96, 0x0b,
	0xaf, 0x82, 0x84, 0x23, 0xf5, 0x10, 0x24, 0xa8, 0x30, 0xc2, 0x9c, 0x0f, 0xcc, 0x9d, 0x0d, 0x03,
	0xc0, 0x41, 0x26, 0x8c, 0x57, 0x72, 0x94, 0xd2, 0xdc, 0x34, 0x68, 0xe7, 0xd9, 0xff, 0xc8, 0xcb,
	0xd3, 0x33, 0xe8, 0x0a, 0xed, 0x40, 0x0f, 0x02, 0xc3, 0x9d, 0xc7, 0x42, 0x86, 0xd1, 0x33, 0x7a,
	0x9e, 0x5e, 0x68, 0xfc, 0x5d, 0x23, 0x97, 0x26, 0xdf, 0x27, 0xec, 0xff, 0x55, 0x9c, 0x1f, 0x7e,
	0xfe, 0x73, 0xa6, 0x8a, 0xf1, 0x1f, 0xb5, 0xb3, 0x31, 0xbe, 0x4b, 0x56, 0xa5, 0x35, 0x1e, 0xad,
	0x1e, 0x8a, 0xc6, 0xb9, 0x70, 0xb5, 0x1d, 0xd3, 0xb4, 0x16, 0x16, 0x5c, 0x4f, 0x60, 0x72, 0x24,
	0x10, 0xf8, 0x48, 0x75, 0xb4, 0x1e, 0xa4, 0x6b, 0xb3, 0xa1, 0xe0, 0xfa, 0x60, 0xe2, 0xf4, 0x88,
	0x28, 0x06, 0xf4, 0xc0, 0xd8, 0x22, 0xed, 0x0d, 0xd5, 0x9e, 0x6b, 0x61, 0xa0, 0x7c, 0xf3, 0x64,
	0x28, 0xd1, 0xd9, 0x69, 0xc4, 0xe6, 0xb6, 0x5f, 0xfd, 0xf4, 0x32, 0x05, 0x44, 0xe5, 0x9b, 0x76,
	0x03, 0x85, 0xd9, 0x70, 0xb2, 0x69, 0x31, 0xdd, 0xc4, 0x4d, 0x54, 0x72, 0x23, 0xd7, 0x7e, 0x73,
	0x52, 0xfc, 0xc6, 0xa4, 0xf8, 0xce, 0xf9, 0xf8, 0xf3, 0xd5, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x5b, 0xa3, 0xad, 0x08, 0xff, 0x0a, 0x00, 0x00,
}
