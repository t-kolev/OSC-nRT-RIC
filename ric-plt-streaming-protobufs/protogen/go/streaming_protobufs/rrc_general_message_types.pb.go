// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rrc_general_message_types.proto

package streaming_protobufs

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RRCContainer struct {
	UL_DCCHMessage       *UL_DCCH_MessageType `protobuf:"bytes,1,opt,name=UL_DCCH_message,json=ULDCCHMessage,proto3" json:"UL_DCCH_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RRCContainer) Reset()         { *m = RRCContainer{} }
func (m *RRCContainer) String() string { return proto.CompactTextString(m) }
func (*RRCContainer) ProtoMessage()    {}
func (*RRCContainer) Descriptor() ([]byte, []int) {
	return fileDescriptor_f6431bdd4b8672dd, []int{0}
}

func (m *RRCContainer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RRCContainer.Unmarshal(m, b)
}
func (m *RRCContainer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RRCContainer.Marshal(b, m, deterministic)
}
func (m *RRCContainer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RRCContainer.Merge(m, src)
}
func (m *RRCContainer) XXX_Size() int {
	return xxx_messageInfo_RRCContainer.Size(m)
}
func (m *RRCContainer) XXX_DiscardUnknown() {
	xxx_messageInfo_RRCContainer.DiscardUnknown(m)
}

var xxx_messageInfo_RRCContainer proto.InternalMessageInfo

func (m *RRCContainer) GetUL_DCCHMessage() *UL_DCCH_MessageType {
	if m != nil {
		return m.UL_DCCHMessage
	}
	return nil
}

type UL_DCCH_MessageType struct {
	// Types that are valid to be assigned to C1:
	//	*UL_DCCH_MessageType_MeasurementReport
	//	*UL_DCCH_MessageType_FailureInformation
	C1                   isUL_DCCH_MessageType_C1 `protobuf_oneof:"c1"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *UL_DCCH_MessageType) Reset()         { *m = UL_DCCH_MessageType{} }
func (m *UL_DCCH_MessageType) String() string { return proto.CompactTextString(m) }
func (*UL_DCCH_MessageType) ProtoMessage()    {}
func (*UL_DCCH_MessageType) Descriptor() ([]byte, []int) {
	return fileDescriptor_f6431bdd4b8672dd, []int{1}
}

func (m *UL_DCCH_MessageType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UL_DCCH_MessageType.Unmarshal(m, b)
}
func (m *UL_DCCH_MessageType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UL_DCCH_MessageType.Marshal(b, m, deterministic)
}
func (m *UL_DCCH_MessageType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UL_DCCH_MessageType.Merge(m, src)
}
func (m *UL_DCCH_MessageType) XXX_Size() int {
	return xxx_messageInfo_UL_DCCH_MessageType.Size(m)
}
func (m *UL_DCCH_MessageType) XXX_DiscardUnknown() {
	xxx_messageInfo_UL_DCCH_MessageType.DiscardUnknown(m)
}

var xxx_messageInfo_UL_DCCH_MessageType proto.InternalMessageInfo

type isUL_DCCH_MessageType_C1 interface {
	isUL_DCCH_MessageType_C1()
}

type UL_DCCH_MessageType_MeasurementReport struct {
	MeasurementReport *MeasurementReport `protobuf:"bytes,1,opt,name=measurementReport,proto3,oneof"`
}

type UL_DCCH_MessageType_FailureInformation struct {
	FailureInformation *FailureInformation `protobuf:"bytes,2,opt,name=failureInformation,proto3,oneof"`
}

func (*UL_DCCH_MessageType_MeasurementReport) isUL_DCCH_MessageType_C1() {}

func (*UL_DCCH_MessageType_FailureInformation) isUL_DCCH_MessageType_C1() {}

func (m *UL_DCCH_MessageType) GetC1() isUL_DCCH_MessageType_C1 {
	if m != nil {
		return m.C1
	}
	return nil
}

func (m *UL_DCCH_MessageType) GetMeasurementReport() *MeasurementReport {
	if x, ok := m.GetC1().(*UL_DCCH_MessageType_MeasurementReport); ok {
		return x.MeasurementReport
	}
	return nil
}

func (m *UL_DCCH_MessageType) GetFailureInformation() *FailureInformation {
	if x, ok := m.GetC1().(*UL_DCCH_MessageType_FailureInformation); ok {
		return x.FailureInformation
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*UL_DCCH_MessageType) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*UL_DCCH_MessageType_MeasurementReport)(nil),
		(*UL_DCCH_MessageType_FailureInformation)(nil),
	}
}

func init() {
	proto.RegisterType((*RRCContainer)(nil), "streaming_protobufs.RRCContainer")
	proto.RegisterType((*UL_DCCH_MessageType)(nil), "streaming_protobufs.UL_DCCH_MessageType")
}

func init() { proto.RegisterFile("rrc_general_message_types.proto", fileDescriptor_f6431bdd4b8672dd) }

var fileDescriptor_f6431bdd4b8672dd = []byte{
	// 277 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x8f, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0x9b, 0x22, 0x1e, 0x56, 0x45, 0x4c, 0x2f, 0xa5, 0x28, 0x4a, 0x0f, 0xda, 0x4b, 0x12,
	0x6a, 0xbf, 0x41, 0x23, 0x12, 0xa1, 0x05, 0x59, 0xac, 0xa0, 0x97, 0x75, 0x1b, 0x26, 0x61, 0x21,
	0xfb, 0x87, 0xd9, 0xcd, 0xa1, 0x5f, 0xd2, 0xcf, 0x24, 0xf9, 0xd3, 0x2a, 0x76, 0x6f, 0xc3, 0x9b,
	0x37, 0xef, 0xf7, 0x86, 0xdc, 0x22, 0xe6, 0xac, 0x04, 0x05, 0xc8, 0x2b, 0x26, 0xc1, 0x5a, 0x5e,
	0x02, 0x73, 0x3b, 0x03, 0x36, 0x36, 0xa8, 0x9d, 0x0e, 0x47, 0xd6, 0x21, 0x70, 0x29, 0x54, 0xc9,
	0x5a, 0x61, 0x5b, 0x17, 0x76, 0x72, 0xdd, 0x5c, 0x49, 0xe0, 0xb6, 0x46, 0x90, 0xa0, 0x1c, 0x43,
	0x30, 0x1a, 0x5d, 0x77, 0x32, 0xb9, 0x69, 0xb6, 0x05, 0x17, 0x55, 0x8d, 0xc0, 0x84, 0x2a, 0x34,
	0x4a, 0xee, 0x84, 0x56, 0xdd, 0x7a, 0xfa, 0x45, 0xce, 0x29, 0x4d, 0x53, 0xad, 0x1c, 0x17, 0x0a,
	0x30, 0x7c, 0x25, 0x97, 0x9b, 0x15, 0x7b, 0x4a, 0xd3, 0x6c, 0x5f, 0x60, 0x1c, 0xdc, 0x05, 0xb3,
	0xb3, 0xc7, 0x59, 0xec, 0x61, 0xc7, 0x7b, 0xef, 0xba, 0xf3, 0xbe, 0xed, 0x0c, 0xd0, 0x8b, 0xcd,
	0xaa, 0xd1, 0x7a, 0x69, 0xfa, 0x1d, 0x90, 0x91, 0xc7, 0x16, 0xbe, 0x93, 0xab, 0x3f, 0xa5, 0x69,
	0xdb, 0xb9, 0x67, 0xdd, 0x7b, 0x59, 0xeb, 0xff, 0xee, 0x6c, 0x40, 0x8f, 0x23, 0xc2, 0x0f, 0x12,
	0xf6, 0xef, 0xbe, 0xfc, 0x7e, 0x3b, 0x1e, 0xb6, 0xc1, 0x0f, 0xde, 0xe0, 0xe7, 0x23, 0x7b, 0x36,
	0xa0, 0x9e, 0x90, 0xe5, 0x09, 0x19, 0xe6, 0xf3, 0xe5, 0xe2, 0x73, 0x5e, 0x02, 0xa2, 0x70, 0xb1,
	0x8e, 0x90, 0xab, 0xc8, 0xe6, 0xb1, 0xc6, 0x32, 0xc1, 0x04, 0x45, 0x1e, 0x99, 0xca, 0x25, 0x07,
	0x46, 0x74, 0x60, 0x6c, 0x4f, 0xdb, 0x71, 0xf1, 0x13, 0x00, 0x00, 0xff, 0xff, 0x8d, 0xd4, 0x6c,
	0x9b, 0xe3, 0x01, 0x00, 0x00,
}
