name: Continuous SCA Scanning

on:
  push:
    branches: [ "main" ]
  schedule:
    - cron: 0 12 * * 1
  # At 12:00 on Monday.

jobs:
  update-repo:
    runs-on: ubuntu-latest

    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write

    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Git
        run: |
          git config --global user.name "${{ secrets.GIT_USERNAME }}"
          git config --global user.email "${{ secrets.GIT_EMAIL }}"

      - name: Make the script executable
        run: chmod +x update_repo.sh
      
      - name: Run update_repo.sh
        run: ./update_repo.sh osc_links.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
  Grype-Scan:
    permissions:
        contents: read # for actions/checkout to fetch code
        security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
        actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    needs: update-repo
    # Importing a reusable workflow from another repository and branch
    uses: t-kolev/Continuous-SCA-Scanning/.github/workflows/grype.yaml@main
      
  Snyk-Scan:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    needs: Grype-Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Snyk CLI to check for security issues
        uses: snyk/actions/setup@806182742461562b67788a64410098c9d9b96adb
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Authenticating snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}
        
      - name: Snyk Code test
        run: snyk test --all-projects --json > snyk-results.json || true

      - name: Save the JSON file vulnerability report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: snyk-results
          path: ./snyk-results.json

  Trivy-Scan:
    permissions:
        contents: read # for actions/checkout to fetch code
        security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
        actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    needs: Snyk-Scan
    uses: t-kolev/Continuous-SCA-Scanning/.github/workflows/trivy.yaml@main
 
  Data_Analysis:
    needs: Trivy-Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Download Grype results
        uses: actions/download-artifact@v4
        with:
          name: grype-results
          path: scan/

      - name: Download Snyk results
        uses: actions/download-artifact@v4
        with:
          name: snyk-results
          path: scan/

      - name: Download Trivy results
        uses: actions/download-artifact@v4
        with:
          name: trivy-results
          path: scan/

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install Python packages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Running the Python Script
        run: python new_script.py scan/results.json scan/snyk-results.json scan/trivy-results.json "Grype.txt" "Snyk.txt" "Trivy.txt" "OSC"

      - name: Save the JSON vulnerability report to an artifact
        uses: actions/upload-artifact@v4
        with:
          name: results_data_analysis
          path: sca_results.json

      - name: Save plots to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: plots
          path: "*.png"