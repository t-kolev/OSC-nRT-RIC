name: Grype SCA

on:
    push:
        branches: [ "main" ]
    schedule:
        - cron: 0 12 * * 1
    # At 12:00 on Monday.

jobs:
  update-repo:
    runs-on: ubuntu-latest

    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write

    steps:
    - name: Checkout source
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Git
      run: |
        git config --global user.name "${{ secrets.GIT_USERNAME }}"
        git config --global user.email "${{ secrets.GIT_EMAIL }}"

    - name: Make the script executable
      run: chmod +x update_repo.sh
      
    - name: Run update_repo.sh
      run: ./update_repo.sh onos  # Change 'osc' to 'onos' or 'aic' as needed
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
  Grype-Scan:
    permissions:
        contents: read # for actions/checkout to fetch code
        security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
        actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    needs: update-repo
    # Importing a reusable workflow from another repository and branch
    uses: t-kolev/Continuous-SCA-Scanning/.github/workflows/grype.yaml@main


    name: Grype scan

  Data_Analysis:
    name: Data Analysis
    needs: Grype-Scan
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code 
        uses: actions/checkout@v3

      - name: Download result for job Grype-Scan
        uses: actions/download-artifact@v4
        with:
          name: grype_results
          path: scan/
      
      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' # install the python version needed

      - name: install python packages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
  
      - name: Running the Python Script
        run: python script.py scan/results.json "Grype.txt" "OSC" 
      
      # Save the JSON vulnerability report to an artifact
      - name: Save the JSON vulnerability report to an artifact
        uses: actions/upload-artifact@v4
        with:
          name: results_data_analysis
          path: sca_results.json

      # Save the plots to artifacts
      - name: Save plots to artifacts
        uses: actions/upload-artifact@v4
        with:
            name: plots
            path: "*.png"