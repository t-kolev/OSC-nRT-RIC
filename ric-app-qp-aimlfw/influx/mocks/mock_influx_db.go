// Code generated by MockGen. DO NOT EDIT.
// Source: influx_db.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	data "gerrit.o-ran-sc.org/r/ric-app/qp-aimlfw/data"
	gomock "github.com/golang/mock/gomock"
)

// MockInfluxDBCommand is a mock of InfluxDBCommand interface.
type MockInfluxDBCommand struct {
	ctrl     *gomock.Controller
	recorder *MockInfluxDBCommandMockRecorder
}

// MockInfluxDBCommandMockRecorder is the mock recorder for MockInfluxDBCommand.
type MockInfluxDBCommandMockRecorder struct {
	mock *MockInfluxDBCommand
}

// NewMockInfluxDBCommand creates a new mock instance.
func NewMockInfluxDBCommand(ctrl *gomock.Controller) *MockInfluxDBCommand {
	mock := &MockInfluxDBCommand{ctrl: ctrl}
	mock.recorder = &MockInfluxDBCommandMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInfluxDBCommand) EXPECT() *MockInfluxDBCommandMockRecorder {
	return m.recorder
}

// RetrieveCellMetrics mocks base method.
func (m *MockInfluxDBCommand) RetrieveCellMetrics() ([]data.CellMetricsEntry, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RetrieveCellMetrics")
	ret0, _ := ret[0].([]data.CellMetricsEntry)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RetrieveCellMetrics indicates an expected call of RetrieveCellMetrics.
func (mr *MockInfluxDBCommandMockRecorder) RetrieveCellMetrics() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RetrieveCellMetrics", reflect.TypeOf((*MockInfluxDBCommand)(nil).RetrieveCellMetrics))
}
