/*
==================================================================================
  Copyright (c) 2021 Samsung

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   This source code is part of the near-RT RIC (RAN Intelligent Controller)
   platform project (RICP).
==================================================================================
*/
// Code generated by go-swagger; DO NOT EDIT.

package a1_e_i_data_delivery

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// A1ControllerDataDeliveryHandlerFunc turns a function with the right signature into a a1 controller data delivery handler
type A1ControllerDataDeliveryHandlerFunc func(A1ControllerDataDeliveryParams) middleware.Responder

// Handle executing the request and returning a response
func (fn A1ControllerDataDeliveryHandlerFunc) Handle(params A1ControllerDataDeliveryParams) middleware.Responder {
	return fn(params)
}

// A1ControllerDataDeliveryHandler interface for that can handle valid a1 controller data delivery params
type A1ControllerDataDeliveryHandler interface {
	Handle(A1ControllerDataDeliveryParams) middleware.Responder
}

// NewA1ControllerDataDelivery creates a new http.Handler for the a1 controller data delivery operation
func NewA1ControllerDataDelivery(ctx *middleware.Context, handler A1ControllerDataDeliveryHandler) *A1ControllerDataDelivery {
	return &A1ControllerDataDelivery{Context: ctx, Handler: handler}
}

/* A1ControllerDataDelivery swagger:route POST /data-delivery A1 EI Data Delivery a1ControllerDataDelivery

Deliver data produced by data producer.


*/
type A1ControllerDataDelivery struct {
	Context *middleware.Context
	Handler A1ControllerDataDeliveryHandler
}

func (o *A1ControllerDataDelivery) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewA1ControllerDataDeliveryParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
