/*
==================================================================================
  Copyright (c) 2021 Samsung

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   This source code is part of the near-RT RIC (RAN Intelligent Controller)
   platform project (RICP).
==================================================================================
*/
// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// PolicyTypeID represents a policy type identifier. Currently this is restricted to an integer range.
//
//
// swagger:model policy_type_id
type PolicyTypeID int64

// Validate validates this policy type id
func (m PolicyTypeID) Validate(formats strfmt.Registry) error {
	var res []error

	if err := validate.MinimumInt("", "body", int64(m), 1, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("", "body", int64(m), 2.147483647e+09, false); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this policy type id based on context it is used
func (m PolicyTypeID) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
