/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: rrc_common_types.proto */

#ifndef PROTOBUF_C_rrc_5fcommon_5ftypes_2eproto__INCLUDED
#define PROTOBUF_C_rrc_5fcommon_5ftypes_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "google/protobuf/wrappers.pb-c.h"
#include "common_types.pb-c.h"

typedef struct _StreamingProtobufs__CellGroupConfig StreamingProtobufs__CellGroupConfig;
typedef struct _StreamingProtobufs__RLCBearerConfig StreamingProtobufs__RLCBearerConfig;
typedef struct _StreamingProtobufs__RLCConfig StreamingProtobufs__RLCConfig;
typedef struct _StreamingProtobufs__AM StreamingProtobufs__AM;
typedef struct _StreamingProtobufs__ULAMRLC StreamingProtobufs__ULAMRLC;
typedef struct _StreamingProtobufs__MaxRetxThreshold StreamingProtobufs__MaxRetxThreshold;
typedef struct _StreamingProtobufs__SNFieldLengthAM StreamingProtobufs__SNFieldLengthAM;
typedef struct _StreamingProtobufs__TPollRetransmit StreamingProtobufs__TPollRetransmit;
typedef struct _StreamingProtobufs__PollPDU StreamingProtobufs__PollPDU;
typedef struct _StreamingProtobufs__PollByte StreamingProtobufs__PollByte;
typedef struct _StreamingProtobufs__DLAMRLC StreamingProtobufs__DLAMRLC;
typedef struct _StreamingProtobufs__TReassembly StreamingProtobufs__TReassembly;
typedef struct _StreamingProtobufs__TStatusProhibit StreamingProtobufs__TStatusProhibit;
typedef struct _StreamingProtobufs__UMBiDirectional StreamingProtobufs__UMBiDirectional;
typedef struct _StreamingProtobufs__ULUMRLC StreamingProtobufs__ULUMRLC;
typedef struct _StreamingProtobufs__SNFieldLengthUM StreamingProtobufs__SNFieldLengthUM;
typedef struct _StreamingProtobufs__DLUMRLC StreamingProtobufs__DLUMRLC;
typedef struct _StreamingProtobufs__UMUniDirectionalUL StreamingProtobufs__UMUniDirectionalUL;
typedef struct _StreamingProtobufs__UMUniDirectionalDL StreamingProtobufs__UMUniDirectionalDL;
typedef struct _StreamingProtobufs__LogicalChannelConfig StreamingProtobufs__LogicalChannelConfig;
typedef struct _StreamingProtobufs__ULSpecificParameters StreamingProtobufs__ULSpecificParameters;
typedef struct _StreamingProtobufs__PrioritisedBitRate StreamingProtobufs__PrioritisedBitRate;
typedef struct _StreamingProtobufs__BucketSizeDuration StreamingProtobufs__BucketSizeDuration;
typedef struct _StreamingProtobufs__SubcarrierSpacing StreamingProtobufs__SubcarrierSpacing;
typedef struct _StreamingProtobufs__MaxPUSCHDuration StreamingProtobufs__MaxPUSCHDuration;
typedef struct _StreamingProtobufs__BitRateQueryProhibitTimer StreamingProtobufs__BitRateQueryProhibitTimer;
typedef struct _StreamingProtobufs__MACCellGroupConfig StreamingProtobufs__MACCellGroupConfig;
typedef struct _StreamingProtobufs__DRXConfig StreamingProtobufs__DRXConfig;
typedef struct _StreamingProtobufs__MilliSeconds StreamingProtobufs__MilliSeconds;
typedef struct _StreamingProtobufs__DRXInactivityTimer StreamingProtobufs__DRXInactivityTimer;
typedef struct _StreamingProtobufs__DRXRetransmissionTimer StreamingProtobufs__DRXRetransmissionTimer;
typedef struct _StreamingProtobufs__ShortDRX StreamingProtobufs__ShortDRX;
typedef struct _StreamingProtobufs__DRXShortCycle StreamingProtobufs__DRXShortCycle;
typedef struct _StreamingProtobufs__SchedulingRequestConfig StreamingProtobufs__SchedulingRequestConfig;
typedef struct _StreamingProtobufs__SchedulingRequestToAddMod StreamingProtobufs__SchedulingRequestToAddMod;
typedef struct _StreamingProtobufs__SRProhibitTimer StreamingProtobufs__SRProhibitTimer;
typedef struct _StreamingProtobufs__SRTransMax StreamingProtobufs__SRTransMax;
typedef struct _StreamingProtobufs__BSRConfig StreamingProtobufs__BSRConfig;
typedef struct _StreamingProtobufs__PeriodicBSRTimer StreamingProtobufs__PeriodicBSRTimer;
typedef struct _StreamingProtobufs__RetxBSRTimer StreamingProtobufs__RetxBSRTimer;
typedef struct _StreamingProtobufs__LogicalChannelSRDelayTimer StreamingProtobufs__LogicalChannelSRDelayTimer;
typedef struct _StreamingProtobufs__TAGConfig StreamingProtobufs__TAGConfig;
typedef struct _StreamingProtobufs__TAG StreamingProtobufs__TAG;
typedef struct _StreamingProtobufs__TimeAlignmentTimer StreamingProtobufs__TimeAlignmentTimer;
typedef struct _StreamingProtobufs__PHRConfig StreamingProtobufs__PHRConfig;
typedef struct _StreamingProtobufs__PHRPeriodicTimer StreamingProtobufs__PHRPeriodicTimer;
typedef struct _StreamingProtobufs__PHRProhibitTimer StreamingProtobufs__PHRProhibitTimer;
typedef struct _StreamingProtobufs__PHRTxPowerFactorChange StreamingProtobufs__PHRTxPowerFactorChange;
typedef struct _StreamingProtobufs__PHRModeOtherCG StreamingProtobufs__PHRModeOtherCG;
typedef struct _StreamingProtobufs__DataInactivityTimer StreamingProtobufs__DataInactivityTimer;
typedef struct _StreamingProtobufs__PhysicalCellGroupConfig StreamingProtobufs__PhysicalCellGroupConfig;
typedef struct _StreamingProtobufs__XScale StreamingProtobufs__XScale;
typedef struct _StreamingProtobufs__SpCellConfig StreamingProtobufs__SpCellConfig;
typedef struct _StreamingProtobufs__ReconfigurationWithSync StreamingProtobufs__ReconfigurationWithSync;
typedef struct _StreamingProtobufs__ServingCellConfigCommon StreamingProtobufs__ServingCellConfigCommon;
typedef struct _StreamingProtobufs__DownlinkConfigCommon StreamingProtobufs__DownlinkConfigCommon;
typedef struct _StreamingProtobufs__FrequencyInfoDL StreamingProtobufs__FrequencyInfoDL;
typedef struct _StreamingProtobufs__SCSSpecificCarrier StreamingProtobufs__SCSSpecificCarrier;
typedef struct _StreamingProtobufs__BWPDownlinkCommon StreamingProtobufs__BWPDownlinkCommon;
typedef struct _StreamingProtobufs__BWP StreamingProtobufs__BWP;
typedef struct _StreamingProtobufs__CyclicPrefix StreamingProtobufs__CyclicPrefix;
typedef struct _StreamingProtobufs__PDCCHConfigCommon StreamingProtobufs__PDCCHConfigCommon;
typedef struct _StreamingProtobufs__ControlResourceSet StreamingProtobufs__ControlResourceSet;
typedef struct _StreamingProtobufs__Interleaved StreamingProtobufs__Interleaved;
typedef struct _StreamingProtobufs__RegBundleSize StreamingProtobufs__RegBundleSize;
typedef struct _StreamingProtobufs__InterleaverSize StreamingProtobufs__InterleaverSize;
typedef struct _StreamingProtobufs__PrecoderGranularity StreamingProtobufs__PrecoderGranularity;
typedef struct _StreamingProtobufs__FirstPDCCHMonitoringOccasionOfP0 StreamingProtobufs__FirstPDCCHMonitoringOccasionOfP0;
typedef struct _StreamingProtobufs__SequenceOfInteger StreamingProtobufs__SequenceOfInteger;
typedef struct _StreamingProtobufs__PDSCHConfigCommon StreamingProtobufs__PDSCHConfigCommon;
typedef struct _StreamingProtobufs__PDSCHTimeDomainResourceAllocationList StreamingProtobufs__PDSCHTimeDomainResourceAllocationList;
typedef struct _StreamingProtobufs__PDSCHTimeDomainResourceAllocation StreamingProtobufs__PDSCHTimeDomainResourceAllocation;
typedef struct _StreamingProtobufs__MappingType StreamingProtobufs__MappingType;
typedef struct _StreamingProtobufs__UplinkConfigCommon StreamingProtobufs__UplinkConfigCommon;
typedef struct _StreamingProtobufs__FrequencyInfoUL StreamingProtobufs__FrequencyInfoUL;
typedef struct _StreamingProtobufs__BWPUplinkCommon StreamingProtobufs__BWPUplinkCommon;
typedef struct _StreamingProtobufs__BWPUplink StreamingProtobufs__BWPUplink;
typedef struct _StreamingProtobufs__RACHConfigCommon StreamingProtobufs__RACHConfigCommon;
typedef struct _StreamingProtobufs__RACHConfigGeneric StreamingProtobufs__RACHConfigGeneric;
typedef struct _StreamingProtobufs__Msg1FDM StreamingProtobufs__Msg1FDM;
typedef struct _StreamingProtobufs__PreambleTransMax StreamingProtobufs__PreambleTransMax;
typedef struct _StreamingProtobufs__PowerRampingStep StreamingProtobufs__PowerRampingStep;
typedef struct _StreamingProtobufs__RAResponseWindow StreamingProtobufs__RAResponseWindow;
typedef struct _StreamingProtobufs__Fraction StreamingProtobufs__Fraction;
typedef struct _StreamingProtobufs__OtherFraction StreamingProtobufs__OtherFraction;
typedef struct _StreamingProtobufs__GroupBconfigured StreamingProtobufs__GroupBconfigured;
typedef struct _StreamingProtobufs__RAMsg3SizeGroupA StreamingProtobufs__RAMsg3SizeGroupA;
typedef struct _StreamingProtobufs__MessagePowerOffsetGroupB StreamingProtobufs__MessagePowerOffsetGroupB;
typedef struct _StreamingProtobufs__RAContentionResolutionTimer StreamingProtobufs__RAContentionResolutionTimer;
typedef struct _StreamingProtobufs__RestrictedSetConfig StreamingProtobufs__RestrictedSetConfig;
typedef struct _StreamingProtobufs__PUSCHConfigCommon StreamingProtobufs__PUSCHConfigCommon;
typedef struct _StreamingProtobufs__PUSCHTimeDomainResourceAllocationList StreamingProtobufs__PUSCHTimeDomainResourceAllocationList;
typedef struct _StreamingProtobufs__PUSCHTimeDomainResourceAllocation StreamingProtobufs__PUSCHTimeDomainResourceAllocation;
typedef struct _StreamingProtobufs__PUCCHConfigCommon StreamingProtobufs__PUCCHConfigCommon;
typedef struct _StreamingProtobufs__PUCCHGroupHopping StreamingProtobufs__PUCCHGroupHopping;
typedef struct _StreamingProtobufs__NTimingAdvanceOffset StreamingProtobufs__NTimingAdvanceOffset;
typedef struct _StreamingProtobufs__SSBPeriodicityServingCell StreamingProtobufs__SSBPeriodicityServingCell;
typedef struct _StreamingProtobufs__DMRSTypeAPosition StreamingProtobufs__DMRSTypeAPosition;
typedef struct _StreamingProtobufs__RateMatchPatternLTECRS StreamingProtobufs__RateMatchPatternLTECRS;
typedef struct _StreamingProtobufs__CarrierBandwidthDL StreamingProtobufs__CarrierBandwidthDL;
typedef struct _StreamingProtobufs__EUTRAMBSFNSubframeConfigList StreamingProtobufs__EUTRAMBSFNSubframeConfigList;
typedef struct _StreamingProtobufs__EUTRAMBSFNSubframeConfig StreamingProtobufs__EUTRAMBSFNSubframeConfig;
typedef struct _StreamingProtobufs__RadioframeAllocationPeriod StreamingProtobufs__RadioframeAllocationPeriod;
typedef struct _StreamingProtobufs__SubframeAllocation StreamingProtobufs__SubframeAllocation;
typedef struct _StreamingProtobufs__NrofCRSPorts StreamingProtobufs__NrofCRSPorts;
typedef struct _StreamingProtobufs__VShift StreamingProtobufs__VShift;
typedef struct _StreamingProtobufs__RateMatchPattern StreamingProtobufs__RateMatchPattern;
typedef struct _StreamingProtobufs__Bitmaps StreamingProtobufs__Bitmaps;
typedef struct _StreamingProtobufs__Dummy StreamingProtobufs__Dummy;
typedef struct _StreamingProtobufs__TDDULDLConfigCommon StreamingProtobufs__TDDULDLConfigCommon;
typedef struct _StreamingProtobufs__TDDULDLPattern StreamingProtobufs__TDDULDLPattern;
typedef struct _StreamingProtobufs__DLULTransmissionPeriodicity StreamingProtobufs__DLULTransmissionPeriodicity;
typedef struct _StreamingProtobufs__DLULTransmissionPeriodicityV1530 StreamingProtobufs__DLULTransmissionPeriodicityV1530;
typedef struct _StreamingProtobufs__T304 StreamingProtobufs__T304;
typedef struct _StreamingProtobufs__RACHConfigDedicated StreamingProtobufs__RACHConfigDedicated;
typedef struct _StreamingProtobufs__CFRA StreamingProtobufs__CFRA;
typedef struct _StreamingProtobufs__Occasions StreamingProtobufs__Occasions;
typedef struct _StreamingProtobufs__SSB StreamingProtobufs__SSB;
typedef struct _StreamingProtobufs__CFRASSBResource StreamingProtobufs__CFRASSBResource;
typedef struct _StreamingProtobufs__CSIRS StreamingProtobufs__CSIRS;
typedef struct _StreamingProtobufs__CFRACSIRSResource StreamingProtobufs__CFRACSIRSResource;
typedef struct _StreamingProtobufs__RAPrioritization StreamingProtobufs__RAPrioritization;
typedef struct _StreamingProtobufs__PowerRampingStepHighPriority StreamingProtobufs__PowerRampingStepHighPriority;
typedef struct _StreamingProtobufs__ScalingFactorBI StreamingProtobufs__ScalingFactorBI;
typedef struct _StreamingProtobufs__SSBMTC StreamingProtobufs__SSBMTC;
typedef struct _StreamingProtobufs__Duration StreamingProtobufs__Duration;
typedef struct _StreamingProtobufs__SSBMTC2 StreamingProtobufs__SSBMTC2;
typedef struct _StreamingProtobufs__Periodicity StreamingProtobufs__Periodicity;
typedef struct _StreamingProtobufs__RLFTimersAndConstants StreamingProtobufs__RLFTimersAndConstants;
typedef struct _StreamingProtobufs__T310 StreamingProtobufs__T310;
typedef struct _StreamingProtobufs__N310 StreamingProtobufs__N310;
typedef struct _StreamingProtobufs__N311 StreamingProtobufs__N311;
typedef struct _StreamingProtobufs__T311V1530 StreamingProtobufs__T311V1530;
typedef struct _StreamingProtobufs__RlmInSyncOutOfSyncThreshold StreamingProtobufs__RlmInSyncOutOfSyncThreshold;
typedef struct _StreamingProtobufs__ServingCellConfig StreamingProtobufs__ServingCellConfig;
typedef struct _StreamingProtobufs__TDDULDLConfigDedicated StreamingProtobufs__TDDULDLConfigDedicated;
typedef struct _StreamingProtobufs__TDDULDLSlotConfig StreamingProtobufs__TDDULDLSlotConfig;
typedef struct _StreamingProtobufs__Explicit StreamingProtobufs__Explicit;
typedef struct _StreamingProtobufs__BWPDownlinkDedicated StreamingProtobufs__BWPDownlinkDedicated;
typedef struct _StreamingProtobufs__PDCCHConfig StreamingProtobufs__PDCCHConfig;
typedef struct _StreamingProtobufs__DownlinkPreemption StreamingProtobufs__DownlinkPreemption;
typedef struct _StreamingProtobufs__TimeFrequencySet StreamingProtobufs__TimeFrequencySet;
typedef struct _StreamingProtobufs__INTConfigurationPerServingCell StreamingProtobufs__INTConfigurationPerServingCell;
typedef struct _StreamingProtobufs__PUSCHTPCCommandConfig StreamingProtobufs__PUSCHTPCCommandConfig;
typedef struct _StreamingProtobufs__PUCCHTPCCommandConfig StreamingProtobufs__PUCCHTPCCommandConfig;
typedef struct _StreamingProtobufs__SRSTPCCommandConfig StreamingProtobufs__SRSTPCCommandConfig;
typedef struct _StreamingProtobufs__PDSCHConfig StreamingProtobufs__PDSCHConfig;
typedef struct _StreamingProtobufs__DMRSDownlinkConfig StreamingProtobufs__DMRSDownlinkConfig;
typedef struct _StreamingProtobufs__DMRSType StreamingProtobufs__DMRSType;
typedef struct _StreamingProtobufs__DMRSAdditionalPosition StreamingProtobufs__DMRSAdditionalPosition;
typedef struct _StreamingProtobufs__MaxLength StreamingProtobufs__MaxLength;
typedef struct _StreamingProtobufs__PTRSDownlinkConfig StreamingProtobufs__PTRSDownlinkConfig;
typedef struct _StreamingProtobufs__ResourceElementOffset StreamingProtobufs__ResourceElementOffset;
typedef struct _StreamingProtobufs__TCIState StreamingProtobufs__TCIState;
typedef struct _StreamingProtobufs__QCLInfo StreamingProtobufs__QCLInfo;
typedef struct _StreamingProtobufs__QCLType StreamingProtobufs__QCLType;
typedef struct _StreamingProtobufs__VRBToPRBInterleaver StreamingProtobufs__VRBToPRBInterleaver;
typedef struct _StreamingProtobufs__ResourceAllocation StreamingProtobufs__ResourceAllocation;
typedef struct _StreamingProtobufs__PDSCHAggregationFactor StreamingProtobufs__PDSCHAggregationFactor;
typedef struct _StreamingProtobufs__RateMatchPatternGroup StreamingProtobufs__RateMatchPatternGroup;
typedef struct _StreamingProtobufs__RateMatchPatternGroupItem StreamingProtobufs__RateMatchPatternGroupItem;
typedef struct _StreamingProtobufs__RBGSize StreamingProtobufs__RBGSize;
typedef struct _StreamingProtobufs__MCSTable StreamingProtobufs__MCSTable;
typedef struct _StreamingProtobufs__MaxNrofCodeWordsScheduledByDCI StreamingProtobufs__MaxNrofCodeWordsScheduledByDCI;
typedef struct _StreamingProtobufs__StaticBundling StreamingProtobufs__StaticBundling;
typedef struct _StreamingProtobufs__BundleSize StreamingProtobufs__BundleSize;
typedef struct _StreamingProtobufs__DynamicBundling StreamingProtobufs__DynamicBundling;
typedef struct _StreamingProtobufs__BundleSizeSet1 StreamingProtobufs__BundleSizeSet1;
typedef struct _StreamingProtobufs__BundleSizeSet2 StreamingProtobufs__BundleSizeSet2;
typedef struct _StreamingProtobufs__ZPCSIRSResource StreamingProtobufs__ZPCSIRSResource;
typedef struct _StreamingProtobufs__CSIRSResourceMapping StreamingProtobufs__CSIRSResourceMapping;
typedef struct _StreamingProtobufs__NrofPorts StreamingProtobufs__NrofPorts;
typedef struct _StreamingProtobufs__CDMType StreamingProtobufs__CDMType;
typedef struct _StreamingProtobufs__Dot5 StreamingProtobufs__Dot5;
typedef struct _StreamingProtobufs__CSIFrequencyOccupation StreamingProtobufs__CSIFrequencyOccupation;
typedef struct _StreamingProtobufs__CSIResourcePeriodicityAndOffset StreamingProtobufs__CSIResourcePeriodicityAndOffset;
typedef struct _StreamingProtobufs__ZPCSIRSResourceSet StreamingProtobufs__ZPCSIRSResourceSet;
typedef struct _StreamingProtobufs__SPSConfig StreamingProtobufs__SPSConfig;
typedef struct _StreamingProtobufs__SPSConfigPeriodicity StreamingProtobufs__SPSConfigPeriodicity;
typedef struct _StreamingProtobufs__SPSMCSTable StreamingProtobufs__SPSMCSTable;
typedef struct _StreamingProtobufs__RadioLinkMonitoringConfig StreamingProtobufs__RadioLinkMonitoringConfig;
typedef struct _StreamingProtobufs__RadioLinkMonitoringRS StreamingProtobufs__RadioLinkMonitoringRS;
typedef struct _StreamingProtobufs__Purpose StreamingProtobufs__Purpose;
typedef struct _StreamingProtobufs__BeamFailureInstanceMaxCount StreamingProtobufs__BeamFailureInstanceMaxCount;
typedef struct _StreamingProtobufs__BeamFailureDetectionTimer StreamingProtobufs__BeamFailureDetectionTimer;
typedef struct _StreamingProtobufs__BWPDownlink StreamingProtobufs__BWPDownlink;
typedef struct _StreamingProtobufs__BWPInactivityTimer StreamingProtobufs__BWPInactivityTimer;
typedef struct _StreamingProtobufs__UplinkConfig StreamingProtobufs__UplinkConfig;
typedef struct _StreamingProtobufs__BWPUplinkDedicated StreamingProtobufs__BWPUplinkDedicated;
typedef struct _StreamingProtobufs__PUCCHConfig StreamingProtobufs__PUCCHConfig;
typedef struct _StreamingProtobufs__PUCCHResourceSet StreamingProtobufs__PUCCHResourceSet;
typedef struct _StreamingProtobufs__PUCCHResource StreamingProtobufs__PUCCHResource;
typedef struct _StreamingProtobufs__PUCCHFormat0 StreamingProtobufs__PUCCHFormat0;
typedef struct _StreamingProtobufs__PUCCHFormat1 StreamingProtobufs__PUCCHFormat1;
typedef struct _StreamingProtobufs__PUCCHFormat2 StreamingProtobufs__PUCCHFormat2;
typedef struct _StreamingProtobufs__PUCCHFormat3 StreamingProtobufs__PUCCHFormat3;
typedef struct _StreamingProtobufs__PUCCHFormat4 StreamingProtobufs__PUCCHFormat4;
typedef struct _StreamingProtobufs__OCCLength StreamingProtobufs__OCCLength;
typedef struct _StreamingProtobufs__OCCIndex StreamingProtobufs__OCCIndex;
typedef struct _StreamingProtobufs__PUCCHFormatConfig StreamingProtobufs__PUCCHFormatConfig;
typedef struct _StreamingProtobufs__PUCCHMaxCodeRate StreamingProtobufs__PUCCHMaxCodeRate;
typedef struct _StreamingProtobufs__NrofSlots StreamingProtobufs__NrofSlots;
typedef struct _StreamingProtobufs__SchedulingRequestResourceConfig StreamingProtobufs__SchedulingRequestResourceConfig;
typedef struct _StreamingProtobufs__PUCCHSpatialRelationInfo StreamingProtobufs__PUCCHSpatialRelationInfo;
typedef struct _StreamingProtobufs__Srs StreamingProtobufs__Srs;
typedef struct _StreamingProtobufs__ClosedLoopIndex StreamingProtobufs__ClosedLoopIndex;
typedef struct _StreamingProtobufs__PUCCHPowerControl StreamingProtobufs__PUCCHPowerControl;
typedef struct _StreamingProtobufs__P0PUCCH StreamingProtobufs__P0PUCCH;
typedef struct _StreamingProtobufs__PUCCHPathlossReferenceRS StreamingProtobufs__PUCCHPathlossReferenceRS;
typedef struct _StreamingProtobufs__TwoPUCCHPCAdjustmentStates StreamingProtobufs__TwoPUCCHPCAdjustmentStates;
typedef struct _StreamingProtobufs__PUSCHServingCellConfig StreamingProtobufs__PUSCHServingCellConfig;
typedef struct _StreamingProtobufs__PUSCHCodeBlockGroupTransmission StreamingProtobufs__PUSCHCodeBlockGroupTransmission;
typedef struct _StreamingProtobufs__RateMatching StreamingProtobufs__RateMatching;
typedef struct _StreamingProtobufs__SRSCarrierSwitching StreamingProtobufs__SRSCarrierSwitching;
typedef struct _StreamingProtobufs__SRSSwitchFromCarrier StreamingProtobufs__SRSSwitchFromCarrier;
typedef struct _StreamingProtobufs__SRSTPCPDCCHConfigList StreamingProtobufs__SRSTPCPDCCHConfigList;
typedef struct _StreamingProtobufs__SRSTPCPDCCHConfig StreamingProtobufs__SRSTPCPDCCHConfig;
typedef struct _StreamingProtobufs__SRSCCSetIndex StreamingProtobufs__SRSCCSetIndex;
typedef struct _StreamingProtobufs__PUSCHConfig StreamingProtobufs__PUSCHConfig;
typedef struct _StreamingProtobufs__TxConfig StreamingProtobufs__TxConfig;
typedef struct _StreamingProtobufs__DMRSUplinkConfig StreamingProtobufs__DMRSUplinkConfig;
typedef struct _StreamingProtobufs__PTRSUplinkConfig StreamingProtobufs__PTRSUplinkConfig;
typedef struct _StreamingProtobufs__TransformPrecoderDisabled StreamingProtobufs__TransformPrecoderDisabled;
typedef struct _StreamingProtobufs__MaxNrofPorts StreamingProtobufs__MaxNrofPorts;
typedef struct _StreamingProtobufs__PTRSPower StreamingProtobufs__PTRSPower;
typedef struct _StreamingProtobufs__TransformPrecoderEnabled StreamingProtobufs__TransformPrecoderEnabled;
typedef struct _StreamingProtobufs__TimeDensityTransformPrecoding StreamingProtobufs__TimeDensityTransformPrecoding;
typedef struct _StreamingProtobufs__TransformPrecodingDisabled StreamingProtobufs__TransformPrecodingDisabled;
typedef struct _StreamingProtobufs__TransformPrecodingEnabled StreamingProtobufs__TransformPrecodingEnabled;
typedef struct _StreamingProtobufs__PUSCHPowerControl StreamingProtobufs__PUSCHPowerControl;
typedef struct _StreamingProtobufs__Alpha StreamingProtobufs__Alpha;
typedef struct _StreamingProtobufs__P0PUSCHAlphaSet StreamingProtobufs__P0PUSCHAlphaSet;
typedef struct _StreamingProtobufs__PUSCHPathlossReferenceRS StreamingProtobufs__PUSCHPathlossReferenceRS;
typedef struct _StreamingProtobufs__TwoPUSCHPCAdjustmentStates StreamingProtobufs__TwoPUSCHPCAdjustmentStates;
typedef struct _StreamingProtobufs__SRIPUSCHPowerControl StreamingProtobufs__SRIPUSCHPowerControl;
typedef struct _StreamingProtobufs__FrequencyHopping StreamingProtobufs__FrequencyHopping;
typedef struct _StreamingProtobufs__PUSCHAggregationFactor StreamingProtobufs__PUSCHAggregationFactor;
typedef struct _StreamingProtobufs__CodebookSubset StreamingProtobufs__CodebookSubset;
typedef struct _StreamingProtobufs__RBGSize2 StreamingProtobufs__RBGSize2;
typedef struct _StreamingProtobufs__UCIOnPUSCH StreamingProtobufs__UCIOnPUSCH;
typedef struct _StreamingProtobufs__BetaOffsetsList StreamingProtobufs__BetaOffsetsList;
typedef struct _StreamingProtobufs__Scaling StreamingProtobufs__Scaling;
typedef struct _StreamingProtobufs__ConfiguredGrantConfig StreamingProtobufs__ConfiguredGrantConfig;
typedef struct _StreamingProtobufs__CGUCIOnPUSCH StreamingProtobufs__CGUCIOnPUSCH;
typedef struct _StreamingProtobufs__BetaOffsets StreamingProtobufs__BetaOffsets;
typedef struct _StreamingProtobufs__PowerControlLoopToUse StreamingProtobufs__PowerControlLoopToUse;
typedef struct _StreamingProtobufs__RepK StreamingProtobufs__RepK;
typedef struct _StreamingProtobufs__RepKRV StreamingProtobufs__RepKRV;
typedef struct _StreamingProtobufs__GrantPeriodicity StreamingProtobufs__GrantPeriodicity;
typedef struct _StreamingProtobufs__RRCConfiguredUplinkGrant StreamingProtobufs__RRCConfiguredUplinkGrant;
typedef struct _StreamingProtobufs__SRSConfig StreamingProtobufs__SRSConfig;
typedef struct _StreamingProtobufs__SRSResourceSet StreamingProtobufs__SRSResourceSet;
typedef struct _StreamingProtobufs__SRSResourceSetTypeAperiodic StreamingProtobufs__SRSResourceSetTypeAperiodic;
typedef struct _StreamingProtobufs__SRSResourceSetTypeSemiPersistent StreamingProtobufs__SRSResourceSetTypeSemiPersistent;
typedef struct _StreamingProtobufs__SRSResourceSetTypePeriodic StreamingProtobufs__SRSResourceSetTypePeriodic;
typedef struct _StreamingProtobufs__SRSResourceSetUsage StreamingProtobufs__SRSResourceSetUsage;
typedef struct _StreamingProtobufs__SRSPowerControlAdjustmentStates StreamingProtobufs__SRSPowerControlAdjustmentStates;
typedef struct _StreamingProtobufs__SRSResource StreamingProtobufs__SRSResource;
typedef struct _StreamingProtobufs__NrofSRSPorts StreamingProtobufs__NrofSRSPorts;
typedef struct _StreamingProtobufs__PTRSPortIndex StreamingProtobufs__PTRSPortIndex;
typedef struct _StreamingProtobufs__N2 StreamingProtobufs__N2;
typedef struct _StreamingProtobufs__N4 StreamingProtobufs__N4;
typedef struct _StreamingProtobufs__ResourceMapping StreamingProtobufs__ResourceMapping;
typedef struct _StreamingProtobufs__NrofSymbols StreamingProtobufs__NrofSymbols;
typedef struct _StreamingProtobufs__RepetitionFactor StreamingProtobufs__RepetitionFactor;
typedef struct _StreamingProtobufs__FreqHopping StreamingProtobufs__FreqHopping;
typedef struct _StreamingProtobufs__GroupOrSequenceHopping StreamingProtobufs__GroupOrSequenceHopping;
typedef struct _StreamingProtobufs__SRSResourceTypeAperiodic StreamingProtobufs__SRSResourceTypeAperiodic;
typedef struct _StreamingProtobufs__SRSResourceTypeSemiPersistent StreamingProtobufs__SRSResourceTypeSemiPersistent;
typedef struct _StreamingProtobufs__SRSPeriodicityAndOffset StreamingProtobufs__SRSPeriodicityAndOffset;
typedef struct _StreamingProtobufs__SRSResourceTypePeriodic StreamingProtobufs__SRSResourceTypePeriodic;
typedef struct _StreamingProtobufs__SRSSpatialRelationInfo StreamingProtobufs__SRSSpatialRelationInfo;
typedef struct _StreamingProtobufs__BeamFailureRecoveryConfig StreamingProtobufs__BeamFailureRecoveryConfig;
typedef struct _StreamingProtobufs__PRACHResourceDedicatedBFR StreamingProtobufs__PRACHResourceDedicatedBFR;
typedef struct _StreamingProtobufs__BFRSSBResource StreamingProtobufs__BFRSSBResource;
typedef struct _StreamingProtobufs__BFRCSIRSResource StreamingProtobufs__BFRCSIRSResource;
typedef struct _StreamingProtobufs__SSBPerRACHOccasion StreamingProtobufs__SSBPerRACHOccasion;
typedef struct _StreamingProtobufs__BeamFailureRecoveryTimer StreamingProtobufs__BeamFailureRecoveryTimer;
typedef struct _StreamingProtobufs__PDCCHServingCellConfig StreamingProtobufs__PDCCHServingCellConfig;
typedef struct _StreamingProtobufs__SlotFormatIndicator StreamingProtobufs__SlotFormatIndicator;
typedef struct _StreamingProtobufs__SlotFormatCombinationsPerCell StreamingProtobufs__SlotFormatCombinationsPerCell;
typedef struct _StreamingProtobufs__SlotFormatCombination StreamingProtobufs__SlotFormatCombination;
typedef struct _StreamingProtobufs__PDSCHServingCellConfig StreamingProtobufs__PDSCHServingCellConfig;
typedef struct _StreamingProtobufs__PDSCHCodeBlockGroupTransmission StreamingProtobufs__PDSCHCodeBlockGroupTransmission;
typedef struct _StreamingProtobufs__MaxCodeBlockGroupsPerTransportBlock StreamingProtobufs__MaxCodeBlockGroupsPerTransportBlock;
typedef struct _StreamingProtobufs__XOverhead StreamingProtobufs__XOverhead;
typedef struct _StreamingProtobufs__NrofHARQProcessesForPDSCH StreamingProtobufs__NrofHARQProcessesForPDSCH;
typedef struct _StreamingProtobufs__CSIMeasConfig StreamingProtobufs__CSIMeasConfig;
typedef struct _StreamingProtobufs__NZPCSIRSResource StreamingProtobufs__NZPCSIRSResource;
typedef struct _StreamingProtobufs__PowerControlOffsetSS StreamingProtobufs__PowerControlOffsetSS;
typedef struct _StreamingProtobufs__NZPCSIRSResourceSet StreamingProtobufs__NZPCSIRSResourceSet;
typedef struct _StreamingProtobufs__CSIIMResource StreamingProtobufs__CSIIMResource;
typedef struct _StreamingProtobufs__Pattern0 StreamingProtobufs__Pattern0;
typedef struct _StreamingProtobufs__SubcarrierLocationP0 StreamingProtobufs__SubcarrierLocationP0;
typedef struct _StreamingProtobufs__Pattern1 StreamingProtobufs__Pattern1;
typedef struct _StreamingProtobufs__SubcarrierLocationP1 StreamingProtobufs__SubcarrierLocationP1;
typedef struct _StreamingProtobufs__CSIIMResourceSet StreamingProtobufs__CSIIMResourceSet;
typedef struct _StreamingProtobufs__CSISSBResourceSet StreamingProtobufs__CSISSBResourceSet;
typedef struct _StreamingProtobufs__CSIResourceConfig StreamingProtobufs__CSIResourceConfig;
typedef struct _StreamingProtobufs__NZPCSIRSSSB StreamingProtobufs__NZPCSIRSSSB;
typedef struct _StreamingProtobufs__CSIIMResourceSetList StreamingProtobufs__CSIIMResourceSetList;
typedef struct _StreamingProtobufs__ResourceType StreamingProtobufs__ResourceType;
typedef struct _StreamingProtobufs__CSIReportConfig StreamingProtobufs__CSIReportConfig;
typedef struct _StreamingProtobufs__CSIReportConfigTypePeriodic StreamingProtobufs__CSIReportConfigTypePeriodic;
typedef struct _StreamingProtobufs__CSIReportPeriodicityAndOffset StreamingProtobufs__CSIReportPeriodicityAndOffset;
typedef struct _StreamingProtobufs__PUCCHCSIResource StreamingProtobufs__PUCCHCSIResource;
typedef struct _StreamingProtobufs__CSIReportConfigTypeSemiPersistentOnPUCCH StreamingProtobufs__CSIReportConfigTypeSemiPersistentOnPUCCH;
typedef struct _StreamingProtobufs__CSIReportConfigTypeSemiPersistentOnPUSCH StreamingProtobufs__CSIReportConfigTypeSemiPersistentOnPUSCH;
typedef struct _StreamingProtobufs__ReportSlotConfig StreamingProtobufs__ReportSlotConfig;
typedef struct _StreamingProtobufs__CSIReportConfigTypeAperiodic StreamingProtobufs__CSIReportConfigTypeAperiodic;
typedef struct _StreamingProtobufs__CRIRII1CQI StreamingProtobufs__CRIRII1CQI;
typedef struct _StreamingProtobufs__ReportFreqConfiguration StreamingProtobufs__ReportFreqConfiguration;
typedef struct _StreamingProtobufs__CQIFormatIndicator StreamingProtobufs__CQIFormatIndicator;
typedef struct _StreamingProtobufs__PMIFormatIndicator StreamingProtobufs__PMIFormatIndicator;
typedef struct _StreamingProtobufs__CodebookConfig StreamingProtobufs__CodebookConfig;
typedef struct _StreamingProtobufs__CodebookTypeType1 StreamingProtobufs__CodebookTypeType1;
typedef struct _StreamingProtobufs__CodebookSubTypeSinglePanel StreamingProtobufs__CodebookSubTypeSinglePanel;
typedef struct _StreamingProtobufs__CodebookNrOfAntennaPortsTwo StreamingProtobufs__CodebookNrOfAntennaPortsTwo;
typedef struct _StreamingProtobufs__CodebookNrOfAntennaPortsMoreThanTwo StreamingProtobufs__CodebookNrOfAntennaPortsMoreThanTwo;
typedef struct _StreamingProtobufs__CodebookSubTypeMultiPanel StreamingProtobufs__CodebookSubTypeMultiPanel;
typedef struct _StreamingProtobufs__CodebookTypeType2 StreamingProtobufs__CodebookTypeType2;
typedef struct _StreamingProtobufs__CodebookSubTypeTypeII StreamingProtobufs__CodebookSubTypeTypeII;
typedef struct _StreamingProtobufs__CodebookSubTypeTypeIIPortSelection StreamingProtobufs__CodebookSubTypeTypeIIPortSelection;
typedef struct _StreamingProtobufs__PhaseAlphabetSize StreamingProtobufs__PhaseAlphabetSize;
typedef struct _StreamingProtobufs__NumberOfBeams StreamingProtobufs__NumberOfBeams;
typedef struct _StreamingProtobufs__PortSelectionSamplingSize StreamingProtobufs__PortSelectionSamplingSize;
typedef struct _StreamingProtobufs__CSIReportConfigDummy StreamingProtobufs__CSIReportConfigDummy;
typedef struct _StreamingProtobufs__GroupBasedBeamReportingDisabled StreamingProtobufs__GroupBasedBeamReportingDisabled;
typedef struct _StreamingProtobufs__NrofReportedRS StreamingProtobufs__NrofReportedRS;
typedef struct _StreamingProtobufs__CQITable StreamingProtobufs__CQITable;
typedef struct _StreamingProtobufs__SubbandSize StreamingProtobufs__SubbandSize;
typedef struct _StreamingProtobufs__PortIndexFor8Ranks StreamingProtobufs__PortIndexFor8Ranks;
typedef struct _StreamingProtobufs__PortIndex8 StreamingProtobufs__PortIndex8;
typedef struct _StreamingProtobufs__PortIndex4 StreamingProtobufs__PortIndex4;
typedef struct _StreamingProtobufs__PortIndex2 StreamingProtobufs__PortIndex2;
typedef struct _StreamingProtobufs__SemiPersistentOnPUSCHV1530 StreamingProtobufs__SemiPersistentOnPUSCHV1530;
typedef struct _StreamingProtobufs__CSIAperiodicTriggerStateList StreamingProtobufs__CSIAperiodicTriggerStateList;
typedef struct _StreamingProtobufs__CSIAperiodicTriggerState StreamingProtobufs__CSIAperiodicTriggerState;
typedef struct _StreamingProtobufs__CSIAssociatedReportConfigInfo StreamingProtobufs__CSIAssociatedReportConfigInfo;
typedef struct _StreamingProtobufs__NZPCSIRS StreamingProtobufs__NZPCSIRS;
typedef struct _StreamingProtobufs__CSISemiPersistentOnPUSCHTriggerStateList StreamingProtobufs__CSISemiPersistentOnPUSCHTriggerStateList;
typedef struct _StreamingProtobufs__CSISemiPersistentOnPUSCHTriggerState StreamingProtobufs__CSISemiPersistentOnPUSCHTriggerState;
typedef struct _StreamingProtobufs__SCellDeactivationTimer StreamingProtobufs__SCellDeactivationTimer;
typedef struct _StreamingProtobufs__CrossCarrierSchedulingConfig StreamingProtobufs__CrossCarrierSchedulingConfig;
typedef struct _StreamingProtobufs__OwnCrossCarrierSchedulingConfig StreamingProtobufs__OwnCrossCarrierSchedulingConfig;
typedef struct _StreamingProtobufs__OtherCrossCarrierSchedulingConfig StreamingProtobufs__OtherCrossCarrierSchedulingConfig;
typedef struct _StreamingProtobufs__PathlossReferenceLinking StreamingProtobufs__PathlossReferenceLinking;
typedef struct _StreamingProtobufs__MeasConfig StreamingProtobufs__MeasConfig;
typedef struct _StreamingProtobufs__MeasObjectToRemoveList StreamingProtobufs__MeasObjectToRemoveList;
typedef struct _StreamingProtobufs__MeasObjectToAddModList StreamingProtobufs__MeasObjectToAddModList;
typedef struct _StreamingProtobufs__ReportConfigToRemoveList StreamingProtobufs__ReportConfigToRemoveList;
typedef struct _StreamingProtobufs__ReportConfigToAddModList StreamingProtobufs__ReportConfigToAddModList;
typedef struct _StreamingProtobufs__MeasIdToRemoveList StreamingProtobufs__MeasIdToRemoveList;
typedef struct _StreamingProtobufs__MeasIdToAddModList StreamingProtobufs__MeasIdToAddModList;
typedef struct _StreamingProtobufs__MeasObjectToAddMod StreamingProtobufs__MeasObjectToAddMod;
typedef struct _StreamingProtobufs__MeasObjectNR StreamingProtobufs__MeasObjectNR;
typedef struct _StreamingProtobufs__ReferenceSignalConfig StreamingProtobufs__ReferenceSignalConfig;
typedef struct _StreamingProtobufs__SSBConfigMobility StreamingProtobufs__SSBConfigMobility;
typedef struct _StreamingProtobufs__SSBToMeasure StreamingProtobufs__SSBToMeasure;
typedef struct _StreamingProtobufs__SSRSSIMeasurement StreamingProtobufs__SSRSSIMeasurement;
typedef struct _StreamingProtobufs__CSIRSResourceConfigMobility StreamingProtobufs__CSIRSResourceConfigMobility;
typedef struct _StreamingProtobufs__CSIRSCellMobility StreamingProtobufs__CSIRSCellMobility;
typedef struct _StreamingProtobufs__CSIRSMeasurementBW StreamingProtobufs__CSIRSMeasurementBW;
typedef struct _StreamingProtobufs__Density StreamingProtobufs__Density;
typedef struct _StreamingProtobufs__CSIRSResourceMobility StreamingProtobufs__CSIRSResourceMobility;
typedef struct _StreamingProtobufs__AssociatedSSB StreamingProtobufs__AssociatedSSB;
typedef struct _StreamingProtobufs__ThresholdNR StreamingProtobufs__ThresholdNR;
typedef struct _StreamingProtobufs__QOffsetRangeList StreamingProtobufs__QOffsetRangeList;
typedef struct _StreamingProtobufs__QOffsetRange StreamingProtobufs__QOffsetRange;
typedef struct _StreamingProtobufs__CellsToAddModList StreamingProtobufs__CellsToAddModList;
typedef struct _StreamingProtobufs__CellsToAddMod StreamingProtobufs__CellsToAddMod;
typedef struct _StreamingProtobufs__PCIList StreamingProtobufs__PCIList;
typedef struct _StreamingProtobufs__PCIRangeIndexList StreamingProtobufs__PCIRangeIndexList;
typedef struct _StreamingProtobufs__PCIRangeElement StreamingProtobufs__PCIRangeElement;
typedef struct _StreamingProtobufs__PCIRange StreamingProtobufs__PCIRange;
typedef struct _StreamingProtobufs__Range StreamingProtobufs__Range;
typedef struct _StreamingProtobufs__MeasCycleSCellV1530 StreamingProtobufs__MeasCycleSCellV1530;
typedef struct _StreamingProtobufs__MeasObjectEUTRA StreamingProtobufs__MeasObjectEUTRA;
typedef struct _StreamingProtobufs__EUTRAAllowedMeasBandwidth StreamingProtobufs__EUTRAAllowedMeasBandwidth;
typedef struct _StreamingProtobufs__EUTRACellIndexList StreamingProtobufs__EUTRACellIndexList;
typedef struct _StreamingProtobufs__EUTRACell StreamingProtobufs__EUTRACell;
typedef struct _StreamingProtobufs__EUTRAQOffsetRange StreamingProtobufs__EUTRAQOffsetRange;
typedef struct _StreamingProtobufs__EUTRABlackCell StreamingProtobufs__EUTRABlackCell;
typedef struct _StreamingProtobufs__EUTRAPhysCellIdRange StreamingProtobufs__EUTRAPhysCellIdRange;
typedef struct _StreamingProtobufs__EUTRARange StreamingProtobufs__EUTRARange;
typedef struct _StreamingProtobufs__ReportConfigToAddMod StreamingProtobufs__ReportConfigToAddMod;
typedef struct _StreamingProtobufs__ReportConfigNR StreamingProtobufs__ReportConfigNR;
typedef struct _StreamingProtobufs__PeriodicalReportConfig StreamingProtobufs__PeriodicalReportConfig;
typedef struct _StreamingProtobufs__NRRSType StreamingProtobufs__NRRSType;
typedef struct _StreamingProtobufs__NRFreqInfo StreamingProtobufs__NRFreqInfo;
typedef struct _StreamingProtobufs__ReportInterval StreamingProtobufs__ReportInterval;
typedef struct _StreamingProtobufs__ReportAmount StreamingProtobufs__ReportAmount;
typedef struct _StreamingProtobufs__MeasReportQuantity StreamingProtobufs__MeasReportQuantity;
typedef struct _StreamingProtobufs__EventTriggerConfig StreamingProtobufs__EventTriggerConfig;
typedef struct _StreamingProtobufs__EventA1 StreamingProtobufs__EventA1;
typedef struct _StreamingProtobufs__EventA2 StreamingProtobufs__EventA2;
typedef struct _StreamingProtobufs__EventA3 StreamingProtobufs__EventA3;
typedef struct _StreamingProtobufs__EventA4 StreamingProtobufs__EventA4;
typedef struct _StreamingProtobufs__EventA5 StreamingProtobufs__EventA5;
typedef struct _StreamingProtobufs__EventA6 StreamingProtobufs__EventA6;
typedef struct _StreamingProtobufs__MeasTriggerQuantity StreamingProtobufs__MeasTriggerQuantity;
typedef struct _StreamingProtobufs__TimeToTrigger StreamingProtobufs__TimeToTrigger;
typedef struct _StreamingProtobufs__MeasTriggerQuantityOffset StreamingProtobufs__MeasTriggerQuantityOffset;
typedef struct _StreamingProtobufs__ReportAddNeighMeas StreamingProtobufs__ReportAddNeighMeas;
typedef struct _StreamingProtobufs__ReportCGI StreamingProtobufs__ReportCGI;
typedef struct _StreamingProtobufs__ReportConfigInterRAT StreamingProtobufs__ReportConfigInterRAT;
typedef struct _StreamingProtobufs__PeriodicalReportConfigInterRAT StreamingProtobufs__PeriodicalReportConfigInterRAT;
typedef struct _StreamingProtobufs__EventTriggerConfigInterRAT StreamingProtobufs__EventTriggerConfigInterRAT;
typedef struct _StreamingProtobufs__EventB1 StreamingProtobufs__EventB1;
typedef struct _StreamingProtobufs__EventB2 StreamingProtobufs__EventB2;
typedef struct _StreamingProtobufs__MeasTriggerQuantityEUTRA StreamingProtobufs__MeasTriggerQuantityEUTRA;
typedef struct _StreamingProtobufs__ReportCGIEUTRA StreamingProtobufs__ReportCGIEUTRA;
typedef struct _StreamingProtobufs__MeasIdToAddMod StreamingProtobufs__MeasIdToAddMod;
typedef struct _StreamingProtobufs__QuantityConfig StreamingProtobufs__QuantityConfig;
typedef struct _StreamingProtobufs__QuantityConfigNR StreamingProtobufs__QuantityConfigNR;
typedef struct _StreamingProtobufs__QuantityConfigRS StreamingProtobufs__QuantityConfigRS;
typedef struct _StreamingProtobufs__FilterConfig StreamingProtobufs__FilterConfig;
typedef struct _StreamingProtobufs__FilterCoefficient StreamingProtobufs__FilterCoefficient;
typedef struct _StreamingProtobufs__MeasGapConfig StreamingProtobufs__MeasGapConfig;
typedef struct _StreamingProtobufs__GapConfig StreamingProtobufs__GapConfig;
typedef struct _StreamingProtobufs__MGL StreamingProtobufs__MGL;
typedef struct _StreamingProtobufs__MGRP StreamingProtobufs__MGRP;
typedef struct _StreamingProtobufs__MGTA StreamingProtobufs__MGTA;
typedef struct _StreamingProtobufs__MeasGapSharingConfig StreamingProtobufs__MeasGapSharingConfig;
typedef struct _StreamingProtobufs__MeasGapSharingScheme StreamingProtobufs__MeasGapSharingScheme;
typedef struct _StreamingProtobufs__OtherConfig StreamingProtobufs__OtherConfig;
typedef struct _StreamingProtobufs__DelayBudgetReportingProhibitTimer StreamingProtobufs__DelayBudgetReportingProhibitTimer;
typedef struct _StreamingProtobufs__OtherConfigV1540 StreamingProtobufs__OtherConfigV1540;
typedef struct _StreamingProtobufs__OverheatingAssistanceConfig StreamingProtobufs__OverheatingAssistanceConfig;
typedef struct _StreamingProtobufs__SCellConfig StreamingProtobufs__SCellConfig;
typedef struct _StreamingProtobufs__SearchSpace StreamingProtobufs__SearchSpace;
typedef struct _StreamingProtobufs__NrofCandidates StreamingProtobufs__NrofCandidates;
typedef struct _StreamingProtobufs__AggregationLevel StreamingProtobufs__AggregationLevel;
typedef struct _StreamingProtobufs__Common StreamingProtobufs__Common;
typedef struct _StreamingProtobufs__DCIFormat00AndFormat10 StreamingProtobufs__DCIFormat00AndFormat10;
typedef struct _StreamingProtobufs__DCIFormat20 StreamingProtobufs__DCIFormat20;
typedef struct _StreamingProtobufs__NrofCandidatesSFI StreamingProtobufs__NrofCandidatesSFI;
typedef struct _StreamingProtobufs__AggregationLevelSFI StreamingProtobufs__AggregationLevelSFI;
typedef struct _StreamingProtobufs__DCIFormat21 StreamingProtobufs__DCIFormat21;
typedef struct _StreamingProtobufs__DCIFormat22 StreamingProtobufs__DCIFormat22;
typedef struct _StreamingProtobufs__DCIFormat23 StreamingProtobufs__DCIFormat23;
typedef struct _StreamingProtobufs__Dummy1 StreamingProtobufs__Dummy1;
typedef struct _StreamingProtobufs__Dummy2 StreamingProtobufs__Dummy2;
typedef struct _StreamingProtobufs__UESpecific StreamingProtobufs__UESpecific;
typedef struct _StreamingProtobufs__DCIFormats StreamingProtobufs__DCIFormats;
typedef struct _StreamingProtobufs__MeasResultCellListSFTD StreamingProtobufs__MeasResultCellListSFTD;
typedef struct _StreamingProtobufs__MeasResultCellSFTD StreamingProtobufs__MeasResultCellSFTD;
typedef struct _StreamingProtobufs__MeasResultList2NR StreamingProtobufs__MeasResultList2NR;
typedef struct _StreamingProtobufs__MeasResult2NR StreamingProtobufs__MeasResult2NR;
typedef struct _StreamingProtobufs__MeasQuantityResults StreamingProtobufs__MeasQuantityResults;
typedef struct _StreamingProtobufs__ResultsPerSSBIndex StreamingProtobufs__ResultsPerSSBIndex;
typedef struct _StreamingProtobufs__ResultsPerCSIRSIndex StreamingProtobufs__ResultsPerCSIRSIndex;
typedef struct _StreamingProtobufs__MeasQuantityResultsEUTRA StreamingProtobufs__MeasQuantityResultsEUTRA;
typedef struct _StreamingProtobufs__CellResults StreamingProtobufs__CellResults;
typedef struct _StreamingProtobufs__ResultsPerCSIRSIndexList StreamingProtobufs__ResultsPerCSIRSIndexList;
typedef struct _StreamingProtobufs__ResultsPerSSBIndexList StreamingProtobufs__ResultsPerSSBIndexList;
typedef struct _StreamingProtobufs__RsIndexResults StreamingProtobufs__RsIndexResults;
typedef struct _StreamingProtobufs__MeasResult StreamingProtobufs__MeasResult;
typedef struct _StreamingProtobufs__PLMNIdentity StreamingProtobufs__PLMNIdentity;
typedef struct _StreamingProtobufs__MNC StreamingProtobufs__MNC;
typedef struct _StreamingProtobufs__MCC StreamingProtobufs__MCC;
typedef struct _StreamingProtobufs__PLMNIdentityEUTRA5GC StreamingProtobufs__PLMNIdentityEUTRA5GC;
typedef struct _StreamingProtobufs__PLMNIdentityListEUTRA5GC StreamingProtobufs__PLMNIdentityListEUTRA5GC;
typedef struct _StreamingProtobufs__CellAccessRelatedInfoEUTRA5GC StreamingProtobufs__CellAccessRelatedInfoEUTRA5GC;
typedef struct _StreamingProtobufs__PLMNIdentityListEUTRAEPC StreamingProtobufs__PLMNIdentityListEUTRAEPC;
typedef struct _StreamingProtobufs__CellAccessRelatedInfoEUTRAEPC StreamingProtobufs__CellAccessRelatedInfoEUTRAEPC;
typedef struct _StreamingProtobufs__CGIInfoEPC StreamingProtobufs__CGIInfoEPC;
typedef struct _StreamingProtobufs__PLMNIdentityInfo StreamingProtobufs__PLMNIdentityInfo;
typedef struct _StreamingProtobufs__PDCCHConfigSIB1 StreamingProtobufs__PDCCHConfigSIB1;
typedef struct _StreamingProtobufs__NoSIB1 StreamingProtobufs__NoSIB1;
typedef struct _StreamingProtobufs__PLMNIdentityInfoList StreamingProtobufs__PLMNIdentityInfoList;
typedef struct _StreamingProtobufs__MultiFrequencyBandListNR StreamingProtobufs__MultiFrequencyBandListNR;
typedef struct _StreamingProtobufs__CGIInfo StreamingProtobufs__CGIInfo;
typedef struct _StreamingProtobufs__MultiBandInfoListEUTRA StreamingProtobufs__MultiBandInfoListEUTRA;
typedef struct _StreamingProtobufs__EUTRACGIInfo StreamingProtobufs__EUTRACGIInfo;
typedef struct _StreamingProtobufs__MeasResultNR StreamingProtobufs__MeasResultNR;
typedef struct _StreamingProtobufs__MeasResultEUTRA StreamingProtobufs__MeasResultEUTRA;
typedef struct _StreamingProtobufs__MeasResultServMO StreamingProtobufs__MeasResultServMO;
typedef struct _StreamingProtobufs__MeasResultServMOList StreamingProtobufs__MeasResultServMOList;
typedef struct _StreamingProtobufs__MeasResultListNR StreamingProtobufs__MeasResultListNR;
typedef struct _StreamingProtobufs__MeasResultListEUTRA StreamingProtobufs__MeasResultListEUTRA;
typedef struct _StreamingProtobufs__MeasResults StreamingProtobufs__MeasResults;
typedef struct _StreamingProtobufs__DRXInfo StreamingProtobufs__DRXInfo;
typedef struct _StreamingProtobufs__RadioBearerConfig StreamingProtobufs__RadioBearerConfig;
typedef struct _StreamingProtobufs__SRBToAddModList StreamingProtobufs__SRBToAddModList;
typedef struct _StreamingProtobufs__SRBToAddMod StreamingProtobufs__SRBToAddMod;
typedef struct _StreamingProtobufs__PDCPConfig StreamingProtobufs__PDCPConfig;
typedef struct _StreamingProtobufs__DRB StreamingProtobufs__DRB;
typedef struct _StreamingProtobufs__DiscardTimer StreamingProtobufs__DiscardTimer;
typedef struct _StreamingProtobufs__PDCPSNSize StreamingProtobufs__PDCPSNSize;
typedef struct _StreamingProtobufs__Rohc StreamingProtobufs__Rohc;
typedef struct _StreamingProtobufs__RohcProfiles StreamingProtobufs__RohcProfiles;
typedef struct _StreamingProtobufs__UplinkOnlyROHC StreamingProtobufs__UplinkOnlyROHC;
typedef struct _StreamingProtobufs__UplinkOnlyROHCProfiles StreamingProtobufs__UplinkOnlyROHCProfiles;
typedef struct _StreamingProtobufs__MoreThanOneRLC StreamingProtobufs__MoreThanOneRLC;
typedef struct _StreamingProtobufs__PrimaryPath StreamingProtobufs__PrimaryPath;
typedef struct _StreamingProtobufs__ULDataSplitThreshold StreamingProtobufs__ULDataSplitThreshold;
typedef struct _StreamingProtobufs__TReordering StreamingProtobufs__TReordering;
typedef struct _StreamingProtobufs__DRBToAddModList StreamingProtobufs__DRBToAddModList;
typedef struct _StreamingProtobufs__DRBToAddMod StreamingProtobufs__DRBToAddMod;
typedef struct _StreamingProtobufs__DRBToReleaseList StreamingProtobufs__DRBToReleaseList;
typedef struct _StreamingProtobufs__SDAPConfig StreamingProtobufs__SDAPConfig;
typedef struct _StreamingProtobufs__SDAPHeader StreamingProtobufs__SDAPHeader;
typedef struct _StreamingProtobufs__SecurityConfig StreamingProtobufs__SecurityConfig;
typedef struct _StreamingProtobufs__SecurityAlgorithmConfig StreamingProtobufs__SecurityAlgorithmConfig;
typedef struct _StreamingProtobufs__CipheringAlgorithm StreamingProtobufs__CipheringAlgorithm;
typedef struct _StreamingProtobufs__IntegrityProtAlgorithm StreamingProtobufs__IntegrityProtAlgorithm;
typedef struct _StreamingProtobufs__KeyToUse StreamingProtobufs__KeyToUse;
typedef struct _StreamingProtobufs__UplinkTxDirectCurrentList StreamingProtobufs__UplinkTxDirectCurrentList;
typedef struct _StreamingProtobufs__UplinkTxDirectCurrentCell StreamingProtobufs__UplinkTxDirectCurrentCell;
typedef struct _StreamingProtobufs__UplinkTxDirectCurrentBWP StreamingProtobufs__UplinkTxDirectCurrentBWP;
typedef struct _StreamingProtobufs__CellAccessRelatedInfo StreamingProtobufs__CellAccessRelatedInfo;
typedef struct _StreamingProtobufs__ConnEstFailureControl StreamingProtobufs__ConnEstFailureControl;
typedef struct _StreamingProtobufs__ConnEstFailCount StreamingProtobufs__ConnEstFailCount;
typedef struct _StreamingProtobufs__ConnEstFailOffsetValidity StreamingProtobufs__ConnEstFailOffsetValidity;
typedef struct _StreamingProtobufs__SISchedulingInfo StreamingProtobufs__SISchedulingInfo;
typedef struct _StreamingProtobufs__SIWindowLength StreamingProtobufs__SIWindowLength;
typedef struct _StreamingProtobufs__SchedulingInfo StreamingProtobufs__SchedulingInfo;
typedef struct _StreamingProtobufs__SIBMapping StreamingProtobufs__SIBMapping;
typedef struct _StreamingProtobufs__SIBroadcastStatus StreamingProtobufs__SIBroadcastStatus;
typedef struct _StreamingProtobufs__SIPeriodicity StreamingProtobufs__SIPeriodicity;
typedef struct _StreamingProtobufs__SIBTypeInfo StreamingProtobufs__SIBTypeInfo;
typedef struct _StreamingProtobufs__SIBTypeInfoType StreamingProtobufs__SIBTypeInfoType;
typedef struct _StreamingProtobufs__SIRequestConfig StreamingProtobufs__SIRequestConfig;
typedef struct _StreamingProtobufs__SIRequestPeriod StreamingProtobufs__SIRequestPeriod;
typedef struct _StreamingProtobufs__RACHOccasionsSI StreamingProtobufs__RACHOccasionsSI;
typedef struct _StreamingProtobufs__SIRequestResources StreamingProtobufs__SIRequestResources;
typedef struct _StreamingProtobufs__ServingCellConfigCommonSIB StreamingProtobufs__ServingCellConfigCommonSIB;
typedef struct _StreamingProtobufs__DownlinkConfigCommonSIB StreamingProtobufs__DownlinkConfigCommonSIB;
typedef struct _StreamingProtobufs__FrequencyInfoDLSIB StreamingProtobufs__FrequencyInfoDLSIB;
typedef struct _StreamingProtobufs__MultiFrequencyBandListNRSIB StreamingProtobufs__MultiFrequencyBandListNRSIB;
typedef struct _StreamingProtobufs__NRMultiBandInfo StreamingProtobufs__NRMultiBandInfo;
typedef struct _StreamingProtobufs__NRNSPmaxList StreamingProtobufs__NRNSPmaxList;
typedef struct _StreamingProtobufs__NRNSPmaxValue StreamingProtobufs__NRNSPmaxValue;
typedef struct _StreamingProtobufs__BCCHConfig StreamingProtobufs__BCCHConfig;
typedef struct _StreamingProtobufs__PCCHConfig StreamingProtobufs__PCCHConfig;
typedef struct _StreamingProtobufs__PagingCycle StreamingProtobufs__PagingCycle;
typedef struct _StreamingProtobufs__PCCHConfigNs StreamingProtobufs__PCCHConfigNs;
typedef struct _StreamingProtobufs__SCS15KHZoneT StreamingProtobufs__SCS15KHZoneT;
typedef struct _StreamingProtobufs__SCS30KHZoneTSCS15KHZhalfT StreamingProtobufs__SCS30KHZoneTSCS15KHZhalfT;
typedef struct _StreamingProtobufs__SCS60KHZoneTSCS30KHZhalfTSCS15KHZquarterT StreamingProtobufs__SCS60KHZoneTSCS30KHZhalfTSCS15KHZquarterT;
typedef struct _StreamingProtobufs__SCS120KHZoneTSCS60KHZhalfTSCS30KHZquarterTSCS15KHZoneEighthT StreamingProtobufs__SCS120KHZoneTSCS60KHZhalfTSCS30KHZquarterTSCS15KHZoneEighthT;
typedef struct _StreamingProtobufs__SCS120KHZhalfTSCS60KHZquarterTSCS30KHZoneEighthTSCS15KHZoneSixteenthT StreamingProtobufs__SCS120KHZhalfTSCS60KHZquarterTSCS30KHZoneEighthTSCS15KHZoneSixteenthT;
typedef struct _StreamingProtobufs__SCS120KHZquarterTSCS60KHZoneEighthTSCS30KHZoneSixteenthT StreamingProtobufs__SCS120KHZquarterTSCS60KHZoneEighthTSCS30KHZoneSixteenthT;
typedef struct _StreamingProtobufs__SCS120KHZoneEighthTSCS60KHZoneSixteenthT StreamingProtobufs__SCS120KHZoneEighthTSCS60KHZoneSixteenthT;
typedef struct _StreamingProtobufs__SCS120KHZoneSixteenthT StreamingProtobufs__SCS120KHZoneSixteenthT;
typedef struct _StreamingProtobufs__UplinkConfigCommonSIB StreamingProtobufs__UplinkConfigCommonSIB;
typedef struct _StreamingProtobufs__FrequencyInfoULSIB StreamingProtobufs__FrequencyInfoULSIB;
typedef struct _StreamingProtobufs__SIBNTimingAdvanceOffset StreamingProtobufs__SIBNTimingAdvanceOffset;
typedef struct _StreamingProtobufs__SIBSSBPositionsInBurst StreamingProtobufs__SIBSSBPositionsInBurst;
typedef struct _StreamingProtobufs__SIBSSBPeriodicityServingCell StreamingProtobufs__SIBSSBPeriodicityServingCell;
typedef struct _StreamingProtobufs__UETimersAndConstants StreamingProtobufs__UETimersAndConstants;
typedef struct _StreamingProtobufs__UETimersAndConstantsT300T301T319 StreamingProtobufs__UETimersAndConstantsT300T301T319;
typedef struct _StreamingProtobufs__UETimersAndConstantsT310 StreamingProtobufs__UETimersAndConstantsT310;
typedef struct _StreamingProtobufs__UETimersAndConstantsN310 StreamingProtobufs__UETimersAndConstantsN310;
typedef struct _StreamingProtobufs__UETimersAndConstantsT311 StreamingProtobufs__UETimersAndConstantsT311;
typedef struct _StreamingProtobufs__UETimersAndConstantsN311 StreamingProtobufs__UETimersAndConstantsN311;
typedef struct _StreamingProtobufs__UACBarringPerCatList StreamingProtobufs__UACBarringPerCatList;
typedef struct _StreamingProtobufs__UACBarringPerCat StreamingProtobufs__UACBarringPerCat;
typedef struct _StreamingProtobufs__UACBarringPerPLMNList StreamingProtobufs__UACBarringPerPLMNList;
typedef struct _StreamingProtobufs__UACBarringPerPLMN StreamingProtobufs__UACBarringPerPLMN;
typedef struct _StreamingProtobufs__UACImplicitACBarringList StreamingProtobufs__UACImplicitACBarringList;
typedef struct _StreamingProtobufs__UACBarringInfoSetList StreamingProtobufs__UACBarringInfoSetList;
typedef struct _StreamingProtobufs__UACBarringInfoSet StreamingProtobufs__UACBarringInfoSet;
typedef struct _StreamingProtobufs__UACBarringFactor StreamingProtobufs__UACBarringFactor;
typedef struct _StreamingProtobufs__UACBarringTime StreamingProtobufs__UACBarringTime;
typedef struct _StreamingProtobufs__MobilityStateParameters StreamingProtobufs__MobilityStateParameters;
typedef struct _StreamingProtobufs__TEvaluationHystNormal StreamingProtobufs__TEvaluationHystNormal;
typedef struct _StreamingProtobufs__EUTRAMultiBandInfoList StreamingProtobufs__EUTRAMultiBandInfoList;
typedef struct _StreamingProtobufs__EUTRAMultiBandInfo StreamingProtobufs__EUTRAMultiBandInfo;
typedef struct _StreamingProtobufs__EUTRANSPmaxList StreamingProtobufs__EUTRANSPmaxList;
typedef struct _StreamingProtobufs__EUTRANSPmaxValue StreamingProtobufs__EUTRANSPmaxValue;


/* --- enums --- */

typedef enum _StreamingProtobufs__MaxRetxThreshold__Value {
  STREAMING_PROTOBUFS__MAX_RETX_THRESHOLD__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__MAX_RETX_THRESHOLD__VALUE__t1 = 1,
  STREAMING_PROTOBUFS__MAX_RETX_THRESHOLD__VALUE__t2 = 2,
  STREAMING_PROTOBUFS__MAX_RETX_THRESHOLD__VALUE__t3 = 3,
  STREAMING_PROTOBUFS__MAX_RETX_THRESHOLD__VALUE__t4 = 4,
  STREAMING_PROTOBUFS__MAX_RETX_THRESHOLD__VALUE__t6 = 5,
  STREAMING_PROTOBUFS__MAX_RETX_THRESHOLD__VALUE__t7 = 6,
  STREAMING_PROTOBUFS__MAX_RETX_THRESHOLD__VALUE__t16 = 7,
  STREAMING_PROTOBUFS__MAX_RETX_THRESHOLD__VALUE__t32 = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__MAX_RETX_THRESHOLD__VALUE)
} StreamingProtobufs__MaxRetxThreshold__Value;
typedef enum _StreamingProtobufs__SNFieldLengthAM__Value {
  STREAMING_PROTOBUFS__SN__FIELD_LENGTH_AM__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__SN__FIELD_LENGTH_AM__VALUE__size12 = 1,
  STREAMING_PROTOBUFS__SN__FIELD_LENGTH_AM__VALUE__size18 = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SN__FIELD_LENGTH_AM__VALUE)
} StreamingProtobufs__SNFieldLengthAM__Value;
typedef enum _StreamingProtobufs__TPollRetransmit__Value {
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms5 = 1,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms10 = 2,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms15 = 3,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms20 = 4,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms25 = 5,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms30 = 6,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms35 = 7,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms40 = 8,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms45 = 9,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms50 = 10,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms55 = 11,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms60 = 12,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms65 = 13,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms70 = 14,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms75 = 15,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms80 = 16,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms85 = 17,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms90 = 18,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms95 = 19,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms100 = 20,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms105 = 21,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms110 = 22,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms115 = 23,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms120 = 24,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms125 = 25,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms130 = 26,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms135 = 27,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms140 = 28,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms145 = 29,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms150 = 30,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms155 = 31,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms160 = 32,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms165 = 33,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms170 = 34,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms175 = 35,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms180 = 36,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms185 = 37,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms190 = 38,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms195 = 39,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms200 = 40,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms205 = 41,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms210 = 42,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms215 = 43,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms220 = 44,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms225 = 45,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms230 = 46,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms235 = 47,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms240 = 48,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms245 = 49,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms250 = 50,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms300 = 51,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms350 = 52,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms400 = 53,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms450 = 54,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms500 = 55,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms800 = 56,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms1000 = 57,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms2000 = 58,
  STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__ms4000 = 59
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE)
} StreamingProtobufs__TPollRetransmit__Value;
typedef enum _StreamingProtobufs__PollPDU__Value {
  STREAMING_PROTOBUFS__POLL_PDU__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__POLL_PDU__VALUE__p4 = 1,
  STREAMING_PROTOBUFS__POLL_PDU__VALUE__p8 = 2,
  STREAMING_PROTOBUFS__POLL_PDU__VALUE__p16 = 3,
  STREAMING_PROTOBUFS__POLL_PDU__VALUE__p32 = 4,
  STREAMING_PROTOBUFS__POLL_PDU__VALUE__p64 = 5,
  STREAMING_PROTOBUFS__POLL_PDU__VALUE__p128 = 6,
  STREAMING_PROTOBUFS__POLL_PDU__VALUE__p256 = 7,
  STREAMING_PROTOBUFS__POLL_PDU__VALUE__p512 = 8,
  STREAMING_PROTOBUFS__POLL_PDU__VALUE__p1024 = 9,
  STREAMING_PROTOBUFS__POLL_PDU__VALUE__p2048 = 10,
  STREAMING_PROTOBUFS__POLL_PDU__VALUE__p4096 = 11,
  STREAMING_PROTOBUFS__POLL_PDU__VALUE__p6144 = 12,
  STREAMING_PROTOBUFS__POLL_PDU__VALUE__p8192 = 13,
  STREAMING_PROTOBUFS__POLL_PDU__VALUE__p12288 = 14,
  STREAMING_PROTOBUFS__POLL_PDU__VALUE__p16384 = 15,
  STREAMING_PROTOBUFS__POLL_PDU__VALUE__p20480 = 16,
  STREAMING_PROTOBUFS__POLL_PDU__VALUE__p24576 = 17,
  STREAMING_PROTOBUFS__POLL_PDU__VALUE__p28672 = 18,
  STREAMING_PROTOBUFS__POLL_PDU__VALUE__p32768 = 19,
  STREAMING_PROTOBUFS__POLL_PDU__VALUE__p40960 = 20,
  STREAMING_PROTOBUFS__POLL_PDU__VALUE__p49152 = 21,
  STREAMING_PROTOBUFS__POLL_PDU__VALUE__p57344 = 22,
  STREAMING_PROTOBUFS__POLL_PDU__VALUE__p65536 = 23,
  STREAMING_PROTOBUFS__POLL_PDU__VALUE__infinity = 24
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__POLL_PDU__VALUE)
} StreamingProtobufs__PollPDU__Value;
typedef enum _StreamingProtobufs__PollByte__Value {
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__kb1 = 1,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__kb2 = 2,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__kb5 = 3,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__kb8 = 4,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__kb10 = 5,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__kb15 = 6,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__kb25 = 7,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__kb50 = 8,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__kb75 = 9,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__kb100 = 10,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__kb125 = 11,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__kb250 = 12,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__kb375 = 13,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__kb500 = 14,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__kb750 = 15,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__kb1000 = 16,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__kb1250 = 17,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__kb1500 = 18,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__kb2000 = 19,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__kb3000 = 20,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__kb4000 = 21,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__kb4500 = 22,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__kb5000 = 23,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__kb5500 = 24,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__kb6000 = 25,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__kb6500 = 26,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__kb7000 = 27,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__kb7500 = 28,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__mb8 = 29,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__mb9 = 30,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__mb10 = 31,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__mb11 = 32,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__mb12 = 33,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__mb13 = 34,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__mb14 = 35,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__mb15 = 36,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__mb16 = 37,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__mb17 = 38,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__mb18 = 39,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__mb20 = 40,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__mb25 = 41,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__mb30 = 42,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__mb40 = 43,
  STREAMING_PROTOBUFS__POLL_BYTE__VALUE__infinity = 44
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__POLL_BYTE__VALUE)
} StreamingProtobufs__PollByte__Value;
typedef enum _StreamingProtobufs__TReassembly__Value {
  STREAMING_PROTOBUFS__T__REASSEMBLY__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__T__REASSEMBLY__VALUE__ms0 = 1,
  STREAMING_PROTOBUFS__T__REASSEMBLY__VALUE__ms5 = 2,
  STREAMING_PROTOBUFS__T__REASSEMBLY__VALUE__ms10 = 3,
  STREAMING_PROTOBUFS__T__REASSEMBLY__VALUE__ms15 = 4,
  STREAMING_PROTOBUFS__T__REASSEMBLY__VALUE__ms20 = 5,
  STREAMING_PROTOBUFS__T__REASSEMBLY__VALUE__ms25 = 6,
  STREAMING_PROTOBUFS__T__REASSEMBLY__VALUE__ms30 = 7,
  STREAMING_PROTOBUFS__T__REASSEMBLY__VALUE__ms35 = 8,
  STREAMING_PROTOBUFS__T__REASSEMBLY__VALUE__ms40 = 9,
  STREAMING_PROTOBUFS__T__REASSEMBLY__VALUE__ms45 = 10,
  STREAMING_PROTOBUFS__T__REASSEMBLY__VALUE__ms50 = 11,
  STREAMING_PROTOBUFS__T__REASSEMBLY__VALUE__ms55 = 12,
  STREAMING_PROTOBUFS__T__REASSEMBLY__VALUE__ms60 = 13,
  STREAMING_PROTOBUFS__T__REASSEMBLY__VALUE__ms65 = 14,
  STREAMING_PROTOBUFS__T__REASSEMBLY__VALUE__ms70 = 15,
  STREAMING_PROTOBUFS__T__REASSEMBLY__VALUE__ms75 = 16,
  STREAMING_PROTOBUFS__T__REASSEMBLY__VALUE__ms80 = 17,
  STREAMING_PROTOBUFS__T__REASSEMBLY__VALUE__ms85 = 18,
  STREAMING_PROTOBUFS__T__REASSEMBLY__VALUE__ms90 = 19,
  STREAMING_PROTOBUFS__T__REASSEMBLY__VALUE__ms95 = 20,
  STREAMING_PROTOBUFS__T__REASSEMBLY__VALUE__ms100 = 21,
  STREAMING_PROTOBUFS__T__REASSEMBLY__VALUE__ms110 = 22,
  STREAMING_PROTOBUFS__T__REASSEMBLY__VALUE__ms120 = 23,
  STREAMING_PROTOBUFS__T__REASSEMBLY__VALUE__ms130 = 24,
  STREAMING_PROTOBUFS__T__REASSEMBLY__VALUE__ms140 = 25,
  STREAMING_PROTOBUFS__T__REASSEMBLY__VALUE__ms150 = 26,
  STREAMING_PROTOBUFS__T__REASSEMBLY__VALUE__ms160 = 27,
  STREAMING_PROTOBUFS__T__REASSEMBLY__VALUE__ms170 = 28,
  STREAMING_PROTOBUFS__T__REASSEMBLY__VALUE__ms180 = 29,
  STREAMING_PROTOBUFS__T__REASSEMBLY__VALUE__ms190 = 30,
  STREAMING_PROTOBUFS__T__REASSEMBLY__VALUE__ms200 = 31
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__T__REASSEMBLY__VALUE)
} StreamingProtobufs__TReassembly__Value;
typedef enum _StreamingProtobufs__TStatusProhibit__Value {
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms0 = 1,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms5 = 2,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms10 = 3,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms15 = 4,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms20 = 5,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms25 = 6,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms30 = 7,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms35 = 8,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms40 = 9,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms45 = 10,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms50 = 11,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms55 = 12,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms60 = 13,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms65 = 14,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms70 = 15,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms75 = 16,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms80 = 17,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms85 = 18,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms90 = 19,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms95 = 20,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms100 = 21,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms105 = 22,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms110 = 23,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms115 = 24,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms120 = 25,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms125 = 26,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms130 = 27,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms135 = 28,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms140 = 29,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms145 = 30,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms150 = 31,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms155 = 32,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms160 = 33,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms165 = 34,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms170 = 35,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms175 = 36,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms180 = 37,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms185 = 38,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms190 = 39,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms195 = 40,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms200 = 41,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms205 = 42,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms210 = 43,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms215 = 44,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms220 = 45,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms225 = 46,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms230 = 47,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms235 = 48,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms240 = 49,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms245 = 50,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms250 = 51,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms300 = 52,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms350 = 53,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms400 = 54,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms450 = 55,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms500 = 56,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms800 = 57,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms1000 = 58,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms1200 = 59,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms1600 = 60,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms2000 = 61,
  STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__ms2400 = 62
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE)
} StreamingProtobufs__TStatusProhibit__Value;
typedef enum _StreamingProtobufs__SNFieldLengthUM__Value {
  STREAMING_PROTOBUFS__SN__FIELD_LENGTH_UM__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__SN__FIELD_LENGTH_UM__VALUE__size6 = 1,
  STREAMING_PROTOBUFS__SN__FIELD_LENGTH_UM__VALUE__size12 = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SN__FIELD_LENGTH_UM__VALUE)
} StreamingProtobufs__SNFieldLengthUM__Value;
typedef enum _StreamingProtobufs__PrioritisedBitRate__Value {
  STREAMING_PROTOBUFS__PRIORITISED_BIT_RATE__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__PRIORITISED_BIT_RATE__VALUE__kbps0 = 1,
  STREAMING_PROTOBUFS__PRIORITISED_BIT_RATE__VALUE__kbps8 = 2,
  STREAMING_PROTOBUFS__PRIORITISED_BIT_RATE__VALUE__kbps16 = 3,
  STREAMING_PROTOBUFS__PRIORITISED_BIT_RATE__VALUE__kbps32 = 4,
  STREAMING_PROTOBUFS__PRIORITISED_BIT_RATE__VALUE__kbps64 = 5,
  STREAMING_PROTOBUFS__PRIORITISED_BIT_RATE__VALUE__kbps128 = 6,
  STREAMING_PROTOBUFS__PRIORITISED_BIT_RATE__VALUE__kbps256 = 7,
  STREAMING_PROTOBUFS__PRIORITISED_BIT_RATE__VALUE__kbps512 = 8,
  STREAMING_PROTOBUFS__PRIORITISED_BIT_RATE__VALUE__kbps1024 = 9,
  STREAMING_PROTOBUFS__PRIORITISED_BIT_RATE__VALUE__kbps2048 = 10,
  STREAMING_PROTOBUFS__PRIORITISED_BIT_RATE__VALUE__kbps4096 = 11,
  STREAMING_PROTOBUFS__PRIORITISED_BIT_RATE__VALUE__kbps8192 = 12,
  STREAMING_PROTOBUFS__PRIORITISED_BIT_RATE__VALUE__kbps16384 = 13,
  STREAMING_PROTOBUFS__PRIORITISED_BIT_RATE__VALUE__kbps32768 = 14,
  STREAMING_PROTOBUFS__PRIORITISED_BIT_RATE__VALUE__kbps65536 = 15,
  STREAMING_PROTOBUFS__PRIORITISED_BIT_RATE__VALUE__infinity = 16
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PRIORITISED_BIT_RATE__VALUE)
} StreamingProtobufs__PrioritisedBitRate__Value;
typedef enum _StreamingProtobufs__BucketSizeDuration__Value {
  STREAMING_PROTOBUFS__BUCKET_SIZE_DURATION__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__BUCKET_SIZE_DURATION__VALUE__ms5 = 1,
  STREAMING_PROTOBUFS__BUCKET_SIZE_DURATION__VALUE__ms10 = 2,
  STREAMING_PROTOBUFS__BUCKET_SIZE_DURATION__VALUE__ms20 = 3,
  STREAMING_PROTOBUFS__BUCKET_SIZE_DURATION__VALUE__ms50 = 4,
  STREAMING_PROTOBUFS__BUCKET_SIZE_DURATION__VALUE__ms100 = 5,
  STREAMING_PROTOBUFS__BUCKET_SIZE_DURATION__VALUE__ms150 = 6,
  STREAMING_PROTOBUFS__BUCKET_SIZE_DURATION__VALUE__ms300 = 7,
  STREAMING_PROTOBUFS__BUCKET_SIZE_DURATION__VALUE__ms500 = 8,
  STREAMING_PROTOBUFS__BUCKET_SIZE_DURATION__VALUE__ms1000 = 9
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__BUCKET_SIZE_DURATION__VALUE)
} StreamingProtobufs__BucketSizeDuration__Value;
typedef enum _StreamingProtobufs__SubcarrierSpacing__Value {
  STREAMING_PROTOBUFS__SUBCARRIER_SPACING__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__SUBCARRIER_SPACING__VALUE__kHz15 = 1,
  STREAMING_PROTOBUFS__SUBCARRIER_SPACING__VALUE__kHz30 = 2,
  STREAMING_PROTOBUFS__SUBCARRIER_SPACING__VALUE__kHz60 = 3,
  STREAMING_PROTOBUFS__SUBCARRIER_SPACING__VALUE__kHz120 = 4,
  STREAMING_PROTOBUFS__SUBCARRIER_SPACING__VALUE__kHz240 = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SUBCARRIER_SPACING__VALUE)
} StreamingProtobufs__SubcarrierSpacing__Value;
typedef enum _StreamingProtobufs__MaxPUSCHDuration__Value {
  STREAMING_PROTOBUFS__MAX_PUSCH__DURATION__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__MAX_PUSCH__DURATION__VALUE__ms0p02 = 1,
  STREAMING_PROTOBUFS__MAX_PUSCH__DURATION__VALUE__ms0p04 = 2,
  STREAMING_PROTOBUFS__MAX_PUSCH__DURATION__VALUE__ms0p0625 = 3,
  STREAMING_PROTOBUFS__MAX_PUSCH__DURATION__VALUE__ms0p125 = 4,
  STREAMING_PROTOBUFS__MAX_PUSCH__DURATION__VALUE__ms0p25 = 5,
  STREAMING_PROTOBUFS__MAX_PUSCH__DURATION__VALUE__ms0p5 = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__MAX_PUSCH__DURATION__VALUE)
} StreamingProtobufs__MaxPUSCHDuration__Value;
typedef enum _StreamingProtobufs__BitRateQueryProhibitTimer__Value {
  STREAMING_PROTOBUFS__BIT_RATE_QUERY_PROHIBIT_TIMER__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__BIT_RATE_QUERY_PROHIBIT_TIMER__VALUE__s0 = 1,
  STREAMING_PROTOBUFS__BIT_RATE_QUERY_PROHIBIT_TIMER__VALUE__s0dot4 = 2,
  STREAMING_PROTOBUFS__BIT_RATE_QUERY_PROHIBIT_TIMER__VALUE__s0dot8 = 3,
  STREAMING_PROTOBUFS__BIT_RATE_QUERY_PROHIBIT_TIMER__VALUE__s1dot6 = 4,
  STREAMING_PROTOBUFS__BIT_RATE_QUERY_PROHIBIT_TIMER__VALUE__s3 = 5,
  STREAMING_PROTOBUFS__BIT_RATE_QUERY_PROHIBIT_TIMER__VALUE__s6 = 6,
  STREAMING_PROTOBUFS__BIT_RATE_QUERY_PROHIBIT_TIMER__VALUE__s12 = 7,
  STREAMING_PROTOBUFS__BIT_RATE_QUERY_PROHIBIT_TIMER__VALUE__s30 = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__BIT_RATE_QUERY_PROHIBIT_TIMER__VALUE)
} StreamingProtobufs__BitRateQueryProhibitTimer__Value;
typedef enum _StreamingProtobufs__MilliSeconds__Value {
  STREAMING_PROTOBUFS__MILLI_SECONDS__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__MILLI_SECONDS__VALUE__ms1 = 1,
  STREAMING_PROTOBUFS__MILLI_SECONDS__VALUE__ms2 = 2,
  STREAMING_PROTOBUFS__MILLI_SECONDS__VALUE__ms3 = 3,
  STREAMING_PROTOBUFS__MILLI_SECONDS__VALUE__ms4 = 4,
  STREAMING_PROTOBUFS__MILLI_SECONDS__VALUE__ms5 = 5,
  STREAMING_PROTOBUFS__MILLI_SECONDS__VALUE__ms6 = 6,
  STREAMING_PROTOBUFS__MILLI_SECONDS__VALUE__ms8 = 7,
  STREAMING_PROTOBUFS__MILLI_SECONDS__VALUE__ms10 = 8,
  STREAMING_PROTOBUFS__MILLI_SECONDS__VALUE__ms20 = 9,
  STREAMING_PROTOBUFS__MILLI_SECONDS__VALUE__ms30 = 10,
  STREAMING_PROTOBUFS__MILLI_SECONDS__VALUE__ms40 = 11,
  STREAMING_PROTOBUFS__MILLI_SECONDS__VALUE__ms50 = 12,
  STREAMING_PROTOBUFS__MILLI_SECONDS__VALUE__ms60 = 13,
  STREAMING_PROTOBUFS__MILLI_SECONDS__VALUE__ms80 = 14,
  STREAMING_PROTOBUFS__MILLI_SECONDS__VALUE__ms100 = 15,
  STREAMING_PROTOBUFS__MILLI_SECONDS__VALUE__ms200 = 16,
  STREAMING_PROTOBUFS__MILLI_SECONDS__VALUE__ms300 = 17,
  STREAMING_PROTOBUFS__MILLI_SECONDS__VALUE__ms400 = 18,
  STREAMING_PROTOBUFS__MILLI_SECONDS__VALUE__ms500 = 19,
  STREAMING_PROTOBUFS__MILLI_SECONDS__VALUE__ms600 = 20,
  STREAMING_PROTOBUFS__MILLI_SECONDS__VALUE__ms800 = 21,
  STREAMING_PROTOBUFS__MILLI_SECONDS__VALUE__ms1000 = 22,
  STREAMING_PROTOBUFS__MILLI_SECONDS__VALUE__ms1200 = 23,
  STREAMING_PROTOBUFS__MILLI_SECONDS__VALUE__ms1600 = 24
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__MILLI_SECONDS__VALUE)
} StreamingProtobufs__MilliSeconds__Value;
typedef enum _StreamingProtobufs__DRXInactivityTimer__Value {
  STREAMING_PROTOBUFS__DRX__INACTIVITY_TIMER__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__DRX__INACTIVITY_TIMER__VALUE__ms0 = 1,
  STREAMING_PROTOBUFS__DRX__INACTIVITY_TIMER__VALUE__ms1 = 2,
  STREAMING_PROTOBUFS__DRX__INACTIVITY_TIMER__VALUE__ms2 = 3,
  STREAMING_PROTOBUFS__DRX__INACTIVITY_TIMER__VALUE__ms3 = 4,
  STREAMING_PROTOBUFS__DRX__INACTIVITY_TIMER__VALUE__ms4 = 5,
  STREAMING_PROTOBUFS__DRX__INACTIVITY_TIMER__VALUE__ms5 = 6,
  STREAMING_PROTOBUFS__DRX__INACTIVITY_TIMER__VALUE__ms6 = 7,
  STREAMING_PROTOBUFS__DRX__INACTIVITY_TIMER__VALUE__ms8 = 8,
  STREAMING_PROTOBUFS__DRX__INACTIVITY_TIMER__VALUE__ms10 = 9,
  STREAMING_PROTOBUFS__DRX__INACTIVITY_TIMER__VALUE__ms20 = 10,
  STREAMING_PROTOBUFS__DRX__INACTIVITY_TIMER__VALUE__ms30 = 11,
  STREAMING_PROTOBUFS__DRX__INACTIVITY_TIMER__VALUE__ms40 = 12,
  STREAMING_PROTOBUFS__DRX__INACTIVITY_TIMER__VALUE__ms50 = 13,
  STREAMING_PROTOBUFS__DRX__INACTIVITY_TIMER__VALUE__ms60 = 14,
  STREAMING_PROTOBUFS__DRX__INACTIVITY_TIMER__VALUE__ms80 = 15,
  STREAMING_PROTOBUFS__DRX__INACTIVITY_TIMER__VALUE__ms100 = 16,
  STREAMING_PROTOBUFS__DRX__INACTIVITY_TIMER__VALUE__ms200 = 17,
  STREAMING_PROTOBUFS__DRX__INACTIVITY_TIMER__VALUE__ms300 = 18,
  STREAMING_PROTOBUFS__DRX__INACTIVITY_TIMER__VALUE__ms500 = 19,
  STREAMING_PROTOBUFS__DRX__INACTIVITY_TIMER__VALUE__ms750 = 20,
  STREAMING_PROTOBUFS__DRX__INACTIVITY_TIMER__VALUE__ms1280 = 21,
  STREAMING_PROTOBUFS__DRX__INACTIVITY_TIMER__VALUE__ms1920 = 22,
  STREAMING_PROTOBUFS__DRX__INACTIVITY_TIMER__VALUE__ms2560 = 23
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__DRX__INACTIVITY_TIMER__VALUE)
} StreamingProtobufs__DRXInactivityTimer__Value;
typedef enum _StreamingProtobufs__DRXRetransmissionTimer__Value {
  STREAMING_PROTOBUFS__DRX__RETRANSMISSION_TIMER__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__DRX__RETRANSMISSION_TIMER__VALUE__sl0 = 1,
  STREAMING_PROTOBUFS__DRX__RETRANSMISSION_TIMER__VALUE__sl1 = 2,
  STREAMING_PROTOBUFS__DRX__RETRANSMISSION_TIMER__VALUE__sl2 = 3,
  STREAMING_PROTOBUFS__DRX__RETRANSMISSION_TIMER__VALUE__sl4 = 4,
  STREAMING_PROTOBUFS__DRX__RETRANSMISSION_TIMER__VALUE__sl6 = 5,
  STREAMING_PROTOBUFS__DRX__RETRANSMISSION_TIMER__VALUE__sl8 = 6,
  STREAMING_PROTOBUFS__DRX__RETRANSMISSION_TIMER__VALUE__sl16 = 7,
  STREAMING_PROTOBUFS__DRX__RETRANSMISSION_TIMER__VALUE__sl24 = 8,
  STREAMING_PROTOBUFS__DRX__RETRANSMISSION_TIMER__VALUE__sl33 = 9,
  STREAMING_PROTOBUFS__DRX__RETRANSMISSION_TIMER__VALUE__sl40 = 10,
  STREAMING_PROTOBUFS__DRX__RETRANSMISSION_TIMER__VALUE__sl64 = 11,
  STREAMING_PROTOBUFS__DRX__RETRANSMISSION_TIMER__VALUE__sl80 = 12,
  STREAMING_PROTOBUFS__DRX__RETRANSMISSION_TIMER__VALUE__sl96 = 13,
  STREAMING_PROTOBUFS__DRX__RETRANSMISSION_TIMER__VALUE__sl112 = 14,
  STREAMING_PROTOBUFS__DRX__RETRANSMISSION_TIMER__VALUE__sl128 = 15,
  STREAMING_PROTOBUFS__DRX__RETRANSMISSION_TIMER__VALUE__sl160 = 16,
  STREAMING_PROTOBUFS__DRX__RETRANSMISSION_TIMER__VALUE__sl320 = 17
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__DRX__RETRANSMISSION_TIMER__VALUE)
} StreamingProtobufs__DRXRetransmissionTimer__Value;
typedef enum _StreamingProtobufs__DRXShortCycle__Value {
  STREAMING_PROTOBUFS__DRX__SHORT_CYCLE__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__DRX__SHORT_CYCLE__VALUE__ms2 = 1,
  STREAMING_PROTOBUFS__DRX__SHORT_CYCLE__VALUE__ms3 = 2,
  STREAMING_PROTOBUFS__DRX__SHORT_CYCLE__VALUE__ms4 = 3,
  STREAMING_PROTOBUFS__DRX__SHORT_CYCLE__VALUE__ms5 = 4,
  STREAMING_PROTOBUFS__DRX__SHORT_CYCLE__VALUE__ms6 = 5,
  STREAMING_PROTOBUFS__DRX__SHORT_CYCLE__VALUE__ms7 = 6,
  STREAMING_PROTOBUFS__DRX__SHORT_CYCLE__VALUE__ms8 = 7,
  STREAMING_PROTOBUFS__DRX__SHORT_CYCLE__VALUE__ms10 = 8,
  STREAMING_PROTOBUFS__DRX__SHORT_CYCLE__VALUE__ms14 = 9,
  STREAMING_PROTOBUFS__DRX__SHORT_CYCLE__VALUE__ms16 = 10,
  STREAMING_PROTOBUFS__DRX__SHORT_CYCLE__VALUE__ms20 = 11,
  STREAMING_PROTOBUFS__DRX__SHORT_CYCLE__VALUE__ms30 = 12,
  STREAMING_PROTOBUFS__DRX__SHORT_CYCLE__VALUE__ms32 = 13,
  STREAMING_PROTOBUFS__DRX__SHORT_CYCLE__VALUE__ms35 = 14,
  STREAMING_PROTOBUFS__DRX__SHORT_CYCLE__VALUE__ms40 = 15,
  STREAMING_PROTOBUFS__DRX__SHORT_CYCLE__VALUE__ms64 = 16,
  STREAMING_PROTOBUFS__DRX__SHORT_CYCLE__VALUE__ms80 = 17,
  STREAMING_PROTOBUFS__DRX__SHORT_CYCLE__VALUE__ms128 = 18,
  STREAMING_PROTOBUFS__DRX__SHORT_CYCLE__VALUE__ms160 = 19,
  STREAMING_PROTOBUFS__DRX__SHORT_CYCLE__VALUE__ms256 = 20,
  STREAMING_PROTOBUFS__DRX__SHORT_CYCLE__VALUE__ms320 = 21,
  STREAMING_PROTOBUFS__DRX__SHORT_CYCLE__VALUE__ms512 = 22,
  STREAMING_PROTOBUFS__DRX__SHORT_CYCLE__VALUE__ms640 = 23
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__DRX__SHORT_CYCLE__VALUE)
} StreamingProtobufs__DRXShortCycle__Value;
typedef enum _StreamingProtobufs__SRProhibitTimer__Value {
  STREAMING_PROTOBUFS__SR__PROHIBIT_TIMER__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__SR__PROHIBIT_TIMER__VALUE__ms1 = 1,
  STREAMING_PROTOBUFS__SR__PROHIBIT_TIMER__VALUE__ms2 = 2,
  STREAMING_PROTOBUFS__SR__PROHIBIT_TIMER__VALUE__ms4 = 3,
  STREAMING_PROTOBUFS__SR__PROHIBIT_TIMER__VALUE__ms8 = 4,
  STREAMING_PROTOBUFS__SR__PROHIBIT_TIMER__VALUE__ms16 = 5,
  STREAMING_PROTOBUFS__SR__PROHIBIT_TIMER__VALUE__ms32 = 6,
  STREAMING_PROTOBUFS__SR__PROHIBIT_TIMER__VALUE__ms64 = 7,
  STREAMING_PROTOBUFS__SR__PROHIBIT_TIMER__VALUE__ms128 = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SR__PROHIBIT_TIMER__VALUE)
} StreamingProtobufs__SRProhibitTimer__Value;
typedef enum _StreamingProtobufs__SRTransMax__Value {
  STREAMING_PROTOBUFS__SR__TRANS_MAX__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__SR__TRANS_MAX__VALUE__n4 = 1,
  STREAMING_PROTOBUFS__SR__TRANS_MAX__VALUE__n8 = 2,
  STREAMING_PROTOBUFS__SR__TRANS_MAX__VALUE__n16 = 3,
  STREAMING_PROTOBUFS__SR__TRANS_MAX__VALUE__n32 = 4,
  STREAMING_PROTOBUFS__SR__TRANS_MAX__VALUE__n64 = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SR__TRANS_MAX__VALUE)
} StreamingProtobufs__SRTransMax__Value;
typedef enum _StreamingProtobufs__PeriodicBSRTimer__Value {
  STREAMING_PROTOBUFS__PERIODIC_BSR__TIMER__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__PERIODIC_BSR__TIMER__VALUE__sf1 = 1,
  STREAMING_PROTOBUFS__PERIODIC_BSR__TIMER__VALUE__sf5 = 2,
  STREAMING_PROTOBUFS__PERIODIC_BSR__TIMER__VALUE__sf10 = 3,
  STREAMING_PROTOBUFS__PERIODIC_BSR__TIMER__VALUE__sf16 = 4,
  STREAMING_PROTOBUFS__PERIODIC_BSR__TIMER__VALUE__sf20 = 5,
  STREAMING_PROTOBUFS__PERIODIC_BSR__TIMER__VALUE__sf32 = 6,
  STREAMING_PROTOBUFS__PERIODIC_BSR__TIMER__VALUE__sf40 = 7,
  STREAMING_PROTOBUFS__PERIODIC_BSR__TIMER__VALUE__sf64 = 8,
  STREAMING_PROTOBUFS__PERIODIC_BSR__TIMER__VALUE__sf80 = 9,
  STREAMING_PROTOBUFS__PERIODIC_BSR__TIMER__VALUE__sf128 = 10,
  STREAMING_PROTOBUFS__PERIODIC_BSR__TIMER__VALUE__sf160 = 11,
  STREAMING_PROTOBUFS__PERIODIC_BSR__TIMER__VALUE__sf320 = 12,
  STREAMING_PROTOBUFS__PERIODIC_BSR__TIMER__VALUE__sf640 = 13,
  STREAMING_PROTOBUFS__PERIODIC_BSR__TIMER__VALUE__sf1280 = 14,
  STREAMING_PROTOBUFS__PERIODIC_BSR__TIMER__VALUE__sf2560 = 15,
  STREAMING_PROTOBUFS__PERIODIC_BSR__TIMER__VALUE__infinity = 16
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PERIODIC_BSR__TIMER__VALUE)
} StreamingProtobufs__PeriodicBSRTimer__Value;
typedef enum _StreamingProtobufs__RetxBSRTimer__Value {
  STREAMING_PROTOBUFS__RETX_BSR__TIMER__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__RETX_BSR__TIMER__VALUE__sf10 = 1,
  STREAMING_PROTOBUFS__RETX_BSR__TIMER__VALUE__sf20 = 2,
  STREAMING_PROTOBUFS__RETX_BSR__TIMER__VALUE__sf40 = 3,
  STREAMING_PROTOBUFS__RETX_BSR__TIMER__VALUE__sf80 = 4,
  STREAMING_PROTOBUFS__RETX_BSR__TIMER__VALUE__sf160 = 5,
  STREAMING_PROTOBUFS__RETX_BSR__TIMER__VALUE__sf320 = 6,
  STREAMING_PROTOBUFS__RETX_BSR__TIMER__VALUE__sf640 = 7,
  STREAMING_PROTOBUFS__RETX_BSR__TIMER__VALUE__sf1280 = 8,
  STREAMING_PROTOBUFS__RETX_BSR__TIMER__VALUE__sf2560 = 9,
  STREAMING_PROTOBUFS__RETX_BSR__TIMER__VALUE__sf5120 = 10,
  STREAMING_PROTOBUFS__RETX_BSR__TIMER__VALUE__sf10240 = 11
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__RETX_BSR__TIMER__VALUE)
} StreamingProtobufs__RetxBSRTimer__Value;
typedef enum _StreamingProtobufs__LogicalChannelSRDelayTimer__Value {
  STREAMING_PROTOBUFS__LOGICAL_CHANNEL_SR__DELAY_TIMER__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__LOGICAL_CHANNEL_SR__DELAY_TIMER__VALUE__sf20 = 1,
  STREAMING_PROTOBUFS__LOGICAL_CHANNEL_SR__DELAY_TIMER__VALUE__sf40 = 2,
  STREAMING_PROTOBUFS__LOGICAL_CHANNEL_SR__DELAY_TIMER__VALUE__sf64 = 3,
  STREAMING_PROTOBUFS__LOGICAL_CHANNEL_SR__DELAY_TIMER__VALUE__sf128 = 4,
  STREAMING_PROTOBUFS__LOGICAL_CHANNEL_SR__DELAY_TIMER__VALUE__sf512 = 5,
  STREAMING_PROTOBUFS__LOGICAL_CHANNEL_SR__DELAY_TIMER__VALUE__sf1024 = 6,
  STREAMING_PROTOBUFS__LOGICAL_CHANNEL_SR__DELAY_TIMER__VALUE__sf2560 = 7
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__LOGICAL_CHANNEL_SR__DELAY_TIMER__VALUE)
} StreamingProtobufs__LogicalChannelSRDelayTimer__Value;
typedef enum _StreamingProtobufs__TimeAlignmentTimer__Value {
  STREAMING_PROTOBUFS__TIME_ALIGNMENT_TIMER__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__TIME_ALIGNMENT_TIMER__VALUE__ms500 = 1,
  STREAMING_PROTOBUFS__TIME_ALIGNMENT_TIMER__VALUE__ms750 = 2,
  STREAMING_PROTOBUFS__TIME_ALIGNMENT_TIMER__VALUE__ms1280 = 3,
  STREAMING_PROTOBUFS__TIME_ALIGNMENT_TIMER__VALUE__ms1920 = 4,
  STREAMING_PROTOBUFS__TIME_ALIGNMENT_TIMER__VALUE__ms2560 = 5,
  STREAMING_PROTOBUFS__TIME_ALIGNMENT_TIMER__VALUE__ms5120 = 6,
  STREAMING_PROTOBUFS__TIME_ALIGNMENT_TIMER__VALUE__ms10240 = 7,
  STREAMING_PROTOBUFS__TIME_ALIGNMENT_TIMER__VALUE__infinity = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__TIME_ALIGNMENT_TIMER__VALUE)
} StreamingProtobufs__TimeAlignmentTimer__Value;
typedef enum _StreamingProtobufs__PHRPeriodicTimer__Value {
  STREAMING_PROTOBUFS__PHR__PERIODIC_TIMER__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__PHR__PERIODIC_TIMER__VALUE__sf10 = 1,
  STREAMING_PROTOBUFS__PHR__PERIODIC_TIMER__VALUE__sf20 = 2,
  STREAMING_PROTOBUFS__PHR__PERIODIC_TIMER__VALUE__sf50 = 3,
  STREAMING_PROTOBUFS__PHR__PERIODIC_TIMER__VALUE__sf100 = 4,
  STREAMING_PROTOBUFS__PHR__PERIODIC_TIMER__VALUE__sf200 = 5,
  STREAMING_PROTOBUFS__PHR__PERIODIC_TIMER__VALUE__sf500 = 6,
  STREAMING_PROTOBUFS__PHR__PERIODIC_TIMER__VALUE__sf1000 = 7,
  STREAMING_PROTOBUFS__PHR__PERIODIC_TIMER__VALUE__infinity = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PHR__PERIODIC_TIMER__VALUE)
} StreamingProtobufs__PHRPeriodicTimer__Value;
typedef enum _StreamingProtobufs__PHRProhibitTimer__Value {
  STREAMING_PROTOBUFS__PHR__PROHIBIT_TIMER__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__PHR__PROHIBIT_TIMER__VALUE__sf0 = 1,
  STREAMING_PROTOBUFS__PHR__PROHIBIT_TIMER__VALUE__sf10 = 2,
  STREAMING_PROTOBUFS__PHR__PROHIBIT_TIMER__VALUE__sf20 = 3,
  STREAMING_PROTOBUFS__PHR__PROHIBIT_TIMER__VALUE__sf50 = 4,
  STREAMING_PROTOBUFS__PHR__PROHIBIT_TIMER__VALUE__sf100 = 5,
  STREAMING_PROTOBUFS__PHR__PROHIBIT_TIMER__VALUE__sf200 = 6,
  STREAMING_PROTOBUFS__PHR__PROHIBIT_TIMER__VALUE__sf500 = 7,
  STREAMING_PROTOBUFS__PHR__PROHIBIT_TIMER__VALUE__sf1000 = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PHR__PROHIBIT_TIMER__VALUE)
} StreamingProtobufs__PHRProhibitTimer__Value;
typedef enum _StreamingProtobufs__PHRTxPowerFactorChange__Value {
  STREAMING_PROTOBUFS__PHR__TX__POWER_FACTOR_CHANGE__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__PHR__TX__POWER_FACTOR_CHANGE__VALUE__dB1 = 1,
  STREAMING_PROTOBUFS__PHR__TX__POWER_FACTOR_CHANGE__VALUE__dB3 = 2,
  STREAMING_PROTOBUFS__PHR__TX__POWER_FACTOR_CHANGE__VALUE__dB6 = 3,
  STREAMING_PROTOBUFS__PHR__TX__POWER_FACTOR_CHANGE__VALUE__infinity = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PHR__TX__POWER_FACTOR_CHANGE__VALUE)
} StreamingProtobufs__PHRTxPowerFactorChange__Value;
typedef enum _StreamingProtobufs__PHRModeOtherCG__Value {
  STREAMING_PROTOBUFS__PHR__MODE_OTHER_CG__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__PHR__MODE_OTHER_CG__VALUE__real = 1,
  STREAMING_PROTOBUFS__PHR__MODE_OTHER_CG__VALUE__virtual = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PHR__MODE_OTHER_CG__VALUE)
} StreamingProtobufs__PHRModeOtherCG__Value;
typedef enum _StreamingProtobufs__DataInactivityTimer__Value {
  STREAMING_PROTOBUFS__DATA_INACTIVITY_TIMER__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__DATA_INACTIVITY_TIMER__VALUE__s1 = 1,
  STREAMING_PROTOBUFS__DATA_INACTIVITY_TIMER__VALUE__s2 = 2,
  STREAMING_PROTOBUFS__DATA_INACTIVITY_TIMER__VALUE__s3 = 3,
  STREAMING_PROTOBUFS__DATA_INACTIVITY_TIMER__VALUE__s5 = 4,
  STREAMING_PROTOBUFS__DATA_INACTIVITY_TIMER__VALUE__s7 = 5,
  STREAMING_PROTOBUFS__DATA_INACTIVITY_TIMER__VALUE__s10 = 6,
  STREAMING_PROTOBUFS__DATA_INACTIVITY_TIMER__VALUE__s15 = 7,
  STREAMING_PROTOBUFS__DATA_INACTIVITY_TIMER__VALUE__s20 = 8,
  STREAMING_PROTOBUFS__DATA_INACTIVITY_TIMER__VALUE__s40 = 9,
  STREAMING_PROTOBUFS__DATA_INACTIVITY_TIMER__VALUE__s50 = 10,
  STREAMING_PROTOBUFS__DATA_INACTIVITY_TIMER__VALUE__s60 = 11,
  STREAMING_PROTOBUFS__DATA_INACTIVITY_TIMER__VALUE__s80 = 12,
  STREAMING_PROTOBUFS__DATA_INACTIVITY_TIMER__VALUE__s100 = 13,
  STREAMING_PROTOBUFS__DATA_INACTIVITY_TIMER__VALUE__s120 = 14,
  STREAMING_PROTOBUFS__DATA_INACTIVITY_TIMER__VALUE__s150 = 15,
  STREAMING_PROTOBUFS__DATA_INACTIVITY_TIMER__VALUE__s180 = 16
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__DATA_INACTIVITY_TIMER__VALUE)
} StreamingProtobufs__DataInactivityTimer__Value;
typedef enum _StreamingProtobufs__PhysicalCellGroupConfig__PDSCHHARQACKCodebook {
  STREAMING_PROTOBUFS__PHYSICAL_CELL_GROUP_CONFIG__PDSCH__HARQ__ACK__CODEBOOK__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__PHYSICAL_CELL_GROUP_CONFIG__PDSCH__HARQ__ACK__CODEBOOK__semiStatic = 1,
  STREAMING_PROTOBUFS__PHYSICAL_CELL_GROUP_CONFIG__PDSCH__HARQ__ACK__CODEBOOK__dynamic = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PHYSICAL_CELL_GROUP_CONFIG__PDSCH__HARQ__ACK__CODEBOOK)
} StreamingProtobufs__PhysicalCellGroupConfig__PDSCHHARQACKCodebook;
typedef enum _StreamingProtobufs__XScale__Value {
  STREAMING_PROTOBUFS__XSCALE__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__XSCALE__VALUE__dB0 = 1,
  STREAMING_PROTOBUFS__XSCALE__VALUE__dB6 = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__XSCALE__VALUE)
} StreamingProtobufs__XScale__Value;
typedef enum _StreamingProtobufs__CyclicPrefix__Value {
  STREAMING_PROTOBUFS__CYCLIC_PREFIX__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__CYCLIC_PREFIX__VALUE__extended = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CYCLIC_PREFIX__VALUE)
} StreamingProtobufs__CyclicPrefix__Value;
typedef enum _StreamingProtobufs__RegBundleSize__Value {
  STREAMING_PROTOBUFS__REG__BUNDLE_SIZE__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__REG__BUNDLE_SIZE__VALUE__n2 = 1,
  STREAMING_PROTOBUFS__REG__BUNDLE_SIZE__VALUE__n3 = 2,
  STREAMING_PROTOBUFS__REG__BUNDLE_SIZE__VALUE__n6 = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__REG__BUNDLE_SIZE__VALUE)
} StreamingProtobufs__RegBundleSize__Value;
typedef enum _StreamingProtobufs__InterleaverSize__Value {
  STREAMING_PROTOBUFS__INTERLEAVER_SIZE__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__INTERLEAVER_SIZE__VALUE__n2 = 1,
  STREAMING_PROTOBUFS__INTERLEAVER_SIZE__VALUE__n3 = 2,
  STREAMING_PROTOBUFS__INTERLEAVER_SIZE__VALUE__n6 = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__INTERLEAVER_SIZE__VALUE)
} StreamingProtobufs__InterleaverSize__Value;
typedef enum _StreamingProtobufs__PrecoderGranularity__Value {
  STREAMING_PROTOBUFS__PRECODER_GRANULARITY__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__PRECODER_GRANULARITY__VALUE__sameAsREG_bundle = 1,
  STREAMING_PROTOBUFS__PRECODER_GRANULARITY__VALUE__allContiguousRBs = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PRECODER_GRANULARITY__VALUE)
} StreamingProtobufs__PrecoderGranularity__Value;
typedef enum _StreamingProtobufs__MappingType__Value {
  STREAMING_PROTOBUFS__MAPPING_TYPE__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__MAPPING_TYPE__VALUE__typeA = 1,
  STREAMING_PROTOBUFS__MAPPING_TYPE__VALUE__typeB = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__MAPPING_TYPE__VALUE)
} StreamingProtobufs__MappingType__Value;
typedef enum _StreamingProtobufs__Msg1FDM__Value {
  STREAMING_PROTOBUFS__MSG1__FDM__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__MSG1__FDM__VALUE__one = 1,
  STREAMING_PROTOBUFS__MSG1__FDM__VALUE__two = 2,
  STREAMING_PROTOBUFS__MSG1__FDM__VALUE__four = 3,
  STREAMING_PROTOBUFS__MSG1__FDM__VALUE__eight = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__MSG1__FDM__VALUE)
} StreamingProtobufs__Msg1FDM__Value;
typedef enum _StreamingProtobufs__PreambleTransMax__Value {
  STREAMING_PROTOBUFS__PREAMBLE_TRANS_MAX__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__PREAMBLE_TRANS_MAX__VALUE__n3 = 1,
  STREAMING_PROTOBUFS__PREAMBLE_TRANS_MAX__VALUE__n4 = 2,
  STREAMING_PROTOBUFS__PREAMBLE_TRANS_MAX__VALUE__n5 = 3,
  STREAMING_PROTOBUFS__PREAMBLE_TRANS_MAX__VALUE__n6 = 4,
  STREAMING_PROTOBUFS__PREAMBLE_TRANS_MAX__VALUE__n7 = 5,
  STREAMING_PROTOBUFS__PREAMBLE_TRANS_MAX__VALUE__n8 = 6,
  STREAMING_PROTOBUFS__PREAMBLE_TRANS_MAX__VALUE__n10 = 7,
  STREAMING_PROTOBUFS__PREAMBLE_TRANS_MAX__VALUE__n20 = 8,
  STREAMING_PROTOBUFS__PREAMBLE_TRANS_MAX__VALUE__n50 = 9,
  STREAMING_PROTOBUFS__PREAMBLE_TRANS_MAX__VALUE__n100 = 10,
  STREAMING_PROTOBUFS__PREAMBLE_TRANS_MAX__VALUE__n200 = 11
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PREAMBLE_TRANS_MAX__VALUE)
} StreamingProtobufs__PreambleTransMax__Value;
typedef enum _StreamingProtobufs__PowerRampingStep__Value {
  STREAMING_PROTOBUFS__POWER_RAMPING_STEP__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__POWER_RAMPING_STEP__VALUE__dB0 = 1,
  STREAMING_PROTOBUFS__POWER_RAMPING_STEP__VALUE__dB2 = 2,
  STREAMING_PROTOBUFS__POWER_RAMPING_STEP__VALUE__dB4 = 3,
  STREAMING_PROTOBUFS__POWER_RAMPING_STEP__VALUE__dB6 = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__POWER_RAMPING_STEP__VALUE)
} StreamingProtobufs__PowerRampingStep__Value;
typedef enum _StreamingProtobufs__RAResponseWindow__Value {
  STREAMING_PROTOBUFS__RA__RESPONSE_WINDOW__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__RA__RESPONSE_WINDOW__VALUE__sl1 = 1,
  STREAMING_PROTOBUFS__RA__RESPONSE_WINDOW__VALUE__sl2 = 2,
  STREAMING_PROTOBUFS__RA__RESPONSE_WINDOW__VALUE__sl4 = 3,
  STREAMING_PROTOBUFS__RA__RESPONSE_WINDOW__VALUE__sl8 = 4,
  STREAMING_PROTOBUFS__RA__RESPONSE_WINDOW__VALUE__sl10 = 5,
  STREAMING_PROTOBUFS__RA__RESPONSE_WINDOW__VALUE__sl20 = 6,
  STREAMING_PROTOBUFS__RA__RESPONSE_WINDOW__VALUE__sl40 = 7,
  STREAMING_PROTOBUFS__RA__RESPONSE_WINDOW__VALUE__sl80 = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__RA__RESPONSE_WINDOW__VALUE)
} StreamingProtobufs__RAResponseWindow__Value;
typedef enum _StreamingProtobufs__Fraction__Value {
  STREAMING_PROTOBUFS__FRACTION__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__FRACTION__VALUE__n4 = 1,
  STREAMING_PROTOBUFS__FRACTION__VALUE__n8 = 2,
  STREAMING_PROTOBUFS__FRACTION__VALUE__n12 = 3,
  STREAMING_PROTOBUFS__FRACTION__VALUE__n16 = 4,
  STREAMING_PROTOBUFS__FRACTION__VALUE__n20 = 5,
  STREAMING_PROTOBUFS__FRACTION__VALUE__n24 = 6,
  STREAMING_PROTOBUFS__FRACTION__VALUE__n28 = 7,
  STREAMING_PROTOBUFS__FRACTION__VALUE__n32 = 8,
  STREAMING_PROTOBUFS__FRACTION__VALUE__n36 = 9,
  STREAMING_PROTOBUFS__FRACTION__VALUE__n40 = 10,
  STREAMING_PROTOBUFS__FRACTION__VALUE__n44 = 11,
  STREAMING_PROTOBUFS__FRACTION__VALUE__n48 = 12,
  STREAMING_PROTOBUFS__FRACTION__VALUE__n52 = 13,
  STREAMING_PROTOBUFS__FRACTION__VALUE__n56 = 14,
  STREAMING_PROTOBUFS__FRACTION__VALUE__n60 = 15,
  STREAMING_PROTOBUFS__FRACTION__VALUE__n64 = 16
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__FRACTION__VALUE)
} StreamingProtobufs__Fraction__Value;
typedef enum _StreamingProtobufs__OtherFraction__Value {
  STREAMING_PROTOBUFS__OTHER_FRACTION__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__OTHER_FRACTION__VALUE__n4 = 1,
  STREAMING_PROTOBUFS__OTHER_FRACTION__VALUE__n8 = 2,
  STREAMING_PROTOBUFS__OTHER_FRACTION__VALUE__n12 = 3,
  STREAMING_PROTOBUFS__OTHER_FRACTION__VALUE__n16 = 4,
  STREAMING_PROTOBUFS__OTHER_FRACTION__VALUE__n20 = 5,
  STREAMING_PROTOBUFS__OTHER_FRACTION__VALUE__n24 = 6,
  STREAMING_PROTOBUFS__OTHER_FRACTION__VALUE__n28 = 7,
  STREAMING_PROTOBUFS__OTHER_FRACTION__VALUE__n32 = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__OTHER_FRACTION__VALUE)
} StreamingProtobufs__OtherFraction__Value;
typedef enum _StreamingProtobufs__RAMsg3SizeGroupA__Value {
  STREAMING_PROTOBUFS__RA__MSG3_SIZE_GROUP_A__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__RA__MSG3_SIZE_GROUP_A__VALUE__b56 = 1,
  STREAMING_PROTOBUFS__RA__MSG3_SIZE_GROUP_A__VALUE__b144 = 2,
  STREAMING_PROTOBUFS__RA__MSG3_SIZE_GROUP_A__VALUE__b208 = 3,
  STREAMING_PROTOBUFS__RA__MSG3_SIZE_GROUP_A__VALUE__b256 = 4,
  STREAMING_PROTOBUFS__RA__MSG3_SIZE_GROUP_A__VALUE__b282 = 5,
  STREAMING_PROTOBUFS__RA__MSG3_SIZE_GROUP_A__VALUE__b480 = 6,
  STREAMING_PROTOBUFS__RA__MSG3_SIZE_GROUP_A__VALUE__b640 = 7,
  STREAMING_PROTOBUFS__RA__MSG3_SIZE_GROUP_A__VALUE__b800 = 8,
  STREAMING_PROTOBUFS__RA__MSG3_SIZE_GROUP_A__VALUE__b1000 = 9,
  STREAMING_PROTOBUFS__RA__MSG3_SIZE_GROUP_A__VALUE__b72 = 10
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__RA__MSG3_SIZE_GROUP_A__VALUE)
} StreamingProtobufs__RAMsg3SizeGroupA__Value;
typedef enum _StreamingProtobufs__MessagePowerOffsetGroupB__Value {
  STREAMING_PROTOBUFS__MESSAGE_POWER_OFFSET_GROUP_B__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__MESSAGE_POWER_OFFSET_GROUP_B__VALUE__minusinfinity = 1,
  STREAMING_PROTOBUFS__MESSAGE_POWER_OFFSET_GROUP_B__VALUE__dB0 = 2,
  STREAMING_PROTOBUFS__MESSAGE_POWER_OFFSET_GROUP_B__VALUE__dB5 = 3,
  STREAMING_PROTOBUFS__MESSAGE_POWER_OFFSET_GROUP_B__VALUE__dB8 = 4,
  STREAMING_PROTOBUFS__MESSAGE_POWER_OFFSET_GROUP_B__VALUE__dB10 = 5,
  STREAMING_PROTOBUFS__MESSAGE_POWER_OFFSET_GROUP_B__VALUE__dB12 = 6,
  STREAMING_PROTOBUFS__MESSAGE_POWER_OFFSET_GROUP_B__VALUE__dB15 = 7,
  STREAMING_PROTOBUFS__MESSAGE_POWER_OFFSET_GROUP_B__VALUE__dB18 = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__MESSAGE_POWER_OFFSET_GROUP_B__VALUE)
} StreamingProtobufs__MessagePowerOffsetGroupB__Value;
typedef enum _StreamingProtobufs__RAContentionResolutionTimer__Value {
  STREAMING_PROTOBUFS__RA__CONTENTION_RESOLUTION_TIMER__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__RA__CONTENTION_RESOLUTION_TIMER__VALUE__sf8 = 1,
  STREAMING_PROTOBUFS__RA__CONTENTION_RESOLUTION_TIMER__VALUE__sf16 = 2,
  STREAMING_PROTOBUFS__RA__CONTENTION_RESOLUTION_TIMER__VALUE__sf24 = 3,
  STREAMING_PROTOBUFS__RA__CONTENTION_RESOLUTION_TIMER__VALUE__sf32 = 4,
  STREAMING_PROTOBUFS__RA__CONTENTION_RESOLUTION_TIMER__VALUE__sf40 = 5,
  STREAMING_PROTOBUFS__RA__CONTENTION_RESOLUTION_TIMER__VALUE__sf48 = 6,
  STREAMING_PROTOBUFS__RA__CONTENTION_RESOLUTION_TIMER__VALUE__sf56 = 7,
  STREAMING_PROTOBUFS__RA__CONTENTION_RESOLUTION_TIMER__VALUE__sf64 = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__RA__CONTENTION_RESOLUTION_TIMER__VALUE)
} StreamingProtobufs__RAContentionResolutionTimer__Value;
typedef enum _StreamingProtobufs__RestrictedSetConfig__Value {
  STREAMING_PROTOBUFS__RESTRICTED_SET_CONFIG__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__RESTRICTED_SET_CONFIG__VALUE__unrestrictedSet = 1,
  STREAMING_PROTOBUFS__RESTRICTED_SET_CONFIG__VALUE__restrictedSetTypeA = 2,
  STREAMING_PROTOBUFS__RESTRICTED_SET_CONFIG__VALUE__restrictedSetTypeB = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__RESTRICTED_SET_CONFIG__VALUE)
} StreamingProtobufs__RestrictedSetConfig__Value;
typedef enum _StreamingProtobufs__PUCCHGroupHopping__Value {
  STREAMING_PROTOBUFS__PUCCH__GROUP_HOPPING__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__PUCCH__GROUP_HOPPING__VALUE__neither = 1,
  STREAMING_PROTOBUFS__PUCCH__GROUP_HOPPING__VALUE__enable = 2,
  STREAMING_PROTOBUFS__PUCCH__GROUP_HOPPING__VALUE__disable = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PUCCH__GROUP_HOPPING__VALUE)
} StreamingProtobufs__PUCCHGroupHopping__Value;
typedef enum _StreamingProtobufs__NTimingAdvanceOffset__Value {
  STREAMING_PROTOBUFS__N__TIMING_ADVANCE_OFFSET__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__N__TIMING_ADVANCE_OFFSET__VALUE__n0 = 1,
  STREAMING_PROTOBUFS__N__TIMING_ADVANCE_OFFSET__VALUE__n25600 = 2,
  STREAMING_PROTOBUFS__N__TIMING_ADVANCE_OFFSET__VALUE__n39936 = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__N__TIMING_ADVANCE_OFFSET__VALUE)
} StreamingProtobufs__NTimingAdvanceOffset__Value;
typedef enum _StreamingProtobufs__SSBPeriodicityServingCell__Value {
  STREAMING_PROTOBUFS__SSB__PERIODICITY_SERVING_CELL__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__SSB__PERIODICITY_SERVING_CELL__VALUE__ms5 = 1,
  STREAMING_PROTOBUFS__SSB__PERIODICITY_SERVING_CELL__VALUE__ms10 = 2,
  STREAMING_PROTOBUFS__SSB__PERIODICITY_SERVING_CELL__VALUE__ms20 = 3,
  STREAMING_PROTOBUFS__SSB__PERIODICITY_SERVING_CELL__VALUE__ms40 = 4,
  STREAMING_PROTOBUFS__SSB__PERIODICITY_SERVING_CELL__VALUE__ms80 = 5,
  STREAMING_PROTOBUFS__SSB__PERIODICITY_SERVING_CELL__VALUE__ms160 = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SSB__PERIODICITY_SERVING_CELL__VALUE)
} StreamingProtobufs__SSBPeriodicityServingCell__Value;
typedef enum _StreamingProtobufs__DMRSTypeAPosition__Value {
  STREAMING_PROTOBUFS__DMRS__TYPE_A__POSITION__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__DMRS__TYPE_A__POSITION__VALUE__pos2 = 1,
  STREAMING_PROTOBUFS__DMRS__TYPE_A__POSITION__VALUE__pos3 = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__DMRS__TYPE_A__POSITION__VALUE)
} StreamingProtobufs__DMRSTypeAPosition__Value;
typedef enum _StreamingProtobufs__CarrierBandwidthDL__Value {
  STREAMING_PROTOBUFS__CARRIER_BANDWIDTH_DL__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__CARRIER_BANDWIDTH_DL__VALUE__n6 = 1,
  STREAMING_PROTOBUFS__CARRIER_BANDWIDTH_DL__VALUE__n15 = 2,
  STREAMING_PROTOBUFS__CARRIER_BANDWIDTH_DL__VALUE__n25 = 3,
  STREAMING_PROTOBUFS__CARRIER_BANDWIDTH_DL__VALUE__n50 = 4,
  STREAMING_PROTOBUFS__CARRIER_BANDWIDTH_DL__VALUE__n75 = 5,
  STREAMING_PROTOBUFS__CARRIER_BANDWIDTH_DL__VALUE__n100 = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CARRIER_BANDWIDTH_DL__VALUE)
} StreamingProtobufs__CarrierBandwidthDL__Value;
typedef enum _StreamingProtobufs__RadioframeAllocationPeriod__Value {
  STREAMING_PROTOBUFS__RADIOFRAME_ALLOCATION_PERIOD__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__RADIOFRAME_ALLOCATION_PERIOD__VALUE__n1 = 1,
  STREAMING_PROTOBUFS__RADIOFRAME_ALLOCATION_PERIOD__VALUE__n2 = 2,
  STREAMING_PROTOBUFS__RADIOFRAME_ALLOCATION_PERIOD__VALUE__n4 = 3,
  STREAMING_PROTOBUFS__RADIOFRAME_ALLOCATION_PERIOD__VALUE__n8 = 4,
  STREAMING_PROTOBUFS__RADIOFRAME_ALLOCATION_PERIOD__VALUE__n16 = 5,
  STREAMING_PROTOBUFS__RADIOFRAME_ALLOCATION_PERIOD__VALUE__n32 = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__RADIOFRAME_ALLOCATION_PERIOD__VALUE)
} StreamingProtobufs__RadioframeAllocationPeriod__Value;
typedef enum _StreamingProtobufs__NrofCRSPorts__Value {
  STREAMING_PROTOBUFS__NROF_CRS__PORTS__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__NROF_CRS__PORTS__VALUE__n1 = 1,
  STREAMING_PROTOBUFS__NROF_CRS__PORTS__VALUE__n2 = 2,
  STREAMING_PROTOBUFS__NROF_CRS__PORTS__VALUE__n4 = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__NROF_CRS__PORTS__VALUE)
} StreamingProtobufs__NrofCRSPorts__Value;
typedef enum _StreamingProtobufs__VShift__Value {
  STREAMING_PROTOBUFS__V__SHIFT__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__V__SHIFT__VALUE__n0 = 1,
  STREAMING_PROTOBUFS__V__SHIFT__VALUE__n1 = 2,
  STREAMING_PROTOBUFS__V__SHIFT__VALUE__n2 = 3,
  STREAMING_PROTOBUFS__V__SHIFT__VALUE__n3 = 4,
  STREAMING_PROTOBUFS__V__SHIFT__VALUE__n4 = 5,
  STREAMING_PROTOBUFS__V__SHIFT__VALUE__n5 = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__V__SHIFT__VALUE)
} StreamingProtobufs__VShift__Value;
typedef enum _StreamingProtobufs__Dummy__Value {
  STREAMING_PROTOBUFS__DUMMY__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__DUMMY__VALUE__dynamic = 1,
  STREAMING_PROTOBUFS__DUMMY__VALUE__semiStatic = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__DUMMY__VALUE)
} StreamingProtobufs__Dummy__Value;
typedef enum _StreamingProtobufs__DLULTransmissionPeriodicity__Value {
  STREAMING_PROTOBUFS__DL__UL__TRANSMISSION_PERIODICITY__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__DL__UL__TRANSMISSION_PERIODICITY__VALUE__ms0p5 = 1,
  STREAMING_PROTOBUFS__DL__UL__TRANSMISSION_PERIODICITY__VALUE__ms0p625 = 2,
  STREAMING_PROTOBUFS__DL__UL__TRANSMISSION_PERIODICITY__VALUE__ms1 = 3,
  STREAMING_PROTOBUFS__DL__UL__TRANSMISSION_PERIODICITY__VALUE__ms1p25 = 4,
  STREAMING_PROTOBUFS__DL__UL__TRANSMISSION_PERIODICITY__VALUE__ms2 = 5,
  STREAMING_PROTOBUFS__DL__UL__TRANSMISSION_PERIODICITY__VALUE__ms2p5 = 6,
  STREAMING_PROTOBUFS__DL__UL__TRANSMISSION_PERIODICITY__VALUE__ms5 = 7,
  STREAMING_PROTOBUFS__DL__UL__TRANSMISSION_PERIODICITY__VALUE__ms10 = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__DL__UL__TRANSMISSION_PERIODICITY__VALUE)
} StreamingProtobufs__DLULTransmissionPeriodicity__Value;
typedef enum _StreamingProtobufs__DLULTransmissionPeriodicityV1530__Value {
  STREAMING_PROTOBUFS__DL__UL__TRANSMISSION_PERIODICITY_V1530__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__DL__UL__TRANSMISSION_PERIODICITY_V1530__VALUE__ms3 = 1,
  STREAMING_PROTOBUFS__DL__UL__TRANSMISSION_PERIODICITY_V1530__VALUE__ms4 = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__DL__UL__TRANSMISSION_PERIODICITY_V1530__VALUE)
} StreamingProtobufs__DLULTransmissionPeriodicityV1530__Value;
typedef enum _StreamingProtobufs__T304__Value {
  STREAMING_PROTOBUFS__T304__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__T304__VALUE__ms50 = 1,
  STREAMING_PROTOBUFS__T304__VALUE__ms100 = 2,
  STREAMING_PROTOBUFS__T304__VALUE__ms150 = 3,
  STREAMING_PROTOBUFS__T304__VALUE__ms200 = 4,
  STREAMING_PROTOBUFS__T304__VALUE__ms500 = 5,
  STREAMING_PROTOBUFS__T304__VALUE__ms1000 = 6,
  STREAMING_PROTOBUFS__T304__VALUE__ms2000 = 7,
  STREAMING_PROTOBUFS__T304__VALUE__ms10000 = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__T304__VALUE)
} StreamingProtobufs__T304__Value;
typedef enum _StreamingProtobufs__PowerRampingStepHighPriority__Value {
  STREAMING_PROTOBUFS__POWER_RAMPING_STEP_HIGH_PRIORITY__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__POWER_RAMPING_STEP_HIGH_PRIORITY__VALUE__dB0 = 1,
  STREAMING_PROTOBUFS__POWER_RAMPING_STEP_HIGH_PRIORITY__VALUE__dB2 = 2,
  STREAMING_PROTOBUFS__POWER_RAMPING_STEP_HIGH_PRIORITY__VALUE__dB4 = 3,
  STREAMING_PROTOBUFS__POWER_RAMPING_STEP_HIGH_PRIORITY__VALUE__dB6 = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__POWER_RAMPING_STEP_HIGH_PRIORITY__VALUE)
} StreamingProtobufs__PowerRampingStepHighPriority__Value;
typedef enum _StreamingProtobufs__ScalingFactorBI__Value {
  STREAMING_PROTOBUFS__SCALING_FACTOR_BI__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__SCALING_FACTOR_BI__VALUE__zero = 1,
  STREAMING_PROTOBUFS__SCALING_FACTOR_BI__VALUE__dot25 = 2,
  STREAMING_PROTOBUFS__SCALING_FACTOR_BI__VALUE__dot5 = 3,
  STREAMING_PROTOBUFS__SCALING_FACTOR_BI__VALUE__dot75 = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SCALING_FACTOR_BI__VALUE)
} StreamingProtobufs__ScalingFactorBI__Value;
typedef enum _StreamingProtobufs__Duration__Value {
  STREAMING_PROTOBUFS__DURATION__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__DURATION__VALUE__sf1 = 1,
  STREAMING_PROTOBUFS__DURATION__VALUE__sf2 = 2,
  STREAMING_PROTOBUFS__DURATION__VALUE__sf3 = 3,
  STREAMING_PROTOBUFS__DURATION__VALUE__sf4 = 4,
  STREAMING_PROTOBUFS__DURATION__VALUE__sf5 = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__DURATION__VALUE)
} StreamingProtobufs__Duration__Value;
typedef enum _StreamingProtobufs__Periodicity__Value {
  STREAMING_PROTOBUFS__PERIODICITY__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__PERIODICITY__VALUE__sf5 = 1,
  STREAMING_PROTOBUFS__PERIODICITY__VALUE__sf10 = 2,
  STREAMING_PROTOBUFS__PERIODICITY__VALUE__sf20 = 3,
  STREAMING_PROTOBUFS__PERIODICITY__VALUE__sf40 = 4,
  STREAMING_PROTOBUFS__PERIODICITY__VALUE__sf80 = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PERIODICITY__VALUE)
} StreamingProtobufs__Periodicity__Value;
typedef enum _StreamingProtobufs__T310__Value {
  STREAMING_PROTOBUFS__T310__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__T310__VALUE__ms0 = 1,
  STREAMING_PROTOBUFS__T310__VALUE__ms50 = 2,
  STREAMING_PROTOBUFS__T310__VALUE__ms100 = 3,
  STREAMING_PROTOBUFS__T310__VALUE__ms200 = 4,
  STREAMING_PROTOBUFS__T310__VALUE__ms500 = 5,
  STREAMING_PROTOBUFS__T310__VALUE__ms1000 = 6,
  STREAMING_PROTOBUFS__T310__VALUE__ms2000 = 7,
  STREAMING_PROTOBUFS__T310__VALUE__ms4000 = 8,
  STREAMING_PROTOBUFS__T310__VALUE__ms6000 = 9
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__T310__VALUE)
} StreamingProtobufs__T310__Value;
typedef enum _StreamingProtobufs__N310__Value {
  STREAMING_PROTOBUFS__N310__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__N310__VALUE__n1 = 1,
  STREAMING_PROTOBUFS__N310__VALUE__n2 = 2,
  STREAMING_PROTOBUFS__N310__VALUE__n3 = 3,
  STREAMING_PROTOBUFS__N310__VALUE__n4 = 4,
  STREAMING_PROTOBUFS__N310__VALUE__n6 = 5,
  STREAMING_PROTOBUFS__N310__VALUE__n8 = 6,
  STREAMING_PROTOBUFS__N310__VALUE__n10 = 7,
  STREAMING_PROTOBUFS__N310__VALUE__n20 = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__N310__VALUE)
} StreamingProtobufs__N310__Value;
typedef enum _StreamingProtobufs__N311__Value {
  STREAMING_PROTOBUFS__N311__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__N311__VALUE__n1 = 1,
  STREAMING_PROTOBUFS__N311__VALUE__n2 = 2,
  STREAMING_PROTOBUFS__N311__VALUE__n3 = 3,
  STREAMING_PROTOBUFS__N311__VALUE__n4 = 4,
  STREAMING_PROTOBUFS__N311__VALUE__n5 = 5,
  STREAMING_PROTOBUFS__N311__VALUE__n6 = 6,
  STREAMING_PROTOBUFS__N311__VALUE__n8 = 7,
  STREAMING_PROTOBUFS__N311__VALUE__n10 = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__N311__VALUE)
} StreamingProtobufs__N311__Value;
typedef enum _StreamingProtobufs__T311V1530__Value {
  STREAMING_PROTOBUFS__T311_V1530__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__T311_V1530__VALUE__ms1000 = 1,
  STREAMING_PROTOBUFS__T311_V1530__VALUE__ms3000 = 2,
  STREAMING_PROTOBUFS__T311_V1530__VALUE__ms5000 = 3,
  STREAMING_PROTOBUFS__T311_V1530__VALUE__ms10000 = 4,
  STREAMING_PROTOBUFS__T311_V1530__VALUE__ms15000 = 5,
  STREAMING_PROTOBUFS__T311_V1530__VALUE__ms20000 = 6,
  STREAMING_PROTOBUFS__T311_V1530__VALUE__ms30000 = 7
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__T311_V1530__VALUE)
} StreamingProtobufs__T311V1530__Value;
typedef enum _StreamingProtobufs__RlmInSyncOutOfSyncThreshold__Value {
  STREAMING_PROTOBUFS__RLM_IN_SYNC_OUT_OF_SYNC_THRESHOLD__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__RLM_IN_SYNC_OUT_OF_SYNC_THRESHOLD__VALUE__n1 = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__RLM_IN_SYNC_OUT_OF_SYNC_THRESHOLD__VALUE)
} StreamingProtobufs__RlmInSyncOutOfSyncThreshold__Value;
typedef enum _StreamingProtobufs__TimeFrequencySet__Value {
  STREAMING_PROTOBUFS__TIME_FREQUENCY_SET__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__TIME_FREQUENCY_SET__VALUE__set0 = 1,
  STREAMING_PROTOBUFS__TIME_FREQUENCY_SET__VALUE__set1 = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__TIME_FREQUENCY_SET__VALUE)
} StreamingProtobufs__TimeFrequencySet__Value;
typedef enum _StreamingProtobufs__DMRSType__Value {
  STREAMING_PROTOBUFS__DMRS__TYPE__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__DMRS__TYPE__VALUE__type2 = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__DMRS__TYPE__VALUE)
} StreamingProtobufs__DMRSType__Value;
typedef enum _StreamingProtobufs__DMRSAdditionalPosition__Value {
  STREAMING_PROTOBUFS__DMRS__ADDITIONAL_POSITION__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__DMRS__ADDITIONAL_POSITION__VALUE__pos0 = 1,
  STREAMING_PROTOBUFS__DMRS__ADDITIONAL_POSITION__VALUE__pos1 = 2,
  STREAMING_PROTOBUFS__DMRS__ADDITIONAL_POSITION__VALUE__pos3 = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__DMRS__ADDITIONAL_POSITION__VALUE)
} StreamingProtobufs__DMRSAdditionalPosition__Value;
typedef enum _StreamingProtobufs__MaxLength__Value {
  STREAMING_PROTOBUFS__MAX_LENGTH__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__MAX_LENGTH__VALUE__len2 = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__MAX_LENGTH__VALUE)
} StreamingProtobufs__MaxLength__Value;
typedef enum _StreamingProtobufs__ResourceElementOffset__Value {
  STREAMING_PROTOBUFS__RESOURCE_ELEMENT_OFFSET__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__RESOURCE_ELEMENT_OFFSET__VALUE__offset01 = 1,
  STREAMING_PROTOBUFS__RESOURCE_ELEMENT_OFFSET__VALUE__offset10 = 2,
  STREAMING_PROTOBUFS__RESOURCE_ELEMENT_OFFSET__VALUE__offset11 = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__RESOURCE_ELEMENT_OFFSET__VALUE)
} StreamingProtobufs__ResourceElementOffset__Value;
typedef enum _StreamingProtobufs__QCLType__Value {
  STREAMING_PROTOBUFS__QCL__TYPE__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__QCL__TYPE__VALUE__typeA = 1,
  STREAMING_PROTOBUFS__QCL__TYPE__VALUE__typeB = 2,
  STREAMING_PROTOBUFS__QCL__TYPE__VALUE__typeC = 3,
  STREAMING_PROTOBUFS__QCL__TYPE__VALUE__typeD = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__QCL__TYPE__VALUE)
} StreamingProtobufs__QCLType__Value;
typedef enum _StreamingProtobufs__VRBToPRBInterleaver__Value {
  STREAMING_PROTOBUFS__VRB__TO_PRB__INTERLEAVER__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__VRB__TO_PRB__INTERLEAVER__VALUE__n2 = 1,
  STREAMING_PROTOBUFS__VRB__TO_PRB__INTERLEAVER__VALUE__n4 = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__VRB__TO_PRB__INTERLEAVER__VALUE)
} StreamingProtobufs__VRBToPRBInterleaver__Value;
typedef enum _StreamingProtobufs__ResourceAllocation__Value {
  STREAMING_PROTOBUFS__RESOURCE_ALLOCATION__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__RESOURCE_ALLOCATION__VALUE__resourceAllocationType0 = 1,
  STREAMING_PROTOBUFS__RESOURCE_ALLOCATION__VALUE__resourceAllocationType1 = 2,
  STREAMING_PROTOBUFS__RESOURCE_ALLOCATION__VALUE__dynamicSwitch = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__RESOURCE_ALLOCATION__VALUE)
} StreamingProtobufs__ResourceAllocation__Value;
typedef enum _StreamingProtobufs__PDSCHAggregationFactor__Value {
  STREAMING_PROTOBUFS__PDSCH__AGGREGATION_FACTOR__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__PDSCH__AGGREGATION_FACTOR__VALUE__n2 = 1,
  STREAMING_PROTOBUFS__PDSCH__AGGREGATION_FACTOR__VALUE__n4 = 2,
  STREAMING_PROTOBUFS__PDSCH__AGGREGATION_FACTOR__VALUE__n8 = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PDSCH__AGGREGATION_FACTOR__VALUE)
} StreamingProtobufs__PDSCHAggregationFactor__Value;
typedef enum _StreamingProtobufs__RBGSize__Value {
  STREAMING_PROTOBUFS__RBG__SIZE__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__RBG__SIZE__VALUE__config1 = 1,
  STREAMING_PROTOBUFS__RBG__SIZE__VALUE__config2 = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__RBG__SIZE__VALUE)
} StreamingProtobufs__RBGSize__Value;
typedef enum _StreamingProtobufs__MCSTable__Value {
  STREAMING_PROTOBUFS__MCS__TABLE__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__MCS__TABLE__VALUE__qam256 = 1,
  STREAMING_PROTOBUFS__MCS__TABLE__VALUE__qam64LowSE = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__MCS__TABLE__VALUE)
} StreamingProtobufs__MCSTable__Value;
typedef enum _StreamingProtobufs__MaxNrofCodeWordsScheduledByDCI__Value {
  STREAMING_PROTOBUFS__MAX_NROF_CODE_WORDS_SCHEDULED_BY_DCI__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__MAX_NROF_CODE_WORDS_SCHEDULED_BY_DCI__VALUE__n1 = 1,
  STREAMING_PROTOBUFS__MAX_NROF_CODE_WORDS_SCHEDULED_BY_DCI__VALUE__n2 = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__MAX_NROF_CODE_WORDS_SCHEDULED_BY_DCI__VALUE)
} StreamingProtobufs__MaxNrofCodeWordsScheduledByDCI__Value;
typedef enum _StreamingProtobufs__BundleSize__Value {
  STREAMING_PROTOBUFS__BUNDLE_SIZE__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__BUNDLE_SIZE__VALUE__n4 = 1,
  STREAMING_PROTOBUFS__BUNDLE_SIZE__VALUE__wideband = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__BUNDLE_SIZE__VALUE)
} StreamingProtobufs__BundleSize__Value;
typedef enum _StreamingProtobufs__BundleSizeSet1__Value {
  STREAMING_PROTOBUFS__BUNDLE_SIZE_SET1__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__BUNDLE_SIZE_SET1__VALUE__n4 = 1,
  STREAMING_PROTOBUFS__BUNDLE_SIZE_SET1__VALUE__wideband = 2,
  STREAMING_PROTOBUFS__BUNDLE_SIZE_SET1__VALUE__n2_wideband = 3,
  STREAMING_PROTOBUFS__BUNDLE_SIZE_SET1__VALUE__n4_wideband = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__BUNDLE_SIZE_SET1__VALUE)
} StreamingProtobufs__BundleSizeSet1__Value;
typedef enum _StreamingProtobufs__BundleSizeSet2__Value {
  STREAMING_PROTOBUFS__BUNDLE_SIZE_SET2__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__BUNDLE_SIZE_SET2__VALUE__n4 = 1,
  STREAMING_PROTOBUFS__BUNDLE_SIZE_SET2__VALUE__wideband = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__BUNDLE_SIZE_SET2__VALUE)
} StreamingProtobufs__BundleSizeSet2__Value;
typedef enum _StreamingProtobufs__NrofPorts__Value {
  STREAMING_PROTOBUFS__NROF_PORTS__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__NROF_PORTS__VALUE__p1 = 1,
  STREAMING_PROTOBUFS__NROF_PORTS__VALUE__p2 = 2,
  STREAMING_PROTOBUFS__NROF_PORTS__VALUE__p4 = 3,
  STREAMING_PROTOBUFS__NROF_PORTS__VALUE__p8 = 4,
  STREAMING_PROTOBUFS__NROF_PORTS__VALUE__p12 = 5,
  STREAMING_PROTOBUFS__NROF_PORTS__VALUE__p16 = 6,
  STREAMING_PROTOBUFS__NROF_PORTS__VALUE__p24 = 7,
  STREAMING_PROTOBUFS__NROF_PORTS__VALUE__p32 = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__NROF_PORTS__VALUE)
} StreamingProtobufs__NrofPorts__Value;
typedef enum _StreamingProtobufs__CDMType__Value {
  STREAMING_PROTOBUFS__CDM__TYPE__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__CDM__TYPE__VALUE__noCDM = 1,
  STREAMING_PROTOBUFS__CDM__TYPE__VALUE__fd_CDM2 = 2,
  STREAMING_PROTOBUFS__CDM__TYPE__VALUE__cdm4_FD2_TD2 = 3,
  STREAMING_PROTOBUFS__CDM__TYPE__VALUE__cdm8_FD2_TD4 = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CDM__TYPE__VALUE)
} StreamingProtobufs__CDMType__Value;
typedef enum _StreamingProtobufs__Dot5__Value {
  STREAMING_PROTOBUFS__DOT5__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__DOT5__VALUE__evenPRBs = 1,
  STREAMING_PROTOBUFS__DOT5__VALUE__oddPRBs = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__DOT5__VALUE)
} StreamingProtobufs__Dot5__Value;
typedef enum _StreamingProtobufs__SPSConfigPeriodicity__Value {
  STREAMING_PROTOBUFS__SPS__CONFIG_PERIODICITY__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__SPS__CONFIG_PERIODICITY__VALUE__ms10 = 1,
  STREAMING_PROTOBUFS__SPS__CONFIG_PERIODICITY__VALUE__ms20 = 2,
  STREAMING_PROTOBUFS__SPS__CONFIG_PERIODICITY__VALUE__ms32 = 3,
  STREAMING_PROTOBUFS__SPS__CONFIG_PERIODICITY__VALUE__ms40 = 4,
  STREAMING_PROTOBUFS__SPS__CONFIG_PERIODICITY__VALUE__ms64 = 5,
  STREAMING_PROTOBUFS__SPS__CONFIG_PERIODICITY__VALUE__ms80 = 6,
  STREAMING_PROTOBUFS__SPS__CONFIG_PERIODICITY__VALUE__ms128 = 7,
  STREAMING_PROTOBUFS__SPS__CONFIG_PERIODICITY__VALUE__ms160 = 8,
  STREAMING_PROTOBUFS__SPS__CONFIG_PERIODICITY__VALUE__ms320 = 9,
  STREAMING_PROTOBUFS__SPS__CONFIG_PERIODICITY__VALUE__ms640 = 10
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SPS__CONFIG_PERIODICITY__VALUE)
} StreamingProtobufs__SPSConfigPeriodicity__Value;
typedef enum _StreamingProtobufs__SPSMCSTable__Value {
  STREAMING_PROTOBUFS__SPS__MCS__TABLE__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__SPS__MCS__TABLE__VALUE__qam64LowSE = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SPS__MCS__TABLE__VALUE)
} StreamingProtobufs__SPSMCSTable__Value;
typedef enum _StreamingProtobufs__Purpose__Value {
  STREAMING_PROTOBUFS__PURPOSE__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__PURPOSE__VALUE__beamFailure = 1,
  STREAMING_PROTOBUFS__PURPOSE__VALUE__rlf = 2,
  STREAMING_PROTOBUFS__PURPOSE__VALUE__both = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PURPOSE__VALUE)
} StreamingProtobufs__Purpose__Value;
typedef enum _StreamingProtobufs__BeamFailureInstanceMaxCount__Value {
  STREAMING_PROTOBUFS__BEAM_FAILURE_INSTANCE_MAX_COUNT__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__BEAM_FAILURE_INSTANCE_MAX_COUNT__VALUE__n1 = 1,
  STREAMING_PROTOBUFS__BEAM_FAILURE_INSTANCE_MAX_COUNT__VALUE__n2 = 2,
  STREAMING_PROTOBUFS__BEAM_FAILURE_INSTANCE_MAX_COUNT__VALUE__n3 = 3,
  STREAMING_PROTOBUFS__BEAM_FAILURE_INSTANCE_MAX_COUNT__VALUE__n4 = 4,
  STREAMING_PROTOBUFS__BEAM_FAILURE_INSTANCE_MAX_COUNT__VALUE__n5 = 5,
  STREAMING_PROTOBUFS__BEAM_FAILURE_INSTANCE_MAX_COUNT__VALUE__n6 = 6,
  STREAMING_PROTOBUFS__BEAM_FAILURE_INSTANCE_MAX_COUNT__VALUE__n8 = 7,
  STREAMING_PROTOBUFS__BEAM_FAILURE_INSTANCE_MAX_COUNT__VALUE__n10 = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__BEAM_FAILURE_INSTANCE_MAX_COUNT__VALUE)
} StreamingProtobufs__BeamFailureInstanceMaxCount__Value;
typedef enum _StreamingProtobufs__BeamFailureDetectionTimer__Value {
  STREAMING_PROTOBUFS__BEAM_FAILURE_DETECTION_TIMER__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__BEAM_FAILURE_DETECTION_TIMER__VALUE__pbfd1 = 1,
  STREAMING_PROTOBUFS__BEAM_FAILURE_DETECTION_TIMER__VALUE__pbfd2 = 2,
  STREAMING_PROTOBUFS__BEAM_FAILURE_DETECTION_TIMER__VALUE__pbfd3 = 3,
  STREAMING_PROTOBUFS__BEAM_FAILURE_DETECTION_TIMER__VALUE__pbfd4 = 4,
  STREAMING_PROTOBUFS__BEAM_FAILURE_DETECTION_TIMER__VALUE__pbfd5 = 5,
  STREAMING_PROTOBUFS__BEAM_FAILURE_DETECTION_TIMER__VALUE__pbfd6 = 6,
  STREAMING_PROTOBUFS__BEAM_FAILURE_DETECTION_TIMER__VALUE__pbfd8 = 7,
  STREAMING_PROTOBUFS__BEAM_FAILURE_DETECTION_TIMER__VALUE__pbfd10 = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__BEAM_FAILURE_DETECTION_TIMER__VALUE)
} StreamingProtobufs__BeamFailureDetectionTimer__Value;
typedef enum _StreamingProtobufs__BWPInactivityTimer__Value {
  STREAMING_PROTOBUFS__BWP__INACTIVITY_TIMER__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__BWP__INACTIVITY_TIMER__VALUE__ms2 = 1,
  STREAMING_PROTOBUFS__BWP__INACTIVITY_TIMER__VALUE__ms3 = 2,
  STREAMING_PROTOBUFS__BWP__INACTIVITY_TIMER__VALUE__ms4 = 3,
  STREAMING_PROTOBUFS__BWP__INACTIVITY_TIMER__VALUE__ms5 = 4,
  STREAMING_PROTOBUFS__BWP__INACTIVITY_TIMER__VALUE__ms6 = 5,
  STREAMING_PROTOBUFS__BWP__INACTIVITY_TIMER__VALUE__ms8 = 6,
  STREAMING_PROTOBUFS__BWP__INACTIVITY_TIMER__VALUE__ms10 = 7,
  STREAMING_PROTOBUFS__BWP__INACTIVITY_TIMER__VALUE__ms20 = 8,
  STREAMING_PROTOBUFS__BWP__INACTIVITY_TIMER__VALUE__ms30 = 9,
  STREAMING_PROTOBUFS__BWP__INACTIVITY_TIMER__VALUE__ms40 = 10,
  STREAMING_PROTOBUFS__BWP__INACTIVITY_TIMER__VALUE__ms50 = 11,
  STREAMING_PROTOBUFS__BWP__INACTIVITY_TIMER__VALUE__ms60 = 12,
  STREAMING_PROTOBUFS__BWP__INACTIVITY_TIMER__VALUE__ms80 = 13,
  STREAMING_PROTOBUFS__BWP__INACTIVITY_TIMER__VALUE__ms100 = 14,
  STREAMING_PROTOBUFS__BWP__INACTIVITY_TIMER__VALUE__ms200 = 15,
  STREAMING_PROTOBUFS__BWP__INACTIVITY_TIMER__VALUE__ms300 = 16,
  STREAMING_PROTOBUFS__BWP__INACTIVITY_TIMER__VALUE__ms500 = 17,
  STREAMING_PROTOBUFS__BWP__INACTIVITY_TIMER__VALUE__ms750 = 18,
  STREAMING_PROTOBUFS__BWP__INACTIVITY_TIMER__VALUE__ms1280 = 19,
  STREAMING_PROTOBUFS__BWP__INACTIVITY_TIMER__VALUE__ms1920 = 20,
  STREAMING_PROTOBUFS__BWP__INACTIVITY_TIMER__VALUE__ms2560 = 21
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__BWP__INACTIVITY_TIMER__VALUE)
} StreamingProtobufs__BWPInactivityTimer__Value;
typedef enum _StreamingProtobufs__OCCLength__Value {
  STREAMING_PROTOBUFS__OCC__LENGTH__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__OCC__LENGTH__VALUE__n2 = 1,
  STREAMING_PROTOBUFS__OCC__LENGTH__VALUE__n4 = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__OCC__LENGTH__VALUE)
} StreamingProtobufs__OCCLength__Value;
typedef enum _StreamingProtobufs__OCCIndex__Value {
  STREAMING_PROTOBUFS__OCC__INDEX__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__OCC__INDEX__VALUE__n0 = 1,
  STREAMING_PROTOBUFS__OCC__INDEX__VALUE__n1 = 2,
  STREAMING_PROTOBUFS__OCC__INDEX__VALUE__n2 = 3,
  STREAMING_PROTOBUFS__OCC__INDEX__VALUE__n3 = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__OCC__INDEX__VALUE)
} StreamingProtobufs__OCCIndex__Value;
typedef enum _StreamingProtobufs__PUCCHMaxCodeRate__Value {
  STREAMING_PROTOBUFS__PUCCH__MAX_CODE_RATE__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__PUCCH__MAX_CODE_RATE__VALUE__zeroDot08 = 1,
  STREAMING_PROTOBUFS__PUCCH__MAX_CODE_RATE__VALUE__zeroDot15 = 2,
  STREAMING_PROTOBUFS__PUCCH__MAX_CODE_RATE__VALUE__zeroDot25 = 3,
  STREAMING_PROTOBUFS__PUCCH__MAX_CODE_RATE__VALUE__zeroDot35 = 4,
  STREAMING_PROTOBUFS__PUCCH__MAX_CODE_RATE__VALUE__zeroDot45 = 5,
  STREAMING_PROTOBUFS__PUCCH__MAX_CODE_RATE__VALUE__zeroDot60 = 6,
  STREAMING_PROTOBUFS__PUCCH__MAX_CODE_RATE__VALUE__zeroDot80 = 7
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PUCCH__MAX_CODE_RATE__VALUE)
} StreamingProtobufs__PUCCHMaxCodeRate__Value;
typedef enum _StreamingProtobufs__NrofSlots__Value {
  STREAMING_PROTOBUFS__NROF_SLOTS__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__NROF_SLOTS__VALUE__n2 = 1,
  STREAMING_PROTOBUFS__NROF_SLOTS__VALUE__n4 = 2,
  STREAMING_PROTOBUFS__NROF_SLOTS__VALUE__n8 = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__NROF_SLOTS__VALUE)
} StreamingProtobufs__NrofSlots__Value;
typedef enum _StreamingProtobufs__ClosedLoopIndex__Value {
  STREAMING_PROTOBUFS__CLOSED_LOOP_INDEX__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__CLOSED_LOOP_INDEX__VALUE__i0 = 1,
  STREAMING_PROTOBUFS__CLOSED_LOOP_INDEX__VALUE__i1 = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CLOSED_LOOP_INDEX__VALUE)
} StreamingProtobufs__ClosedLoopIndex__Value;
typedef enum _StreamingProtobufs__TwoPUCCHPCAdjustmentStates__Value {
  STREAMING_PROTOBUFS__TWO_PUCCH__PC__ADJUSTMENT_STATES__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__TWO_PUCCH__PC__ADJUSTMENT_STATES__VALUE__twoStates = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__TWO_PUCCH__PC__ADJUSTMENT_STATES__VALUE)
} StreamingProtobufs__TwoPUCCHPCAdjustmentStates__Value;
typedef enum _StreamingProtobufs__RateMatching__Value {
  STREAMING_PROTOBUFS__RATE_MATCHING__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__RATE_MATCHING__VALUE__limitedBufferRM = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__RATE_MATCHING__VALUE)
} StreamingProtobufs__RateMatching__Value;
typedef enum _StreamingProtobufs__SRSSwitchFromCarrier__Value {
  STREAMING_PROTOBUFS__SRS__SWITCH_FROM_CARRIER__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__SRS__SWITCH_FROM_CARRIER__VALUE__sUL = 1,
  STREAMING_PROTOBUFS__SRS__SWITCH_FROM_CARRIER__VALUE__nUL = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SRS__SWITCH_FROM_CARRIER__VALUE)
} StreamingProtobufs__SRSSwitchFromCarrier__Value;
typedef enum _StreamingProtobufs__TxConfig__Value {
  STREAMING_PROTOBUFS__TX__CONFIG__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__TX__CONFIG__VALUE__codebook = 1,
  STREAMING_PROTOBUFS__TX__CONFIG__VALUE__nonCodebook = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__TX__CONFIG__VALUE)
} StreamingProtobufs__TxConfig__Value;
typedef enum _StreamingProtobufs__MaxNrofPorts__Value {
  STREAMING_PROTOBUFS__MAX_NROF_PORTS__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__MAX_NROF_PORTS__VALUE__n1 = 1,
  STREAMING_PROTOBUFS__MAX_NROF_PORTS__VALUE__n2 = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__MAX_NROF_PORTS__VALUE)
} StreamingProtobufs__MaxNrofPorts__Value;
typedef enum _StreamingProtobufs__PTRSPower__Value {
  STREAMING_PROTOBUFS__PTRS__POWER__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__PTRS__POWER__VALUE__p00 = 1,
  STREAMING_PROTOBUFS__PTRS__POWER__VALUE__p01 = 2,
  STREAMING_PROTOBUFS__PTRS__POWER__VALUE__p10 = 3,
  STREAMING_PROTOBUFS__PTRS__POWER__VALUE__p11 = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PTRS__POWER__VALUE)
} StreamingProtobufs__PTRSPower__Value;
typedef enum _StreamingProtobufs__TimeDensityTransformPrecoding__Value {
  STREAMING_PROTOBUFS__TIME_DENSITY_TRANSFORM_PRECODING__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__TIME_DENSITY_TRANSFORM_PRECODING__VALUE__d2 = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__TIME_DENSITY_TRANSFORM_PRECODING__VALUE)
} StreamingProtobufs__TimeDensityTransformPrecoding__Value;
typedef enum _StreamingProtobufs__Alpha__Value {
  STREAMING_PROTOBUFS__ALPHA__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__ALPHA__VALUE__alpha0 = 1,
  STREAMING_PROTOBUFS__ALPHA__VALUE__alpha04 = 2,
  STREAMING_PROTOBUFS__ALPHA__VALUE__alpha05 = 3,
  STREAMING_PROTOBUFS__ALPHA__VALUE__alpha06 = 4,
  STREAMING_PROTOBUFS__ALPHA__VALUE__alpha07 = 5,
  STREAMING_PROTOBUFS__ALPHA__VALUE__alpha08 = 6,
  STREAMING_PROTOBUFS__ALPHA__VALUE__alpha09 = 7,
  STREAMING_PROTOBUFS__ALPHA__VALUE__alpha1 = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__ALPHA__VALUE)
} StreamingProtobufs__Alpha__Value;
typedef enum _StreamingProtobufs__TwoPUSCHPCAdjustmentStates__Value {
  STREAMING_PROTOBUFS__TWO_PUSCH__PC__ADJUSTMENT_STATES__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__TWO_PUSCH__PC__ADJUSTMENT_STATES__VALUE__twoStates = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__TWO_PUSCH__PC__ADJUSTMENT_STATES__VALUE)
} StreamingProtobufs__TwoPUSCHPCAdjustmentStates__Value;
typedef enum _StreamingProtobufs__FrequencyHopping__Value {
  STREAMING_PROTOBUFS__FREQUENCY_HOPPING__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__FREQUENCY_HOPPING__VALUE__intraSlot = 1,
  STREAMING_PROTOBUFS__FREQUENCY_HOPPING__VALUE__interSlot = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__FREQUENCY_HOPPING__VALUE)
} StreamingProtobufs__FrequencyHopping__Value;
typedef enum _StreamingProtobufs__PUSCHAggregationFactor__Value {
  STREAMING_PROTOBUFS__PUSCH__AGGREGATION_FACTOR__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__PUSCH__AGGREGATION_FACTOR__VALUE__n2 = 1,
  STREAMING_PROTOBUFS__PUSCH__AGGREGATION_FACTOR__VALUE__n4 = 2,
  STREAMING_PROTOBUFS__PUSCH__AGGREGATION_FACTOR__VALUE__n8 = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PUSCH__AGGREGATION_FACTOR__VALUE)
} StreamingProtobufs__PUSCHAggregationFactor__Value;
typedef enum _StreamingProtobufs__CodebookSubset__Value {
  STREAMING_PROTOBUFS__CODEBOOK_SUBSET__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__CODEBOOK_SUBSET__VALUE__fullyAndPartialAndNonCoherent = 1,
  STREAMING_PROTOBUFS__CODEBOOK_SUBSET__VALUE__partialAndNonCoherent = 2,
  STREAMING_PROTOBUFS__CODEBOOK_SUBSET__VALUE__nonCoherent = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CODEBOOK_SUBSET__VALUE)
} StreamingProtobufs__CodebookSubset__Value;
typedef enum _StreamingProtobufs__RBGSize2__Value {
  STREAMING_PROTOBUFS__RBG__SIZE2__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__RBG__SIZE2__VALUE__config2 = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__RBG__SIZE2__VALUE)
} StreamingProtobufs__RBGSize2__Value;
typedef enum _StreamingProtobufs__Scaling__Value {
  STREAMING_PROTOBUFS__SCALING__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__SCALING__VALUE__f0p5 = 1,
  STREAMING_PROTOBUFS__SCALING__VALUE__f0p65 = 2,
  STREAMING_PROTOBUFS__SCALING__VALUE__f0p8 = 3,
  STREAMING_PROTOBUFS__SCALING__VALUE__f1 = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SCALING__VALUE)
} StreamingProtobufs__Scaling__Value;
typedef enum _StreamingProtobufs__PowerControlLoopToUse__Value {
  STREAMING_PROTOBUFS__POWER_CONTROL_LOOP_TO_USE__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__POWER_CONTROL_LOOP_TO_USE__VALUE__n0 = 1,
  STREAMING_PROTOBUFS__POWER_CONTROL_LOOP_TO_USE__VALUE__n1 = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__POWER_CONTROL_LOOP_TO_USE__VALUE)
} StreamingProtobufs__PowerControlLoopToUse__Value;
typedef enum _StreamingProtobufs__RepK__Value {
  STREAMING_PROTOBUFS__REP_K__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__REP_K__VALUE__n1 = 1,
  STREAMING_PROTOBUFS__REP_K__VALUE__n2 = 2,
  STREAMING_PROTOBUFS__REP_K__VALUE__n4 = 3,
  STREAMING_PROTOBUFS__REP_K__VALUE__n8 = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__REP_K__VALUE)
} StreamingProtobufs__RepK__Value;
typedef enum _StreamingProtobufs__RepKRV__Value {
  STREAMING_PROTOBUFS__REP_K__RV__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__REP_K__RV__VALUE__s1_0231 = 1,
  STREAMING_PROTOBUFS__REP_K__RV__VALUE__s2_0303 = 2,
  STREAMING_PROTOBUFS__REP_K__RV__VALUE__s3_0000 = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__REP_K__RV__VALUE)
} StreamingProtobufs__RepKRV__Value;
typedef enum _StreamingProtobufs__GrantPeriodicity__Value {
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym2 = 1,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym7 = 2,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym1x14 = 3,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym2x14 = 4,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym4x14 = 5,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym5x14 = 6,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym8x14 = 7,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym10x14 = 8,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym16x14 = 9,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym20x14 = 10,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym32x14 = 11,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym40x14 = 12,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym64x14 = 13,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym80x14 = 14,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym128x14 = 15,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym160x14 = 16,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym256x14 = 17,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym320x14 = 18,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym512x14 = 19,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym640x14 = 20,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym1024x14 = 21,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym1280x14 = 22,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym2560x14 = 23,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym5120x14 = 24,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym6 = 25,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym1x12 = 26,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym2x12 = 27,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym4x12 = 28,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym5x12 = 29,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym8x12 = 30,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym10x12 = 31,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym16x12 = 32,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym20x12 = 33,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym32x12 = 34,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym40x12 = 35,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym64x12 = 36,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym80x12 = 37,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym128x12 = 38,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym160x12 = 39,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym256x12 = 40,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym320x12 = 41,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym512x12 = 42,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym640x12 = 43,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym1280x12 = 44,
  STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__sym2560x12 = 45
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE)
} StreamingProtobufs__GrantPeriodicity__Value;
typedef enum _StreamingProtobufs__SRSResourceSetUsage__Value {
  STREAMING_PROTOBUFS__SRS__RESOURCE_SET__USAGE__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__SRS__RESOURCE_SET__USAGE__VALUE__beamManagement = 1,
  STREAMING_PROTOBUFS__SRS__RESOURCE_SET__USAGE__VALUE__codebook = 2,
  STREAMING_PROTOBUFS__SRS__RESOURCE_SET__USAGE__VALUE__nonCodebook = 3,
  STREAMING_PROTOBUFS__SRS__RESOURCE_SET__USAGE__VALUE__antennaSwitching = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SRS__RESOURCE_SET__USAGE__VALUE)
} StreamingProtobufs__SRSResourceSetUsage__Value;
typedef enum _StreamingProtobufs__SRSPowerControlAdjustmentStates__Value {
  STREAMING_PROTOBUFS__SRS__POWER_CONTROL_ADJUSTMENT_STATES__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__SRS__POWER_CONTROL_ADJUSTMENT_STATES__VALUE__sameAsFci2 = 1,
  STREAMING_PROTOBUFS__SRS__POWER_CONTROL_ADJUSTMENT_STATES__VALUE__separateClosedLoop = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SRS__POWER_CONTROL_ADJUSTMENT_STATES__VALUE)
} StreamingProtobufs__SRSPowerControlAdjustmentStates__Value;
typedef enum _StreamingProtobufs__NrofSRSPorts__Value {
  STREAMING_PROTOBUFS__NROF_SRS__PORTS__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__NROF_SRS__PORTS__VALUE__port1 = 1,
  STREAMING_PROTOBUFS__NROF_SRS__PORTS__VALUE__ports2 = 2,
  STREAMING_PROTOBUFS__NROF_SRS__PORTS__VALUE__ports4 = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__NROF_SRS__PORTS__VALUE)
} StreamingProtobufs__NrofSRSPorts__Value;
typedef enum _StreamingProtobufs__PTRSPortIndex__Value {
  STREAMING_PROTOBUFS__PTRS__PORT_INDEX__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__PTRS__PORT_INDEX__VALUE__n0 = 1,
  STREAMING_PROTOBUFS__PTRS__PORT_INDEX__VALUE__n1 = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PTRS__PORT_INDEX__VALUE)
} StreamingProtobufs__PTRSPortIndex__Value;
typedef enum _StreamingProtobufs__NrofSymbols__Value {
  STREAMING_PROTOBUFS__NROF_SYMBOLS__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__NROF_SYMBOLS__VALUE__n1 = 1,
  STREAMING_PROTOBUFS__NROF_SYMBOLS__VALUE__n2 = 2,
  STREAMING_PROTOBUFS__NROF_SYMBOLS__VALUE__n4 = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__NROF_SYMBOLS__VALUE)
} StreamingProtobufs__NrofSymbols__Value;
typedef enum _StreamingProtobufs__RepetitionFactor__Value {
  STREAMING_PROTOBUFS__REPETITION_FACTOR__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__REPETITION_FACTOR__VALUE__n1 = 1,
  STREAMING_PROTOBUFS__REPETITION_FACTOR__VALUE__n2 = 2,
  STREAMING_PROTOBUFS__REPETITION_FACTOR__VALUE__n4 = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__REPETITION_FACTOR__VALUE)
} StreamingProtobufs__RepetitionFactor__Value;
typedef enum _StreamingProtobufs__GroupOrSequenceHopping__Value {
  STREAMING_PROTOBUFS__GROUP_OR_SEQUENCE_HOPPING__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__GROUP_OR_SEQUENCE_HOPPING__VALUE__neither = 1,
  STREAMING_PROTOBUFS__GROUP_OR_SEQUENCE_HOPPING__VALUE__groupHopping = 2,
  STREAMING_PROTOBUFS__GROUP_OR_SEQUENCE_HOPPING__VALUE__sequenceHopping = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__GROUP_OR_SEQUENCE_HOPPING__VALUE)
} StreamingProtobufs__GroupOrSequenceHopping__Value;
typedef enum _StreamingProtobufs__SSBPerRACHOccasion__Value {
  STREAMING_PROTOBUFS__SSB_PER_RACH__OCCASION__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__SSB_PER_RACH__OCCASION__VALUE__oneEighth = 1,
  STREAMING_PROTOBUFS__SSB_PER_RACH__OCCASION__VALUE__oneFourth = 2,
  STREAMING_PROTOBUFS__SSB_PER_RACH__OCCASION__VALUE__oneHalf = 3,
  STREAMING_PROTOBUFS__SSB_PER_RACH__OCCASION__VALUE__one = 4,
  STREAMING_PROTOBUFS__SSB_PER_RACH__OCCASION__VALUE__two = 5,
  STREAMING_PROTOBUFS__SSB_PER_RACH__OCCASION__VALUE__four = 6,
  STREAMING_PROTOBUFS__SSB_PER_RACH__OCCASION__VALUE__eight = 7,
  STREAMING_PROTOBUFS__SSB_PER_RACH__OCCASION__VALUE__sixteen = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SSB_PER_RACH__OCCASION__VALUE)
} StreamingProtobufs__SSBPerRACHOccasion__Value;
typedef enum _StreamingProtobufs__BeamFailureRecoveryTimer__Value {
  STREAMING_PROTOBUFS__BEAM_FAILURE_RECOVERY_TIMER__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__BEAM_FAILURE_RECOVERY_TIMER__VALUE__ms10 = 1,
  STREAMING_PROTOBUFS__BEAM_FAILURE_RECOVERY_TIMER__VALUE__ms20 = 2,
  STREAMING_PROTOBUFS__BEAM_FAILURE_RECOVERY_TIMER__VALUE__ms40 = 3,
  STREAMING_PROTOBUFS__BEAM_FAILURE_RECOVERY_TIMER__VALUE__ms60 = 4,
  STREAMING_PROTOBUFS__BEAM_FAILURE_RECOVERY_TIMER__VALUE__ms80 = 5,
  STREAMING_PROTOBUFS__BEAM_FAILURE_RECOVERY_TIMER__VALUE__ms100 = 6,
  STREAMING_PROTOBUFS__BEAM_FAILURE_RECOVERY_TIMER__VALUE__ms150 = 7,
  STREAMING_PROTOBUFS__BEAM_FAILURE_RECOVERY_TIMER__VALUE__ms200 = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__BEAM_FAILURE_RECOVERY_TIMER__VALUE)
} StreamingProtobufs__BeamFailureRecoveryTimer__Value;
typedef enum _StreamingProtobufs__MaxCodeBlockGroupsPerTransportBlock__Value {
  STREAMING_PROTOBUFS__MAX_CODE_BLOCK_GROUPS_PER_TRANSPORT_BLOCK__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__MAX_CODE_BLOCK_GROUPS_PER_TRANSPORT_BLOCK__VALUE__n2 = 1,
  STREAMING_PROTOBUFS__MAX_CODE_BLOCK_GROUPS_PER_TRANSPORT_BLOCK__VALUE__n4 = 2,
  STREAMING_PROTOBUFS__MAX_CODE_BLOCK_GROUPS_PER_TRANSPORT_BLOCK__VALUE__n6 = 3,
  STREAMING_PROTOBUFS__MAX_CODE_BLOCK_GROUPS_PER_TRANSPORT_BLOCK__VALUE__n8 = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__MAX_CODE_BLOCK_GROUPS_PER_TRANSPORT_BLOCK__VALUE)
} StreamingProtobufs__MaxCodeBlockGroupsPerTransportBlock__Value;
typedef enum _StreamingProtobufs__XOverhead__Value {
  STREAMING_PROTOBUFS__XOVERHEAD__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__XOVERHEAD__VALUE__xOh6 = 1,
  STREAMING_PROTOBUFS__XOVERHEAD__VALUE__xOh12 = 2,
  STREAMING_PROTOBUFS__XOVERHEAD__VALUE__xOh18 = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__XOVERHEAD__VALUE)
} StreamingProtobufs__XOverhead__Value;
typedef enum _StreamingProtobufs__NrofHARQProcessesForPDSCH__Value {
  STREAMING_PROTOBUFS__NROF_HARQ__PROCESSES_FOR_PDSCH__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__NROF_HARQ__PROCESSES_FOR_PDSCH__VALUE__n2 = 1,
  STREAMING_PROTOBUFS__NROF_HARQ__PROCESSES_FOR_PDSCH__VALUE__n4 = 2,
  STREAMING_PROTOBUFS__NROF_HARQ__PROCESSES_FOR_PDSCH__VALUE__n6 = 3,
  STREAMING_PROTOBUFS__NROF_HARQ__PROCESSES_FOR_PDSCH__VALUE__n10 = 4,
  STREAMING_PROTOBUFS__NROF_HARQ__PROCESSES_FOR_PDSCH__VALUE__n12 = 5,
  STREAMING_PROTOBUFS__NROF_HARQ__PROCESSES_FOR_PDSCH__VALUE__n16 = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__NROF_HARQ__PROCESSES_FOR_PDSCH__VALUE)
} StreamingProtobufs__NrofHARQProcessesForPDSCH__Value;
typedef enum _StreamingProtobufs__PowerControlOffsetSS__Value {
  STREAMING_PROTOBUFS__POWER_CONTROL_OFFSET_SS__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__POWER_CONTROL_OFFSET_SS__VALUE__minus_db3 = 1,
  STREAMING_PROTOBUFS__POWER_CONTROL_OFFSET_SS__VALUE__db0 = 2,
  STREAMING_PROTOBUFS__POWER_CONTROL_OFFSET_SS__VALUE__db3 = 3,
  STREAMING_PROTOBUFS__POWER_CONTROL_OFFSET_SS__VALUE__db6 = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__POWER_CONTROL_OFFSET_SS__VALUE)
} StreamingProtobufs__PowerControlOffsetSS__Value;
typedef enum _StreamingProtobufs__SubcarrierLocationP0__Value {
  STREAMING_PROTOBUFS__SUBCARRIER_LOCATION_P0__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__SUBCARRIER_LOCATION_P0__VALUE__s0 = 1,
  STREAMING_PROTOBUFS__SUBCARRIER_LOCATION_P0__VALUE__s2 = 2,
  STREAMING_PROTOBUFS__SUBCARRIER_LOCATION_P0__VALUE__s4 = 3,
  STREAMING_PROTOBUFS__SUBCARRIER_LOCATION_P0__VALUE__s6 = 4,
  STREAMING_PROTOBUFS__SUBCARRIER_LOCATION_P0__VALUE__s8 = 5,
  STREAMING_PROTOBUFS__SUBCARRIER_LOCATION_P0__VALUE__s10 = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SUBCARRIER_LOCATION_P0__VALUE)
} StreamingProtobufs__SubcarrierLocationP0__Value;
typedef enum _StreamingProtobufs__SubcarrierLocationP1__Value {
  STREAMING_PROTOBUFS__SUBCARRIER_LOCATION_P1__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__SUBCARRIER_LOCATION_P1__VALUE__s0 = 1,
  STREAMING_PROTOBUFS__SUBCARRIER_LOCATION_P1__VALUE__s4 = 2,
  STREAMING_PROTOBUFS__SUBCARRIER_LOCATION_P1__VALUE__s8 = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SUBCARRIER_LOCATION_P1__VALUE)
} StreamingProtobufs__SubcarrierLocationP1__Value;
typedef enum _StreamingProtobufs__ResourceType__Value {
  STREAMING_PROTOBUFS__RESOURCE_TYPE__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__RESOURCE_TYPE__VALUE__aperiodic = 1,
  STREAMING_PROTOBUFS__RESOURCE_TYPE__VALUE__semiPersistent = 2,
  STREAMING_PROTOBUFS__RESOURCE_TYPE__VALUE__periodic = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__RESOURCE_TYPE__VALUE)
} StreamingProtobufs__ResourceType__Value;
typedef enum _StreamingProtobufs__ReportSlotConfig__Value {
  STREAMING_PROTOBUFS__REPORT_SLOT_CONFIG__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__REPORT_SLOT_CONFIG__VALUE__sl5 = 1,
  STREAMING_PROTOBUFS__REPORT_SLOT_CONFIG__VALUE__sl10 = 2,
  STREAMING_PROTOBUFS__REPORT_SLOT_CONFIG__VALUE__sl20 = 3,
  STREAMING_PROTOBUFS__REPORT_SLOT_CONFIG__VALUE__sl40 = 4,
  STREAMING_PROTOBUFS__REPORT_SLOT_CONFIG__VALUE__sl80 = 5,
  STREAMING_PROTOBUFS__REPORT_SLOT_CONFIG__VALUE__sl160 = 6,
  STREAMING_PROTOBUFS__REPORT_SLOT_CONFIG__VALUE__sl320 = 7
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__REPORT_SLOT_CONFIG__VALUE)
} StreamingProtobufs__ReportSlotConfig__Value;
typedef enum _StreamingProtobufs__CRIRII1CQI__Value {
  STREAMING_PROTOBUFS__CRI__RI_I1__CQI__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__CRI__RI_I1__CQI__VALUE__n2 = 1,
  STREAMING_PROTOBUFS__CRI__RI_I1__CQI__VALUE__n4 = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CRI__RI_I1__CQI__VALUE)
} StreamingProtobufs__CRIRII1CQI__Value;
typedef enum _StreamingProtobufs__CQIFormatIndicator__Value {
  STREAMING_PROTOBUFS__CQI__FORMAT_INDICATOR__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__CQI__FORMAT_INDICATOR__VALUE__widebandCQI = 1,
  STREAMING_PROTOBUFS__CQI__FORMAT_INDICATOR__VALUE__subbandCQI = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CQI__FORMAT_INDICATOR__VALUE)
} StreamingProtobufs__CQIFormatIndicator__Value;
typedef enum _StreamingProtobufs__PMIFormatIndicator__Value {
  STREAMING_PROTOBUFS__PMI__FORMAT_INDICATOR__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__PMI__FORMAT_INDICATOR__VALUE__widebandPMI = 1,
  STREAMING_PROTOBUFS__PMI__FORMAT_INDICATOR__VALUE__subbandPMI = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PMI__FORMAT_INDICATOR__VALUE)
} StreamingProtobufs__PMIFormatIndicator__Value;
typedef enum _StreamingProtobufs__PhaseAlphabetSize__Value {
  STREAMING_PROTOBUFS__PHASE_ALPHABET_SIZE__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__PHASE_ALPHABET_SIZE__VALUE__n4 = 1,
  STREAMING_PROTOBUFS__PHASE_ALPHABET_SIZE__VALUE__n8 = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PHASE_ALPHABET_SIZE__VALUE)
} StreamingProtobufs__PhaseAlphabetSize__Value;
typedef enum _StreamingProtobufs__NumberOfBeams__Value {
  STREAMING_PROTOBUFS__NUMBER_OF_BEAMS__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__NUMBER_OF_BEAMS__VALUE__two = 1,
  STREAMING_PROTOBUFS__NUMBER_OF_BEAMS__VALUE__three = 2,
  STREAMING_PROTOBUFS__NUMBER_OF_BEAMS__VALUE__four = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__NUMBER_OF_BEAMS__VALUE)
} StreamingProtobufs__NumberOfBeams__Value;
typedef enum _StreamingProtobufs__PortSelectionSamplingSize__Value {
  STREAMING_PROTOBUFS__PORT_SELECTION_SAMPLING_SIZE__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__PORT_SELECTION_SAMPLING_SIZE__VALUE__n1 = 1,
  STREAMING_PROTOBUFS__PORT_SELECTION_SAMPLING_SIZE__VALUE__n2 = 2,
  STREAMING_PROTOBUFS__PORT_SELECTION_SAMPLING_SIZE__VALUE__n3 = 3,
  STREAMING_PROTOBUFS__PORT_SELECTION_SAMPLING_SIZE__VALUE__n4 = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PORT_SELECTION_SAMPLING_SIZE__VALUE)
} StreamingProtobufs__PortSelectionSamplingSize__Value;
typedef enum _StreamingProtobufs__CSIReportConfigDummy__Value {
  STREAMING_PROTOBUFS__CSI__REPORT_CONFIG_DUMMY__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__CSI__REPORT_CONFIG_DUMMY__VALUE__n1 = 1,
  STREAMING_PROTOBUFS__CSI__REPORT_CONFIG_DUMMY__VALUE__n2 = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CSI__REPORT_CONFIG_DUMMY__VALUE)
} StreamingProtobufs__CSIReportConfigDummy__Value;
typedef enum _StreamingProtobufs__NrofReportedRS__Value {
  STREAMING_PROTOBUFS__NROF_REPORTED_RS__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__NROF_REPORTED_RS__VALUE__n1 = 1,
  STREAMING_PROTOBUFS__NROF_REPORTED_RS__VALUE__n2 = 2,
  STREAMING_PROTOBUFS__NROF_REPORTED_RS__VALUE__n3 = 3,
  STREAMING_PROTOBUFS__NROF_REPORTED_RS__VALUE__n4 = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__NROF_REPORTED_RS__VALUE)
} StreamingProtobufs__NrofReportedRS__Value;
typedef enum _StreamingProtobufs__CQITable__Value {
  STREAMING_PROTOBUFS__CQI__TABLE__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__CQI__TABLE__VALUE__table1 = 1,
  STREAMING_PROTOBUFS__CQI__TABLE__VALUE__table2 = 2,
  STREAMING_PROTOBUFS__CQI__TABLE__VALUE__table3 = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CQI__TABLE__VALUE)
} StreamingProtobufs__CQITable__Value;
typedef enum _StreamingProtobufs__SubbandSize__Value {
  STREAMING_PROTOBUFS__SUBBAND_SIZE__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__SUBBAND_SIZE__VALUE__value1 = 1,
  STREAMING_PROTOBUFS__SUBBAND_SIZE__VALUE__value2 = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SUBBAND_SIZE__VALUE)
} StreamingProtobufs__SubbandSize__Value;
typedef enum _StreamingProtobufs__SemiPersistentOnPUSCHV1530__ReportSlotConfigV1530 {
  STREAMING_PROTOBUFS__SEMI_PERSISTENT_ON_PUSCH_V1530__REPORT_SLOT_CONFIG_V1530__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__SEMI_PERSISTENT_ON_PUSCH_V1530__REPORT_SLOT_CONFIG_V1530__sl4 = 1,
  STREAMING_PROTOBUFS__SEMI_PERSISTENT_ON_PUSCH_V1530__REPORT_SLOT_CONFIG_V1530__sl8 = 2,
  STREAMING_PROTOBUFS__SEMI_PERSISTENT_ON_PUSCH_V1530__REPORT_SLOT_CONFIG_V1530__sl16 = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SEMI_PERSISTENT_ON_PUSCH_V1530__REPORT_SLOT_CONFIG_V1530)
} StreamingProtobufs__SemiPersistentOnPUSCHV1530__ReportSlotConfigV1530;
typedef enum _StreamingProtobufs__SCellDeactivationTimer__Value {
  STREAMING_PROTOBUFS__SCELL_DEACTIVATION_TIMER__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__SCELL_DEACTIVATION_TIMER__VALUE__ms20 = 1,
  STREAMING_PROTOBUFS__SCELL_DEACTIVATION_TIMER__VALUE__ms40 = 2,
  STREAMING_PROTOBUFS__SCELL_DEACTIVATION_TIMER__VALUE__ms80 = 3,
  STREAMING_PROTOBUFS__SCELL_DEACTIVATION_TIMER__VALUE__ms160 = 4,
  STREAMING_PROTOBUFS__SCELL_DEACTIVATION_TIMER__VALUE__ms200 = 5,
  STREAMING_PROTOBUFS__SCELL_DEACTIVATION_TIMER__VALUE__ms240 = 6,
  STREAMING_PROTOBUFS__SCELL_DEACTIVATION_TIMER__VALUE__ms320 = 7,
  STREAMING_PROTOBUFS__SCELL_DEACTIVATION_TIMER__VALUE__ms400 = 8,
  STREAMING_PROTOBUFS__SCELL_DEACTIVATION_TIMER__VALUE__ms480 = 9,
  STREAMING_PROTOBUFS__SCELL_DEACTIVATION_TIMER__VALUE__ms520 = 10,
  STREAMING_PROTOBUFS__SCELL_DEACTIVATION_TIMER__VALUE__ms640 = 11,
  STREAMING_PROTOBUFS__SCELL_DEACTIVATION_TIMER__VALUE__ms720 = 12,
  STREAMING_PROTOBUFS__SCELL_DEACTIVATION_TIMER__VALUE__ms840 = 13,
  STREAMING_PROTOBUFS__SCELL_DEACTIVATION_TIMER__VALUE__ms1280 = 14
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SCELL_DEACTIVATION_TIMER__VALUE)
} StreamingProtobufs__SCellDeactivationTimer__Value;
typedef enum _StreamingProtobufs__PathlossReferenceLinking__Value {
  STREAMING_PROTOBUFS__PATHLOSS_REFERENCE_LINKING__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__PATHLOSS_REFERENCE_LINKING__VALUE__pCell = 1,
  STREAMING_PROTOBUFS__PATHLOSS_REFERENCE_LINKING__VALUE__sCell = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PATHLOSS_REFERENCE_LINKING__VALUE)
} StreamingProtobufs__PathlossReferenceLinking__Value;
typedef enum _StreamingProtobufs__CSIRSMeasurementBW__NrofPRBs {
  STREAMING_PROTOBUFS__CSI__RS__MEASUREMENT_BW__NROF_PRBS__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__CSI__RS__MEASUREMENT_BW__NROF_PRBS__size24 = 1,
  STREAMING_PROTOBUFS__CSI__RS__MEASUREMENT_BW__NROF_PRBS__size48 = 2,
  STREAMING_PROTOBUFS__CSI__RS__MEASUREMENT_BW__NROF_PRBS__size96 = 3,
  STREAMING_PROTOBUFS__CSI__RS__MEASUREMENT_BW__NROF_PRBS__size192 = 4,
  STREAMING_PROTOBUFS__CSI__RS__MEASUREMENT_BW__NROF_PRBS__size264 = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CSI__RS__MEASUREMENT_BW__NROF_PRBS)
} StreamingProtobufs__CSIRSMeasurementBW__NrofPRBs;
typedef enum _StreamingProtobufs__Density__Value {
  STREAMING_PROTOBUFS__DENSITY__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__DENSITY__VALUE__d1 = 1,
  STREAMING_PROTOBUFS__DENSITY__VALUE__d3 = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__DENSITY__VALUE)
} StreamingProtobufs__Density__Value;
typedef enum _StreamingProtobufs__QOffsetRange__Value {
  STREAMING_PROTOBUFS__Q__OFFSET_RANGE__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__Q__OFFSET_RANGE__VALUE__minus_dB24 = 1,
  STREAMING_PROTOBUFS__Q__OFFSET_RANGE__VALUE__minus_dB22 = 2,
  STREAMING_PROTOBUFS__Q__OFFSET_RANGE__VALUE__minus_dB20 = 3,
  STREAMING_PROTOBUFS__Q__OFFSET_RANGE__VALUE__minus_dB18 = 4,
  STREAMING_PROTOBUFS__Q__OFFSET_RANGE__VALUE__minus_dB16 = 5,
  STREAMING_PROTOBUFS__Q__OFFSET_RANGE__VALUE__minus_dB14 = 6,
  STREAMING_PROTOBUFS__Q__OFFSET_RANGE__VALUE__minus_dB12 = 7,
  STREAMING_PROTOBUFS__Q__OFFSET_RANGE__VALUE__minus_dB10 = 8,
  STREAMING_PROTOBUFS__Q__OFFSET_RANGE__VALUE__minus_dB8 = 9,
  STREAMING_PROTOBUFS__Q__OFFSET_RANGE__VALUE__minus_dB6 = 10,
  STREAMING_PROTOBUFS__Q__OFFSET_RANGE__VALUE__minus_dB5 = 11,
  STREAMING_PROTOBUFS__Q__OFFSET_RANGE__VALUE__minus_dB4 = 12,
  STREAMING_PROTOBUFS__Q__OFFSET_RANGE__VALUE__minus_dB3 = 13,
  STREAMING_PROTOBUFS__Q__OFFSET_RANGE__VALUE__minus_dB2 = 14,
  STREAMING_PROTOBUFS__Q__OFFSET_RANGE__VALUE__minus_dB1 = 15,
  STREAMING_PROTOBUFS__Q__OFFSET_RANGE__VALUE__dB0 = 16,
  STREAMING_PROTOBUFS__Q__OFFSET_RANGE__VALUE__dB1 = 17,
  STREAMING_PROTOBUFS__Q__OFFSET_RANGE__VALUE__dB2 = 18,
  STREAMING_PROTOBUFS__Q__OFFSET_RANGE__VALUE__dB3 = 19,
  STREAMING_PROTOBUFS__Q__OFFSET_RANGE__VALUE__dB4 = 20,
  STREAMING_PROTOBUFS__Q__OFFSET_RANGE__VALUE__dB5 = 21,
  STREAMING_PROTOBUFS__Q__OFFSET_RANGE__VALUE__dB6 = 22,
  STREAMING_PROTOBUFS__Q__OFFSET_RANGE__VALUE__dB8 = 23,
  STREAMING_PROTOBUFS__Q__OFFSET_RANGE__VALUE__dB10 = 24,
  STREAMING_PROTOBUFS__Q__OFFSET_RANGE__VALUE__dB12 = 25,
  STREAMING_PROTOBUFS__Q__OFFSET_RANGE__VALUE__dB14 = 26,
  STREAMING_PROTOBUFS__Q__OFFSET_RANGE__VALUE__dB16 = 27,
  STREAMING_PROTOBUFS__Q__OFFSET_RANGE__VALUE__dB18 = 28,
  STREAMING_PROTOBUFS__Q__OFFSET_RANGE__VALUE__dB20 = 29,
  STREAMING_PROTOBUFS__Q__OFFSET_RANGE__VALUE__dB22 = 30,
  STREAMING_PROTOBUFS__Q__OFFSET_RANGE__VALUE__dB24 = 31
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__Q__OFFSET_RANGE__VALUE)
} StreamingProtobufs__QOffsetRange__Value;
typedef enum _StreamingProtobufs__Range__Value {
  STREAMING_PROTOBUFS__RANGE__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__RANGE__VALUE__n4 = 1,
  STREAMING_PROTOBUFS__RANGE__VALUE__n8 = 2,
  STREAMING_PROTOBUFS__RANGE__VALUE__n12 = 3,
  STREAMING_PROTOBUFS__RANGE__VALUE__n16 = 4,
  STREAMING_PROTOBUFS__RANGE__VALUE__n24 = 5,
  STREAMING_PROTOBUFS__RANGE__VALUE__n32 = 6,
  STREAMING_PROTOBUFS__RANGE__VALUE__n48 = 7,
  STREAMING_PROTOBUFS__RANGE__VALUE__n64 = 8,
  STREAMING_PROTOBUFS__RANGE__VALUE__n84 = 9,
  STREAMING_PROTOBUFS__RANGE__VALUE__n96 = 10,
  STREAMING_PROTOBUFS__RANGE__VALUE__n128 = 11,
  STREAMING_PROTOBUFS__RANGE__VALUE__n168 = 12,
  STREAMING_PROTOBUFS__RANGE__VALUE__n252 = 13,
  STREAMING_PROTOBUFS__RANGE__VALUE__n504 = 14,
  STREAMING_PROTOBUFS__RANGE__VALUE__n1008 = 15
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__RANGE__VALUE)
} StreamingProtobufs__Range__Value;
typedef enum _StreamingProtobufs__MeasCycleSCellV1530__Value {
  STREAMING_PROTOBUFS__MEAS_CYCLE_SCELL_V1530__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__MEAS_CYCLE_SCELL_V1530__VALUE__sf160 = 1,
  STREAMING_PROTOBUFS__MEAS_CYCLE_SCELL_V1530__VALUE__sf256 = 2,
  STREAMING_PROTOBUFS__MEAS_CYCLE_SCELL_V1530__VALUE__sf320 = 3,
  STREAMING_PROTOBUFS__MEAS_CYCLE_SCELL_V1530__VALUE__sf512 = 4,
  STREAMING_PROTOBUFS__MEAS_CYCLE_SCELL_V1530__VALUE__sf640 = 5,
  STREAMING_PROTOBUFS__MEAS_CYCLE_SCELL_V1530__VALUE__sf1024 = 6,
  STREAMING_PROTOBUFS__MEAS_CYCLE_SCELL_V1530__VALUE__sf1280 = 7
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__MEAS_CYCLE_SCELL_V1530__VALUE)
} StreamingProtobufs__MeasCycleSCellV1530__Value;
typedef enum _StreamingProtobufs__EUTRAAllowedMeasBandwidth__Value {
  STREAMING_PROTOBUFS__EUTRA__ALLOWED_MEAS_BANDWIDTH__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__EUTRA__ALLOWED_MEAS_BANDWIDTH__VALUE__mbw6 = 1,
  STREAMING_PROTOBUFS__EUTRA__ALLOWED_MEAS_BANDWIDTH__VALUE__mbw15 = 2,
  STREAMING_PROTOBUFS__EUTRA__ALLOWED_MEAS_BANDWIDTH__VALUE__mbw25 = 3,
  STREAMING_PROTOBUFS__EUTRA__ALLOWED_MEAS_BANDWIDTH__VALUE__mbw50 = 4,
  STREAMING_PROTOBUFS__EUTRA__ALLOWED_MEAS_BANDWIDTH__VALUE__mbw75 = 5,
  STREAMING_PROTOBUFS__EUTRA__ALLOWED_MEAS_BANDWIDTH__VALUE__mbw100 = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__EUTRA__ALLOWED_MEAS_BANDWIDTH__VALUE)
} StreamingProtobufs__EUTRAAllowedMeasBandwidth__Value;
typedef enum _StreamingProtobufs__EUTRAQOffsetRange__Value {
  STREAMING_PROTOBUFS__EUTRA__Q__OFFSET_RANGE__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__EUTRA__Q__OFFSET_RANGE__VALUE__minus_dB24 = 1,
  STREAMING_PROTOBUFS__EUTRA__Q__OFFSET_RANGE__VALUE__minus_dB22 = 2,
  STREAMING_PROTOBUFS__EUTRA__Q__OFFSET_RANGE__VALUE__minus_dB20 = 3,
  STREAMING_PROTOBUFS__EUTRA__Q__OFFSET_RANGE__VALUE__minus_dB18 = 4,
  STREAMING_PROTOBUFS__EUTRA__Q__OFFSET_RANGE__VALUE__minus_dB16 = 5,
  STREAMING_PROTOBUFS__EUTRA__Q__OFFSET_RANGE__VALUE__minus_dB14 = 6,
  STREAMING_PROTOBUFS__EUTRA__Q__OFFSET_RANGE__VALUE__minus_dB12 = 7,
  STREAMING_PROTOBUFS__EUTRA__Q__OFFSET_RANGE__VALUE__minus_dB10 = 8,
  STREAMING_PROTOBUFS__EUTRA__Q__OFFSET_RANGE__VALUE__minus_dB8 = 9,
  STREAMING_PROTOBUFS__EUTRA__Q__OFFSET_RANGE__VALUE__minus_dB6 = 10,
  STREAMING_PROTOBUFS__EUTRA__Q__OFFSET_RANGE__VALUE__minus_dB5 = 11,
  STREAMING_PROTOBUFS__EUTRA__Q__OFFSET_RANGE__VALUE__minus_dB4 = 12,
  STREAMING_PROTOBUFS__EUTRA__Q__OFFSET_RANGE__VALUE__minus_dB3 = 13,
  STREAMING_PROTOBUFS__EUTRA__Q__OFFSET_RANGE__VALUE__minus_dB2 = 14,
  STREAMING_PROTOBUFS__EUTRA__Q__OFFSET_RANGE__VALUE__minus_dB1 = 15,
  STREAMING_PROTOBUFS__EUTRA__Q__OFFSET_RANGE__VALUE__dB0 = 16,
  STREAMING_PROTOBUFS__EUTRA__Q__OFFSET_RANGE__VALUE__dB1 = 17,
  STREAMING_PROTOBUFS__EUTRA__Q__OFFSET_RANGE__VALUE__dB2 = 18,
  STREAMING_PROTOBUFS__EUTRA__Q__OFFSET_RANGE__VALUE__dB3 = 19,
  STREAMING_PROTOBUFS__EUTRA__Q__OFFSET_RANGE__VALUE__dB4 = 20,
  STREAMING_PROTOBUFS__EUTRA__Q__OFFSET_RANGE__VALUE__dB5 = 21,
  STREAMING_PROTOBUFS__EUTRA__Q__OFFSET_RANGE__VALUE__dB6 = 22,
  STREAMING_PROTOBUFS__EUTRA__Q__OFFSET_RANGE__VALUE__dB8 = 23,
  STREAMING_PROTOBUFS__EUTRA__Q__OFFSET_RANGE__VALUE__dB10 = 24,
  STREAMING_PROTOBUFS__EUTRA__Q__OFFSET_RANGE__VALUE__dB12 = 25,
  STREAMING_PROTOBUFS__EUTRA__Q__OFFSET_RANGE__VALUE__dB14 = 26,
  STREAMING_PROTOBUFS__EUTRA__Q__OFFSET_RANGE__VALUE__dB16 = 27,
  STREAMING_PROTOBUFS__EUTRA__Q__OFFSET_RANGE__VALUE__dB18 = 28,
  STREAMING_PROTOBUFS__EUTRA__Q__OFFSET_RANGE__VALUE__dB20 = 29,
  STREAMING_PROTOBUFS__EUTRA__Q__OFFSET_RANGE__VALUE__dB22 = 30,
  STREAMING_PROTOBUFS__EUTRA__Q__OFFSET_RANGE__VALUE__dB24 = 31
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__EUTRA__Q__OFFSET_RANGE__VALUE)
} StreamingProtobufs__EUTRAQOffsetRange__Value;
typedef enum _StreamingProtobufs__EUTRARange__Value {
  STREAMING_PROTOBUFS__EUTRA__RANGE__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__EUTRA__RANGE__VALUE__n4 = 1,
  STREAMING_PROTOBUFS__EUTRA__RANGE__VALUE__n8 = 2,
  STREAMING_PROTOBUFS__EUTRA__RANGE__VALUE__n12 = 3,
  STREAMING_PROTOBUFS__EUTRA__RANGE__VALUE__n16 = 4,
  STREAMING_PROTOBUFS__EUTRA__RANGE__VALUE__n24 = 5,
  STREAMING_PROTOBUFS__EUTRA__RANGE__VALUE__n32 = 6,
  STREAMING_PROTOBUFS__EUTRA__RANGE__VALUE__n48 = 7,
  STREAMING_PROTOBUFS__EUTRA__RANGE__VALUE__n64 = 8,
  STREAMING_PROTOBUFS__EUTRA__RANGE__VALUE__n84 = 9,
  STREAMING_PROTOBUFS__EUTRA__RANGE__VALUE__n96 = 10,
  STREAMING_PROTOBUFS__EUTRA__RANGE__VALUE__n128 = 11,
  STREAMING_PROTOBUFS__EUTRA__RANGE__VALUE__n168 = 12,
  STREAMING_PROTOBUFS__EUTRA__RANGE__VALUE__n252 = 13,
  STREAMING_PROTOBUFS__EUTRA__RANGE__VALUE__n504 = 14
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__EUTRA__RANGE__VALUE)
} StreamingProtobufs__EUTRARange__Value;
typedef enum _StreamingProtobufs__NRRSType__Value {
  STREAMING_PROTOBUFS__NR__RS__TYPE__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__NR__RS__TYPE__VALUE__ssb = 1,
  STREAMING_PROTOBUFS__NR__RS__TYPE__VALUE__csi_rs = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__NR__RS__TYPE__VALUE)
} StreamingProtobufs__NRRSType__Value;
typedef enum _StreamingProtobufs__ReportInterval__Value {
  STREAMING_PROTOBUFS__REPORT_INTERVAL__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__REPORT_INTERVAL__VALUE__ms120 = 1,
  STREAMING_PROTOBUFS__REPORT_INTERVAL__VALUE__ms240 = 2,
  STREAMING_PROTOBUFS__REPORT_INTERVAL__VALUE__ms480 = 3,
  STREAMING_PROTOBUFS__REPORT_INTERVAL__VALUE__ms640 = 4,
  STREAMING_PROTOBUFS__REPORT_INTERVAL__VALUE__ms1024 = 5,
  STREAMING_PROTOBUFS__REPORT_INTERVAL__VALUE__ms2048 = 6,
  STREAMING_PROTOBUFS__REPORT_INTERVAL__VALUE__ms5120 = 7,
  STREAMING_PROTOBUFS__REPORT_INTERVAL__VALUE__ms10240 = 8,
  STREAMING_PROTOBUFS__REPORT_INTERVAL__VALUE__ms20480 = 9,
  STREAMING_PROTOBUFS__REPORT_INTERVAL__VALUE__ms40960 = 10,
  STREAMING_PROTOBUFS__REPORT_INTERVAL__VALUE__min1 = 11,
  STREAMING_PROTOBUFS__REPORT_INTERVAL__VALUE__min6 = 12,
  STREAMING_PROTOBUFS__REPORT_INTERVAL__VALUE__min12 = 13,
  STREAMING_PROTOBUFS__REPORT_INTERVAL__VALUE__min30 = 14
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__REPORT_INTERVAL__VALUE)
} StreamingProtobufs__ReportInterval__Value;
typedef enum _StreamingProtobufs__ReportAmount__Value {
  STREAMING_PROTOBUFS__REPORT_AMOUNT__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__REPORT_AMOUNT__VALUE__r1 = 1,
  STREAMING_PROTOBUFS__REPORT_AMOUNT__VALUE__r2 = 2,
  STREAMING_PROTOBUFS__REPORT_AMOUNT__VALUE__r4 = 3,
  STREAMING_PROTOBUFS__REPORT_AMOUNT__VALUE__r8 = 4,
  STREAMING_PROTOBUFS__REPORT_AMOUNT__VALUE__r16 = 5,
  STREAMING_PROTOBUFS__REPORT_AMOUNT__VALUE__r32 = 6,
  STREAMING_PROTOBUFS__REPORT_AMOUNT__VALUE__r64 = 7,
  STREAMING_PROTOBUFS__REPORT_AMOUNT__VALUE__infinity = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__REPORT_AMOUNT__VALUE)
} StreamingProtobufs__ReportAmount__Value;
typedef enum _StreamingProtobufs__TimeToTrigger__Value {
  STREAMING_PROTOBUFS__TIME_TO_TRIGGER__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__TIME_TO_TRIGGER__VALUE__ms0 = 1,
  STREAMING_PROTOBUFS__TIME_TO_TRIGGER__VALUE__ms40 = 2,
  STREAMING_PROTOBUFS__TIME_TO_TRIGGER__VALUE__ms64 = 3,
  STREAMING_PROTOBUFS__TIME_TO_TRIGGER__VALUE__ms80 = 4,
  STREAMING_PROTOBUFS__TIME_TO_TRIGGER__VALUE__ms100 = 5,
  STREAMING_PROTOBUFS__TIME_TO_TRIGGER__VALUE__ms128 = 6,
  STREAMING_PROTOBUFS__TIME_TO_TRIGGER__VALUE__ms160 = 7,
  STREAMING_PROTOBUFS__TIME_TO_TRIGGER__VALUE__ms256 = 8,
  STREAMING_PROTOBUFS__TIME_TO_TRIGGER__VALUE__ms320 = 9,
  STREAMING_PROTOBUFS__TIME_TO_TRIGGER__VALUE__ms480 = 10,
  STREAMING_PROTOBUFS__TIME_TO_TRIGGER__VALUE__ms512 = 11,
  STREAMING_PROTOBUFS__TIME_TO_TRIGGER__VALUE__ms640 = 12,
  STREAMING_PROTOBUFS__TIME_TO_TRIGGER__VALUE__ms1024 = 13,
  STREAMING_PROTOBUFS__TIME_TO_TRIGGER__VALUE__ms1280 = 14,
  STREAMING_PROTOBUFS__TIME_TO_TRIGGER__VALUE__ms2560 = 15,
  STREAMING_PROTOBUFS__TIME_TO_TRIGGER__VALUE__ms5120 = 16
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__TIME_TO_TRIGGER__VALUE)
} StreamingProtobufs__TimeToTrigger__Value;
typedef enum _StreamingProtobufs__ReportAddNeighMeas__Value {
  STREAMING_PROTOBUFS__REPORT_ADD_NEIGH_MEAS__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__REPORT_ADD_NEIGH_MEAS__VALUE__setup = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__REPORT_ADD_NEIGH_MEAS__VALUE)
} StreamingProtobufs__ReportAddNeighMeas__Value;
typedef enum _StreamingProtobufs__FilterCoefficient__Value {
  STREAMING_PROTOBUFS__FILTER_COEFFICIENT__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__FILTER_COEFFICIENT__VALUE__fc0 = 1,
  STREAMING_PROTOBUFS__FILTER_COEFFICIENT__VALUE__fc1 = 2,
  STREAMING_PROTOBUFS__FILTER_COEFFICIENT__VALUE__fc2 = 3,
  STREAMING_PROTOBUFS__FILTER_COEFFICIENT__VALUE__fc3 = 4,
  STREAMING_PROTOBUFS__FILTER_COEFFICIENT__VALUE__fc4 = 5,
  STREAMING_PROTOBUFS__FILTER_COEFFICIENT__VALUE__fc5 = 6,
  STREAMING_PROTOBUFS__FILTER_COEFFICIENT__VALUE__fc6 = 7,
  STREAMING_PROTOBUFS__FILTER_COEFFICIENT__VALUE__fc7 = 8,
  STREAMING_PROTOBUFS__FILTER_COEFFICIENT__VALUE__fc8 = 9,
  STREAMING_PROTOBUFS__FILTER_COEFFICIENT__VALUE__fc9 = 10,
  STREAMING_PROTOBUFS__FILTER_COEFFICIENT__VALUE__fc11 = 11,
  STREAMING_PROTOBUFS__FILTER_COEFFICIENT__VALUE__fc13 = 12,
  STREAMING_PROTOBUFS__FILTER_COEFFICIENT__VALUE__fc15 = 13,
  STREAMING_PROTOBUFS__FILTER_COEFFICIENT__VALUE__fc17 = 14,
  STREAMING_PROTOBUFS__FILTER_COEFFICIENT__VALUE__fc19 = 15
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__FILTER_COEFFICIENT__VALUE)
} StreamingProtobufs__FilterCoefficient__Value;
typedef enum _StreamingProtobufs__MGL__Value {
  STREAMING_PROTOBUFS__MGL__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__MGL__VALUE__ms1dot5 = 1,
  STREAMING_PROTOBUFS__MGL__VALUE__ms3 = 2,
  STREAMING_PROTOBUFS__MGL__VALUE__ms3dot5 = 3,
  STREAMING_PROTOBUFS__MGL__VALUE__ms4 = 4,
  STREAMING_PROTOBUFS__MGL__VALUE__ms5dot5 = 5,
  STREAMING_PROTOBUFS__MGL__VALUE__ms6 = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__MGL__VALUE)
} StreamingProtobufs__MGL__Value;
typedef enum _StreamingProtobufs__MGRP__Value {
  STREAMING_PROTOBUFS__MGRP__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__MGRP__VALUE__ms20 = 1,
  STREAMING_PROTOBUFS__MGRP__VALUE__ms40 = 2,
  STREAMING_PROTOBUFS__MGRP__VALUE__ms80 = 3,
  STREAMING_PROTOBUFS__MGRP__VALUE__ms160 = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__MGRP__VALUE)
} StreamingProtobufs__MGRP__Value;
typedef enum _StreamingProtobufs__MGTA__Value {
  STREAMING_PROTOBUFS__MGTA__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__MGTA__VALUE__ms0 = 1,
  STREAMING_PROTOBUFS__MGTA__VALUE__ms0dot25 = 2,
  STREAMING_PROTOBUFS__MGTA__VALUE__ms0dot5 = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__MGTA__VALUE)
} StreamingProtobufs__MGTA__Value;
typedef enum _StreamingProtobufs__MeasGapSharingScheme__Value {
  STREAMING_PROTOBUFS__MEAS_GAP_SHARING_SCHEME__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__MEAS_GAP_SHARING_SCHEME__VALUE__scheme00 = 1,
  STREAMING_PROTOBUFS__MEAS_GAP_SHARING_SCHEME__VALUE__scheme01 = 2,
  STREAMING_PROTOBUFS__MEAS_GAP_SHARING_SCHEME__VALUE__scheme10 = 3,
  STREAMING_PROTOBUFS__MEAS_GAP_SHARING_SCHEME__VALUE__scheme11 = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__MEAS_GAP_SHARING_SCHEME__VALUE)
} StreamingProtobufs__MeasGapSharingScheme__Value;
typedef enum _StreamingProtobufs__DelayBudgetReportingProhibitTimer__Value {
  STREAMING_PROTOBUFS__DELAY_BUDGET_REPORTING_PROHIBIT_TIMER__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__DELAY_BUDGET_REPORTING_PROHIBIT_TIMER__VALUE__s0 = 1,
  STREAMING_PROTOBUFS__DELAY_BUDGET_REPORTING_PROHIBIT_TIMER__VALUE__s0dot4 = 2,
  STREAMING_PROTOBUFS__DELAY_BUDGET_REPORTING_PROHIBIT_TIMER__VALUE__s0dot8 = 3,
  STREAMING_PROTOBUFS__DELAY_BUDGET_REPORTING_PROHIBIT_TIMER__VALUE__s1dot6 = 4,
  STREAMING_PROTOBUFS__DELAY_BUDGET_REPORTING_PROHIBIT_TIMER__VALUE__s3 = 5,
  STREAMING_PROTOBUFS__DELAY_BUDGET_REPORTING_PROHIBIT_TIMER__VALUE__s6 = 6,
  STREAMING_PROTOBUFS__DELAY_BUDGET_REPORTING_PROHIBIT_TIMER__VALUE__s12 = 7,
  STREAMING_PROTOBUFS__DELAY_BUDGET_REPORTING_PROHIBIT_TIMER__VALUE__s30 = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__DELAY_BUDGET_REPORTING_PROHIBIT_TIMER__VALUE)
} StreamingProtobufs__DelayBudgetReportingProhibitTimer__Value;
typedef enum _StreamingProtobufs__OverheatingAssistanceConfig__OverheatingIndicationProhibitTimer {
  STREAMING_PROTOBUFS__OVERHEATING_ASSISTANCE_CONFIG__OVERHEATING_INDICATION_PROHIBIT_TIMER__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__OVERHEATING_ASSISTANCE_CONFIG__OVERHEATING_INDICATION_PROHIBIT_TIMER__s0 = 1,
  STREAMING_PROTOBUFS__OVERHEATING_ASSISTANCE_CONFIG__OVERHEATING_INDICATION_PROHIBIT_TIMER__s0dot5 = 2,
  STREAMING_PROTOBUFS__OVERHEATING_ASSISTANCE_CONFIG__OVERHEATING_INDICATION_PROHIBIT_TIMER__s1 = 3,
  STREAMING_PROTOBUFS__OVERHEATING_ASSISTANCE_CONFIG__OVERHEATING_INDICATION_PROHIBIT_TIMER__s2 = 4,
  STREAMING_PROTOBUFS__OVERHEATING_ASSISTANCE_CONFIG__OVERHEATING_INDICATION_PROHIBIT_TIMER__s5 = 5,
  STREAMING_PROTOBUFS__OVERHEATING_ASSISTANCE_CONFIG__OVERHEATING_INDICATION_PROHIBIT_TIMER__s10 = 6,
  STREAMING_PROTOBUFS__OVERHEATING_ASSISTANCE_CONFIG__OVERHEATING_INDICATION_PROHIBIT_TIMER__s20 = 7,
  STREAMING_PROTOBUFS__OVERHEATING_ASSISTANCE_CONFIG__OVERHEATING_INDICATION_PROHIBIT_TIMER__s30 = 8,
  STREAMING_PROTOBUFS__OVERHEATING_ASSISTANCE_CONFIG__OVERHEATING_INDICATION_PROHIBIT_TIMER__s60 = 9,
  STREAMING_PROTOBUFS__OVERHEATING_ASSISTANCE_CONFIG__OVERHEATING_INDICATION_PROHIBIT_TIMER__s90 = 10,
  STREAMING_PROTOBUFS__OVERHEATING_ASSISTANCE_CONFIG__OVERHEATING_INDICATION_PROHIBIT_TIMER__s120 = 11,
  STREAMING_PROTOBUFS__OVERHEATING_ASSISTANCE_CONFIG__OVERHEATING_INDICATION_PROHIBIT_TIMER__s300 = 12,
  STREAMING_PROTOBUFS__OVERHEATING_ASSISTANCE_CONFIG__OVERHEATING_INDICATION_PROHIBIT_TIMER__s600 = 13
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__OVERHEATING_ASSISTANCE_CONFIG__OVERHEATING_INDICATION_PROHIBIT_TIMER)
} StreamingProtobufs__OverheatingAssistanceConfig__OverheatingIndicationProhibitTimer;
typedef enum _StreamingProtobufs__AggregationLevel__Value {
  STREAMING_PROTOBUFS__AGGREGATION_LEVEL__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__AGGREGATION_LEVEL__VALUE__n0 = 1,
  STREAMING_PROTOBUFS__AGGREGATION_LEVEL__VALUE__n1 = 2,
  STREAMING_PROTOBUFS__AGGREGATION_LEVEL__VALUE__n2 = 3,
  STREAMING_PROTOBUFS__AGGREGATION_LEVEL__VALUE__n3 = 4,
  STREAMING_PROTOBUFS__AGGREGATION_LEVEL__VALUE__n4 = 5,
  STREAMING_PROTOBUFS__AGGREGATION_LEVEL__VALUE__n5 = 6,
  STREAMING_PROTOBUFS__AGGREGATION_LEVEL__VALUE__n6 = 7,
  STREAMING_PROTOBUFS__AGGREGATION_LEVEL__VALUE__n8 = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__AGGREGATION_LEVEL__VALUE)
} StreamingProtobufs__AggregationLevel__Value;
typedef enum _StreamingProtobufs__AggregationLevelSFI__Value {
  STREAMING_PROTOBUFS__AGGREGATION_LEVEL__SFI__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__AGGREGATION_LEVEL__SFI__VALUE__n1 = 1,
  STREAMING_PROTOBUFS__AGGREGATION_LEVEL__SFI__VALUE__n2 = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__AGGREGATION_LEVEL__SFI__VALUE)
} StreamingProtobufs__AggregationLevelSFI__Value;
typedef enum _StreamingProtobufs__Dummy1__Value {
  STREAMING_PROTOBUFS__DUMMY1__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__DUMMY1__VALUE__sl1 = 1,
  STREAMING_PROTOBUFS__DUMMY1__VALUE__sl2 = 2,
  STREAMING_PROTOBUFS__DUMMY1__VALUE__sl4 = 3,
  STREAMING_PROTOBUFS__DUMMY1__VALUE__sl5 = 4,
  STREAMING_PROTOBUFS__DUMMY1__VALUE__sl8 = 5,
  STREAMING_PROTOBUFS__DUMMY1__VALUE__sl10 = 6,
  STREAMING_PROTOBUFS__DUMMY1__VALUE__sl16 = 7,
  STREAMING_PROTOBUFS__DUMMY1__VALUE__sl20 = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__DUMMY1__VALUE)
} StreamingProtobufs__Dummy1__Value;
typedef enum _StreamingProtobufs__Dummy2__Value {
  STREAMING_PROTOBUFS__DUMMY2__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__DUMMY2__VALUE__n1 = 1,
  STREAMING_PROTOBUFS__DUMMY2__VALUE__n2 = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__DUMMY2__VALUE)
} StreamingProtobufs__Dummy2__Value;
typedef enum _StreamingProtobufs__DCIFormats__Value {
  STREAMING_PROTOBUFS__DCI__FORMATS__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__DCI__FORMATS__VALUE__formats0_0_And_1_0 = 1,
  STREAMING_PROTOBUFS__DCI__FORMATS__VALUE__formats0_1_And_1_1 = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__DCI__FORMATS__VALUE)
} StreamingProtobufs__DCIFormats__Value;
typedef enum _StreamingProtobufs__PLMNIdentityInfo__CellReservedForOperatorUse {
  STREAMING_PROTOBUFS__PLMN__IDENTITY_INFO__CELL_RESERVED_FOR_OPERATOR_USE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__PLMN__IDENTITY_INFO__CELL_RESERVED_FOR_OPERATOR_USE__isreserved = 1,
  STREAMING_PROTOBUFS__PLMN__IDENTITY_INFO__CELL_RESERVED_FOR_OPERATOR_USE__notreserved = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PLMN__IDENTITY_INFO__CELL_RESERVED_FOR_OPERATOR_USE)
} StreamingProtobufs__PLMNIdentityInfo__CellReservedForOperatorUse;
typedef enum _StreamingProtobufs__DiscardTimer__Value {
  STREAMING_PROTOBUFS__DISCARD_TIMER__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__DISCARD_TIMER__VALUE__ms10 = 1,
  STREAMING_PROTOBUFS__DISCARD_TIMER__VALUE__ms20 = 2,
  STREAMING_PROTOBUFS__DISCARD_TIMER__VALUE__ms30 = 3,
  STREAMING_PROTOBUFS__DISCARD_TIMER__VALUE__ms40 = 4,
  STREAMING_PROTOBUFS__DISCARD_TIMER__VALUE__ms50 = 5,
  STREAMING_PROTOBUFS__DISCARD_TIMER__VALUE__ms60 = 6,
  STREAMING_PROTOBUFS__DISCARD_TIMER__VALUE__ms75 = 7,
  STREAMING_PROTOBUFS__DISCARD_TIMER__VALUE__ms100 = 8,
  STREAMING_PROTOBUFS__DISCARD_TIMER__VALUE__ms150 = 9,
  STREAMING_PROTOBUFS__DISCARD_TIMER__VALUE__ms200 = 10,
  STREAMING_PROTOBUFS__DISCARD_TIMER__VALUE__ms250 = 11,
  STREAMING_PROTOBUFS__DISCARD_TIMER__VALUE__ms300 = 12,
  STREAMING_PROTOBUFS__DISCARD_TIMER__VALUE__ms500 = 13,
  STREAMING_PROTOBUFS__DISCARD_TIMER__VALUE__ms750 = 14,
  STREAMING_PROTOBUFS__DISCARD_TIMER__VALUE__ms1500 = 15,
  STREAMING_PROTOBUFS__DISCARD_TIMER__VALUE__infinity = 16
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__DISCARD_TIMER__VALUE)
} StreamingProtobufs__DiscardTimer__Value;
typedef enum _StreamingProtobufs__PDCPSNSize__Value {
  STREAMING_PROTOBUFS__PDCP__SN__SIZE__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__PDCP__SN__SIZE__VALUE__len12bits = 1,
  STREAMING_PROTOBUFS__PDCP__SN__SIZE__VALUE__len18bits = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PDCP__SN__SIZE__VALUE)
} StreamingProtobufs__PDCPSNSize__Value;
typedef enum _StreamingProtobufs__ULDataSplitThreshold__Value {
  STREAMING_PROTOBUFS__UL__DATA_SPLIT_THRESHOLD__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__UL__DATA_SPLIT_THRESHOLD__VALUE__b0 = 1,
  STREAMING_PROTOBUFS__UL__DATA_SPLIT_THRESHOLD__VALUE__b100 = 2,
  STREAMING_PROTOBUFS__UL__DATA_SPLIT_THRESHOLD__VALUE__b200 = 3,
  STREAMING_PROTOBUFS__UL__DATA_SPLIT_THRESHOLD__VALUE__b400 = 4,
  STREAMING_PROTOBUFS__UL__DATA_SPLIT_THRESHOLD__VALUE__b800 = 5,
  STREAMING_PROTOBUFS__UL__DATA_SPLIT_THRESHOLD__VALUE__b1600 = 6,
  STREAMING_PROTOBUFS__UL__DATA_SPLIT_THRESHOLD__VALUE__b3200 = 7,
  STREAMING_PROTOBUFS__UL__DATA_SPLIT_THRESHOLD__VALUE__b6400 = 8,
  STREAMING_PROTOBUFS__UL__DATA_SPLIT_THRESHOLD__VALUE__b12800 = 9,
  STREAMING_PROTOBUFS__UL__DATA_SPLIT_THRESHOLD__VALUE__b25600 = 10,
  STREAMING_PROTOBUFS__UL__DATA_SPLIT_THRESHOLD__VALUE__b51200 = 11,
  STREAMING_PROTOBUFS__UL__DATA_SPLIT_THRESHOLD__VALUE__b102400 = 12,
  STREAMING_PROTOBUFS__UL__DATA_SPLIT_THRESHOLD__VALUE__b204800 = 13,
  STREAMING_PROTOBUFS__UL__DATA_SPLIT_THRESHOLD__VALUE__b409600 = 14,
  STREAMING_PROTOBUFS__UL__DATA_SPLIT_THRESHOLD__VALUE__b819200 = 15,
  STREAMING_PROTOBUFS__UL__DATA_SPLIT_THRESHOLD__VALUE__b1228800 = 16,
  STREAMING_PROTOBUFS__UL__DATA_SPLIT_THRESHOLD__VALUE__b1638400 = 17,
  STREAMING_PROTOBUFS__UL__DATA_SPLIT_THRESHOLD__VALUE__b2457600 = 18,
  STREAMING_PROTOBUFS__UL__DATA_SPLIT_THRESHOLD__VALUE__b3276800 = 19,
  STREAMING_PROTOBUFS__UL__DATA_SPLIT_THRESHOLD__VALUE__b4096000 = 20,
  STREAMING_PROTOBUFS__UL__DATA_SPLIT_THRESHOLD__VALUE__b4915200 = 21,
  STREAMING_PROTOBUFS__UL__DATA_SPLIT_THRESHOLD__VALUE__b5734400 = 22,
  STREAMING_PROTOBUFS__UL__DATA_SPLIT_THRESHOLD__VALUE__b6553600 = 23,
  STREAMING_PROTOBUFS__UL__DATA_SPLIT_THRESHOLD__VALUE__infinity = 24
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__UL__DATA_SPLIT_THRESHOLD__VALUE)
} StreamingProtobufs__ULDataSplitThreshold__Value;
typedef enum _StreamingProtobufs__TReordering__Value {
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__ms0 = 1,
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__ms1 = 2,
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__ms2 = 3,
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__ms4 = 4,
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__ms5 = 5,
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__ms8 = 6,
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__ms10 = 7,
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__ms15 = 8,
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__ms20 = 9,
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__ms30 = 10,
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__ms40 = 11,
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__ms50 = 12,
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__ms60 = 13,
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__ms80 = 14,
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__ms100 = 15,
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__ms120 = 16,
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__ms140 = 17,
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__ms160 = 18,
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__ms180 = 19,
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__ms200 = 20,
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__ms220 = 21,
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__ms240 = 22,
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__ms260 = 23,
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__ms280 = 24,
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__ms300 = 25,
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__ms500 = 26,
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__ms750 = 27,
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__ms1000 = 28,
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__ms1250 = 29,
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__ms1500 = 30,
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__ms1750 = 31,
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__ms2000 = 32,
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__ms2250 = 33,
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__ms2500 = 34,
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__ms2750 = 35,
  STREAMING_PROTOBUFS__T__REORDERING__VALUE__ms3000 = 36
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__T__REORDERING__VALUE)
} StreamingProtobufs__TReordering__Value;
typedef enum _StreamingProtobufs__SDAPHeader__Value {
  STREAMING_PROTOBUFS__SDAP__HEADER__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__SDAP__HEADER__VALUE__present = 1,
  STREAMING_PROTOBUFS__SDAP__HEADER__VALUE__absent = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SDAP__HEADER__VALUE)
} StreamingProtobufs__SDAPHeader__Value;
typedef enum _StreamingProtobufs__CipheringAlgorithm__Value {
  STREAMING_PROTOBUFS__CIPHERING_ALGORITHM__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__CIPHERING_ALGORITHM__VALUE__nea0 = 1,
  STREAMING_PROTOBUFS__CIPHERING_ALGORITHM__VALUE__nea1 = 2,
  STREAMING_PROTOBUFS__CIPHERING_ALGORITHM__VALUE__nea2 = 3,
  STREAMING_PROTOBUFS__CIPHERING_ALGORITHM__VALUE__nea3 = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CIPHERING_ALGORITHM__VALUE)
} StreamingProtobufs__CipheringAlgorithm__Value;
typedef enum _StreamingProtobufs__IntegrityProtAlgorithm__Value {
  STREAMING_PROTOBUFS__INTEGRITY_PROT_ALGORITHM__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__INTEGRITY_PROT_ALGORITHM__VALUE__nia0 = 1,
  STREAMING_PROTOBUFS__INTEGRITY_PROT_ALGORITHM__VALUE__nia1 = 2,
  STREAMING_PROTOBUFS__INTEGRITY_PROT_ALGORITHM__VALUE__nia2 = 3,
  STREAMING_PROTOBUFS__INTEGRITY_PROT_ALGORITHM__VALUE__nia3 = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__INTEGRITY_PROT_ALGORITHM__VALUE)
} StreamingProtobufs__IntegrityProtAlgorithm__Value;
typedef enum _StreamingProtobufs__KeyToUse__Value {
  STREAMING_PROTOBUFS__KEY_TO_USE__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__KEY_TO_USE__VALUE__master = 1,
  STREAMING_PROTOBUFS__KEY_TO_USE__VALUE__secondary = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__KEY_TO_USE__VALUE)
} StreamingProtobufs__KeyToUse__Value;
typedef enum _StreamingProtobufs__ConnEstFailCount__Value {
  STREAMING_PROTOBUFS__CONN_EST_FAIL_COUNT__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__CONN_EST_FAIL_COUNT__VALUE__n1 = 1,
  STREAMING_PROTOBUFS__CONN_EST_FAIL_COUNT__VALUE__n2 = 2,
  STREAMING_PROTOBUFS__CONN_EST_FAIL_COUNT__VALUE__n3 = 3,
  STREAMING_PROTOBUFS__CONN_EST_FAIL_COUNT__VALUE__n4 = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CONN_EST_FAIL_COUNT__VALUE)
} StreamingProtobufs__ConnEstFailCount__Value;
typedef enum _StreamingProtobufs__ConnEstFailOffsetValidity__Value {
  STREAMING_PROTOBUFS__CONN_EST_FAIL_OFFSET_VALIDITY__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__CONN_EST_FAIL_OFFSET_VALIDITY__VALUE__s30 = 1,
  STREAMING_PROTOBUFS__CONN_EST_FAIL_OFFSET_VALIDITY__VALUE__s60 = 2,
  STREAMING_PROTOBUFS__CONN_EST_FAIL_OFFSET_VALIDITY__VALUE__s120 = 3,
  STREAMING_PROTOBUFS__CONN_EST_FAIL_OFFSET_VALIDITY__VALUE__s240 = 4,
  STREAMING_PROTOBUFS__CONN_EST_FAIL_OFFSET_VALIDITY__VALUE__s300 = 5,
  STREAMING_PROTOBUFS__CONN_EST_FAIL_OFFSET_VALIDITY__VALUE__s420 = 6,
  STREAMING_PROTOBUFS__CONN_EST_FAIL_OFFSET_VALIDITY__VALUE__s600 = 7,
  STREAMING_PROTOBUFS__CONN_EST_FAIL_OFFSET_VALIDITY__VALUE__s900 = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CONN_EST_FAIL_OFFSET_VALIDITY__VALUE)
} StreamingProtobufs__ConnEstFailOffsetValidity__Value;
typedef enum _StreamingProtobufs__SIWindowLength__Value {
  STREAMING_PROTOBUFS__SI__WINDOW_LENGTH__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__SI__WINDOW_LENGTH__VALUE__s5 = 1,
  STREAMING_PROTOBUFS__SI__WINDOW_LENGTH__VALUE__s10 = 2,
  STREAMING_PROTOBUFS__SI__WINDOW_LENGTH__VALUE__s20 = 3,
  STREAMING_PROTOBUFS__SI__WINDOW_LENGTH__VALUE__s40 = 4,
  STREAMING_PROTOBUFS__SI__WINDOW_LENGTH__VALUE__s80 = 5,
  STREAMING_PROTOBUFS__SI__WINDOW_LENGTH__VALUE__s160 = 6,
  STREAMING_PROTOBUFS__SI__WINDOW_LENGTH__VALUE__s320 = 7,
  STREAMING_PROTOBUFS__SI__WINDOW_LENGTH__VALUE__s640 = 8,
  STREAMING_PROTOBUFS__SI__WINDOW_LENGTH__VALUE__s1280 = 9
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SI__WINDOW_LENGTH__VALUE)
} StreamingProtobufs__SIWindowLength__Value;
typedef enum _StreamingProtobufs__SIBroadcastStatus__Value {
  STREAMING_PROTOBUFS__SI__BROADCAST_STATUS__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__SI__BROADCAST_STATUS__VALUE__broadcasting = 1,
  STREAMING_PROTOBUFS__SI__BROADCAST_STATUS__VALUE__notBroadcasting = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SI__BROADCAST_STATUS__VALUE)
} StreamingProtobufs__SIBroadcastStatus__Value;
typedef enum _StreamingProtobufs__SIPeriodicity__Value {
  STREAMING_PROTOBUFS__SI__PERIODICITY__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__SI__PERIODICITY__VALUE__rf8 = 1,
  STREAMING_PROTOBUFS__SI__PERIODICITY__VALUE__rf16 = 2,
  STREAMING_PROTOBUFS__SI__PERIODICITY__VALUE__rf32 = 3,
  STREAMING_PROTOBUFS__SI__PERIODICITY__VALUE__rf64 = 4,
  STREAMING_PROTOBUFS__SI__PERIODICITY__VALUE__rf128 = 5,
  STREAMING_PROTOBUFS__SI__PERIODICITY__VALUE__rf256 = 6,
  STREAMING_PROTOBUFS__SI__PERIODICITY__VALUE__rf512 = 7
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SI__PERIODICITY__VALUE)
} StreamingProtobufs__SIPeriodicity__Value;
typedef enum _StreamingProtobufs__SIBTypeInfoType__Value {
  STREAMING_PROTOBUFS__SIB__TYPE_INFO_TYPE__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__SIB__TYPE_INFO_TYPE__VALUE__sibType2 = 1,
  STREAMING_PROTOBUFS__SIB__TYPE_INFO_TYPE__VALUE__sibType3 = 2,
  STREAMING_PROTOBUFS__SIB__TYPE_INFO_TYPE__VALUE__sibType4 = 3,
  STREAMING_PROTOBUFS__SIB__TYPE_INFO_TYPE__VALUE__sibType5 = 4,
  STREAMING_PROTOBUFS__SIB__TYPE_INFO_TYPE__VALUE__sibType6 = 5,
  STREAMING_PROTOBUFS__SIB__TYPE_INFO_TYPE__VALUE__sibType7 = 6,
  STREAMING_PROTOBUFS__SIB__TYPE_INFO_TYPE__VALUE__sibType8 = 7,
  STREAMING_PROTOBUFS__SIB__TYPE_INFO_TYPE__VALUE__sibType9 = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SIB__TYPE_INFO_TYPE__VALUE)
} StreamingProtobufs__SIBTypeInfoType__Value;
typedef enum _StreamingProtobufs__SIRequestPeriod__Value {
  STREAMING_PROTOBUFS__SI__REQUEST_PERIOD__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__SI__REQUEST_PERIOD__VALUE__one = 1,
  STREAMING_PROTOBUFS__SI__REQUEST_PERIOD__VALUE__two = 2,
  STREAMING_PROTOBUFS__SI__REQUEST_PERIOD__VALUE__four = 3,
  STREAMING_PROTOBUFS__SI__REQUEST_PERIOD__VALUE__six = 4,
  STREAMING_PROTOBUFS__SI__REQUEST_PERIOD__VALUE__eight = 5,
  STREAMING_PROTOBUFS__SI__REQUEST_PERIOD__VALUE__ten = 6,
  STREAMING_PROTOBUFS__SI__REQUEST_PERIOD__VALUE__twelve = 7,
  STREAMING_PROTOBUFS__SI__REQUEST_PERIOD__VALUE__sixteen = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SI__REQUEST_PERIOD__VALUE)
} StreamingProtobufs__SIRequestPeriod__Value;
typedef enum _StreamingProtobufs__BCCHConfig__ModificationPeriodCoeff {
  STREAMING_PROTOBUFS__BCCH__CONFIG__MODIFICATION_PERIOD_COEFF__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__BCCH__CONFIG__MODIFICATION_PERIOD_COEFF__n2 = 1,
  STREAMING_PROTOBUFS__BCCH__CONFIG__MODIFICATION_PERIOD_COEFF__n4 = 2,
  STREAMING_PROTOBUFS__BCCH__CONFIG__MODIFICATION_PERIOD_COEFF__n8 = 3,
  STREAMING_PROTOBUFS__BCCH__CONFIG__MODIFICATION_PERIOD_COEFF__n16 = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__BCCH__CONFIG__MODIFICATION_PERIOD_COEFF)
} StreamingProtobufs__BCCHConfig__ModificationPeriodCoeff;
typedef enum _StreamingProtobufs__PagingCycle__Value {
  STREAMING_PROTOBUFS__PAGING_CYCLE__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__PAGING_CYCLE__VALUE__rf32 = 1,
  STREAMING_PROTOBUFS__PAGING_CYCLE__VALUE__rf64 = 2,
  STREAMING_PROTOBUFS__PAGING_CYCLE__VALUE__rf128 = 3,
  STREAMING_PROTOBUFS__PAGING_CYCLE__VALUE__rf256 = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PAGING_CYCLE__VALUE)
} StreamingProtobufs__PagingCycle__Value;
typedef enum _StreamingProtobufs__PCCHConfigNs__Value {
  STREAMING_PROTOBUFS__PCCH__CONFIG_NS__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__PCCH__CONFIG_NS__VALUE__four = 1,
  STREAMING_PROTOBUFS__PCCH__CONFIG_NS__VALUE__two = 2,
  STREAMING_PROTOBUFS__PCCH__CONFIG_NS__VALUE__one = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PCCH__CONFIG_NS__VALUE)
} StreamingProtobufs__PCCHConfigNs__Value;
typedef enum _StreamingProtobufs__SIBNTimingAdvanceOffset__Value {
  STREAMING_PROTOBUFS__SIB__N__TIMING_ADVANCE_OFFSET__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__SIB__N__TIMING_ADVANCE_OFFSET__VALUE__n0 = 1,
  STREAMING_PROTOBUFS__SIB__N__TIMING_ADVANCE_OFFSET__VALUE__n25600 = 2,
  STREAMING_PROTOBUFS__SIB__N__TIMING_ADVANCE_OFFSET__VALUE__n39936 = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SIB__N__TIMING_ADVANCE_OFFSET__VALUE)
} StreamingProtobufs__SIBNTimingAdvanceOffset__Value;
typedef enum _StreamingProtobufs__SIBSSBPeriodicityServingCell__Value {
  STREAMING_PROTOBUFS__SIB__SSB__PERIODICITY_SERVING_CELL__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__SIB__SSB__PERIODICITY_SERVING_CELL__VALUE__ms5 = 1,
  STREAMING_PROTOBUFS__SIB__SSB__PERIODICITY_SERVING_CELL__VALUE__ms10 = 2,
  STREAMING_PROTOBUFS__SIB__SSB__PERIODICITY_SERVING_CELL__VALUE__ms20 = 3,
  STREAMING_PROTOBUFS__SIB__SSB__PERIODICITY_SERVING_CELL__VALUE__ms40 = 4,
  STREAMING_PROTOBUFS__SIB__SSB__PERIODICITY_SERVING_CELL__VALUE__ms80 = 5,
  STREAMING_PROTOBUFS__SIB__SSB__PERIODICITY_SERVING_CELL__VALUE__ms160 = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SIB__SSB__PERIODICITY_SERVING_CELL__VALUE)
} StreamingProtobufs__SIBSSBPeriodicityServingCell__Value;
typedef enum _StreamingProtobufs__UETimersAndConstantsT300T301T319__Value {
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_T300__T301__T319__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_T300__T301__T319__VALUE__ms100 = 1,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_T300__T301__T319__VALUE__ms200 = 2,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_T300__T301__T319__VALUE__ms300 = 3,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_T300__T301__T319__VALUE__ms400 = 4,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_T300__T301__T319__VALUE__ms600 = 5,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_T300__T301__T319__VALUE__ms1000 = 6,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_T300__T301__T319__VALUE__ms1500 = 7,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_T300__T301__T319__VALUE__ms2000 = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_T300__T301__T319__VALUE)
} StreamingProtobufs__UETimersAndConstantsT300T301T319__Value;
typedef enum _StreamingProtobufs__UETimersAndConstantsT310__Value {
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_T310__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_T310__VALUE__ms0 = 1,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_T310__VALUE__ms50 = 2,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_T310__VALUE__ms100 = 3,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_T310__VALUE__ms200 = 4,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_T310__VALUE__ms500 = 5,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_T310__VALUE__ms1000 = 6,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_T310__VALUE__ms2000 = 7
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_T310__VALUE)
} StreamingProtobufs__UETimersAndConstantsT310__Value;
typedef enum _StreamingProtobufs__UETimersAndConstantsN310__Value {
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_N310__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_N310__VALUE__n1 = 1,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_N310__VALUE__n2 = 2,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_N310__VALUE__n3 = 3,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_N310__VALUE__n4 = 4,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_N310__VALUE__n6 = 5,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_N310__VALUE__n8 = 6,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_N310__VALUE__n10 = 7,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_N310__VALUE__n20 = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_N310__VALUE)
} StreamingProtobufs__UETimersAndConstantsN310__Value;
typedef enum _StreamingProtobufs__UETimersAndConstantsT311__Value {
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_T311__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_T311__VALUE__ms1000 = 1,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_T311__VALUE__ms3000 = 2,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_T311__VALUE__ms5000 = 3,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_T311__VALUE__ms10000 = 4,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_T311__VALUE__ms15000 = 5,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_T311__VALUE__ms20000 = 6,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_T311__VALUE__ms30000 = 7
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_T311__VALUE)
} StreamingProtobufs__UETimersAndConstantsT311__Value;
typedef enum _StreamingProtobufs__UETimersAndConstantsN311__Value {
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_N311__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_N311__VALUE__n1 = 1,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_N311__VALUE__n2 = 2,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_N311__VALUE__n3 = 3,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_N311__VALUE__n4 = 4,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_N311__VALUE__n5 = 5,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_N311__VALUE__n6 = 6,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_N311__VALUE__n8 = 7,
  STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_N311__VALUE__n10 = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_N311__VALUE)
} StreamingProtobufs__UETimersAndConstantsN311__Value;
typedef enum _StreamingProtobufs__UACBarringFactor__Value {
  STREAMING_PROTOBUFS__UAC__BARRING_FACTOR__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__UAC__BARRING_FACTOR__VALUE__p00 = 1,
  STREAMING_PROTOBUFS__UAC__BARRING_FACTOR__VALUE__p05 = 2,
  STREAMING_PROTOBUFS__UAC__BARRING_FACTOR__VALUE__p10 = 3,
  STREAMING_PROTOBUFS__UAC__BARRING_FACTOR__VALUE__p15 = 4,
  STREAMING_PROTOBUFS__UAC__BARRING_FACTOR__VALUE__p20 = 5,
  STREAMING_PROTOBUFS__UAC__BARRING_FACTOR__VALUE__p25 = 6,
  STREAMING_PROTOBUFS__UAC__BARRING_FACTOR__VALUE__p30 = 7,
  STREAMING_PROTOBUFS__UAC__BARRING_FACTOR__VALUE__p40 = 8,
  STREAMING_PROTOBUFS__UAC__BARRING_FACTOR__VALUE__p50 = 9,
  STREAMING_PROTOBUFS__UAC__BARRING_FACTOR__VALUE__p60 = 10,
  STREAMING_PROTOBUFS__UAC__BARRING_FACTOR__VALUE__p70 = 11,
  STREAMING_PROTOBUFS__UAC__BARRING_FACTOR__VALUE__p75 = 12,
  STREAMING_PROTOBUFS__UAC__BARRING_FACTOR__VALUE__p80 = 13,
  STREAMING_PROTOBUFS__UAC__BARRING_FACTOR__VALUE__p85 = 14,
  STREAMING_PROTOBUFS__UAC__BARRING_FACTOR__VALUE__p90 = 15,
  STREAMING_PROTOBUFS__UAC__BARRING_FACTOR__VALUE__p95 = 16
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__UAC__BARRING_FACTOR__VALUE)
} StreamingProtobufs__UACBarringFactor__Value;
typedef enum _StreamingProtobufs__UACBarringTime__Value {
  STREAMING_PROTOBUFS__UAC__BARRING_TIME__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__UAC__BARRING_TIME__VALUE__s4 = 1,
  STREAMING_PROTOBUFS__UAC__BARRING_TIME__VALUE__s8 = 2,
  STREAMING_PROTOBUFS__UAC__BARRING_TIME__VALUE__s16 = 3,
  STREAMING_PROTOBUFS__UAC__BARRING_TIME__VALUE__s32 = 4,
  STREAMING_PROTOBUFS__UAC__BARRING_TIME__VALUE__s64 = 5,
  STREAMING_PROTOBUFS__UAC__BARRING_TIME__VALUE__s128 = 6,
  STREAMING_PROTOBUFS__UAC__BARRING_TIME__VALUE__s256 = 7,
  STREAMING_PROTOBUFS__UAC__BARRING_TIME__VALUE__s512 = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__UAC__BARRING_TIME__VALUE)
} StreamingProtobufs__UACBarringTime__Value;
typedef enum _StreamingProtobufs__TEvaluationHystNormal__Value {
  STREAMING_PROTOBUFS__T__EVALUATION__HYST_NORMAL__VALUE__protobuf_unspecified = 0,
  STREAMING_PROTOBUFS__T__EVALUATION__HYST_NORMAL__VALUE__s30 = 1,
  STREAMING_PROTOBUFS__T__EVALUATION__HYST_NORMAL__VALUE__s60 = 2,
  STREAMING_PROTOBUFS__T__EVALUATION__HYST_NORMAL__VALUE__s120 = 3,
  STREAMING_PROTOBUFS__T__EVALUATION__HYST_NORMAL__VALUE__s180 = 4,
  STREAMING_PROTOBUFS__T__EVALUATION__HYST_NORMAL__VALUE__s240 = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__T__EVALUATION__HYST_NORMAL__VALUE)
} StreamingProtobufs__TEvaluationHystNormal__Value;

/* --- messages --- */

struct  _StreamingProtobufs__CellGroupConfig
{
  ProtobufCMessage base;
  uint32_t cellgroupid;
  size_t n_rlc_bearertoaddmodlist;
  StreamingProtobufs__RLCBearerConfig **rlc_bearertoaddmodlist;
  size_t n_rlc_bearertoreleaselist;
  uint32_t *rlc_bearertoreleaselist;
  StreamingProtobufs__MACCellGroupConfig *mac_cellgroupconfig;
  StreamingProtobufs__PhysicalCellGroupConfig *physicalcellgroupconfig;
  StreamingProtobufs__SpCellConfig *spcellconfig;
  size_t n_scelltoaddmodlist;
  StreamingProtobufs__SCellConfig **scelltoaddmodlist;
  size_t n_scelltoreleaselist;
  uint32_t *scelltoreleaselist;
  Google__Protobuf__BoolValue *reportuplinktxdirectcurrent_v1530;
};
#define STREAMING_PROTOBUFS__CELL_GROUP_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__cell_group_config__descriptor) \
    , 0, 0,NULL, 0,NULL, NULL, NULL, NULL, 0,NULL, 0,NULL, NULL }


typedef enum {
  STREAMING_PROTOBUFS__RLC__BEARER_CONFIG__SERVED_RADIO_BEARER__NOT_SET = 0,
  STREAMING_PROTOBUFS__RLC__BEARER_CONFIG__SERVED_RADIO_BEARER_SRB__IDENTITY = 2,
  STREAMING_PROTOBUFS__RLC__BEARER_CONFIG__SERVED_RADIO_BEARER_DRB__IDENTITY = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__RLC__BEARER_CONFIG__SERVED_RADIO_BEARER)
} StreamingProtobufs__RLCBearerConfig__ServedRadioBearerCase;

struct  _StreamingProtobufs__RLCBearerConfig
{
  ProtobufCMessage base;
  uint32_t logicalchannelidentity;
  Google__Protobuf__BoolValue *reestablishrlc;
  StreamingProtobufs__RLCConfig *rlc_config;
  StreamingProtobufs__LogicalChannelConfig *mac_logicalchannelconfig;
  StreamingProtobufs__RLCBearerConfig__ServedRadioBearerCase served_radio_bearer_case;
  union {
    uint32_t srb_identity;
    uint32_t drb_identity;
  };
};
#define STREAMING_PROTOBUFS__RLC__BEARER_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__rlc__bearer_config__descriptor) \
    , 0, NULL, NULL, NULL, STREAMING_PROTOBUFS__RLC__BEARER_CONFIG__SERVED_RADIO_BEARER__NOT_SET, {0} }


struct  _StreamingProtobufs__RLCConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__AM *am;
  StreamingProtobufs__UMBiDirectional *um_bi_directional;
  StreamingProtobufs__UMUniDirectionalUL *um_uni_directional_ul;
  StreamingProtobufs__UMUniDirectionalDL *um_uni_directional_dl;
};
#define STREAMING_PROTOBUFS__RLC__CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__rlc__config__descriptor) \
    , NULL, NULL, NULL, NULL }


struct  _StreamingProtobufs__AM
{
  ProtobufCMessage base;
  StreamingProtobufs__ULAMRLC *ul_am_rlc;
  StreamingProtobufs__DLAMRLC *dl_am_rlc;
};
#define STREAMING_PROTOBUFS__AM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__am__descriptor) \
    , NULL, NULL }


struct  _StreamingProtobufs__ULAMRLC
{
  ProtobufCMessage base;
  StreamingProtobufs__SNFieldLengthAM *sn_fieldlength;
  StreamingProtobufs__TPollRetransmit *t_pollretransmit;
  StreamingProtobufs__PollPDU *pollpdu;
  StreamingProtobufs__PollByte *pollbyte;
  StreamingProtobufs__MaxRetxThreshold *maxretxthreshold;
};
#define STREAMING_PROTOBUFS__UL__AM__RLC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__ul__am__rlc__descriptor) \
    , NULL, NULL, NULL, NULL, NULL }


struct  _StreamingProtobufs__MaxRetxThreshold
{
  ProtobufCMessage base;
  StreamingProtobufs__MaxRetxThreshold__Value value;
};
#define STREAMING_PROTOBUFS__MAX_RETX_THRESHOLD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__max_retx_threshold__descriptor) \
    , STREAMING_PROTOBUFS__MAX_RETX_THRESHOLD__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__SNFieldLengthAM
{
  ProtobufCMessage base;
  StreamingProtobufs__SNFieldLengthAM__Value value;
};
#define STREAMING_PROTOBUFS__SN__FIELD_LENGTH_AM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__sn__field_length_am__descriptor) \
    , STREAMING_PROTOBUFS__SN__FIELD_LENGTH_AM__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__TPollRetransmit
{
  ProtobufCMessage base;
  StreamingProtobufs__TPollRetransmit__Value value;
};
#define STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__t__poll_retransmit__descriptor) \
    , STREAMING_PROTOBUFS__T__POLL_RETRANSMIT__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__PollPDU
{
  ProtobufCMessage base;
  StreamingProtobufs__PollPDU__Value value;
};
#define STREAMING_PROTOBUFS__POLL_PDU__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__poll_pdu__descriptor) \
    , STREAMING_PROTOBUFS__POLL_PDU__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__PollByte
{
  ProtobufCMessage base;
  StreamingProtobufs__PollByte__Value value;
};
#define STREAMING_PROTOBUFS__POLL_BYTE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__poll_byte__descriptor) \
    , STREAMING_PROTOBUFS__POLL_BYTE__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__DLAMRLC
{
  ProtobufCMessage base;
  StreamingProtobufs__SNFieldLengthAM *sn_fieldlength;
  StreamingProtobufs__TReassembly *t_reassembly;
  StreamingProtobufs__TStatusProhibit *t_statusprohibit;
};
#define STREAMING_PROTOBUFS__DL__AM__RLC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__dl__am__rlc__descriptor) \
    , NULL, NULL, NULL }


struct  _StreamingProtobufs__TReassembly
{
  ProtobufCMessage base;
  StreamingProtobufs__TReassembly__Value value;
};
#define STREAMING_PROTOBUFS__T__REASSEMBLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__t__reassembly__descriptor) \
    , STREAMING_PROTOBUFS__T__REASSEMBLY__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__TStatusProhibit
{
  ProtobufCMessage base;
  StreamingProtobufs__TStatusProhibit__Value value;
};
#define STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__t__status_prohibit__descriptor) \
    , STREAMING_PROTOBUFS__T__STATUS_PROHIBIT__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__UMBiDirectional
{
  ProtobufCMessage base;
  StreamingProtobufs__ULUMRLC *ul_um_rlc;
  StreamingProtobufs__DLUMRLC *dl_um_rlc;
};
#define STREAMING_PROTOBUFS__UM__BI__DIRECTIONAL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__um__bi__directional__descriptor) \
    , NULL, NULL }


struct  _StreamingProtobufs__ULUMRLC
{
  ProtobufCMessage base;
  StreamingProtobufs__SNFieldLengthUM *sn_fieldlength;
};
#define STREAMING_PROTOBUFS__UL__UM__RLC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__ul__um__rlc__descriptor) \
    , NULL }


struct  _StreamingProtobufs__SNFieldLengthUM
{
  ProtobufCMessage base;
  StreamingProtobufs__SNFieldLengthUM__Value value;
};
#define STREAMING_PROTOBUFS__SN__FIELD_LENGTH_UM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__sn__field_length_um__descriptor) \
    , STREAMING_PROTOBUFS__SN__FIELD_LENGTH_UM__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__DLUMRLC
{
  ProtobufCMessage base;
  StreamingProtobufs__SNFieldLengthUM *sn_fieldlength;
  StreamingProtobufs__TReassembly *t_reassembly;
};
#define STREAMING_PROTOBUFS__DL__UM__RLC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__dl__um__rlc__descriptor) \
    , NULL, NULL }


struct  _StreamingProtobufs__UMUniDirectionalUL
{
  ProtobufCMessage base;
  StreamingProtobufs__ULUMRLC *ul_um_rlc;
};
#define STREAMING_PROTOBUFS__UM__UNI__DIRECTIONAL__UL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__um__uni__directional__ul__descriptor) \
    , NULL }


struct  _StreamingProtobufs__UMUniDirectionalDL
{
  ProtobufCMessage base;
  StreamingProtobufs__DLUMRLC *dl_um_rlc;
};
#define STREAMING_PROTOBUFS__UM__UNI__DIRECTIONAL__DL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__um__uni__directional__dl__descriptor) \
    , NULL }


struct  _StreamingProtobufs__LogicalChannelConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__ULSpecificParameters *ul_specificparameters;
};
#define STREAMING_PROTOBUFS__LOGICAL_CHANNEL_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__logical_channel_config__descriptor) \
    , NULL }


struct  _StreamingProtobufs__ULSpecificParameters
{
  ProtobufCMessage base;
  uint32_t priority;
  StreamingProtobufs__PrioritisedBitRate *prioritisedbitrate;
  StreamingProtobufs__BucketSizeDuration *bucketsizeduration;
  size_t n_allowedservingcells;
  uint32_t *allowedservingcells;
  size_t n_allowedscs_list;
  StreamingProtobufs__SubcarrierSpacing **allowedscs_list;
  StreamingProtobufs__MaxPUSCHDuration *maxpusch_duration;
  Google__Protobuf__BoolValue *configuredgranttype1allowed;
  Google__Protobuf__UInt32Value *logicalchannelgroup;
  Google__Protobuf__UInt32Value *schedulingrequestid;
  protobuf_c_boolean logicalchannelsr_mask;
  protobuf_c_boolean logicalchannelsr_delaytimerapplied;
  StreamingProtobufs__BitRateQueryProhibitTimer *bitratequeryprohibittimer;
};
#define STREAMING_PROTOBUFS__UL__SPECIFIC_PARAMETERS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__ul__specific_parameters__descriptor) \
    , 0, NULL, NULL, 0,NULL, 0,NULL, NULL, NULL, NULL, NULL, 0, 0, NULL }


struct  _StreamingProtobufs__PrioritisedBitRate
{
  ProtobufCMessage base;
  StreamingProtobufs__PrioritisedBitRate__Value value;
};
#define STREAMING_PROTOBUFS__PRIORITISED_BIT_RATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__prioritised_bit_rate__descriptor) \
    , STREAMING_PROTOBUFS__PRIORITISED_BIT_RATE__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__BucketSizeDuration
{
  ProtobufCMessage base;
  StreamingProtobufs__BucketSizeDuration__Value value;
};
#define STREAMING_PROTOBUFS__BUCKET_SIZE_DURATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__bucket_size_duration__descriptor) \
    , STREAMING_PROTOBUFS__BUCKET_SIZE_DURATION__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__SubcarrierSpacing
{
  ProtobufCMessage base;
  StreamingProtobufs__SubcarrierSpacing__Value value;
};
#define STREAMING_PROTOBUFS__SUBCARRIER_SPACING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__subcarrier_spacing__descriptor) \
    , STREAMING_PROTOBUFS__SUBCARRIER_SPACING__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__MaxPUSCHDuration
{
  ProtobufCMessage base;
  StreamingProtobufs__MaxPUSCHDuration__Value value;
};
#define STREAMING_PROTOBUFS__MAX_PUSCH__DURATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__max_pusch__duration__descriptor) \
    , STREAMING_PROTOBUFS__MAX_PUSCH__DURATION__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__BitRateQueryProhibitTimer
{
  ProtobufCMessage base;
  StreamingProtobufs__BitRateQueryProhibitTimer__Value value;
};
#define STREAMING_PROTOBUFS__BIT_RATE_QUERY_PROHIBIT_TIMER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__bit_rate_query_prohibit_timer__descriptor) \
    , STREAMING_PROTOBUFS__BIT_RATE_QUERY_PROHIBIT_TIMER__VALUE__protobuf_unspecified }


typedef enum {
  STREAMING_PROTOBUFS__MAC__CELL_GROUP_CONFIG__DRX__CONFIG__NOT_SET = 0,
  STREAMING_PROTOBUFS__MAC__CELL_GROUP_CONFIG__DRX__CONFIG_RELEASE_DRX__CONFIG = 1,
  STREAMING_PROTOBUFS__MAC__CELL_GROUP_CONFIG__DRX__CONFIG_SETUP_DRX__CONFIG = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__MAC__CELL_GROUP_CONFIG__DRX__CONFIG)
} StreamingProtobufs__MACCellGroupConfig__DrxConfigCase;

typedef enum {
  STREAMING_PROTOBUFS__MAC__CELL_GROUP_CONFIG__PHR__CONFIG__NOT_SET = 0,
  STREAMING_PROTOBUFS__MAC__CELL_GROUP_CONFIG__PHR__CONFIG_RELEASE_PHR__CONFIG = 6,
  STREAMING_PROTOBUFS__MAC__CELL_GROUP_CONFIG__PHR__CONFIG_SETUP_PHR__CONFIG = 7
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__MAC__CELL_GROUP_CONFIG__PHR__CONFIG)
} StreamingProtobufs__MACCellGroupConfig__PhrConfigCase;

typedef enum {
  STREAMING_PROTOBUFS__MAC__CELL_GROUP_CONFIG__DATA_INACTIVITY_TIMER_V1530__NOT_SET = 0,
  STREAMING_PROTOBUFS__MAC__CELL_GROUP_CONFIG__DATA_INACTIVITY_TIMER_V1530_RELEASE_DATA_INACTIVITY_TIMER_V1530 = 10,
  STREAMING_PROTOBUFS__MAC__CELL_GROUP_CONFIG__DATA_INACTIVITY_TIMER_V1530_SETUP_DATA_INACTIVITY_TIMER_V1530 = 11
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__MAC__CELL_GROUP_CONFIG__DATA_INACTIVITY_TIMER_V1530)
} StreamingProtobufs__MACCellGroupConfig__DataInactivityTimerV1530Case;

struct  _StreamingProtobufs__MACCellGroupConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__SchedulingRequestConfig *schedulingrequestconfig;
  StreamingProtobufs__BSRConfig *bsr_config;
  StreamingProtobufs__TAGConfig *tag_config;
  protobuf_c_boolean skipuplinktxdynamic;
  Google__Protobuf__BoolValue *csi_mask_v1530;
  StreamingProtobufs__MACCellGroupConfig__DrxConfigCase drx__config_case;
  union {
    StreamingProtobufs__Null *release_drx_config;
    StreamingProtobufs__DRXConfig *setup_drx_config;
  };
  StreamingProtobufs__MACCellGroupConfig__PhrConfigCase phr__config_case;
  union {
    StreamingProtobufs__Null *release_phr_config;
    StreamingProtobufs__PHRConfig *setup_phr_config;
  };
  StreamingProtobufs__MACCellGroupConfig__DataInactivityTimerV1530Case data_inactivity_timer_v1530_case;
  union {
    StreamingProtobufs__Null *release_datainactivitytimer_v1530;
    StreamingProtobufs__DataInactivityTimer *setup_datainactivitytimer_v1530;
  };
};
#define STREAMING_PROTOBUFS__MAC__CELL_GROUP_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__mac__cell_group_config__descriptor) \
    , NULL, NULL, NULL, 0, NULL, STREAMING_PROTOBUFS__MAC__CELL_GROUP_CONFIG__DRX__CONFIG__NOT_SET, {0}, STREAMING_PROTOBUFS__MAC__CELL_GROUP_CONFIG__PHR__CONFIG__NOT_SET, {0}, STREAMING_PROTOBUFS__MAC__CELL_GROUP_CONFIG__DATA_INACTIVITY_TIMER_V1530__NOT_SET, {0} }


typedef enum {
  STREAMING_PROTOBUFS__DRX__CONFIG__DRX_ON_DURATION_TIMER__NOT_SET = 0,
  STREAMING_PROTOBUFS__DRX__CONFIG__DRX_ON_DURATION_TIMER_SUB_MILLI_SECONDS = 1,
  STREAMING_PROTOBUFS__DRX__CONFIG__DRX_ON_DURATION_TIMER_MILLI_SECONDS = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__DRX__CONFIG__DRX_ON_DURATION_TIMER)
} StreamingProtobufs__DRXConfig__DrxOnDurationTimerCase;

typedef enum {
  STREAMING_PROTOBUFS__DRX__CONFIG__DRX__LONG_CYCLE_START_OFFSET__NOT_SET = 0,
  STREAMING_PROTOBUFS__DRX__CONFIG__DRX__LONG_CYCLE_START_OFFSET_MS10 = 8,
  STREAMING_PROTOBUFS__DRX__CONFIG__DRX__LONG_CYCLE_START_OFFSET_MS20 = 9,
  STREAMING_PROTOBUFS__DRX__CONFIG__DRX__LONG_CYCLE_START_OFFSET_MS32 = 10,
  STREAMING_PROTOBUFS__DRX__CONFIG__DRX__LONG_CYCLE_START_OFFSET_MS40 = 11,
  STREAMING_PROTOBUFS__DRX__CONFIG__DRX__LONG_CYCLE_START_OFFSET_MS60 = 12,
  STREAMING_PROTOBUFS__DRX__CONFIG__DRX__LONG_CYCLE_START_OFFSET_MS64 = 13,
  STREAMING_PROTOBUFS__DRX__CONFIG__DRX__LONG_CYCLE_START_OFFSET_MS70 = 14,
  STREAMING_PROTOBUFS__DRX__CONFIG__DRX__LONG_CYCLE_START_OFFSET_MS80 = 15,
  STREAMING_PROTOBUFS__DRX__CONFIG__DRX__LONG_CYCLE_START_OFFSET_MS128 = 16,
  STREAMING_PROTOBUFS__DRX__CONFIG__DRX__LONG_CYCLE_START_OFFSET_MS160 = 17,
  STREAMING_PROTOBUFS__DRX__CONFIG__DRX__LONG_CYCLE_START_OFFSET_MS256 = 18,
  STREAMING_PROTOBUFS__DRX__CONFIG__DRX__LONG_CYCLE_START_OFFSET_MS320 = 19,
  STREAMING_PROTOBUFS__DRX__CONFIG__DRX__LONG_CYCLE_START_OFFSET_MS512 = 20,
  STREAMING_PROTOBUFS__DRX__CONFIG__DRX__LONG_CYCLE_START_OFFSET_MS640 = 21,
  STREAMING_PROTOBUFS__DRX__CONFIG__DRX__LONG_CYCLE_START_OFFSET_MS1024 = 22,
  STREAMING_PROTOBUFS__DRX__CONFIG__DRX__LONG_CYCLE_START_OFFSET_MS1280 = 23,
  STREAMING_PROTOBUFS__DRX__CONFIG__DRX__LONG_CYCLE_START_OFFSET_MS2048 = 24,
  STREAMING_PROTOBUFS__DRX__CONFIG__DRX__LONG_CYCLE_START_OFFSET_MS2560 = 25,
  STREAMING_PROTOBUFS__DRX__CONFIG__DRX__LONG_CYCLE_START_OFFSET_MS5120 = 26,
  STREAMING_PROTOBUFS__DRX__CONFIG__DRX__LONG_CYCLE_START_OFFSET_MS10240 = 27
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__DRX__CONFIG__DRX__LONG_CYCLE_START_OFFSET)
} StreamingProtobufs__DRXConfig__DrxLongCycleStartOffsetCase;

struct  _StreamingProtobufs__DRXConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__DRXInactivityTimer *drx_inactivitytimer;
  uint32_t drx_harq_rtt_timerdl;
  uint32_t drx_harq_rtt_timerul;
  StreamingProtobufs__DRXRetransmissionTimer *drx_retransmissiontimerdl;
  StreamingProtobufs__DRXRetransmissionTimer *drx_retransmissiontimerul;
  StreamingProtobufs__ShortDRX *shortdrx;
  uint32_t drx_slotoffset;
  StreamingProtobufs__DRXConfig__DrxOnDurationTimerCase drx_on_duration_timer_case;
  union {
    uint32_t submilliseconds;
    StreamingProtobufs__MilliSeconds *milliseconds;
  };
  StreamingProtobufs__DRXConfig__DrxLongCycleStartOffsetCase drx__long_cycle_start_offset_case;
  union {
    uint32_t ms10;
    uint32_t ms20;
    uint32_t ms32;
    uint32_t ms40;
    uint32_t ms60;
    uint32_t ms64;
    uint32_t ms70;
    uint32_t ms80;
    uint32_t ms128;
    uint32_t ms160;
    uint32_t ms256;
    uint32_t ms320;
    uint32_t ms512;
    uint32_t ms640;
    uint32_t ms1024;
    uint32_t ms1280;
    uint32_t ms2048;
    uint32_t ms2560;
    uint32_t ms5120;
    uint32_t ms10240;
  };
};
#define STREAMING_PROTOBUFS__DRX__CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__drx__config__descriptor) \
    , NULL, 0, 0, NULL, NULL, NULL, 0, STREAMING_PROTOBUFS__DRX__CONFIG__DRX_ON_DURATION_TIMER__NOT_SET, {0}, STREAMING_PROTOBUFS__DRX__CONFIG__DRX__LONG_CYCLE_START_OFFSET__NOT_SET, {0} }


struct  _StreamingProtobufs__MilliSeconds
{
  ProtobufCMessage base;
  StreamingProtobufs__MilliSeconds__Value value;
};
#define STREAMING_PROTOBUFS__MILLI_SECONDS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__milli_seconds__descriptor) \
    , STREAMING_PROTOBUFS__MILLI_SECONDS__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__DRXInactivityTimer
{
  ProtobufCMessage base;
  StreamingProtobufs__DRXInactivityTimer__Value value;
};
#define STREAMING_PROTOBUFS__DRX__INACTIVITY_TIMER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__drx__inactivity_timer__descriptor) \
    , STREAMING_PROTOBUFS__DRX__INACTIVITY_TIMER__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__DRXRetransmissionTimer
{
  ProtobufCMessage base;
  StreamingProtobufs__DRXRetransmissionTimer__Value value;
};
#define STREAMING_PROTOBUFS__DRX__RETRANSMISSION_TIMER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__drx__retransmission_timer__descriptor) \
    , STREAMING_PROTOBUFS__DRX__RETRANSMISSION_TIMER__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__ShortDRX
{
  ProtobufCMessage base;
  StreamingProtobufs__DRXShortCycle *drx_shortcycle;
  uint32_t drx_shortcycletimer;
};
#define STREAMING_PROTOBUFS__SHORT_DRX__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__short_drx__descriptor) \
    , NULL, 0 }


struct  _StreamingProtobufs__DRXShortCycle
{
  ProtobufCMessage base;
  StreamingProtobufs__DRXShortCycle__Value value;
};
#define STREAMING_PROTOBUFS__DRX__SHORT_CYCLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__drx__short_cycle__descriptor) \
    , STREAMING_PROTOBUFS__DRX__SHORT_CYCLE__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__SchedulingRequestConfig
{
  ProtobufCMessage base;
  size_t n_schedulingrequesttoaddmodlist;
  StreamingProtobufs__SchedulingRequestToAddMod **schedulingrequesttoaddmodlist;
  size_t n_schedulingrequesttoreleaselist;
  uint32_t *schedulingrequesttoreleaselist;
};
#define STREAMING_PROTOBUFS__SCHEDULING_REQUEST_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__scheduling_request_config__descriptor) \
    , 0,NULL, 0,NULL }


struct  _StreamingProtobufs__SchedulingRequestToAddMod
{
  ProtobufCMessage base;
  uint32_t schedulingrequestid;
  StreamingProtobufs__SRProhibitTimer *sr_prohibittimer;
  StreamingProtobufs__SRTransMax *sr_transmax;
};
#define STREAMING_PROTOBUFS__SCHEDULING_REQUEST_TO_ADD_MOD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__scheduling_request_to_add_mod__descriptor) \
    , 0, NULL, NULL }


struct  _StreamingProtobufs__SRProhibitTimer
{
  ProtobufCMessage base;
  StreamingProtobufs__SRProhibitTimer__Value value;
};
#define STREAMING_PROTOBUFS__SR__PROHIBIT_TIMER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__sr__prohibit_timer__descriptor) \
    , STREAMING_PROTOBUFS__SR__PROHIBIT_TIMER__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__SRTransMax
{
  ProtobufCMessage base;
  StreamingProtobufs__SRTransMax__Value value;
};
#define STREAMING_PROTOBUFS__SR__TRANS_MAX__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__sr__trans_max__descriptor) \
    , STREAMING_PROTOBUFS__SR__TRANS_MAX__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__BSRConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__PeriodicBSRTimer *periodicbsr_timer;
  StreamingProtobufs__RetxBSRTimer *retxbsr_timer;
  StreamingProtobufs__LogicalChannelSRDelayTimer *logicalchannelsr_delaytimer;
};
#define STREAMING_PROTOBUFS__BSR__CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__bsr__config__descriptor) \
    , NULL, NULL, NULL }


struct  _StreamingProtobufs__PeriodicBSRTimer
{
  ProtobufCMessage base;
  StreamingProtobufs__PeriodicBSRTimer__Value value;
};
#define STREAMING_PROTOBUFS__PERIODIC_BSR__TIMER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__periodic_bsr__timer__descriptor) \
    , STREAMING_PROTOBUFS__PERIODIC_BSR__TIMER__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__RetxBSRTimer
{
  ProtobufCMessage base;
  StreamingProtobufs__RetxBSRTimer__Value value;
};
#define STREAMING_PROTOBUFS__RETX_BSR__TIMER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__retx_bsr__timer__descriptor) \
    , STREAMING_PROTOBUFS__RETX_BSR__TIMER__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__LogicalChannelSRDelayTimer
{
  ProtobufCMessage base;
  StreamingProtobufs__LogicalChannelSRDelayTimer__Value value;
};
#define STREAMING_PROTOBUFS__LOGICAL_CHANNEL_SR__DELAY_TIMER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__logical_channel_sr__delay_timer__descriptor) \
    , STREAMING_PROTOBUFS__LOGICAL_CHANNEL_SR__DELAY_TIMER__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__TAGConfig
{
  ProtobufCMessage base;
  size_t n_tag_toreleaselist;
  Google__Protobuf__UInt32Value **tag_toreleaselist;
  size_t n_tag_toaddmodlist;
  StreamingProtobufs__TAG **tag_toaddmodlist;
};
#define STREAMING_PROTOBUFS__TAG__CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__tag__config__descriptor) \
    , 0,NULL, 0,NULL }


struct  _StreamingProtobufs__TAG
{
  ProtobufCMessage base;
  uint32_t tag_id;
  StreamingProtobufs__TimeAlignmentTimer *timealignmenttimer;
};
#define STREAMING_PROTOBUFS__TAG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__tag__descriptor) \
    , 0, NULL }


struct  _StreamingProtobufs__TimeAlignmentTimer
{
  ProtobufCMessage base;
  StreamingProtobufs__TimeAlignmentTimer__Value value;
};
#define STREAMING_PROTOBUFS__TIME_ALIGNMENT_TIMER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__time_alignment_timer__descriptor) \
    , STREAMING_PROTOBUFS__TIME_ALIGNMENT_TIMER__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__PHRConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__PHRPeriodicTimer *phr_periodictimer;
  StreamingProtobufs__PHRProhibitTimer *phr_prohibittimer;
  StreamingProtobufs__PHRTxPowerFactorChange *phr_tx_powerfactorchange;
  protobuf_c_boolean multiplephr;
  protobuf_c_boolean dummy;
  protobuf_c_boolean phr_type2othercell;
  StreamingProtobufs__PHRModeOtherCG *phr_modeothercg;
};
#define STREAMING_PROTOBUFS__PHR__CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__phr__config__descriptor) \
    , NULL, NULL, NULL, 0, 0, 0, NULL }


struct  _StreamingProtobufs__PHRPeriodicTimer
{
  ProtobufCMessage base;
  StreamingProtobufs__PHRPeriodicTimer__Value value;
};
#define STREAMING_PROTOBUFS__PHR__PERIODIC_TIMER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__phr__periodic_timer__descriptor) \
    , STREAMING_PROTOBUFS__PHR__PERIODIC_TIMER__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__PHRProhibitTimer
{
  ProtobufCMessage base;
  StreamingProtobufs__PHRProhibitTimer__Value value;
};
#define STREAMING_PROTOBUFS__PHR__PROHIBIT_TIMER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__phr__prohibit_timer__descriptor) \
    , STREAMING_PROTOBUFS__PHR__PROHIBIT_TIMER__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__PHRTxPowerFactorChange
{
  ProtobufCMessage base;
  StreamingProtobufs__PHRTxPowerFactorChange__Value value;
};
#define STREAMING_PROTOBUFS__PHR__TX__POWER_FACTOR_CHANGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__phr__tx__power_factor_change__descriptor) \
    , STREAMING_PROTOBUFS__PHR__TX__POWER_FACTOR_CHANGE__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__PHRModeOtherCG
{
  ProtobufCMessage base;
  StreamingProtobufs__PHRModeOtherCG__Value value;
};
#define STREAMING_PROTOBUFS__PHR__MODE_OTHER_CG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__phr__mode_other_cg__descriptor) \
    , STREAMING_PROTOBUFS__PHR__MODE_OTHER_CG__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__DataInactivityTimer
{
  ProtobufCMessage base;
  StreamingProtobufs__DataInactivityTimer__Value value;
};
#define STREAMING_PROTOBUFS__DATA_INACTIVITY_TIMER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__data_inactivity_timer__descriptor) \
    , STREAMING_PROTOBUFS__DATA_INACTIVITY_TIMER__VALUE__protobuf_unspecified }


typedef enum {
  STREAMING_PROTOBUFS__PHYSICAL_CELL_GROUP_CONFIG__CS__RNTI__NOT_SET = 0,
  STREAMING_PROTOBUFS__PHYSICAL_CELL_GROUP_CONFIG__CS__RNTI_RELEASE_CS__RNTI = 9,
  STREAMING_PROTOBUFS__PHYSICAL_CELL_GROUP_CONFIG__CS__RNTI_SETUP_CS__RNTI = 10
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PHYSICAL_CELL_GROUP_CONFIG__CS__RNTI)
} StreamingProtobufs__PhysicalCellGroupConfig__CsRNTICase;

struct  _StreamingProtobufs__PhysicalCellGroupConfig
{
  ProtobufCMessage base;
  Google__Protobuf__BoolValue *harq_ack_spatialbundlingpucch;
  Google__Protobuf__BoolValue *harq_ack_spatialbundlingpusch;
  Google__Protobuf__Int32Value *p_nr_fr1;
  StreamingProtobufs__PhysicalCellGroupConfig__PDSCHHARQACKCodebook pdsch_harq_ack_codebook;
  Google__Protobuf__UInt32Value *tpc_srs_rnti;
  Google__Protobuf__UInt32Value *tpc_pucch_rnti;
  Google__Protobuf__UInt32Value *tpc_pusch_rnti;
  Google__Protobuf__UInt32Value *sp_csi_rnti;
  Google__Protobuf__UInt32Value *mcs_c_rnti;
  Google__Protobuf__Int32Value *p_ue_fr1;
  StreamingProtobufs__XScale *xscale;
  StreamingProtobufs__PhysicalCellGroupConfig__CsRNTICase cs__rnti_case;
  union {
    StreamingProtobufs__Null *release_cs_rnti;
    uint32_t setup_cs_rnti;
  };
};
#define STREAMING_PROTOBUFS__PHYSICAL_CELL_GROUP_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__physical_cell_group_config__descriptor) \
    , NULL, NULL, NULL, STREAMING_PROTOBUFS__PHYSICAL_CELL_GROUP_CONFIG__PDSCH__HARQ__ACK__CODEBOOK__protobuf_unspecified, NULL, NULL, NULL, NULL, NULL, NULL, NULL, STREAMING_PROTOBUFS__PHYSICAL_CELL_GROUP_CONFIG__CS__RNTI__NOT_SET, {0} }


struct  _StreamingProtobufs__XScale
{
  ProtobufCMessage base;
  StreamingProtobufs__XScale__Value value;
};
#define STREAMING_PROTOBUFS__XSCALE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__xscale__descriptor) \
    , STREAMING_PROTOBUFS__XSCALE__VALUE__protobuf_unspecified }


typedef enum {
  STREAMING_PROTOBUFS__SP_CELL_CONFIG__RLF__TIMERS_AND_CONSTANTS__NOT_SET = 0,
  STREAMING_PROTOBUFS__SP_CELL_CONFIG__RLF__TIMERS_AND_CONSTANTS_RELEASE_RLF__TIMERS_AND_CONSTANTS = 3,
  STREAMING_PROTOBUFS__SP_CELL_CONFIG__RLF__TIMERS_AND_CONSTANTS_SETUP_RLF__TIMERS_AND_CONSTANTS = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SP_CELL_CONFIG__RLF__TIMERS_AND_CONSTANTS)
} StreamingProtobufs__SpCellConfig__RlfTimersAndConstantsCase;

struct  _StreamingProtobufs__SpCellConfig
{
  ProtobufCMessage base;
  Google__Protobuf__UInt32Value *servcellindex;
  StreamingProtobufs__ReconfigurationWithSync *reconfigurationwithsync;
  StreamingProtobufs__RlmInSyncOutOfSyncThreshold *rlminsyncoutofsyncthreshold;
  StreamingProtobufs__ServingCellConfig *spcellconfigdedicated;
  StreamingProtobufs__SpCellConfig__RlfTimersAndConstantsCase rlf__timers_and_constants_case;
  union {
    StreamingProtobufs__Null *release_rlf_timersandconstants;
    StreamingProtobufs__RLFTimersAndConstants *setup_rlf_timersandconstants;
  };
};
#define STREAMING_PROTOBUFS__SP_CELL_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__sp_cell_config__descriptor) \
    , NULL, NULL, NULL, NULL, STREAMING_PROTOBUFS__SP_CELL_CONFIG__RLF__TIMERS_AND_CONSTANTS__NOT_SET, {0} }


typedef enum {
  STREAMING_PROTOBUFS__RECONFIGURATION_WITH_SYNC__RACH__CONFIG_DEDICATED__NOT_SET = 0,
  STREAMING_PROTOBUFS__RECONFIGURATION_WITH_SYNC__RACH__CONFIG_DEDICATED_UPLINK = 4,
  STREAMING_PROTOBUFS__RECONFIGURATION_WITH_SYNC__RACH__CONFIG_DEDICATED_SUPPLEMENTARY_UPLINK = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__RECONFIGURATION_WITH_SYNC__RACH__CONFIG_DEDICATED)
} StreamingProtobufs__ReconfigurationWithSync__RachConfigDedicatedCase;

struct  _StreamingProtobufs__ReconfigurationWithSync
{
  ProtobufCMessage base;
  StreamingProtobufs__ServingCellConfigCommon *spcellconfigcommon;
  uint32_t newue_identity;
  StreamingProtobufs__T304 *t304;
  StreamingProtobufs__SSBMTC *smtc;
  StreamingProtobufs__ReconfigurationWithSync__RachConfigDedicatedCase rach__config_dedicated_case;
  union {
    StreamingProtobufs__RACHConfigDedicated *uplink;
    StreamingProtobufs__RACHConfigDedicated *supplementaryuplink;
  };
};
#define STREAMING_PROTOBUFS__RECONFIGURATION_WITH_SYNC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__reconfiguration_with_sync__descriptor) \
    , NULL, 0, NULL, NULL, STREAMING_PROTOBUFS__RECONFIGURATION_WITH_SYNC__RACH__CONFIG_DEDICATED__NOT_SET, {0} }


typedef enum {
  STREAMING_PROTOBUFS__SERVING_CELL_CONFIG_COMMON__SSB__POSITIONS_IN_BURST__NOT_SET = 0,
  STREAMING_PROTOBUFS__SERVING_CELL_CONFIG_COMMON__SSB__POSITIONS_IN_BURST_SHORT_BITMAP = 6,
  STREAMING_PROTOBUFS__SERVING_CELL_CONFIG_COMMON__SSB__POSITIONS_IN_BURST_MEDIUM_BITMAP = 7,
  STREAMING_PROTOBUFS__SERVING_CELL_CONFIG_COMMON__SSB__POSITIONS_IN_BURST_LONG_BITMAP = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SERVING_CELL_CONFIG_COMMON__SSB__POSITIONS_IN_BURST)
} StreamingProtobufs__ServingCellConfigCommon__SsbPositionsInBurstCase;

typedef enum {
  STREAMING_PROTOBUFS__SERVING_CELL_CONFIG_COMMON__LTE__CRS__TO_MATCH_AROUND__NOT_SET = 0,
  STREAMING_PROTOBUFS__SERVING_CELL_CONFIG_COMMON__LTE__CRS__TO_MATCH_AROUND_RELEASE_LTE__CRS__TO_MATCH_AROUND = 11,
  STREAMING_PROTOBUFS__SERVING_CELL_CONFIG_COMMON__LTE__CRS__TO_MATCH_AROUND_SETUP_LTE__CRS__TO_MATCH_AROUND = 12
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SERVING_CELL_CONFIG_COMMON__LTE__CRS__TO_MATCH_AROUND)
} StreamingProtobufs__ServingCellConfigCommon__LteCRSToMatchAroundCase;

struct  _StreamingProtobufs__ServingCellConfigCommon
{
  ProtobufCMessage base;
  Google__Protobuf__UInt32Value *physcellid;
  StreamingProtobufs__DownlinkConfigCommon *downlinkconfigcommon;
  StreamingProtobufs__UplinkConfigCommon *uplinkconfigcommon;
  StreamingProtobufs__UplinkConfigCommon *supplementaryuplinkconfigcommon;
  StreamingProtobufs__NTimingAdvanceOffset *n_timingadvanceoffset;
  StreamingProtobufs__SSBPeriodicityServingCell *ssb_periodicityservingcell;
  StreamingProtobufs__DMRSTypeAPosition *dmrs_typea_position;
  size_t n_ratematchpatterntoaddmodlist;
  StreamingProtobufs__RateMatchPattern **ratematchpatterntoaddmodlist;
  size_t n_ratematchpatterntoreleaselist;
  uint32_t *ratematchpatterntoreleaselist;
  StreamingProtobufs__SubcarrierSpacing *subcarrierspacing;
  StreamingProtobufs__TDDULDLConfigCommon *tdd_ul_dl_configcommon;
  int32_t ss_pbch_blockpower;
  StreamingProtobufs__ServingCellConfigCommon__SsbPositionsInBurstCase ssb__positions_in_burst_case;
  union {
    ProtobufCBinaryData shortbitmap;
    ProtobufCBinaryData mediumbitmap;
    ProtobufCBinaryData longbitmap;
  };
  StreamingProtobufs__ServingCellConfigCommon__LteCRSToMatchAroundCase lte__crs__to_match_around_case;
  union {
    StreamingProtobufs__Null *release_lte_crs_tomatcharound;
    StreamingProtobufs__RateMatchPatternLTECRS *setup_lte_crs_tomatcharound;
  };
};
#define STREAMING_PROTOBUFS__SERVING_CELL_CONFIG_COMMON__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__serving_cell_config_common__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0,NULL, 0,NULL, NULL, NULL, 0, STREAMING_PROTOBUFS__SERVING_CELL_CONFIG_COMMON__SSB__POSITIONS_IN_BURST__NOT_SET, {0}, STREAMING_PROTOBUFS__SERVING_CELL_CONFIG_COMMON__LTE__CRS__TO_MATCH_AROUND__NOT_SET, {0} }


struct  _StreamingProtobufs__DownlinkConfigCommon
{
  ProtobufCMessage base;
  StreamingProtobufs__FrequencyInfoDL *frequencyinfodl;
  StreamingProtobufs__BWPDownlinkCommon *initialdownlinkbwp;
};
#define STREAMING_PROTOBUFS__DOWNLINK_CONFIG_COMMON__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__downlink_config_common__descriptor) \
    , NULL, NULL }


struct  _StreamingProtobufs__FrequencyInfoDL
{
  ProtobufCMessage base;
  Google__Protobuf__UInt32Value *absolutefrequencyssb;
  StreamingProtobufs__MultiFrequencyBandListNR *frequencybandlist;
  uint32_t absolutefrequencypointa;
  size_t n_scs_specificcarrier;
  StreamingProtobufs__SCSSpecificCarrier **scs_specificcarrier;
};
#define STREAMING_PROTOBUFS__FREQUENCY_INFO_DL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__frequency_info_dl__descriptor) \
    , NULL, NULL, 0, 0,NULL }


struct  _StreamingProtobufs__SCSSpecificCarrier
{
  ProtobufCMessage base;
  uint32_t offsettocarrier;
  StreamingProtobufs__SubcarrierSpacing *subcarrierspacing;
  uint32_t carrierbandwidth;
  Google__Protobuf__UInt32Value *txdirectcurrentlocation_v1530;
};
#define STREAMING_PROTOBUFS__SCS__SPECIFIC_CARRIER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__scs__specific_carrier__descriptor) \
    , 0, NULL, 0, NULL }


typedef enum {
  STREAMING_PROTOBUFS__BWP__DOWNLINK_COMMON__PDCCH__CONFIG_COMMON__NOT_SET = 0,
  STREAMING_PROTOBUFS__BWP__DOWNLINK_COMMON__PDCCH__CONFIG_COMMON_RELEASE_PDCCH__CONFIG_COMMON = 2,
  STREAMING_PROTOBUFS__BWP__DOWNLINK_COMMON__PDCCH__CONFIG_COMMON_SETUP_PDCCH__CONFIG_COMMON = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__BWP__DOWNLINK_COMMON__PDCCH__CONFIG_COMMON)
} StreamingProtobufs__BWPDownlinkCommon__PdcchConfigCommonCase;

typedef enum {
  STREAMING_PROTOBUFS__BWP__DOWNLINK_COMMON__PDSCH__CONFIG_COMMON__NOT_SET = 0,
  STREAMING_PROTOBUFS__BWP__DOWNLINK_COMMON__PDSCH__CONFIG_COMMON_RELEASE_PDSCH__CONFIG_COMMON = 4,
  STREAMING_PROTOBUFS__BWP__DOWNLINK_COMMON__PDSCH__CONFIG_COMMON_SETUP_PDSCH__CONFIG_COMMON = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__BWP__DOWNLINK_COMMON__PDSCH__CONFIG_COMMON)
} StreamingProtobufs__BWPDownlinkCommon__PdschConfigCommonCase;

struct  _StreamingProtobufs__BWPDownlinkCommon
{
  ProtobufCMessage base;
  StreamingProtobufs__BWP *genericparameters;
  StreamingProtobufs__BWPDownlinkCommon__PdcchConfigCommonCase pdcch__config_common_case;
  union {
    StreamingProtobufs__Null *release_pdcch_configcommon;
    StreamingProtobufs__PDCCHConfigCommon *setup_pdcch_configcommon;
  };
  StreamingProtobufs__BWPDownlinkCommon__PdschConfigCommonCase pdsch__config_common_case;
  union {
    StreamingProtobufs__Null *release_pdsch_configcommon;
    StreamingProtobufs__PDSCHConfigCommon *setup_pdsch_configcommon;
  };
};
#define STREAMING_PROTOBUFS__BWP__DOWNLINK_COMMON__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__bwp__downlink_common__descriptor) \
    , NULL, STREAMING_PROTOBUFS__BWP__DOWNLINK_COMMON__PDCCH__CONFIG_COMMON__NOT_SET, {0}, STREAMING_PROTOBUFS__BWP__DOWNLINK_COMMON__PDSCH__CONFIG_COMMON__NOT_SET, {0} }


struct  _StreamingProtobufs__BWP
{
  ProtobufCMessage base;
  uint32_t locationandbandwidth;
  StreamingProtobufs__SubcarrierSpacing *subcarrierspacing;
  StreamingProtobufs__CyclicPrefix *cyclicprefix;
};
#define STREAMING_PROTOBUFS__BWP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__bwp__descriptor) \
    , 0, NULL, NULL }


struct  _StreamingProtobufs__CyclicPrefix
{
  ProtobufCMessage base;
  StreamingProtobufs__CyclicPrefix__Value value;
};
#define STREAMING_PROTOBUFS__CYCLIC_PREFIX__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__cyclic_prefix__descriptor) \
    , STREAMING_PROTOBUFS__CYCLIC_PREFIX__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__PDCCHConfigCommon
{
  ProtobufCMessage base;
  Google__Protobuf__UInt32Value *controlresourcesetzero;
  StreamingProtobufs__ControlResourceSet *commoncontrolresourceset;
  Google__Protobuf__UInt32Value *searchspacezero;
  size_t n_commonsearchspacelist;
  StreamingProtobufs__SearchSpace **commonsearchspacelist;
  Google__Protobuf__UInt32Value *searchspacesib1;
  Google__Protobuf__UInt32Value *searchspaceothersysteminformation;
  Google__Protobuf__UInt32Value *pagingsearchspace;
  Google__Protobuf__UInt32Value *ra_searchspace;
  StreamingProtobufs__FirstPDCCHMonitoringOccasionOfP0 *firstpdcch_monitoringoccasionofp0;
};
#define STREAMING_PROTOBUFS__PDCCH__CONFIG_COMMON__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pdcch__config_common__descriptor) \
    , NULL, NULL, NULL, 0,NULL, NULL, NULL, NULL, NULL, NULL }


typedef enum {
  STREAMING_PROTOBUFS__CONTROL_RESOURCE_SET__CCE__REG__MAPPING_TYPE__NOT_SET = 0,
  STREAMING_PROTOBUFS__CONTROL_RESOURCE_SET__CCE__REG__MAPPING_TYPE_INTERLEAVED = 4,
  STREAMING_PROTOBUFS__CONTROL_RESOURCE_SET__CCE__REG__MAPPING_TYPE_NON_INTERLEAVED = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CONTROL_RESOURCE_SET__CCE__REG__MAPPING_TYPE)
} StreamingProtobufs__ControlResourceSet__CceREGMappingTypeCase;

struct  _StreamingProtobufs__ControlResourceSet
{
  ProtobufCMessage base;
  uint32_t controlresourcesetid;
  ProtobufCBinaryData frequencydomainresources;
  uint32_t duration;
  StreamingProtobufs__PrecoderGranularity *precodergranularity;
  size_t n_tci_statespdcch_toaddlist;
  uint32_t *tci_statespdcch_toaddlist;
  size_t n_tci_statespdcch_toreleaselist;
  uint32_t *tci_statespdcch_toreleaselist;
  StreamingProtobufs__EnabledOpt *tci_presentindci;
  Google__Protobuf__UInt32Value *pdcch_dmrs_scramblingid;
  StreamingProtobufs__ControlResourceSet__CceREGMappingTypeCase cce__reg__mapping_type_case;
  union {
    StreamingProtobufs__Interleaved *interleaved;
    StreamingProtobufs__Null *noninterleaved;
  };
};
#define STREAMING_PROTOBUFS__CONTROL_RESOURCE_SET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__control_resource_set__descriptor) \
    , 0, {0,NULL}, 0, NULL, 0,NULL, 0,NULL, NULL, NULL, STREAMING_PROTOBUFS__CONTROL_RESOURCE_SET__CCE__REG__MAPPING_TYPE__NOT_SET, {0} }


struct  _StreamingProtobufs__Interleaved
{
  ProtobufCMessage base;
  StreamingProtobufs__RegBundleSize *reg_bundlesize;
  StreamingProtobufs__InterleaverSize *interleaversize;
  Google__Protobuf__UInt32Value *shiftindex;
};
#define STREAMING_PROTOBUFS__INTERLEAVED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__interleaved__descriptor) \
    , NULL, NULL, NULL }


struct  _StreamingProtobufs__RegBundleSize
{
  ProtobufCMessage base;
  StreamingProtobufs__RegBundleSize__Value value;
};
#define STREAMING_PROTOBUFS__REG__BUNDLE_SIZE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__reg__bundle_size__descriptor) \
    , STREAMING_PROTOBUFS__REG__BUNDLE_SIZE__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__InterleaverSize
{
  ProtobufCMessage base;
  StreamingProtobufs__InterleaverSize__Value value;
};
#define STREAMING_PROTOBUFS__INTERLEAVER_SIZE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__interleaver_size__descriptor) \
    , STREAMING_PROTOBUFS__INTERLEAVER_SIZE__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__PrecoderGranularity
{
  ProtobufCMessage base;
  StreamingProtobufs__PrecoderGranularity__Value value;
};
#define STREAMING_PROTOBUFS__PRECODER_GRANULARITY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__precoder_granularity__descriptor) \
    , STREAMING_PROTOBUFS__PRECODER_GRANULARITY__VALUE__protobuf_unspecified }


typedef enum {
  STREAMING_PROTOBUFS__FIRST_PDCCH__MONITORING_OCCASION_OF_P0__FIRST_PDCCHMONITORING_OCCASION_OF_P0__NOT_SET = 0,
  STREAMING_PROTOBUFS__FIRST_PDCCH__MONITORING_OCCASION_OF_P0__FIRST_PDCCHMONITORING_OCCASION_OF_P0_S_CS15_KHZONE_T = 1,
  STREAMING_PROTOBUFS__FIRST_PDCCH__MONITORING_OCCASION_OF_P0__FIRST_PDCCHMONITORING_OCCASION_OF_P0_S_CS30_KHZONE_T__SCS15_KHZHALF_T = 2,
  STREAMING_PROTOBUFS__FIRST_PDCCH__MONITORING_OCCASION_OF_P0__FIRST_PDCCHMONITORING_OCCASION_OF_P0_S_CS60_KHZONE_T__SCS30_KHZHALF_T__SCS15_KHZQUARTER_T = 3,
  STREAMING_PROTOBUFS__FIRST_PDCCH__MONITORING_OCCASION_OF_P0__FIRST_PDCCHMONITORING_OCCASION_OF_P0_S_CS120_KHZONE_T__SCS60_KHZHALF_T__SCS30_KHZQUARTER_T__SCS15_KHZONE_EIGHTH_T = 4,
  STREAMING_PROTOBUFS__FIRST_PDCCH__MONITORING_OCCASION_OF_P0__FIRST_PDCCHMONITORING_OCCASION_OF_P0_S_CS120_KHZHALF_T__SCS60_KHZQUARTER_T__SCS30_KHZONE_EIGHTH_T__SCS15_KHZONE_SIXTEENTH_T = 5,
  STREAMING_PROTOBUFS__FIRST_PDCCH__MONITORING_OCCASION_OF_P0__FIRST_PDCCHMONITORING_OCCASION_OF_P0_S_CS120_KHZQUARTER_T__SCS60_KHZONE_EIGHTH_T__SCS30_KHZONE_SIXTEENTH_T = 6,
  STREAMING_PROTOBUFS__FIRST_PDCCH__MONITORING_OCCASION_OF_P0__FIRST_PDCCHMONITORING_OCCASION_OF_P0_S_CS120_KHZONE_EIGHTH_T__SCS60_KHZONE_SIXTEENTH_T = 7,
  STREAMING_PROTOBUFS__FIRST_PDCCH__MONITORING_OCCASION_OF_P0__FIRST_PDCCHMONITORING_OCCASION_OF_P0_S_CS120_KHZONE_SIXTEENTH_T = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__FIRST_PDCCH__MONITORING_OCCASION_OF_P0__FIRST_PDCCHMONITORING_OCCASION_OF_P0)
} StreamingProtobufs__FirstPDCCHMonitoringOccasionOfP0__FirstPDCCHMonitoringOccasionOfP0Case;

struct  _StreamingProtobufs__FirstPDCCHMonitoringOccasionOfP0
{
  ProtobufCMessage base;
  StreamingProtobufs__FirstPDCCHMonitoringOccasionOfP0__FirstPDCCHMonitoringOccasionOfP0Case first_pdcchmonitoring_occasion_of_p0_case;
  union {
    StreamingProtobufs__SequenceOfInteger *scs15khzonet;
    StreamingProtobufs__SequenceOfInteger *scs30khzonet_scs15khzhalft;
    StreamingProtobufs__SequenceOfInteger *scs60khzonet_scs30khzhalft_scs15khzquartert;
    StreamingProtobufs__SequenceOfInteger *scs120khzonet_scs60khzhalft_scs30khzquartert_scs15khzoneeightht;
    StreamingProtobufs__SequenceOfInteger *scs120khzhalft_scs60khzquartert_scs30khzoneeightht_scs15khzonesixteentht;
    StreamingProtobufs__SequenceOfInteger *scs120khzquartert_scs60khzoneeightht_scs30khzonesixteentht;
    StreamingProtobufs__SequenceOfInteger *scs120khzoneeightht_scs60khzonesixteentht;
    StreamingProtobufs__SequenceOfInteger *scs120khzonesixteentht;
  };
};
#define STREAMING_PROTOBUFS__FIRST_PDCCH__MONITORING_OCCASION_OF_P0__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__first_pdcch__monitoring_occasion_of_p0__descriptor) \
    , STREAMING_PROTOBUFS__FIRST_PDCCH__MONITORING_OCCASION_OF_P0__FIRST_PDCCHMONITORING_OCCASION_OF_P0__NOT_SET, {0} }


struct  _StreamingProtobufs__SequenceOfInteger
{
  ProtobufCMessage base;
  size_t n_sequence_of_integer;
  uint32_t *sequence_of_integer;
};
#define STREAMING_PROTOBUFS__SEQUENCE__OF__INTEGER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__sequence__of__integer__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__PDSCHConfigCommon
{
  ProtobufCMessage base;
  StreamingProtobufs__PDSCHTimeDomainResourceAllocationList *pdsch_timedomainallocationlist;
};
#define STREAMING_PROTOBUFS__PDSCH__CONFIG_COMMON__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pdsch__config_common__descriptor) \
    , NULL }


struct  _StreamingProtobufs__PDSCHTimeDomainResourceAllocationList
{
  ProtobufCMessage base;
  size_t n_items;
  StreamingProtobufs__PDSCHTimeDomainResourceAllocation **items;
};
#define STREAMING_PROTOBUFS__PDSCH__TIME_DOMAIN_RESOURCE_ALLOCATION_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pdsch__time_domain_resource_allocation_list__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__PDSCHTimeDomainResourceAllocation
{
  ProtobufCMessage base;
  Google__Protobuf__UInt32Value *k0;
  StreamingProtobufs__MappingType *mappingtype;
  uint32_t startsymbolandlength;
};
#define STREAMING_PROTOBUFS__PDSCH__TIME_DOMAIN_RESOURCE_ALLOCATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pdsch__time_domain_resource_allocation__descriptor) \
    , NULL, NULL, 0 }


struct  _StreamingProtobufs__MappingType
{
  ProtobufCMessage base;
  StreamingProtobufs__MappingType__Value value;
};
#define STREAMING_PROTOBUFS__MAPPING_TYPE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__mapping_type__descriptor) \
    , STREAMING_PROTOBUFS__MAPPING_TYPE__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__UplinkConfigCommon
{
  ProtobufCMessage base;
  StreamingProtobufs__FrequencyInfoUL *frequencyinfoul;
  StreamingProtobufs__BWPUplinkCommon *initialuplinkbwp;
  StreamingProtobufs__TimeAlignmentTimer *dummy;
};
#define STREAMING_PROTOBUFS__UPLINK_CONFIG_COMMON__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__uplink_config_common__descriptor) \
    , NULL, NULL, NULL }


struct  _StreamingProtobufs__FrequencyInfoUL
{
  ProtobufCMessage base;
  StreamingProtobufs__MultiFrequencyBandListNR *frequencybandlist;
  Google__Protobuf__UInt32Value *absolutefrequencypointa;
  size_t n_scs_specificcarrierlist;
  StreamingProtobufs__SCSSpecificCarrier **scs_specificcarrierlist;
  Google__Protobuf__UInt32Value *additionalspectrumemission;
  Google__Protobuf__Int32Value *p_max;
  Google__Protobuf__BoolValue *frequencyshift7p5khz;
};
#define STREAMING_PROTOBUFS__FREQUENCY_INFO_UL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__frequency_info_ul__descriptor) \
    , NULL, NULL, 0,NULL, NULL, NULL, NULL }


typedef enum {
  STREAMING_PROTOBUFS__BWP__UPLINK_COMMON__RACH__CONFIG_COMMON__NOT_SET = 0,
  STREAMING_PROTOBUFS__BWP__UPLINK_COMMON__RACH__CONFIG_COMMON_RELEASE_RACH__CONFIG_COMMON = 2,
  STREAMING_PROTOBUFS__BWP__UPLINK_COMMON__RACH__CONFIG_COMMON_SETUP_RACH__CONFIG_COMMON = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__BWP__UPLINK_COMMON__RACH__CONFIG_COMMON)
} StreamingProtobufs__BWPUplinkCommon__RachConfigCommonCase;

typedef enum {
  STREAMING_PROTOBUFS__BWP__UPLINK_COMMON__PUSCH__CONFIG_COMMON__NOT_SET = 0,
  STREAMING_PROTOBUFS__BWP__UPLINK_COMMON__PUSCH__CONFIG_COMMON_RELEASE_PUSCH__CONFIG_COMMON = 4,
  STREAMING_PROTOBUFS__BWP__UPLINK_COMMON__PUSCH__CONFIG_COMMON_SETUP_PUSCH__CONFIG_COMMON = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__BWP__UPLINK_COMMON__PUSCH__CONFIG_COMMON)
} StreamingProtobufs__BWPUplinkCommon__PuschConfigCommonCase;

typedef enum {
  STREAMING_PROTOBUFS__BWP__UPLINK_COMMON__PUCCH__CONFIG_COMMON__NOT_SET = 0,
  STREAMING_PROTOBUFS__BWP__UPLINK_COMMON__PUCCH__CONFIG_COMMON_RELEASE_PUCCH__CONFIG_COMMON = 6,
  STREAMING_PROTOBUFS__BWP__UPLINK_COMMON__PUCCH__CONFIG_COMMON_SETUP_PUCCH__CONFIG_COMMON = 7
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__BWP__UPLINK_COMMON__PUCCH__CONFIG_COMMON)
} StreamingProtobufs__BWPUplinkCommon__PucchConfigCommonCase;

struct  _StreamingProtobufs__BWPUplinkCommon
{
  ProtobufCMessage base;
  StreamingProtobufs__BWP *genericparameters;
  StreamingProtobufs__BWPUplinkCommon__RachConfigCommonCase rach__config_common_case;
  union {
    StreamingProtobufs__Null *release_rach_configcommon;
    StreamingProtobufs__RACHConfigCommon *setup_rach_configcommon;
  };
  StreamingProtobufs__BWPUplinkCommon__PuschConfigCommonCase pusch__config_common_case;
  union {
    StreamingProtobufs__Null *release_pusch_configcommon;
    StreamingProtobufs__PUSCHConfigCommon *setup_pusch_configcommon;
  };
  StreamingProtobufs__BWPUplinkCommon__PucchConfigCommonCase pucch__config_common_case;
  union {
    StreamingProtobufs__Null *release_pucch_configcommon;
    StreamingProtobufs__PUCCHConfigCommon *setup_pucch_configcommon;
  };
};
#define STREAMING_PROTOBUFS__BWP__UPLINK_COMMON__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__bwp__uplink_common__descriptor) \
    , NULL, STREAMING_PROTOBUFS__BWP__UPLINK_COMMON__RACH__CONFIG_COMMON__NOT_SET, {0}, STREAMING_PROTOBUFS__BWP__UPLINK_COMMON__PUSCH__CONFIG_COMMON__NOT_SET, {0}, STREAMING_PROTOBUFS__BWP__UPLINK_COMMON__PUCCH__CONFIG_COMMON__NOT_SET, {0} }


struct  _StreamingProtobufs__BWPUplink
{
  ProtobufCMessage base;
  uint32_t bwp_id;
  StreamingProtobufs__BWPUplinkCommon *bwp_common;
  StreamingProtobufs__BWPUplinkDedicated *bwp_dedicated;
};
#define STREAMING_PROTOBUFS__BWP__UPLINK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__bwp__uplink__descriptor) \
    , 0, NULL, NULL }


typedef enum {
  STREAMING_PROTOBUFS__RACH__CONFIG_COMMON__SSB_PER_RACH__OCCASION_AND_CB__PREAMBLES_PER_SSB__NOT_SET = 0,
  STREAMING_PROTOBUFS__RACH__CONFIG_COMMON__SSB_PER_RACH__OCCASION_AND_CB__PREAMBLES_PER_SSB_ONE_EIGHTH = 3,
  STREAMING_PROTOBUFS__RACH__CONFIG_COMMON__SSB_PER_RACH__OCCASION_AND_CB__PREAMBLES_PER_SSB_ONE_FOURTH = 4,
  STREAMING_PROTOBUFS__RACH__CONFIG_COMMON__SSB_PER_RACH__OCCASION_AND_CB__PREAMBLES_PER_SSB_ONE_HALF = 5,
  STREAMING_PROTOBUFS__RACH__CONFIG_COMMON__SSB_PER_RACH__OCCASION_AND_CB__PREAMBLES_PER_SSB_ONE = 6,
  STREAMING_PROTOBUFS__RACH__CONFIG_COMMON__SSB_PER_RACH__OCCASION_AND_CB__PREAMBLES_PER_SSB_TWO = 7,
  STREAMING_PROTOBUFS__RACH__CONFIG_COMMON__SSB_PER_RACH__OCCASION_AND_CB__PREAMBLES_PER_SSB_FOUR = 8,
  STREAMING_PROTOBUFS__RACH__CONFIG_COMMON__SSB_PER_RACH__OCCASION_AND_CB__PREAMBLES_PER_SSB_EIGHT = 9,
  STREAMING_PROTOBUFS__RACH__CONFIG_COMMON__SSB_PER_RACH__OCCASION_AND_CB__PREAMBLES_PER_SSB_SIXTEEN = 10
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__RACH__CONFIG_COMMON__SSB_PER_RACH__OCCASION_AND_CB__PREAMBLES_PER_SSB)
} StreamingProtobufs__RACHConfigCommon__SsbPerRACHOccasionAndCBPreamblesPerSSBCase;

typedef enum {
  STREAMING_PROTOBUFS__RACH__CONFIG_COMMON__PRACH__ROOT_SEQUENCE_INDEX__NOT_SET = 0,
  STREAMING_PROTOBUFS__RACH__CONFIG_COMMON__PRACH__ROOT_SEQUENCE_INDEX_L839 = 15,
  STREAMING_PROTOBUFS__RACH__CONFIG_COMMON__PRACH__ROOT_SEQUENCE_INDEX_L139 = 16
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__RACH__CONFIG_COMMON__PRACH__ROOT_SEQUENCE_INDEX)
} StreamingProtobufs__RACHConfigCommon__PrachRootSequenceIndexCase;

struct  _StreamingProtobufs__RACHConfigCommon
{
  ProtobufCMessage base;
  StreamingProtobufs__RACHConfigGeneric *rach_configgeneric;
  Google__Protobuf__UInt32Value *totalnumberofra_preambles;
  StreamingProtobufs__GroupBconfigured *groupbconfigured;
  StreamingProtobufs__RAContentionResolutionTimer *ra_contentionresolutiontimer;
  Google__Protobuf__UInt32Value *rsrp_thresholdssb;
  Google__Protobuf__UInt32Value *rsrp_thresholdssb_sul;
  StreamingProtobufs__SubcarrierSpacing *msg1_subcarrierspacing;
  StreamingProtobufs__RestrictedSetConfig *restrictedsetconfig;
  StreamingProtobufs__EnabledOpt *msg3_transformprecoder;
  StreamingProtobufs__RACHConfigCommon__SsbPerRACHOccasionAndCBPreamblesPerSSBCase ssb_per_rach__occasion_and_cb__preambles_per_ssb_case;
  union {
    StreamingProtobufs__Fraction *oneeighth;
    StreamingProtobufs__Fraction *onefourth;
    StreamingProtobufs__Fraction *onehalf;
    StreamingProtobufs__Fraction *one;
    StreamingProtobufs__OtherFraction *two;
    uint32_t four;
    uint32_t eight;
    uint32_t sixteen;
  };
  StreamingProtobufs__RACHConfigCommon__PrachRootSequenceIndexCase prach__root_sequence_index_case;
  union {
    uint32_t l839;
    uint32_t l139;
  };
};
#define STREAMING_PROTOBUFS__RACH__CONFIG_COMMON__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__rach__config_common__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, STREAMING_PROTOBUFS__RACH__CONFIG_COMMON__SSB_PER_RACH__OCCASION_AND_CB__PREAMBLES_PER_SSB__NOT_SET, {0}, STREAMING_PROTOBUFS__RACH__CONFIG_COMMON__PRACH__ROOT_SEQUENCE_INDEX__NOT_SET, {0} }


struct  _StreamingProtobufs__RACHConfigGeneric
{
  ProtobufCMessage base;
  uint32_t prach_configurationindex;
  StreamingProtobufs__Msg1FDM *msg1_fdm;
  uint32_t msg1_frequencystart;
  uint32_t zerocorrelationzoneconfig;
  int32_t preamblereceivedtargetpower;
  StreamingProtobufs__PreambleTransMax *preambletransmax;
  StreamingProtobufs__PowerRampingStep *powerrampingstep;
  StreamingProtobufs__RAResponseWindow *ra_responsewindow;
};
#define STREAMING_PROTOBUFS__RACH__CONFIG_GENERIC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__rach__config_generic__descriptor) \
    , 0, NULL, 0, 0, 0, NULL, NULL, NULL }


struct  _StreamingProtobufs__Msg1FDM
{
  ProtobufCMessage base;
  StreamingProtobufs__Msg1FDM__Value value;
};
#define STREAMING_PROTOBUFS__MSG1__FDM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__msg1__fdm__descriptor) \
    , STREAMING_PROTOBUFS__MSG1__FDM__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__PreambleTransMax
{
  ProtobufCMessage base;
  StreamingProtobufs__PreambleTransMax__Value value;
};
#define STREAMING_PROTOBUFS__PREAMBLE_TRANS_MAX__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__preamble_trans_max__descriptor) \
    , STREAMING_PROTOBUFS__PREAMBLE_TRANS_MAX__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__PowerRampingStep
{
  ProtobufCMessage base;
  StreamingProtobufs__PowerRampingStep__Value value;
};
#define STREAMING_PROTOBUFS__POWER_RAMPING_STEP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__power_ramping_step__descriptor) \
    , STREAMING_PROTOBUFS__POWER_RAMPING_STEP__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__RAResponseWindow
{
  ProtobufCMessage base;
  StreamingProtobufs__RAResponseWindow__Value value;
};
#define STREAMING_PROTOBUFS__RA__RESPONSE_WINDOW__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__ra__response_window__descriptor) \
    , STREAMING_PROTOBUFS__RA__RESPONSE_WINDOW__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__Fraction
{
  ProtobufCMessage base;
  StreamingProtobufs__Fraction__Value value;
};
#define STREAMING_PROTOBUFS__FRACTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__fraction__descriptor) \
    , STREAMING_PROTOBUFS__FRACTION__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__OtherFraction
{
  ProtobufCMessage base;
  StreamingProtobufs__OtherFraction__Value value;
};
#define STREAMING_PROTOBUFS__OTHER_FRACTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__other_fraction__descriptor) \
    , STREAMING_PROTOBUFS__OTHER_FRACTION__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__GroupBconfigured
{
  ProtobufCMessage base;
  StreamingProtobufs__RAMsg3SizeGroupA *ra_msg3sizegroupa;
  StreamingProtobufs__MessagePowerOffsetGroupB *messagepoweroffsetgroupb;
  uint32_t numberofra_preamblesgroupa;
};
#define STREAMING_PROTOBUFS__GROUP_BCONFIGURED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__group_bconfigured__descriptor) \
    , NULL, NULL, 0 }


struct  _StreamingProtobufs__RAMsg3SizeGroupA
{
  ProtobufCMessage base;
  StreamingProtobufs__RAMsg3SizeGroupA__Value value;
};
#define STREAMING_PROTOBUFS__RA__MSG3_SIZE_GROUP_A__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__ra__msg3_size_group_a__descriptor) \
    , STREAMING_PROTOBUFS__RA__MSG3_SIZE_GROUP_A__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__MessagePowerOffsetGroupB
{
  ProtobufCMessage base;
  StreamingProtobufs__MessagePowerOffsetGroupB__Value value;
};
#define STREAMING_PROTOBUFS__MESSAGE_POWER_OFFSET_GROUP_B__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__message_power_offset_group_b__descriptor) \
    , STREAMING_PROTOBUFS__MESSAGE_POWER_OFFSET_GROUP_B__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__RAContentionResolutionTimer
{
  ProtobufCMessage base;
  StreamingProtobufs__RAContentionResolutionTimer__Value value;
};
#define STREAMING_PROTOBUFS__RA__CONTENTION_RESOLUTION_TIMER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__ra__contention_resolution_timer__descriptor) \
    , STREAMING_PROTOBUFS__RA__CONTENTION_RESOLUTION_TIMER__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__RestrictedSetConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__RestrictedSetConfig__Value value;
};
#define STREAMING_PROTOBUFS__RESTRICTED_SET_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__restricted_set_config__descriptor) \
    , STREAMING_PROTOBUFS__RESTRICTED_SET_CONFIG__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__PUSCHConfigCommon
{
  ProtobufCMessage base;
  StreamingProtobufs__EnabledOpt *grouphoppingenabledtransformprecoding;
  StreamingProtobufs__PUSCHTimeDomainResourceAllocationList *pusch_timedomainallocationlist;
  Google__Protobuf__Int32Value *msg3_deltapreamble;
  Google__Protobuf__Int32Value *p0_nominalwithgrant;
};
#define STREAMING_PROTOBUFS__PUSCH__CONFIG_COMMON__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pusch__config_common__descriptor) \
    , NULL, NULL, NULL, NULL }


struct  _StreamingProtobufs__PUSCHTimeDomainResourceAllocationList
{
  ProtobufCMessage base;
  size_t n_items;
  StreamingProtobufs__PUSCHTimeDomainResourceAllocation **items;
};
#define STREAMING_PROTOBUFS__PUSCH__TIME_DOMAIN_RESOURCE_ALLOCATION_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pusch__time_domain_resource_allocation_list__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__PUSCHTimeDomainResourceAllocation
{
  ProtobufCMessage base;
  Google__Protobuf__UInt32Value *k2;
  StreamingProtobufs__MappingType *mappingtype;
  uint32_t startsymbolandlength;
};
#define STREAMING_PROTOBUFS__PUSCH__TIME_DOMAIN_RESOURCE_ALLOCATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pusch__time_domain_resource_allocation__descriptor) \
    , NULL, NULL, 0 }


struct  _StreamingProtobufs__PUCCHConfigCommon
{
  ProtobufCMessage base;
  Google__Protobuf__UInt32Value *pucch_resourcecommon;
  StreamingProtobufs__PUCCHGroupHopping *pucch_grouphopping;
  Google__Protobuf__UInt32Value *hoppingid;
  Google__Protobuf__Int32Value *p0_nominal;
};
#define STREAMING_PROTOBUFS__PUCCH__CONFIG_COMMON__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pucch__config_common__descriptor) \
    , NULL, NULL, NULL, NULL }


struct  _StreamingProtobufs__PUCCHGroupHopping
{
  ProtobufCMessage base;
  StreamingProtobufs__PUCCHGroupHopping__Value value;
};
#define STREAMING_PROTOBUFS__PUCCH__GROUP_HOPPING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pucch__group_hopping__descriptor) \
    , STREAMING_PROTOBUFS__PUCCH__GROUP_HOPPING__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__NTimingAdvanceOffset
{
  ProtobufCMessage base;
  StreamingProtobufs__NTimingAdvanceOffset__Value value;
};
#define STREAMING_PROTOBUFS__N__TIMING_ADVANCE_OFFSET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__n__timing_advance_offset__descriptor) \
    , STREAMING_PROTOBUFS__N__TIMING_ADVANCE_OFFSET__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__SSBPeriodicityServingCell
{
  ProtobufCMessage base;
  StreamingProtobufs__SSBPeriodicityServingCell__Value value;
};
#define STREAMING_PROTOBUFS__SSB__PERIODICITY_SERVING_CELL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__ssb__periodicity_serving_cell__descriptor) \
    , STREAMING_PROTOBUFS__SSB__PERIODICITY_SERVING_CELL__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__DMRSTypeAPosition
{
  ProtobufCMessage base;
  StreamingProtobufs__DMRSTypeAPosition__Value value;
};
#define STREAMING_PROTOBUFS__DMRS__TYPE_A__POSITION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__dmrs__type_a__position__descriptor) \
    , STREAMING_PROTOBUFS__DMRS__TYPE_A__POSITION__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__RateMatchPatternLTECRS
{
  ProtobufCMessage base;
  uint32_t carrierfreqdl;
  StreamingProtobufs__CarrierBandwidthDL *carrierbandwidthdl;
  StreamingProtobufs__EUTRAMBSFNSubframeConfigList *mbsfn_subframeconfiglist;
  StreamingProtobufs__NrofCRSPorts *nrofcrs_ports;
  StreamingProtobufs__VShift *v_shift;
};
#define STREAMING_PROTOBUFS__RATE_MATCH_PATTERN_LTE__CRS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__rate_match_pattern_lte__crs__descriptor) \
    , 0, NULL, NULL, NULL, NULL }


struct  _StreamingProtobufs__CarrierBandwidthDL
{
  ProtobufCMessage base;
  StreamingProtobufs__CarrierBandwidthDL__Value value;
};
#define STREAMING_PROTOBUFS__CARRIER_BANDWIDTH_DL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__carrier_bandwidth_dl__descriptor) \
    , STREAMING_PROTOBUFS__CARRIER_BANDWIDTH_DL__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__EUTRAMBSFNSubframeConfigList
{
  ProtobufCMessage base;
  size_t n_items;
  StreamingProtobufs__EUTRAMBSFNSubframeConfig **items;
};
#define STREAMING_PROTOBUFS__EUTRA__MBSFN__SUBFRAME_CONFIG_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__eutra__mbsfn__subframe_config_list__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__EUTRAMBSFNSubframeConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__RadioframeAllocationPeriod *radioframeallocationperiod;
  uint32_t radioframeallocationoffset;
  StreamingProtobufs__SubframeAllocation *subframeallocation1;
  StreamingProtobufs__SubframeAllocation *subframeallocation2;
};
#define STREAMING_PROTOBUFS__EUTRA__MBSFN__SUBFRAME_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__eutra__mbsfn__subframe_config__descriptor) \
    , NULL, 0, NULL, NULL }


struct  _StreamingProtobufs__RadioframeAllocationPeriod
{
  ProtobufCMessage base;
  StreamingProtobufs__RadioframeAllocationPeriod__Value value;
};
#define STREAMING_PROTOBUFS__RADIOFRAME_ALLOCATION_PERIOD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__radioframe_allocation_period__descriptor) \
    , STREAMING_PROTOBUFS__RADIOFRAME_ALLOCATION_PERIOD__VALUE__protobuf_unspecified }


typedef enum {
  STREAMING_PROTOBUFS__SUBFRAME_ALLOCATION__SF_ALLOCATION__NOT_SET = 0,
  STREAMING_PROTOBUFS__SUBFRAME_ALLOCATION__SF_ALLOCATION_ONE_FRAME = 1,
  STREAMING_PROTOBUFS__SUBFRAME_ALLOCATION__SF_ALLOCATION_FOUR_FRAMES = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SUBFRAME_ALLOCATION__SF_ALLOCATION)
} StreamingProtobufs__SubframeAllocation__SfAllocationCase;

struct  _StreamingProtobufs__SubframeAllocation
{
  ProtobufCMessage base;
  StreamingProtobufs__SubframeAllocation__SfAllocationCase sf_allocation_case;
  union {
    ProtobufCBinaryData oneframe;
    ProtobufCBinaryData fourframes;
  };
};
#define STREAMING_PROTOBUFS__SUBFRAME_ALLOCATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__subframe_allocation__descriptor) \
    , STREAMING_PROTOBUFS__SUBFRAME_ALLOCATION__SF_ALLOCATION__NOT_SET, {0} }


struct  _StreamingProtobufs__NrofCRSPorts
{
  ProtobufCMessage base;
  StreamingProtobufs__NrofCRSPorts__Value value;
};
#define STREAMING_PROTOBUFS__NROF_CRS__PORTS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__nrof_crs__ports__descriptor) \
    , STREAMING_PROTOBUFS__NROF_CRS__PORTS__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__VShift
{
  ProtobufCMessage base;
  StreamingProtobufs__VShift__Value value;
};
#define STREAMING_PROTOBUFS__V__SHIFT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__v__shift__descriptor) \
    , STREAMING_PROTOBUFS__V__SHIFT__VALUE__protobuf_unspecified }


typedef enum {
  STREAMING_PROTOBUFS__RATE_MATCH_PATTERN__PATTERN_TYPE__NOT_SET = 0,
  STREAMING_PROTOBUFS__RATE_MATCH_PATTERN__PATTERN_TYPE_BITMAPS = 2,
  STREAMING_PROTOBUFS__RATE_MATCH_PATTERN__PATTERN_TYPE_CONTROL_RESOURCE_SET = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__RATE_MATCH_PATTERN__PATTERN_TYPE)
} StreamingProtobufs__RateMatchPattern__PatternTypeCase;

struct  _StreamingProtobufs__RateMatchPattern
{
  ProtobufCMessage base;
  uint32_t ratematchpatternid;
  StreamingProtobufs__SubcarrierSpacing *subcarrierspacing;
  StreamingProtobufs__Dummy *dummy;
  StreamingProtobufs__RateMatchPattern__PatternTypeCase pattern_type_case;
  union {
    StreamingProtobufs__Bitmaps *bitmaps;
    uint32_t controlresourceset;
  };
};
#define STREAMING_PROTOBUFS__RATE_MATCH_PATTERN__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__rate_match_pattern__descriptor) \
    , 0, NULL, NULL, STREAMING_PROTOBUFS__RATE_MATCH_PATTERN__PATTERN_TYPE__NOT_SET, {0} }


typedef enum {
  STREAMING_PROTOBUFS__BITMAPS__SYMBOLS_IN_RESOURCE_BLOCK__NOT_SET = 0,
  STREAMING_PROTOBUFS__BITMAPS__SYMBOLS_IN_RESOURCE_BLOCK_ONE_SLOT = 2,
  STREAMING_PROTOBUFS__BITMAPS__SYMBOLS_IN_RESOURCE_BLOCK_TWO_SLOTS = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__BITMAPS__SYMBOLS_IN_RESOURCE_BLOCK)
} StreamingProtobufs__Bitmaps__SymbolsInResourceBlockCase;

typedef enum {
  STREAMING_PROTOBUFS__BITMAPS__PERIODICITY_AND_PATTERN__NOT_SET = 0,
  STREAMING_PROTOBUFS__BITMAPS__PERIODICITY_AND_PATTERN_N2 = 4,
  STREAMING_PROTOBUFS__BITMAPS__PERIODICITY_AND_PATTERN_N4 = 5,
  STREAMING_PROTOBUFS__BITMAPS__PERIODICITY_AND_PATTERN_N5 = 6,
  STREAMING_PROTOBUFS__BITMAPS__PERIODICITY_AND_PATTERN_N8 = 7,
  STREAMING_PROTOBUFS__BITMAPS__PERIODICITY_AND_PATTERN_N10 = 8,
  STREAMING_PROTOBUFS__BITMAPS__PERIODICITY_AND_PATTERN_N20 = 9,
  STREAMING_PROTOBUFS__BITMAPS__PERIODICITY_AND_PATTERN_N40 = 10
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__BITMAPS__PERIODICITY_AND_PATTERN)
} StreamingProtobufs__Bitmaps__PeriodicityAndPatternCase;

struct  _StreamingProtobufs__Bitmaps
{
  ProtobufCMessage base;
  ProtobufCBinaryData resourceblocks;
  StreamingProtobufs__Bitmaps__SymbolsInResourceBlockCase symbols_in_resource_block_case;
  union {
    ProtobufCBinaryData oneslot;
    ProtobufCBinaryData twoslots;
  };
  StreamingProtobufs__Bitmaps__PeriodicityAndPatternCase periodicity_and_pattern_case;
  union {
    ProtobufCBinaryData n2;
    ProtobufCBinaryData n4;
    ProtobufCBinaryData n5;
    ProtobufCBinaryData n8;
    ProtobufCBinaryData n10;
    ProtobufCBinaryData n20;
    ProtobufCBinaryData n40;
  };
};
#define STREAMING_PROTOBUFS__BITMAPS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__bitmaps__descriptor) \
    , {0,NULL}, STREAMING_PROTOBUFS__BITMAPS__SYMBOLS_IN_RESOURCE_BLOCK__NOT_SET, {0}, STREAMING_PROTOBUFS__BITMAPS__PERIODICITY_AND_PATTERN__NOT_SET, {0} }


struct  _StreamingProtobufs__Dummy
{
  ProtobufCMessage base;
  StreamingProtobufs__Dummy__Value value;
};
#define STREAMING_PROTOBUFS__DUMMY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__dummy__descriptor) \
    , STREAMING_PROTOBUFS__DUMMY__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__TDDULDLConfigCommon
{
  ProtobufCMessage base;
  StreamingProtobufs__SubcarrierSpacing *referencesubcarrierspacing;
  StreamingProtobufs__TDDULDLPattern *pattern1;
  StreamingProtobufs__TDDULDLPattern *pattern2;
};
#define STREAMING_PROTOBUFS__TDD__UL__DL__CONFIG_COMMON__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__tdd__ul__dl__config_common__descriptor) \
    , NULL, NULL, NULL }


struct  _StreamingProtobufs__TDDULDLPattern
{
  ProtobufCMessage base;
  StreamingProtobufs__DLULTransmissionPeriodicity *dl_ul_transmissionperiodicity;
  uint32_t nrofdownlinkslots;
  uint32_t nrofdownlinksymbols;
  uint32_t nrofuplinkslots;
  uint32_t nrofuplinksymbols;
  StreamingProtobufs__DLULTransmissionPeriodicityV1530 *dl_ul_transmissionperiodicity_v1530;
};
#define STREAMING_PROTOBUFS__TDD__UL__DL__PATTERN__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__tdd__ul__dl__pattern__descriptor) \
    , NULL, 0, 0, 0, 0, NULL }


struct  _StreamingProtobufs__DLULTransmissionPeriodicity
{
  ProtobufCMessage base;
  StreamingProtobufs__DLULTransmissionPeriodicity__Value value;
};
#define STREAMING_PROTOBUFS__DL__UL__TRANSMISSION_PERIODICITY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__dl__ul__transmission_periodicity__descriptor) \
    , STREAMING_PROTOBUFS__DL__UL__TRANSMISSION_PERIODICITY__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__DLULTransmissionPeriodicityV1530
{
  ProtobufCMessage base;
  StreamingProtobufs__DLULTransmissionPeriodicityV1530__Value value;
};
#define STREAMING_PROTOBUFS__DL__UL__TRANSMISSION_PERIODICITY_V1530__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__dl__ul__transmission_periodicity_v1530__descriptor) \
    , STREAMING_PROTOBUFS__DL__UL__TRANSMISSION_PERIODICITY_V1530__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__T304
{
  ProtobufCMessage base;
  StreamingProtobufs__T304__Value value;
};
#define STREAMING_PROTOBUFS__T304__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__t304__descriptor) \
    , STREAMING_PROTOBUFS__T304__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__RACHConfigDedicated
{
  ProtobufCMessage base;
  StreamingProtobufs__CFRA *cfra;
  StreamingProtobufs__RAPrioritization *ra_prioritization;
};
#define STREAMING_PROTOBUFS__RACH__CONFIG_DEDICATED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__rach__config_dedicated__descriptor) \
    , NULL, NULL }


typedef enum {
  STREAMING_PROTOBUFS__CFRA__RESOURCE__NOT_SET = 0,
  STREAMING_PROTOBUFS__CFRA__RESOURCE_SSB = 2,
  STREAMING_PROTOBUFS__CFRA__RESOURCE_CSIRS = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CFRA__RESOURCE)
} StreamingProtobufs__CFRA__ResourceCase;

struct  _StreamingProtobufs__CFRA
{
  ProtobufCMessage base;
  StreamingProtobufs__Occasions *occasions;
  Google__Protobuf__UInt32Value *totalnumberofra_preambles_v1530;
  StreamingProtobufs__CFRA__ResourceCase resource_case;
  union {
    StreamingProtobufs__SSB *ssb;
    StreamingProtobufs__CSIRS *csirs;
  };
};
#define STREAMING_PROTOBUFS__CFRA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__cfra__descriptor) \
    , NULL, NULL, STREAMING_PROTOBUFS__CFRA__RESOURCE__NOT_SET, {0} }


struct  _StreamingProtobufs__Occasions
{
  ProtobufCMessage base;
  StreamingProtobufs__RACHConfigGeneric *rach_configgeneric;
  StreamingProtobufs__SSBPerRACHOccasion *ssb_perrach_occasion;
};
#define STREAMING_PROTOBUFS__OCCASIONS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__occasions__descriptor) \
    , NULL, NULL }


struct  _StreamingProtobufs__SSB
{
  ProtobufCMessage base;
  size_t n_ssb_resourcelist;
  StreamingProtobufs__CFRASSBResource **ssb_resourcelist;
  uint32_t ra_ssb_occasion_mask_index;
};
#define STREAMING_PROTOBUFS__SSB__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__ssb__descriptor) \
    , 0,NULL, 0 }


struct  _StreamingProtobufs__CFRASSBResource
{
  ProtobufCMessage base;
  uint32_t ssb;
  uint32_t ra_preambleindex;
};
#define STREAMING_PROTOBUFS__CFRA__SSB__RESOURCE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__cfra__ssb__resource__descriptor) \
    , 0, 0 }


struct  _StreamingProtobufs__CSIRS
{
  ProtobufCMessage base;
  size_t n_csirs_resourcelist;
  StreamingProtobufs__CFRACSIRSResource **csirs_resourcelist;
  uint32_t rsrp_thresholdcsi_rs;
};
#define STREAMING_PROTOBUFS__CSIRS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__csirs__descriptor) \
    , 0,NULL, 0 }


struct  _StreamingProtobufs__CFRACSIRSResource
{
  ProtobufCMessage base;
  uint32_t csi_rs;
  size_t n_ra_occasionlist;
  uint32_t *ra_occasionlist;
  uint32_t ra_preambleindex;
};
#define STREAMING_PROTOBUFS__CFRA__CSIRS__RESOURCE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__cfra__csirs__resource__descriptor) \
    , 0, 0,NULL, 0 }


struct  _StreamingProtobufs__RAPrioritization
{
  ProtobufCMessage base;
  StreamingProtobufs__PowerRampingStepHighPriority *powerrampingstephighpriority;
  StreamingProtobufs__ScalingFactorBI *scalingfactorbi;
};
#define STREAMING_PROTOBUFS__RA__PRIORITIZATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__ra__prioritization__descriptor) \
    , NULL, NULL }


struct  _StreamingProtobufs__PowerRampingStepHighPriority
{
  ProtobufCMessage base;
  StreamingProtobufs__PowerRampingStepHighPriority__Value value;
};
#define STREAMING_PROTOBUFS__POWER_RAMPING_STEP_HIGH_PRIORITY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__power_ramping_step_high_priority__descriptor) \
    , STREAMING_PROTOBUFS__POWER_RAMPING_STEP_HIGH_PRIORITY__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__ScalingFactorBI
{
  ProtobufCMessage base;
  StreamingProtobufs__ScalingFactorBI__Value value;
};
#define STREAMING_PROTOBUFS__SCALING_FACTOR_BI__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__scaling_factor_bi__descriptor) \
    , STREAMING_PROTOBUFS__SCALING_FACTOR_BI__VALUE__protobuf_unspecified }


typedef enum {
  STREAMING_PROTOBUFS__SSB__MTC__PERIODICITY_AND_OFFSET__NOT_SET = 0,
  STREAMING_PROTOBUFS__SSB__MTC__PERIODICITY_AND_OFFSET_SF5 = 1,
  STREAMING_PROTOBUFS__SSB__MTC__PERIODICITY_AND_OFFSET_SF10 = 2,
  STREAMING_PROTOBUFS__SSB__MTC__PERIODICITY_AND_OFFSET_SF20 = 3,
  STREAMING_PROTOBUFS__SSB__MTC__PERIODICITY_AND_OFFSET_SF40 = 4,
  STREAMING_PROTOBUFS__SSB__MTC__PERIODICITY_AND_OFFSET_SF80 = 5,
  STREAMING_PROTOBUFS__SSB__MTC__PERIODICITY_AND_OFFSET_SF160 = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SSB__MTC__PERIODICITY_AND_OFFSET)
} StreamingProtobufs__SSBMTC__PeriodicityAndOffsetCase;

struct  _StreamingProtobufs__SSBMTC
{
  ProtobufCMessage base;
  StreamingProtobufs__Duration *duration;
  StreamingProtobufs__SSBMTC__PeriodicityAndOffsetCase periodicity_and_offset_case;
  union {
    uint32_t sf5;
    uint32_t sf10;
    uint32_t sf20;
    uint32_t sf40;
    uint32_t sf80;
    uint32_t sf160;
  };
};
#define STREAMING_PROTOBUFS__SSB__MTC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__ssb__mtc__descriptor) \
    , NULL, STREAMING_PROTOBUFS__SSB__MTC__PERIODICITY_AND_OFFSET__NOT_SET, {0} }


struct  _StreamingProtobufs__Duration
{
  ProtobufCMessage base;
  StreamingProtobufs__Duration__Value value;
};
#define STREAMING_PROTOBUFS__DURATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__duration__descriptor) \
    , STREAMING_PROTOBUFS__DURATION__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__SSBMTC2
{
  ProtobufCMessage base;
  size_t n_pci_list;
  uint32_t *pci_list;
  StreamingProtobufs__Periodicity *periodicity;
};
#define STREAMING_PROTOBUFS__SSB__MTC2__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__ssb__mtc2__descriptor) \
    , 0,NULL, NULL }


struct  _StreamingProtobufs__Periodicity
{
  ProtobufCMessage base;
  StreamingProtobufs__Periodicity__Value value;
};
#define STREAMING_PROTOBUFS__PERIODICITY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__periodicity__descriptor) \
    , STREAMING_PROTOBUFS__PERIODICITY__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__RLFTimersAndConstants
{
  ProtobufCMessage base;
  StreamingProtobufs__T310 *t310;
  StreamingProtobufs__N310 *n310;
  StreamingProtobufs__N311 *n311;
  StreamingProtobufs__T311V1530 *t311_v1530;
};
#define STREAMING_PROTOBUFS__RLF__TIMERS_AND_CONSTANTS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__rlf__timers_and_constants__descriptor) \
    , NULL, NULL, NULL, NULL }


struct  _StreamingProtobufs__T310
{
  ProtobufCMessage base;
  StreamingProtobufs__T310__Value value;
};
#define STREAMING_PROTOBUFS__T310__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__t310__descriptor) \
    , STREAMING_PROTOBUFS__T310__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__N310
{
  ProtobufCMessage base;
  StreamingProtobufs__N310__Value value;
};
#define STREAMING_PROTOBUFS__N310__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__n310__descriptor) \
    , STREAMING_PROTOBUFS__N310__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__N311
{
  ProtobufCMessage base;
  StreamingProtobufs__N311__Value value;
};
#define STREAMING_PROTOBUFS__N311__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__n311__descriptor) \
    , STREAMING_PROTOBUFS__N311__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__T311V1530
{
  ProtobufCMessage base;
  StreamingProtobufs__T311V1530__Value value;
};
#define STREAMING_PROTOBUFS__T311_V1530__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__t311_v1530__descriptor) \
    , STREAMING_PROTOBUFS__T311_V1530__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__RlmInSyncOutOfSyncThreshold
{
  ProtobufCMessage base;
  StreamingProtobufs__RlmInSyncOutOfSyncThreshold__Value value;
};
#define STREAMING_PROTOBUFS__RLM_IN_SYNC_OUT_OF_SYNC_THRESHOLD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__rlm_in_sync_out_of_sync_threshold__descriptor) \
    , STREAMING_PROTOBUFS__RLM_IN_SYNC_OUT_OF_SYNC_THRESHOLD__VALUE__protobuf_unspecified }


typedef enum {
  STREAMING_PROTOBUFS__SERVING_CELL_CONFIG__PDCCH__SERVING_CELL_CONFIG__NOT_SET = 0,
  STREAMING_PROTOBUFS__SERVING_CELL_CONFIG__PDCCH__SERVING_CELL_CONFIG_RELEASE_PDCCH__SERVING_CELL_CONFIG = 10,
  STREAMING_PROTOBUFS__SERVING_CELL_CONFIG__PDCCH__SERVING_CELL_CONFIG_SETUP_PDCCH__SERVING_CELL_CONFIG = 11
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SERVING_CELL_CONFIG__PDCCH__SERVING_CELL_CONFIG)
} StreamingProtobufs__ServingCellConfig__PdcchServingCellConfigCase;

typedef enum {
  STREAMING_PROTOBUFS__SERVING_CELL_CONFIG__PDSCH__SERVING_CELL_CONFIG__NOT_SET = 0,
  STREAMING_PROTOBUFS__SERVING_CELL_CONFIG__PDSCH__SERVING_CELL_CONFIG_RELEASE_PDSCH__SERVING_CELL_CONFIG = 12,
  STREAMING_PROTOBUFS__SERVING_CELL_CONFIG__PDSCH__SERVING_CELL_CONFIG_SETUP_PDSCH__SERVING_CELL_CONFIG = 13
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SERVING_CELL_CONFIG__PDSCH__SERVING_CELL_CONFIG)
} StreamingProtobufs__ServingCellConfig__PdschServingCellConfigCase;

typedef enum {
  STREAMING_PROTOBUFS__SERVING_CELL_CONFIG__CSI__MEAS_CONFIG__NOT_SET = 0,
  STREAMING_PROTOBUFS__SERVING_CELL_CONFIG__CSI__MEAS_CONFIG_RELEASE_CSI__MEAS_CONFIG = 14,
  STREAMING_PROTOBUFS__SERVING_CELL_CONFIG__CSI__MEAS_CONFIG_SETUP_CSI__MEAS_CONFIG = 15
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SERVING_CELL_CONFIG__CSI__MEAS_CONFIG)
} StreamingProtobufs__ServingCellConfig__CsiMeasConfigCase;

typedef enum {
  STREAMING_PROTOBUFS__SERVING_CELL_CONFIG__LTE__CRS__TO_MATCH_AROUND__NOT_SET = 0,
  STREAMING_PROTOBUFS__SERVING_CELL_CONFIG__LTE__CRS__TO_MATCH_AROUND_RELEASE_LTE__CRS__TO_MATCH_AROUND = 22,
  STREAMING_PROTOBUFS__SERVING_CELL_CONFIG__LTE__CRS__TO_MATCH_AROUND_SETUP_LTE__CRS__TO_MATCH_AROUND = 23
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SERVING_CELL_CONFIG__LTE__CRS__TO_MATCH_AROUND)
} StreamingProtobufs__ServingCellConfig__LteCRSToMatchAroundCase;

struct  _StreamingProtobufs__ServingCellConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__TDDULDLConfigDedicated *tdd_ul_dl_configdedicated;
  StreamingProtobufs__BWPDownlinkDedicated *initialdownlinkbwp;
  size_t n_downlinkbwp_toreleaselist;
  uint32_t *downlinkbwp_toreleaselist;
  size_t n_downlinkbwp_toaddmodlist;
  StreamingProtobufs__BWPDownlink **downlinkbwp_toaddmodlist;
  Google__Protobuf__UInt32Value *firstactivedownlinkbwp_id;
  StreamingProtobufs__BWPInactivityTimer *bwp_inactivitytimer;
  Google__Protobuf__UInt32Value *defaultdownlinkbwp_id;
  StreamingProtobufs__UplinkConfig *uplinkconfig;
  StreamingProtobufs__UplinkConfig *supplementaryuplink;
  StreamingProtobufs__SCellDeactivationTimer *scelldeactivationtimer;
  StreamingProtobufs__CrossCarrierSchedulingConfig *crosscarrierschedulingconfig;
  uint32_t tag_id;
  StreamingProtobufs__EnabledOpt *ue_beamlockfunction;
  StreamingProtobufs__PathlossReferenceLinking *pathlossreferencelinking;
  Google__Protobuf__UInt32Value *servingcellmo;
  size_t n_ratematchpatterntoaddmodlist;
  StreamingProtobufs__RateMatchPattern **ratematchpatterntoaddmodlist;
  size_t n_ratematchpatterntoreleaselist;
  Google__Protobuf__UInt32Value **ratematchpatterntoreleaselist;
  size_t n_downlinkchannelbw_perscs_list;
  StreamingProtobufs__SCSSpecificCarrier **downlinkchannelbw_perscs_list;
  StreamingProtobufs__ServingCellConfig__PdcchServingCellConfigCase pdcch__serving_cell_config_case;
  union {
    StreamingProtobufs__Null *release_pdcch_servingcellconfig;
    StreamingProtobufs__PDCCHServingCellConfig *setup_pdcch_servingcellconfig;
  };
  StreamingProtobufs__ServingCellConfig__PdschServingCellConfigCase pdsch__serving_cell_config_case;
  union {
    StreamingProtobufs__Null *release_pdsch_servingcellconfig;
    StreamingProtobufs__PDSCHServingCellConfig *setup_pdsch_servingcellconfig;
  };
  StreamingProtobufs__ServingCellConfig__CsiMeasConfigCase csi__meas_config_case;
  union {
    StreamingProtobufs__Null *release_csi_measconfig;
    StreamingProtobufs__CSIMeasConfig *setup_csi_measconfig;
  };
  StreamingProtobufs__ServingCellConfig__LteCRSToMatchAroundCase lte__crs__to_match_around_case;
  union {
    StreamingProtobufs__Null *release_lte_crs_tomatcharound;
    StreamingProtobufs__RateMatchPatternLTECRS *setup_lte_crs_tomatcharound;
  };
};
#define STREAMING_PROTOBUFS__SERVING_CELL_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__serving_cell_config__descriptor) \
    , NULL, NULL, 0,NULL, 0,NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, 0,NULL, 0,NULL, 0,NULL, STREAMING_PROTOBUFS__SERVING_CELL_CONFIG__PDCCH__SERVING_CELL_CONFIG__NOT_SET, {0}, STREAMING_PROTOBUFS__SERVING_CELL_CONFIG__PDSCH__SERVING_CELL_CONFIG__NOT_SET, {0}, STREAMING_PROTOBUFS__SERVING_CELL_CONFIG__CSI__MEAS_CONFIG__NOT_SET, {0}, STREAMING_PROTOBUFS__SERVING_CELL_CONFIG__LTE__CRS__TO_MATCH_AROUND__NOT_SET, {0} }


struct  _StreamingProtobufs__TDDULDLConfigDedicated
{
  ProtobufCMessage base;
  size_t n_slotspecificconfigurationstoaddmodlist;
  StreamingProtobufs__TDDULDLSlotConfig **slotspecificconfigurationstoaddmodlist;
  size_t n_tdd_ul_dl_slotindex;
  uint32_t *tdd_ul_dl_slotindex;
};
#define STREAMING_PROTOBUFS__TDD__UL__DL__CONFIG_DEDICATED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__tdd__ul__dl__config_dedicated__descriptor) \
    , 0,NULL, 0,NULL }


typedef enum {
  STREAMING_PROTOBUFS__TDD__UL__DL__SLOT_CONFIG__SYMBOLS__NOT_SET = 0,
  STREAMING_PROTOBUFS__TDD__UL__DL__SLOT_CONFIG__SYMBOLS_ALL_DOWNLINK = 2,
  STREAMING_PROTOBUFS__TDD__UL__DL__SLOT_CONFIG__SYMBOLS_ALL_UPLINK = 3,
  STREAMING_PROTOBUFS__TDD__UL__DL__SLOT_CONFIG__SYMBOLS_EXPLICIT = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__TDD__UL__DL__SLOT_CONFIG__SYMBOLS)
} StreamingProtobufs__TDDULDLSlotConfig__SymbolsCase;

struct  _StreamingProtobufs__TDDULDLSlotConfig
{
  ProtobufCMessage base;
  uint32_t slotindex;
  StreamingProtobufs__TDDULDLSlotConfig__SymbolsCase symbols_case;
  union {
    StreamingProtobufs__Null *alldownlink;
    StreamingProtobufs__Null *alluplink;
    StreamingProtobufs__Explicit *explicit_;
  };
};
#define STREAMING_PROTOBUFS__TDD__UL__DL__SLOT_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__tdd__ul__dl__slot_config__descriptor) \
    , 0, STREAMING_PROTOBUFS__TDD__UL__DL__SLOT_CONFIG__SYMBOLS__NOT_SET, {0} }


struct  _StreamingProtobufs__Explicit
{
  ProtobufCMessage base;
  Google__Protobuf__UInt32Value *nrofdownlinksymbols;
  Google__Protobuf__UInt32Value *nrofuplinksymbols;
};
#define STREAMING_PROTOBUFS__EXPLICIT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__explicit__descriptor) \
    , NULL, NULL }


typedef enum {
  STREAMING_PROTOBUFS__BWP__DOWNLINK_DEDICATED__PDCCH__CONFIG__NOT_SET = 0,
  STREAMING_PROTOBUFS__BWP__DOWNLINK_DEDICATED__PDCCH__CONFIG_RELEASE_PDCCH__CONFIG = 1,
  STREAMING_PROTOBUFS__BWP__DOWNLINK_DEDICATED__PDCCH__CONFIG_SETUP_PDCCH__CONFIG = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__BWP__DOWNLINK_DEDICATED__PDCCH__CONFIG)
} StreamingProtobufs__BWPDownlinkDedicated__PdcchConfigCase;

typedef enum {
  STREAMING_PROTOBUFS__BWP__DOWNLINK_DEDICATED__PDSCH__CONFIG__NOT_SET = 0,
  STREAMING_PROTOBUFS__BWP__DOWNLINK_DEDICATED__PDSCH__CONFIG_RELEASE_PDSCH__CONFIG = 3,
  STREAMING_PROTOBUFS__BWP__DOWNLINK_DEDICATED__PDSCH__CONFIG_SETUP_PDSCH__CONFIG = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__BWP__DOWNLINK_DEDICATED__PDSCH__CONFIG)
} StreamingProtobufs__BWPDownlinkDedicated__PdschConfigCase;

typedef enum {
  STREAMING_PROTOBUFS__BWP__DOWNLINK_DEDICATED__SPS__CONFIG__NOT_SET = 0,
  STREAMING_PROTOBUFS__BWP__DOWNLINK_DEDICATED__SPS__CONFIG_RELEASE_SPS__CONFIG = 5,
  STREAMING_PROTOBUFS__BWP__DOWNLINK_DEDICATED__SPS__CONFIG_SETUP_SPS__CONFIG = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__BWP__DOWNLINK_DEDICATED__SPS__CONFIG)
} StreamingProtobufs__BWPDownlinkDedicated__SpsConfigCase;

typedef enum {
  STREAMING_PROTOBUFS__BWP__DOWNLINK_DEDICATED__RADIO_LINK_MONITORING_CONFIG__NOT_SET = 0,
  STREAMING_PROTOBUFS__BWP__DOWNLINK_DEDICATED__RADIO_LINK_MONITORING_CONFIG_RELEASE_RADIO_LINK_MONITORING_CONFIG = 7,
  STREAMING_PROTOBUFS__BWP__DOWNLINK_DEDICATED__RADIO_LINK_MONITORING_CONFIG_SETUP_RADIO_LINK_MONITORING_CONFIG = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__BWP__DOWNLINK_DEDICATED__RADIO_LINK_MONITORING_CONFIG)
} StreamingProtobufs__BWPDownlinkDedicated__RadioLinkMonitoringConfigCase;

struct  _StreamingProtobufs__BWPDownlinkDedicated
{
  ProtobufCMessage base;
  StreamingProtobufs__BWPDownlinkDedicated__PdcchConfigCase pdcch__config_case;
  union {
    StreamingProtobufs__Null *release_pdcch_config;
    StreamingProtobufs__PDCCHConfig *setup_pdcch_config;
  };
  StreamingProtobufs__BWPDownlinkDedicated__PdschConfigCase pdsch__config_case;
  union {
    StreamingProtobufs__Null *release_pdsch_config;
    StreamingProtobufs__PDSCHConfig *setup_pdsch_config;
  };
  StreamingProtobufs__BWPDownlinkDedicated__SpsConfigCase sps__config_case;
  union {
    StreamingProtobufs__Null *release_sps_config;
    StreamingProtobufs__SPSConfig *setup_sps_config;
  };
  StreamingProtobufs__BWPDownlinkDedicated__RadioLinkMonitoringConfigCase radio_link_monitoring_config_case;
  union {
    StreamingProtobufs__Null *release_radiolinkmonitoringconfig;
    StreamingProtobufs__RadioLinkMonitoringConfig *setup_radiolinkmonitoringconfig;
  };
};
#define STREAMING_PROTOBUFS__BWP__DOWNLINK_DEDICATED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__bwp__downlink_dedicated__descriptor) \
    , STREAMING_PROTOBUFS__BWP__DOWNLINK_DEDICATED__PDCCH__CONFIG__NOT_SET, {0}, STREAMING_PROTOBUFS__BWP__DOWNLINK_DEDICATED__PDSCH__CONFIG__NOT_SET, {0}, STREAMING_PROTOBUFS__BWP__DOWNLINK_DEDICATED__SPS__CONFIG__NOT_SET, {0}, STREAMING_PROTOBUFS__BWP__DOWNLINK_DEDICATED__RADIO_LINK_MONITORING_CONFIG__NOT_SET, {0} }


typedef enum {
  STREAMING_PROTOBUFS__PDCCH__CONFIG__DOWNLINK_PREEMPTION__NOT_SET = 0,
  STREAMING_PROTOBUFS__PDCCH__CONFIG__DOWNLINK_PREEMPTION_RELEASE_DOWNLINK_PREEMPTION = 5,
  STREAMING_PROTOBUFS__PDCCH__CONFIG__DOWNLINK_PREEMPTION_SETUP_DOWNLINK_PREEMPTION = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PDCCH__CONFIG__DOWNLINK_PREEMPTION)
} StreamingProtobufs__PDCCHConfig__DownlinkPreemptionCase;

typedef enum {
  STREAMING_PROTOBUFS__PDCCH__CONFIG__TPC__PUSCH__NOT_SET = 0,
  STREAMING_PROTOBUFS__PDCCH__CONFIG__TPC__PUSCH_RELEASE_TPC__PUSCH = 7,
  STREAMING_PROTOBUFS__PDCCH__CONFIG__TPC__PUSCH_SETUP_TPC__PUSCH = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PDCCH__CONFIG__TPC__PUSCH)
} StreamingProtobufs__PDCCHConfig__TpcPUSCHCase;

typedef enum {
  STREAMING_PROTOBUFS__PDCCH__CONFIG__TPC__PUCCH__NOT_SET = 0,
  STREAMING_PROTOBUFS__PDCCH__CONFIG__TPC__PUCCH_RELEASE_TPC__PUCCH = 9,
  STREAMING_PROTOBUFS__PDCCH__CONFIG__TPC__PUCCH_SETUP_TPC__PUCCH = 10
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PDCCH__CONFIG__TPC__PUCCH)
} StreamingProtobufs__PDCCHConfig__TpcPUCCHCase;

typedef enum {
  STREAMING_PROTOBUFS__PDCCH__CONFIG__TPC__SRS__NOT_SET = 0,
  STREAMING_PROTOBUFS__PDCCH__CONFIG__TPC__SRS_RELEASE_TPC__SRS = 11,
  STREAMING_PROTOBUFS__PDCCH__CONFIG__TPC__SRS_SETUP_TPC__SRS = 12
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PDCCH__CONFIG__TPC__SRS)
} StreamingProtobufs__PDCCHConfig__TpcSRSCase;

struct  _StreamingProtobufs__PDCCHConfig
{
  ProtobufCMessage base;
  size_t n_controlresourcesettoaddmodlist;
  StreamingProtobufs__ControlResourceSet **controlresourcesettoaddmodlist;
  size_t n_controlresourcesettoreleaselist;
  uint32_t *controlresourcesettoreleaselist;
  size_t n_searchspacestoaddmodlist;
  StreamingProtobufs__SearchSpace **searchspacestoaddmodlist;
  size_t n_searchspacestoreleaselist;
  uint32_t *searchspacestoreleaselist;
  StreamingProtobufs__PDCCHConfig__DownlinkPreemptionCase downlink_preemption_case;
  union {
    StreamingProtobufs__Null *release_downlinkpreemption;
    StreamingProtobufs__DownlinkPreemption *setup_downlinkpreemption;
  };
  StreamingProtobufs__PDCCHConfig__TpcPUSCHCase tpc__pusch_case;
  union {
    StreamingProtobufs__Null *release_tpc_pusch;
    StreamingProtobufs__PUSCHTPCCommandConfig *setup_tpc_pusch;
  };
  StreamingProtobufs__PDCCHConfig__TpcPUCCHCase tpc__pucch_case;
  union {
    StreamingProtobufs__Null *release_tpc_pucch;
    StreamingProtobufs__PUCCHTPCCommandConfig *setup_tpc_pucch;
  };
  StreamingProtobufs__PDCCHConfig__TpcSRSCase tpc__srs_case;
  union {
    StreamingProtobufs__Null *release_tpc_srs;
    StreamingProtobufs__SRSTPCCommandConfig *setup_tpc_srs;
  };
};
#define STREAMING_PROTOBUFS__PDCCH__CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pdcch__config__descriptor) \
    , 0,NULL, 0,NULL, 0,NULL, 0,NULL, STREAMING_PROTOBUFS__PDCCH__CONFIG__DOWNLINK_PREEMPTION__NOT_SET, {0}, STREAMING_PROTOBUFS__PDCCH__CONFIG__TPC__PUSCH__NOT_SET, {0}, STREAMING_PROTOBUFS__PDCCH__CONFIG__TPC__PUCCH__NOT_SET, {0}, STREAMING_PROTOBUFS__PDCCH__CONFIG__TPC__SRS__NOT_SET, {0} }


struct  _StreamingProtobufs__DownlinkPreemption
{
  ProtobufCMessage base;
  uint32_t int_rnti;
  StreamingProtobufs__TimeFrequencySet *timefrequencyset;
  uint32_t dci_payloadsize;
  size_t n_int_configurationperservingcell;
  StreamingProtobufs__INTConfigurationPerServingCell **int_configurationperservingcell;
};
#define STREAMING_PROTOBUFS__DOWNLINK_PREEMPTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__downlink_preemption__descriptor) \
    , 0, NULL, 0, 0,NULL }


struct  _StreamingProtobufs__TimeFrequencySet
{
  ProtobufCMessage base;
  StreamingProtobufs__TimeFrequencySet__Value value;
};
#define STREAMING_PROTOBUFS__TIME_FREQUENCY_SET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__time_frequency_set__descriptor) \
    , STREAMING_PROTOBUFS__TIME_FREQUENCY_SET__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__INTConfigurationPerServingCell
{
  ProtobufCMessage base;
  uint32_t servingcellid;
  uint32_t positionindci;
};
#define STREAMING_PROTOBUFS__INT__CONFIGURATION_PER_SERVING_CELL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__int__configuration_per_serving_cell__descriptor) \
    , 0, 0 }


struct  _StreamingProtobufs__PUSCHTPCCommandConfig
{
  ProtobufCMessage base;
  Google__Protobuf__UInt32Value *tpc_index;
  Google__Protobuf__UInt32Value *tpc_indexsul;
  Google__Protobuf__UInt32Value *targetcell;
};
#define STREAMING_PROTOBUFS__PUSCH__TPC__COMMAND_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pusch__tpc__command_config__descriptor) \
    , NULL, NULL, NULL }


struct  _StreamingProtobufs__PUCCHTPCCommandConfig
{
  ProtobufCMessage base;
  Google__Protobuf__UInt32Value *tpc_indexpcell;
  Google__Protobuf__UInt32Value *tpc_indexpucch_scell;
};
#define STREAMING_PROTOBUFS__PUCCH__TPC__COMMAND_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pucch__tpc__command_config__descriptor) \
    , NULL, NULL }


struct  _StreamingProtobufs__SRSTPCCommandConfig
{
  ProtobufCMessage base;
  Google__Protobuf__UInt32Value *startingbitofformat2_3;
  Google__Protobuf__UInt32Value *fieldtypeformat2_3;
  Google__Protobuf__UInt32Value *startingbitofformat2_3sul_v1530;
};
#define STREAMING_PROTOBUFS__SRS__TPC__COMMAND_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__srs__tpc__command_config__descriptor) \
    , NULL, NULL, NULL }


typedef enum {
  STREAMING_PROTOBUFS__PDSCH__CONFIG__DMRS__DOWNLINK_FOR_PDSCH__MAPPING_TYPE_A__NOT_SET = 0,
  STREAMING_PROTOBUFS__PDSCH__CONFIG__DMRS__DOWNLINK_FOR_PDSCH__MAPPING_TYPE_A_RELEASE_DMRS__DOWNLINK_FOR_PDSCH__MAPPING_TYPE_A = 2,
  STREAMING_PROTOBUFS__PDSCH__CONFIG__DMRS__DOWNLINK_FOR_PDSCH__MAPPING_TYPE_A_SETUP_DMRS__DOWNLINK_FOR_PDSCH__MAPPING_TYPE_A = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PDSCH__CONFIG__DMRS__DOWNLINK_FOR_PDSCH__MAPPING_TYPE_A)
} StreamingProtobufs__PDSCHConfig__DmrsDownlinkForPDSCHMappingTypeACase;

typedef enum {
  STREAMING_PROTOBUFS__PDSCH__CONFIG__DMRS__DOWNLINK_FOR_PDSCH__MAPPING_TYPE_B__NOT_SET = 0,
  STREAMING_PROTOBUFS__PDSCH__CONFIG__DMRS__DOWNLINK_FOR_PDSCH__MAPPING_TYPE_B_RELEASE_DMRS__DOWNLINK_FOR_PDSCH__MAPPING_TYPE_B = 4,
  STREAMING_PROTOBUFS__PDSCH__CONFIG__DMRS__DOWNLINK_FOR_PDSCH__MAPPING_TYPE_B_SETUP_DMRS__DOWNLINK_FOR_PDSCH__MAPPING_TYPE_B = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PDSCH__CONFIG__DMRS__DOWNLINK_FOR_PDSCH__MAPPING_TYPE_B)
} StreamingProtobufs__PDSCHConfig__DmrsDownlinkForPDSCHMappingTypeBCase;

typedef enum {
  STREAMING_PROTOBUFS__PDSCH__CONFIG__PDSCH__TIME_DOMAIN_ALLOCATION_LIST__NOT_SET = 0,
  STREAMING_PROTOBUFS__PDSCH__CONFIG__PDSCH__TIME_DOMAIN_ALLOCATION_LIST_RELEASE_PDSCH__TIME_DOMAIN_ALLOCATION_LIST = 10,
  STREAMING_PROTOBUFS__PDSCH__CONFIG__PDSCH__TIME_DOMAIN_ALLOCATION_LIST_SETUP_PDSCH__TIME_DOMAIN_ALLOCATION_LIST = 11
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PDSCH__CONFIG__PDSCH__TIME_DOMAIN_ALLOCATION_LIST)
} StreamingProtobufs__PDSCHConfig__PdschTimeDomainAllocationListCase;

typedef enum {
  STREAMING_PROTOBUFS__PDSCH__CONFIG__PRB__BUNDLING_TYPE__NOT_SET = 0,
  STREAMING_PROTOBUFS__PDSCH__CONFIG__PRB__BUNDLING_TYPE_STATIC_BUNDLING = 20,
  STREAMING_PROTOBUFS__PDSCH__CONFIG__PRB__BUNDLING_TYPE_DYNAMIC_BUNDLING = 21
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PDSCH__CONFIG__PRB__BUNDLING_TYPE)
} StreamingProtobufs__PDSCHConfig__PrbBundlingTypeCase;

typedef enum {
  STREAMING_PROTOBUFS__PDSCH__CONFIG__P__ZP__CSI__RS__RESOURCE_SET__NOT_SET = 0,
  STREAMING_PROTOBUFS__PDSCH__CONFIG__P__ZP__CSI__RS__RESOURCE_SET_RELEASE_P__ZP__CSI__RS__RESOURCE_SET = 28,
  STREAMING_PROTOBUFS__PDSCH__CONFIG__P__ZP__CSI__RS__RESOURCE_SET_SETUP_P__ZP__CSI__RS__RESOURCE_SET = 29
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PDSCH__CONFIG__P__ZP__CSI__RS__RESOURCE_SET)
} StreamingProtobufs__PDSCHConfig__PZPCSIRSResourceSetCase;

struct  _StreamingProtobufs__PDSCHConfig
{
  ProtobufCMessage base;
  Google__Protobuf__UInt32Value *datascramblingidentitypdsch;
  size_t n_tci_statestoaddmodlist;
  StreamingProtobufs__TCIState **tci_statestoaddmodlist;
  size_t n_tci_statestoreleaselist;
  uint32_t *tci_statestoreleaselist;
  StreamingProtobufs__VRBToPRBInterleaver *vrb_toprb_interleaver;
  StreamingProtobufs__ResourceAllocation *resourceallocation;
  StreamingProtobufs__PDSCHAggregationFactor *pdsch_aggregationfactor;
  size_t n_ratematchpatterntoaddmodlist;
  StreamingProtobufs__RateMatchPattern **ratematchpatterntoaddmodlist;
  size_t n_ratematchpatterntoreleaselist;
  uint32_t *ratematchpatterntoreleaselist;
  StreamingProtobufs__RateMatchPatternGroup *ratematchpatterngroup1;
  StreamingProtobufs__RateMatchPatternGroup *ratematchpatterngroup2;
  StreamingProtobufs__RBGSize *rbg_size;
  StreamingProtobufs__MCSTable *mcs_table;
  StreamingProtobufs__MaxNrofCodeWordsScheduledByDCI *maxnrofcodewordsscheduledbydci;
  size_t n_zp_csi_rs_resourcetoaddmodlist;
  StreamingProtobufs__ZPCSIRSResource **zp_csi_rs_resourcetoaddmodlist;
  size_t n_zp_csi_rs_resourcetoreleaselist;
  uint32_t *zp_csi_rs_resourcetoreleaselist;
  size_t n_aperiodic_zp_csi_rs_resourcesetstoaddmodlist;
  StreamingProtobufs__ZPCSIRSResourceSet **aperiodic_zp_csi_rs_resourcesetstoaddmodlist;
  size_t n_aperiodic_zp_csi_rs_resourcesetstoreleaselist;
  uint32_t *aperiodic_zp_csi_rs_resourcesetstoreleaselist;
  size_t n_sp_zp_csi_rs_resourcesetstoaddmodlist;
  StreamingProtobufs__ZPCSIRSResourceSet **sp_zp_csi_rs_resourcesetstoaddmodlist;
  size_t n_sp_zp_csi_rs_resourcesetstoreleaselist;
  uint32_t *sp_zp_csi_rs_resourcesetstoreleaselist;
  StreamingProtobufs__PDSCHConfig__DmrsDownlinkForPDSCHMappingTypeACase dmrs__downlink_for_pdsch__mapping_type_a_case;
  union {
    StreamingProtobufs__Null *release_dmrs_downlinkforpdsch_mappingtypea;
    StreamingProtobufs__DMRSDownlinkConfig *setup_dmrs_downlinkforpdsch_mappingtypea;
  };
  StreamingProtobufs__PDSCHConfig__DmrsDownlinkForPDSCHMappingTypeBCase dmrs__downlink_for_pdsch__mapping_type_b_case;
  union {
    StreamingProtobufs__Null *release_dmrs_downlinkforpdsch_mappingtypeb;
    StreamingProtobufs__DMRSDownlinkConfig *setup_dmrs_downlinkforpdsch_mappingtypeb;
  };
  StreamingProtobufs__PDSCHConfig__PdschTimeDomainAllocationListCase pdsch__time_domain_allocation_list_case;
  union {
    StreamingProtobufs__Null *release_pdsch_timedomainallocationlist;
    StreamingProtobufs__PDSCHTimeDomainResourceAllocationList *setup_pdsch_timedomainallocationlist;
  };
  StreamingProtobufs__PDSCHConfig__PrbBundlingTypeCase prb__bundling_type_case;
  union {
    StreamingProtobufs__StaticBundling *staticbundling;
    StreamingProtobufs__DynamicBundling *dynamicbundling;
  };
  StreamingProtobufs__PDSCHConfig__PZPCSIRSResourceSetCase p__zp__csi__rs__resource_set_case;
  union {
    StreamingProtobufs__Null *release_p_zp_csi_rs_resourceset;
    StreamingProtobufs__ZPCSIRSResourceSet *setup_p_zp_csi_rs_resourceset;
  };
};
#define STREAMING_PROTOBUFS__PDSCH__CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pdsch__config__descriptor) \
    , NULL, 0,NULL, 0,NULL, NULL, NULL, NULL, 0,NULL, 0,NULL, NULL, NULL, NULL, NULL, NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, STREAMING_PROTOBUFS__PDSCH__CONFIG__DMRS__DOWNLINK_FOR_PDSCH__MAPPING_TYPE_A__NOT_SET, {0}, STREAMING_PROTOBUFS__PDSCH__CONFIG__DMRS__DOWNLINK_FOR_PDSCH__MAPPING_TYPE_B__NOT_SET, {0}, STREAMING_PROTOBUFS__PDSCH__CONFIG__PDSCH__TIME_DOMAIN_ALLOCATION_LIST__NOT_SET, {0}, STREAMING_PROTOBUFS__PDSCH__CONFIG__PRB__BUNDLING_TYPE__NOT_SET, {0}, STREAMING_PROTOBUFS__PDSCH__CONFIG__P__ZP__CSI__RS__RESOURCE_SET__NOT_SET, {0} }


typedef enum {
  STREAMING_PROTOBUFS__DMRS__DOWNLINK_CONFIG__PHASE_TRACKING_RS__NOT_SET = 0,
  STREAMING_PROTOBUFS__DMRS__DOWNLINK_CONFIG__PHASE_TRACKING_RS_RELEASE_PHASE_TRACKING_RS = 6,
  STREAMING_PROTOBUFS__DMRS__DOWNLINK_CONFIG__PHASE_TRACKING_RS_SETUP_PHASE_TRACKING_RS = 7
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__DMRS__DOWNLINK_CONFIG__PHASE_TRACKING_RS)
} StreamingProtobufs__DMRSDownlinkConfig__PhaseTrackingRSCase;

struct  _StreamingProtobufs__DMRSDownlinkConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__DMRSType *dmrs_type;
  StreamingProtobufs__DMRSAdditionalPosition *dmrs_additionalposition;
  StreamingProtobufs__MaxLength *maxlength;
  Google__Protobuf__UInt32Value *scramblingid0;
  Google__Protobuf__UInt32Value *scramblingid1;
  StreamingProtobufs__DMRSDownlinkConfig__PhaseTrackingRSCase phase_tracking_rs_case;
  union {
    StreamingProtobufs__Null *release_phasetrackingrs;
    StreamingProtobufs__PTRSDownlinkConfig *setup_phasetrackingrs;
  };
};
#define STREAMING_PROTOBUFS__DMRS__DOWNLINK_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__dmrs__downlink_config__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, STREAMING_PROTOBUFS__DMRS__DOWNLINK_CONFIG__PHASE_TRACKING_RS__NOT_SET, {0} }


struct  _StreamingProtobufs__DMRSType
{
  ProtobufCMessage base;
  StreamingProtobufs__DMRSType__Value value;
};
#define STREAMING_PROTOBUFS__DMRS__TYPE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__dmrs__type__descriptor) \
    , STREAMING_PROTOBUFS__DMRS__TYPE__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__DMRSAdditionalPosition
{
  ProtobufCMessage base;
  StreamingProtobufs__DMRSAdditionalPosition__Value value;
};
#define STREAMING_PROTOBUFS__DMRS__ADDITIONAL_POSITION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__dmrs__additional_position__descriptor) \
    , STREAMING_PROTOBUFS__DMRS__ADDITIONAL_POSITION__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__MaxLength
{
  ProtobufCMessage base;
  StreamingProtobufs__MaxLength__Value value;
};
#define STREAMING_PROTOBUFS__MAX_LENGTH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__max_length__descriptor) \
    , STREAMING_PROTOBUFS__MAX_LENGTH__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__PTRSDownlinkConfig
{
  ProtobufCMessage base;
  size_t n_frequencydensity;
  uint32_t *frequencydensity;
  size_t n_timedensity;
  uint32_t *timedensity;
  Google__Protobuf__UInt32Value *epre_ratio;
  StreamingProtobufs__ResourceElementOffset *resourceelementoffset;
};
#define STREAMING_PROTOBUFS__PTRS__DOWNLINK_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__ptrs__downlink_config__descriptor) \
    , 0,NULL, 0,NULL, NULL, NULL }


struct  _StreamingProtobufs__ResourceElementOffset
{
  ProtobufCMessage base;
  StreamingProtobufs__ResourceElementOffset__Value value;
};
#define STREAMING_PROTOBUFS__RESOURCE_ELEMENT_OFFSET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__resource_element_offset__descriptor) \
    , STREAMING_PROTOBUFS__RESOURCE_ELEMENT_OFFSET__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__TCIState
{
  ProtobufCMessage base;
  uint32_t tci_stateid;
  StreamingProtobufs__QCLInfo *qcl_type1;
  StreamingProtobufs__QCLInfo *qcl_type2;
};
#define STREAMING_PROTOBUFS__TCI__STATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__tci__state__descriptor) \
    , 0, NULL, NULL }


typedef enum {
  STREAMING_PROTOBUFS__QCL__INFO__REFERENCE_SIGNAL__NOT_SET = 0,
  STREAMING_PROTOBUFS__QCL__INFO__REFERENCE_SIGNAL_CSI_RS = 3,
  STREAMING_PROTOBUFS__QCL__INFO__REFERENCE_SIGNAL_SSB = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__QCL__INFO__REFERENCE_SIGNAL)
} StreamingProtobufs__QCLInfo__ReferenceSignalCase;

struct  _StreamingProtobufs__QCLInfo
{
  ProtobufCMessage base;
  Google__Protobuf__UInt32Value *cell;
  Google__Protobuf__UInt32Value *bwp_id;
  StreamingProtobufs__QCLType *qcl_type;
  StreamingProtobufs__QCLInfo__ReferenceSignalCase reference_signal_case;
  union {
    uint32_t csi_rs;
    uint32_t ssb;
  };
};
#define STREAMING_PROTOBUFS__QCL__INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__qcl__info__descriptor) \
    , NULL, NULL, NULL, STREAMING_PROTOBUFS__QCL__INFO__REFERENCE_SIGNAL__NOT_SET, {0} }


struct  _StreamingProtobufs__QCLType
{
  ProtobufCMessage base;
  StreamingProtobufs__QCLType__Value value;
};
#define STREAMING_PROTOBUFS__QCL__TYPE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__qcl__type__descriptor) \
    , STREAMING_PROTOBUFS__QCL__TYPE__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__VRBToPRBInterleaver
{
  ProtobufCMessage base;
  StreamingProtobufs__VRBToPRBInterleaver__Value value;
};
#define STREAMING_PROTOBUFS__VRB__TO_PRB__INTERLEAVER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__vrb__to_prb__interleaver__descriptor) \
    , STREAMING_PROTOBUFS__VRB__TO_PRB__INTERLEAVER__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__ResourceAllocation
{
  ProtobufCMessage base;
  StreamingProtobufs__ResourceAllocation__Value value;
};
#define STREAMING_PROTOBUFS__RESOURCE_ALLOCATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__resource_allocation__descriptor) \
    , STREAMING_PROTOBUFS__RESOURCE_ALLOCATION__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__PDSCHAggregationFactor
{
  ProtobufCMessage base;
  StreamingProtobufs__PDSCHAggregationFactor__Value value;
};
#define STREAMING_PROTOBUFS__PDSCH__AGGREGATION_FACTOR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pdsch__aggregation_factor__descriptor) \
    , STREAMING_PROTOBUFS__PDSCH__AGGREGATION_FACTOR__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__RateMatchPatternGroup
{
  ProtobufCMessage base;
  size_t n_items;
  StreamingProtobufs__RateMatchPatternGroupItem **items;
};
#define STREAMING_PROTOBUFS__RATE_MATCH_PATTERN_GROUP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__rate_match_pattern_group__descriptor) \
    , 0,NULL }


typedef enum {
  STREAMING_PROTOBUFS__RATE_MATCH_PATTERN_GROUP_ITEM__C__NOT_SET = 0,
  STREAMING_PROTOBUFS__RATE_MATCH_PATTERN_GROUP_ITEM__C_CELL_LEVEL = 1,
  STREAMING_PROTOBUFS__RATE_MATCH_PATTERN_GROUP_ITEM__C_BWP_LEVEL = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__RATE_MATCH_PATTERN_GROUP_ITEM__C)
} StreamingProtobufs__RateMatchPatternGroupItem__CCase;

struct  _StreamingProtobufs__RateMatchPatternGroupItem
{
  ProtobufCMessage base;
  StreamingProtobufs__RateMatchPatternGroupItem__CCase c_case;
  union {
    uint32_t celllevel;
    uint32_t bwplevel;
  };
};
#define STREAMING_PROTOBUFS__RATE_MATCH_PATTERN_GROUP_ITEM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__rate_match_pattern_group_item__descriptor) \
    , STREAMING_PROTOBUFS__RATE_MATCH_PATTERN_GROUP_ITEM__C__NOT_SET, {0} }


struct  _StreamingProtobufs__RBGSize
{
  ProtobufCMessage base;
  StreamingProtobufs__RBGSize__Value value;
};
#define STREAMING_PROTOBUFS__RBG__SIZE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__rbg__size__descriptor) \
    , STREAMING_PROTOBUFS__RBG__SIZE__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__MCSTable
{
  ProtobufCMessage base;
  StreamingProtobufs__MCSTable__Value value;
};
#define STREAMING_PROTOBUFS__MCS__TABLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__mcs__table__descriptor) \
    , STREAMING_PROTOBUFS__MCS__TABLE__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__MaxNrofCodeWordsScheduledByDCI
{
  ProtobufCMessage base;
  StreamingProtobufs__MaxNrofCodeWordsScheduledByDCI__Value value;
};
#define STREAMING_PROTOBUFS__MAX_NROF_CODE_WORDS_SCHEDULED_BY_DCI__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__max_nrof_code_words_scheduled_by_dci__descriptor) \
    , STREAMING_PROTOBUFS__MAX_NROF_CODE_WORDS_SCHEDULED_BY_DCI__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__StaticBundling
{
  ProtobufCMessage base;
  StreamingProtobufs__BundleSize *bundlesize;
};
#define STREAMING_PROTOBUFS__STATIC_BUNDLING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__static_bundling__descriptor) \
    , NULL }


struct  _StreamingProtobufs__BundleSize
{
  ProtobufCMessage base;
  StreamingProtobufs__BundleSize__Value value;
};
#define STREAMING_PROTOBUFS__BUNDLE_SIZE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__bundle_size__descriptor) \
    , STREAMING_PROTOBUFS__BUNDLE_SIZE__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__DynamicBundling
{
  ProtobufCMessage base;
  StreamingProtobufs__BundleSizeSet1 *bundlesizeset1;
  StreamingProtobufs__BundleSizeSet2 *bundlesizeset2;
};
#define STREAMING_PROTOBUFS__DYNAMIC_BUNDLING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__dynamic_bundling__descriptor) \
    , NULL, NULL }


struct  _StreamingProtobufs__BundleSizeSet1
{
  ProtobufCMessage base;
  StreamingProtobufs__BundleSizeSet1__Value value;
};
#define STREAMING_PROTOBUFS__BUNDLE_SIZE_SET1__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__bundle_size_set1__descriptor) \
    , STREAMING_PROTOBUFS__BUNDLE_SIZE_SET1__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__BundleSizeSet2
{
  ProtobufCMessage base;
  StreamingProtobufs__BundleSizeSet2__Value value;
};
#define STREAMING_PROTOBUFS__BUNDLE_SIZE_SET2__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__bundle_size_set2__descriptor) \
    , STREAMING_PROTOBUFS__BUNDLE_SIZE_SET2__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__ZPCSIRSResource
{
  ProtobufCMessage base;
  uint32_t zp_csi_rs_resourceid;
  StreamingProtobufs__CSIRSResourceMapping *resourcemapping;
  StreamingProtobufs__CSIResourcePeriodicityAndOffset *periodicityandoffset;
};
#define STREAMING_PROTOBUFS__ZP__CSI__RS__RESOURCE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__zp__csi__rs__resource__descriptor) \
    , 0, NULL, NULL }


typedef enum {
  STREAMING_PROTOBUFS__CSI__RS__RESOURCE_MAPPING__FREQUENCY_DOMAIN_ALLOCATION__NOT_SET = 0,
  STREAMING_PROTOBUFS__CSI__RS__RESOURCE_MAPPING__FREQUENCY_DOMAIN_ALLOCATION_ROW1 = 1,
  STREAMING_PROTOBUFS__CSI__RS__RESOURCE_MAPPING__FREQUENCY_DOMAIN_ALLOCATION_ROW2 = 2,
  STREAMING_PROTOBUFS__CSI__RS__RESOURCE_MAPPING__FREQUENCY_DOMAIN_ALLOCATION_ROW4 = 3,
  STREAMING_PROTOBUFS__CSI__RS__RESOURCE_MAPPING__FREQUENCY_DOMAIN_ALLOCATION_OTHER = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CSI__RS__RESOURCE_MAPPING__FREQUENCY_DOMAIN_ALLOCATION)
} StreamingProtobufs__CSIRSResourceMapping__FrequencyDomainAllocationCase;

typedef enum {
  STREAMING_PROTOBUFS__CSI__RS__RESOURCE_MAPPING__DENSITY__NOT_SET = 0,
  STREAMING_PROTOBUFS__CSI__RS__RESOURCE_MAPPING__DENSITY_DOT5 = 10,
  STREAMING_PROTOBUFS__CSI__RS__RESOURCE_MAPPING__DENSITY_ONE = 11,
  STREAMING_PROTOBUFS__CSI__RS__RESOURCE_MAPPING__DENSITY_THREE = 12
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CSI__RS__RESOURCE_MAPPING__DENSITY)
} StreamingProtobufs__CSIRSResourceMapping__DensityCase;

struct  _StreamingProtobufs__CSIRSResourceMapping
{
  ProtobufCMessage base;
  StreamingProtobufs__NrofPorts *nrofports;
  uint32_t firstofdmsymbolintimedomain;
  Google__Protobuf__UInt32Value *firstofdmsymbolintimedomain2;
  StreamingProtobufs__CDMType *cdm_type;
  StreamingProtobufs__CSIFrequencyOccupation *freqband;
  StreamingProtobufs__CSIRSResourceMapping__FrequencyDomainAllocationCase frequency_domain_allocation_case;
  union {
    ProtobufCBinaryData row1;
    ProtobufCBinaryData row2;
    ProtobufCBinaryData row4;
    ProtobufCBinaryData other;
  };
  StreamingProtobufs__CSIRSResourceMapping__DensityCase density_case;
  union {
    StreamingProtobufs__Dot5 *dot5;
    StreamingProtobufs__Null *one;
    StreamingProtobufs__Null *three;
  };
};
#define STREAMING_PROTOBUFS__CSI__RS__RESOURCE_MAPPING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__csi__rs__resource_mapping__descriptor) \
    , NULL, 0, NULL, NULL, NULL, STREAMING_PROTOBUFS__CSI__RS__RESOURCE_MAPPING__FREQUENCY_DOMAIN_ALLOCATION__NOT_SET, {0}, STREAMING_PROTOBUFS__CSI__RS__RESOURCE_MAPPING__DENSITY__NOT_SET, {0} }


struct  _StreamingProtobufs__NrofPorts
{
  ProtobufCMessage base;
  StreamingProtobufs__NrofPorts__Value value;
};
#define STREAMING_PROTOBUFS__NROF_PORTS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__nrof_ports__descriptor) \
    , STREAMING_PROTOBUFS__NROF_PORTS__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__CDMType
{
  ProtobufCMessage base;
  StreamingProtobufs__CDMType__Value value;
};
#define STREAMING_PROTOBUFS__CDM__TYPE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__cdm__type__descriptor) \
    , STREAMING_PROTOBUFS__CDM__TYPE__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__Dot5
{
  ProtobufCMessage base;
  StreamingProtobufs__Dot5__Value value;
};
#define STREAMING_PROTOBUFS__DOT5__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__dot5__descriptor) \
    , STREAMING_PROTOBUFS__DOT5__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__CSIFrequencyOccupation
{
  ProtobufCMessage base;
  uint32_t startingrb;
  uint32_t nrofrbs;
};
#define STREAMING_PROTOBUFS__CSI__FREQUENCY_OCCUPATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__csi__frequency_occupation__descriptor) \
    , 0, 0 }


typedef enum {
  STREAMING_PROTOBUFS__CSI__RESOURCE_PERIODICITY_AND_OFFSET__C__NOT_SET = 0,
  STREAMING_PROTOBUFS__CSI__RESOURCE_PERIODICITY_AND_OFFSET__C_SLOTS4 = 1,
  STREAMING_PROTOBUFS__CSI__RESOURCE_PERIODICITY_AND_OFFSET__C_SLOTS5 = 2,
  STREAMING_PROTOBUFS__CSI__RESOURCE_PERIODICITY_AND_OFFSET__C_SLOTS8 = 3,
  STREAMING_PROTOBUFS__CSI__RESOURCE_PERIODICITY_AND_OFFSET__C_SLOTS10 = 4,
  STREAMING_PROTOBUFS__CSI__RESOURCE_PERIODICITY_AND_OFFSET__C_SLOTS16 = 5,
  STREAMING_PROTOBUFS__CSI__RESOURCE_PERIODICITY_AND_OFFSET__C_SLOTS20 = 6,
  STREAMING_PROTOBUFS__CSI__RESOURCE_PERIODICITY_AND_OFFSET__C_SLOTS32 = 7,
  STREAMING_PROTOBUFS__CSI__RESOURCE_PERIODICITY_AND_OFFSET__C_SLOTS40 = 8,
  STREAMING_PROTOBUFS__CSI__RESOURCE_PERIODICITY_AND_OFFSET__C_SLOTS64 = 9,
  STREAMING_PROTOBUFS__CSI__RESOURCE_PERIODICITY_AND_OFFSET__C_SLOTS80 = 10,
  STREAMING_PROTOBUFS__CSI__RESOURCE_PERIODICITY_AND_OFFSET__C_SLOTS160 = 11,
  STREAMING_PROTOBUFS__CSI__RESOURCE_PERIODICITY_AND_OFFSET__C_SLOTS320 = 12,
  STREAMING_PROTOBUFS__CSI__RESOURCE_PERIODICITY_AND_OFFSET__C_SLOTS640 = 13
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CSI__RESOURCE_PERIODICITY_AND_OFFSET__C)
} StreamingProtobufs__CSIResourcePeriodicityAndOffset__CCase;

struct  _StreamingProtobufs__CSIResourcePeriodicityAndOffset
{
  ProtobufCMessage base;
  StreamingProtobufs__CSIResourcePeriodicityAndOffset__CCase c_case;
  union {
    uint32_t slots4;
    uint32_t slots5;
    uint32_t slots8;
    uint32_t slots10;
    uint32_t slots16;
    uint32_t slots20;
    uint32_t slots32;
    uint32_t slots40;
    uint32_t slots64;
    uint32_t slots80;
    uint32_t slots160;
    uint32_t slots320;
    uint32_t slots640;
  };
};
#define STREAMING_PROTOBUFS__CSI__RESOURCE_PERIODICITY_AND_OFFSET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__csi__resource_periodicity_and_offset__descriptor) \
    , STREAMING_PROTOBUFS__CSI__RESOURCE_PERIODICITY_AND_OFFSET__C__NOT_SET, {0} }


struct  _StreamingProtobufs__ZPCSIRSResourceSet
{
  ProtobufCMessage base;
  uint32_t zp_csi_rs_resourcesetid;
  size_t n_zp_csi_rs_resourceidlist;
  uint32_t *zp_csi_rs_resourceidlist;
};
#define STREAMING_PROTOBUFS__ZP__CSI__RS__RESOURCE_SET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__zp__csi__rs__resource_set__descriptor) \
    , 0, 0,NULL }


struct  _StreamingProtobufs__SPSConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__SPSConfigPeriodicity *periodicity;
  uint32_t nrofharq_processes;
  Google__Protobuf__UInt32Value *n1pucch_an;
  StreamingProtobufs__SPSMCSTable *mcs_table;
};
#define STREAMING_PROTOBUFS__SPS__CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__sps__config__descriptor) \
    , NULL, 0, NULL, NULL }


struct  _StreamingProtobufs__SPSConfigPeriodicity
{
  ProtobufCMessage base;
  StreamingProtobufs__SPSConfigPeriodicity__Value value;
};
#define STREAMING_PROTOBUFS__SPS__CONFIG_PERIODICITY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__sps__config_periodicity__descriptor) \
    , STREAMING_PROTOBUFS__SPS__CONFIG_PERIODICITY__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__SPSMCSTable
{
  ProtobufCMessage base;
  StreamingProtobufs__SPSMCSTable__Value value;
};
#define STREAMING_PROTOBUFS__SPS__MCS__TABLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__sps__mcs__table__descriptor) \
    , STREAMING_PROTOBUFS__SPS__MCS__TABLE__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__RadioLinkMonitoringConfig
{
  ProtobufCMessage base;
  size_t n_failuredetectionresourcestoaddmodlist;
  StreamingProtobufs__RadioLinkMonitoringRS **failuredetectionresourcestoaddmodlist;
  size_t n_failuredetectionresourcestoreleaselist;
  uint32_t *failuredetectionresourcestoreleaselist;
  StreamingProtobufs__BeamFailureInstanceMaxCount *beamfailureinstancemaxcount;
  StreamingProtobufs__BeamFailureDetectionTimer *beamfailuredetectiontimer;
};
#define STREAMING_PROTOBUFS__RADIO_LINK_MONITORING_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__radio_link_monitoring_config__descriptor) \
    , 0,NULL, 0,NULL, NULL, NULL }


typedef enum {
  STREAMING_PROTOBUFS__RADIO_LINK_MONITORING_RS__DETECTION_RESOURCE__NOT_SET = 0,
  STREAMING_PROTOBUFS__RADIO_LINK_MONITORING_RS__DETECTION_RESOURCE_SSB__INDEX = 3,
  STREAMING_PROTOBUFS__RADIO_LINK_MONITORING_RS__DETECTION_RESOURCE_CSI__RS__INDEX = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__RADIO_LINK_MONITORING_RS__DETECTION_RESOURCE)
} StreamingProtobufs__RadioLinkMonitoringRS__DetectionResourceCase;

struct  _StreamingProtobufs__RadioLinkMonitoringRS
{
  ProtobufCMessage base;
  uint32_t radiolinkmonitoringrs_id;
  StreamingProtobufs__Purpose *purpose;
  StreamingProtobufs__RadioLinkMonitoringRS__DetectionResourceCase detection_resource_case;
  union {
    uint32_t ssb_index;
    uint32_t csi_rs_index;
  };
};
#define STREAMING_PROTOBUFS__RADIO_LINK_MONITORING_RS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__radio_link_monitoring_rs__descriptor) \
    , 0, NULL, STREAMING_PROTOBUFS__RADIO_LINK_MONITORING_RS__DETECTION_RESOURCE__NOT_SET, {0} }


struct  _StreamingProtobufs__Purpose
{
  ProtobufCMessage base;
  StreamingProtobufs__Purpose__Value value;
};
#define STREAMING_PROTOBUFS__PURPOSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__purpose__descriptor) \
    , STREAMING_PROTOBUFS__PURPOSE__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__BeamFailureInstanceMaxCount
{
  ProtobufCMessage base;
  StreamingProtobufs__BeamFailureInstanceMaxCount__Value value;
};
#define STREAMING_PROTOBUFS__BEAM_FAILURE_INSTANCE_MAX_COUNT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__beam_failure_instance_max_count__descriptor) \
    , STREAMING_PROTOBUFS__BEAM_FAILURE_INSTANCE_MAX_COUNT__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__BeamFailureDetectionTimer
{
  ProtobufCMessage base;
  StreamingProtobufs__BeamFailureDetectionTimer__Value value;
};
#define STREAMING_PROTOBUFS__BEAM_FAILURE_DETECTION_TIMER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__beam_failure_detection_timer__descriptor) \
    , STREAMING_PROTOBUFS__BEAM_FAILURE_DETECTION_TIMER__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__BWPDownlink
{
  ProtobufCMessage base;
  uint32_t bwp_id;
  StreamingProtobufs__BWPDownlinkCommon *bwp_common;
  StreamingProtobufs__BWPDownlinkDedicated *bwp_dedicated;
};
#define STREAMING_PROTOBUFS__BWP__DOWNLINK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__bwp__downlink__descriptor) \
    , 0, NULL, NULL }


struct  _StreamingProtobufs__BWPInactivityTimer
{
  ProtobufCMessage base;
  StreamingProtobufs__BWPInactivityTimer__Value value;
};
#define STREAMING_PROTOBUFS__BWP__INACTIVITY_TIMER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__bwp__inactivity_timer__descriptor) \
    , STREAMING_PROTOBUFS__BWP__INACTIVITY_TIMER__VALUE__protobuf_unspecified }


typedef enum {
  STREAMING_PROTOBUFS__UPLINK_CONFIG__PUSCH__SERVING_CELL_CONFIG__NOT_SET = 0,
  STREAMING_PROTOBUFS__UPLINK_CONFIG__PUSCH__SERVING_CELL_CONFIG_RELEASE_PUSCH__SERVING_CELL_CONFIG = 5,
  STREAMING_PROTOBUFS__UPLINK_CONFIG__PUSCH__SERVING_CELL_CONFIG_SETUP_PUSCH__SERVING_CELL_CONFIG = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__UPLINK_CONFIG__PUSCH__SERVING_CELL_CONFIG)
} StreamingProtobufs__UplinkConfig__PuschServingCellConfigCase;

typedef enum {
  STREAMING_PROTOBUFS__UPLINK_CONFIG__CARRIER_SWITCHING__NOT_SET = 0,
  STREAMING_PROTOBUFS__UPLINK_CONFIG__CARRIER_SWITCHING_RELEASE_CARRIER_SWITCHING = 7,
  STREAMING_PROTOBUFS__UPLINK_CONFIG__CARRIER_SWITCHING_SETUP_CARRIER_SWITCHING = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__UPLINK_CONFIG__CARRIER_SWITCHING)
} StreamingProtobufs__UplinkConfig__CarrierSwitchingCase;

struct  _StreamingProtobufs__UplinkConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__BWPUplinkDedicated *initialuplinkbwp;
  size_t n_uplinkbwp_toreleaselist;
  Google__Protobuf__UInt32Value **uplinkbwp_toreleaselist;
  size_t n_uplinkbwp_toaddmodlist;
  StreamingProtobufs__BWPUplink **uplinkbwp_toaddmodlist;
  Google__Protobuf__UInt32Value *firstactiveuplinkbwp_id;
  Google__Protobuf__BoolValue *powerboostpi2bpsk;
  size_t n_uplinkchannelbw_perscs_list;
  StreamingProtobufs__SCSSpecificCarrier **uplinkchannelbw_perscs_list;
  StreamingProtobufs__UplinkConfig__PuschServingCellConfigCase pusch__serving_cell_config_case;
  union {
    StreamingProtobufs__Null *release_pusch_servingcellconfig;
    StreamingProtobufs__PUSCHServingCellConfig *setup_pusch_servingcellconfig;
  };
  StreamingProtobufs__UplinkConfig__CarrierSwitchingCase carrier_switching_case;
  union {
    StreamingProtobufs__Null *release_carrierswitching;
    StreamingProtobufs__SRSCarrierSwitching *setup_carrierswitching;
  };
};
#define STREAMING_PROTOBUFS__UPLINK_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__uplink_config__descriptor) \
    , NULL, 0,NULL, 0,NULL, NULL, NULL, 0,NULL, STREAMING_PROTOBUFS__UPLINK_CONFIG__PUSCH__SERVING_CELL_CONFIG__NOT_SET, {0}, STREAMING_PROTOBUFS__UPLINK_CONFIG__CARRIER_SWITCHING__NOT_SET, {0} }


typedef enum {
  STREAMING_PROTOBUFS__BWP__UPLINK_DEDICATED__PUCCH__CONFIG__NOT_SET = 0,
  STREAMING_PROTOBUFS__BWP__UPLINK_DEDICATED__PUCCH__CONFIG_RELEASE_PUCCH__CONFIG = 1,
  STREAMING_PROTOBUFS__BWP__UPLINK_DEDICATED__PUCCH__CONFIG_SETUP_PUCCH__CONFIG = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__BWP__UPLINK_DEDICATED__PUCCH__CONFIG)
} StreamingProtobufs__BWPUplinkDedicated__PucchConfigCase;

typedef enum {
  STREAMING_PROTOBUFS__BWP__UPLINK_DEDICATED__PUSCH__CONFIG__NOT_SET = 0,
  STREAMING_PROTOBUFS__BWP__UPLINK_DEDICATED__PUSCH__CONFIG_RELEASE_PUSCH__CONFIG = 3,
  STREAMING_PROTOBUFS__BWP__UPLINK_DEDICATED__PUSCH__CONFIG_SETUP_PUSCH__CONFIG = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__BWP__UPLINK_DEDICATED__PUSCH__CONFIG)
} StreamingProtobufs__BWPUplinkDedicated__PuschConfigCase;

typedef enum {
  STREAMING_PROTOBUFS__BWP__UPLINK_DEDICATED__CONFIGURED_GRANT_CONFIG__NOT_SET = 0,
  STREAMING_PROTOBUFS__BWP__UPLINK_DEDICATED__CONFIGURED_GRANT_CONFIG_RELEASE_CONFIGURED_GRANT_CONFIG = 5,
  STREAMING_PROTOBUFS__BWP__UPLINK_DEDICATED__CONFIGURED_GRANT_CONFIG_SETUP_CONFIGURED_GRANT_CONFIG = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__BWP__UPLINK_DEDICATED__CONFIGURED_GRANT_CONFIG)
} StreamingProtobufs__BWPUplinkDedicated__ConfiguredGrantConfigCase;

typedef enum {
  STREAMING_PROTOBUFS__BWP__UPLINK_DEDICATED__SRS__CONFIG__NOT_SET = 0,
  STREAMING_PROTOBUFS__BWP__UPLINK_DEDICATED__SRS__CONFIG_RELEASE_SRS__CONFIG = 7,
  STREAMING_PROTOBUFS__BWP__UPLINK_DEDICATED__SRS__CONFIG_SETUP_SRS__CONFIG = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__BWP__UPLINK_DEDICATED__SRS__CONFIG)
} StreamingProtobufs__BWPUplinkDedicated__SrsConfigCase;

typedef enum {
  STREAMING_PROTOBUFS__BWP__UPLINK_DEDICATED__BEAM_FAILURE_RECOVERY_CONFIG__NOT_SET = 0,
  STREAMING_PROTOBUFS__BWP__UPLINK_DEDICATED__BEAM_FAILURE_RECOVERY_CONFIG_RELEASE_BEAM_FAILURE_RECOVERY_CONFIG = 9,
  STREAMING_PROTOBUFS__BWP__UPLINK_DEDICATED__BEAM_FAILURE_RECOVERY_CONFIG_SETUP_BEAM_FAILURE_RECOVERY_CONFIG = 10
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__BWP__UPLINK_DEDICATED__BEAM_FAILURE_RECOVERY_CONFIG)
} StreamingProtobufs__BWPUplinkDedicated__BeamFailureRecoveryConfigCase;

struct  _StreamingProtobufs__BWPUplinkDedicated
{
  ProtobufCMessage base;
  StreamingProtobufs__BWPUplinkDedicated__PucchConfigCase pucch__config_case;
  union {
    StreamingProtobufs__Null *release_pucch_config;
    StreamingProtobufs__PUCCHConfig *setup_pucch_config;
  };
  StreamingProtobufs__BWPUplinkDedicated__PuschConfigCase pusch__config_case;
  union {
    StreamingProtobufs__Null *release_pusch_config;
    StreamingProtobufs__PUSCHConfig *setup_pusch_config;
  };
  StreamingProtobufs__BWPUplinkDedicated__ConfiguredGrantConfigCase configured_grant_config_case;
  union {
    StreamingProtobufs__Null *release_configuredgrantconfig;
    StreamingProtobufs__ConfiguredGrantConfig *setup_configuredgrantconfig;
  };
  StreamingProtobufs__BWPUplinkDedicated__SrsConfigCase srs__config_case;
  union {
    StreamingProtobufs__Null *release_srs_config;
    StreamingProtobufs__SRSConfig *setup_srs_config;
  };
  StreamingProtobufs__BWPUplinkDedicated__BeamFailureRecoveryConfigCase beam_failure_recovery_config_case;
  union {
    StreamingProtobufs__Null *release_beamfailurerecoveryconfig;
    StreamingProtobufs__BeamFailureRecoveryConfig *setup_beamfailurerecoveryconfig;
  };
};
#define STREAMING_PROTOBUFS__BWP__UPLINK_DEDICATED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__bwp__uplink_dedicated__descriptor) \
    , STREAMING_PROTOBUFS__BWP__UPLINK_DEDICATED__PUCCH__CONFIG__NOT_SET, {0}, STREAMING_PROTOBUFS__BWP__UPLINK_DEDICATED__PUSCH__CONFIG__NOT_SET, {0}, STREAMING_PROTOBUFS__BWP__UPLINK_DEDICATED__CONFIGURED_GRANT_CONFIG__NOT_SET, {0}, STREAMING_PROTOBUFS__BWP__UPLINK_DEDICATED__SRS__CONFIG__NOT_SET, {0}, STREAMING_PROTOBUFS__BWP__UPLINK_DEDICATED__BEAM_FAILURE_RECOVERY_CONFIG__NOT_SET, {0} }


typedef enum {
  STREAMING_PROTOBUFS__PUCCH__CONFIG__FORMAT1__NOT_SET = 0,
  STREAMING_PROTOBUFS__PUCCH__CONFIG__FORMAT1_RELEASE_FORMAT1 = 5,
  STREAMING_PROTOBUFS__PUCCH__CONFIG__FORMAT1_SETUP_FORMAT1 = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PUCCH__CONFIG__FORMAT1)
} StreamingProtobufs__PUCCHConfig__Format1Case;

typedef enum {
  STREAMING_PROTOBUFS__PUCCH__CONFIG__FORMAT2__NOT_SET = 0,
  STREAMING_PROTOBUFS__PUCCH__CONFIG__FORMAT2_RELEASE_FORMAT2 = 7,
  STREAMING_PROTOBUFS__PUCCH__CONFIG__FORMAT2_SETUP_FORMAT2 = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PUCCH__CONFIG__FORMAT2)
} StreamingProtobufs__PUCCHConfig__Format2Case;

typedef enum {
  STREAMING_PROTOBUFS__PUCCH__CONFIG__FORMAT3__NOT_SET = 0,
  STREAMING_PROTOBUFS__PUCCH__CONFIG__FORMAT3_RELEASE_FORMAT3 = 9,
  STREAMING_PROTOBUFS__PUCCH__CONFIG__FORMAT3_SETUP_FORMAT3 = 10
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PUCCH__CONFIG__FORMAT3)
} StreamingProtobufs__PUCCHConfig__Format3Case;

typedef enum {
  STREAMING_PROTOBUFS__PUCCH__CONFIG__FORMAT4__NOT_SET = 0,
  STREAMING_PROTOBUFS__PUCCH__CONFIG__FORMAT4_RELEASE_FORMAT4 = 11,
  STREAMING_PROTOBUFS__PUCCH__CONFIG__FORMAT4_SETUP_FORMAT4 = 12
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PUCCH__CONFIG__FORMAT4)
} StreamingProtobufs__PUCCHConfig__Format4Case;

struct  _StreamingProtobufs__PUCCHConfig
{
  ProtobufCMessage base;
  size_t n_resourcesettoaddmodlist;
  StreamingProtobufs__PUCCHResourceSet **resourcesettoaddmodlist;
  size_t n_resourcesettoreleaselist;
  uint32_t *resourcesettoreleaselist;
  size_t n_resourcetoaddmodlist;
  StreamingProtobufs__PUCCHResource **resourcetoaddmodlist;
  size_t n_resourcetoreleaselist;
  uint32_t *resourcetoreleaselist;
  size_t n_schedulingrequestresourcetoaddmodlist;
  StreamingProtobufs__SchedulingRequestResourceConfig **schedulingrequestresourcetoaddmodlist;
  size_t n_schedulingrequestresourcetoreleaselist;
  uint32_t *schedulingrequestresourcetoreleaselist;
  size_t n_multi_csi_pucch_resourcelist;
  uint32_t *multi_csi_pucch_resourcelist;
  size_t n_dl_datatoul_ack;
  uint32_t *dl_datatoul_ack;
  size_t n_spatialrelationinfotoaddmodlist;
  StreamingProtobufs__PUCCHSpatialRelationInfo **spatialrelationinfotoaddmodlist;
  size_t n_spatialrelationinfotoreleaselist;
  uint32_t *spatialrelationinfotoreleaselist;
  StreamingProtobufs__PUCCHPowerControl *pucch_powercontrol;
  StreamingProtobufs__PUCCHConfig__Format1Case format1_case;
  union {
    StreamingProtobufs__Null *release_format1;
    StreamingProtobufs__PUCCHFormatConfig *setup_format1;
  };
  StreamingProtobufs__PUCCHConfig__Format2Case format2_case;
  union {
    StreamingProtobufs__Null *release_format2;
    StreamingProtobufs__PUCCHFormatConfig *setup_format2;
  };
  StreamingProtobufs__PUCCHConfig__Format3Case format3_case;
  union {
    StreamingProtobufs__Null *release_format3;
    StreamingProtobufs__PUCCHFormatConfig *setup_format3;
  };
  StreamingProtobufs__PUCCHConfig__Format4Case format4_case;
  union {
    StreamingProtobufs__Null *release_format4;
    StreamingProtobufs__PUCCHFormatConfig *setup_format4;
  };
};
#define STREAMING_PROTOBUFS__PUCCH__CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pucch__config__descriptor) \
    , 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, NULL, STREAMING_PROTOBUFS__PUCCH__CONFIG__FORMAT1__NOT_SET, {0}, STREAMING_PROTOBUFS__PUCCH__CONFIG__FORMAT2__NOT_SET, {0}, STREAMING_PROTOBUFS__PUCCH__CONFIG__FORMAT3__NOT_SET, {0}, STREAMING_PROTOBUFS__PUCCH__CONFIG__FORMAT4__NOT_SET, {0} }


struct  _StreamingProtobufs__PUCCHResourceSet
{
  ProtobufCMessage base;
  uint32_t pucch_resourcesetid;
  size_t n_resourcelist;
  uint32_t *resourcelist;
  Google__Protobuf__UInt32Value *maxpayloadminus1;
};
#define STREAMING_PROTOBUFS__PUCCH__RESOURCE_SET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pucch__resource_set__descriptor) \
    , 0, 0,NULL, NULL }


typedef enum {
  STREAMING_PROTOBUFS__PUCCH__RESOURCE__FORMAT__NOT_SET = 0,
  STREAMING_PROTOBUFS__PUCCH__RESOURCE__FORMAT_FORMAT0 = 5,
  STREAMING_PROTOBUFS__PUCCH__RESOURCE__FORMAT_FORMAT1 = 6,
  STREAMING_PROTOBUFS__PUCCH__RESOURCE__FORMAT_FORMAT2 = 7,
  STREAMING_PROTOBUFS__PUCCH__RESOURCE__FORMAT_FORMAT3 = 8,
  STREAMING_PROTOBUFS__PUCCH__RESOURCE__FORMAT_FORMAT4 = 9
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PUCCH__RESOURCE__FORMAT)
} StreamingProtobufs__PUCCHResource__FormatCase;

struct  _StreamingProtobufs__PUCCHResource
{
  ProtobufCMessage base;
  uint32_t pucch_resourceid;
  uint32_t startingprb;
  StreamingProtobufs__EnabledOpt *intraslotfrequencyhopping;
  Google__Protobuf__UInt32Value *secondhopprb;
  StreamingProtobufs__PUCCHResource__FormatCase format_case;
  union {
    StreamingProtobufs__PUCCHFormat0 *format0;
    StreamingProtobufs__PUCCHFormat1 *format1;
    StreamingProtobufs__PUCCHFormat2 *format2;
    StreamingProtobufs__PUCCHFormat3 *format3;
    StreamingProtobufs__PUCCHFormat4 *format4;
  };
};
#define STREAMING_PROTOBUFS__PUCCH__RESOURCE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pucch__resource__descriptor) \
    , 0, 0, NULL, NULL, STREAMING_PROTOBUFS__PUCCH__RESOURCE__FORMAT__NOT_SET, {0} }


struct  _StreamingProtobufs__PUCCHFormat0
{
  ProtobufCMessage base;
  uint32_t initialcyclicshift;
  uint32_t nrofsymbols;
  uint32_t startingsymbolindex;
};
#define STREAMING_PROTOBUFS__PUCCH_FORMAT0__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pucch_format0__descriptor) \
    , 0, 0, 0 }


struct  _StreamingProtobufs__PUCCHFormat1
{
  ProtobufCMessage base;
  uint32_t initialcyclicshift;
  uint32_t nrofsymbols;
  uint32_t startingsymbolindex;
  uint32_t timedomainocc;
};
#define STREAMING_PROTOBUFS__PUCCH_FORMAT1__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pucch_format1__descriptor) \
    , 0, 0, 0, 0 }


struct  _StreamingProtobufs__PUCCHFormat2
{
  ProtobufCMessage base;
  uint32_t nrofprbs;
  uint32_t nrofsymbols;
  uint32_t startingsymbolindex;
};
#define STREAMING_PROTOBUFS__PUCCH_FORMAT2__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pucch_format2__descriptor) \
    , 0, 0, 0 }


struct  _StreamingProtobufs__PUCCHFormat3
{
  ProtobufCMessage base;
  uint32_t nrofprbs;
  uint32_t nrofsymbols;
  uint32_t startingsymbolindex;
};
#define STREAMING_PROTOBUFS__PUCCH_FORMAT3__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pucch_format3__descriptor) \
    , 0, 0, 0 }


struct  _StreamingProtobufs__PUCCHFormat4
{
  ProtobufCMessage base;
  uint32_t nrofsymbols;
  StreamingProtobufs__OCCLength *occ_length;
  StreamingProtobufs__OCCIndex *occ_index;
  uint32_t startingsymbolindex;
};
#define STREAMING_PROTOBUFS__PUCCH_FORMAT4__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pucch_format4__descriptor) \
    , 0, NULL, NULL, 0 }


struct  _StreamingProtobufs__OCCLength
{
  ProtobufCMessage base;
  StreamingProtobufs__OCCLength__Value value;
};
#define STREAMING_PROTOBUFS__OCC__LENGTH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__occ__length__descriptor) \
    , STREAMING_PROTOBUFS__OCC__LENGTH__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__OCCIndex
{
  ProtobufCMessage base;
  StreamingProtobufs__OCCIndex__Value value;
};
#define STREAMING_PROTOBUFS__OCC__INDEX__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__occ__index__descriptor) \
    , STREAMING_PROTOBUFS__OCC__INDEX__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__PUCCHFormatConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__EnabledOpt *interslotfrequencyhopping;
  Google__Protobuf__BoolValue *additionaldmrs;
  StreamingProtobufs__PUCCHMaxCodeRate *maxcoderate;
  StreamingProtobufs__NrofSlots *nrofslots;
  StreamingProtobufs__EnabledOpt *pi2bpsk;
  Google__Protobuf__BoolValue *simultaneousharq_ack_csi;
};
#define STREAMING_PROTOBUFS__PUCCH__FORMAT_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pucch__format_config__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, NULL }


struct  _StreamingProtobufs__PUCCHMaxCodeRate
{
  ProtobufCMessage base;
  StreamingProtobufs__PUCCHMaxCodeRate__Value value;
};
#define STREAMING_PROTOBUFS__PUCCH__MAX_CODE_RATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pucch__max_code_rate__descriptor) \
    , STREAMING_PROTOBUFS__PUCCH__MAX_CODE_RATE__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__NrofSlots
{
  ProtobufCMessage base;
  StreamingProtobufs__NrofSlots__Value value;
};
#define STREAMING_PROTOBUFS__NROF_SLOTS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__nrof_slots__descriptor) \
    , STREAMING_PROTOBUFS__NROF_SLOTS__VALUE__protobuf_unspecified }


typedef enum {
  STREAMING_PROTOBUFS__SCHEDULING_REQUEST_RESOURCE_CONFIG__PERIODICITY_AND_OFFSET__NOT_SET = 0,
  STREAMING_PROTOBUFS__SCHEDULING_REQUEST_RESOURCE_CONFIG__PERIODICITY_AND_OFFSET_SYM2 = 3,
  STREAMING_PROTOBUFS__SCHEDULING_REQUEST_RESOURCE_CONFIG__PERIODICITY_AND_OFFSET_SYM6OR7 = 4,
  STREAMING_PROTOBUFS__SCHEDULING_REQUEST_RESOURCE_CONFIG__PERIODICITY_AND_OFFSET_SL1 = 5,
  STREAMING_PROTOBUFS__SCHEDULING_REQUEST_RESOURCE_CONFIG__PERIODICITY_AND_OFFSET_SL2 = 6,
  STREAMING_PROTOBUFS__SCHEDULING_REQUEST_RESOURCE_CONFIG__PERIODICITY_AND_OFFSET_SL4 = 7,
  STREAMING_PROTOBUFS__SCHEDULING_REQUEST_RESOURCE_CONFIG__PERIODICITY_AND_OFFSET_SL5 = 8,
  STREAMING_PROTOBUFS__SCHEDULING_REQUEST_RESOURCE_CONFIG__PERIODICITY_AND_OFFSET_SL8 = 9,
  STREAMING_PROTOBUFS__SCHEDULING_REQUEST_RESOURCE_CONFIG__PERIODICITY_AND_OFFSET_SL10 = 10,
  STREAMING_PROTOBUFS__SCHEDULING_REQUEST_RESOURCE_CONFIG__PERIODICITY_AND_OFFSET_SL16 = 11,
  STREAMING_PROTOBUFS__SCHEDULING_REQUEST_RESOURCE_CONFIG__PERIODICITY_AND_OFFSET_SL20 = 12,
  STREAMING_PROTOBUFS__SCHEDULING_REQUEST_RESOURCE_CONFIG__PERIODICITY_AND_OFFSET_SL40 = 13,
  STREAMING_PROTOBUFS__SCHEDULING_REQUEST_RESOURCE_CONFIG__PERIODICITY_AND_OFFSET_SL80 = 14,
  STREAMING_PROTOBUFS__SCHEDULING_REQUEST_RESOURCE_CONFIG__PERIODICITY_AND_OFFSET_SL160 = 15,
  STREAMING_PROTOBUFS__SCHEDULING_REQUEST_RESOURCE_CONFIG__PERIODICITY_AND_OFFSET_SL320 = 16,
  STREAMING_PROTOBUFS__SCHEDULING_REQUEST_RESOURCE_CONFIG__PERIODICITY_AND_OFFSET_SL640 = 17
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SCHEDULING_REQUEST_RESOURCE_CONFIG__PERIODICITY_AND_OFFSET)
} StreamingProtobufs__SchedulingRequestResourceConfig__PeriodicityAndOffsetCase;

struct  _StreamingProtobufs__SchedulingRequestResourceConfig
{
  ProtobufCMessage base;
  uint32_t schedulingrequestresourceid;
  uint32_t schedulingrequestid;
  Google__Protobuf__UInt32Value *resource;
  StreamingProtobufs__SchedulingRequestResourceConfig__PeriodicityAndOffsetCase periodicity_and_offset_case;
  union {
    StreamingProtobufs__Null *sym2;
    StreamingProtobufs__Null *sym6or7;
    StreamingProtobufs__Null *sl1;
    uint32_t sl2;
    uint32_t sl4;
    uint32_t sl5;
    uint32_t sl8;
    uint32_t sl10;
    uint32_t sl16;
    uint32_t sl20;
    uint32_t sl40;
    uint32_t sl80;
    uint32_t sl160;
    uint32_t sl320;
    uint32_t sl640;
  };
};
#define STREAMING_PROTOBUFS__SCHEDULING_REQUEST_RESOURCE_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__scheduling_request_resource_config__descriptor) \
    , 0, 0, NULL, STREAMING_PROTOBUFS__SCHEDULING_REQUEST_RESOURCE_CONFIG__PERIODICITY_AND_OFFSET__NOT_SET, {0} }


typedef enum {
  STREAMING_PROTOBUFS__PUCCH__SPATIAL_RELATION_INFO__REFERENCE_SIGNAL__NOT_SET = 0,
  STREAMING_PROTOBUFS__PUCCH__SPATIAL_RELATION_INFO__REFERENCE_SIGNAL_SSB__INDEX = 3,
  STREAMING_PROTOBUFS__PUCCH__SPATIAL_RELATION_INFO__REFERENCE_SIGNAL_CSI__RS__INDEX = 4,
  STREAMING_PROTOBUFS__PUCCH__SPATIAL_RELATION_INFO__REFERENCE_SIGNAL_SRS = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PUCCH__SPATIAL_RELATION_INFO__REFERENCE_SIGNAL)
} StreamingProtobufs__PUCCHSpatialRelationInfo__ReferenceSignalCase;

struct  _StreamingProtobufs__PUCCHSpatialRelationInfo
{
  ProtobufCMessage base;
  uint32_t pucch_spatialrelationinfoid;
  Google__Protobuf__UInt32Value *servingcellid;
  uint32_t pucch_pathlossreferencers_id;
  uint32_t p0_pucch_id;
  StreamingProtobufs__ClosedLoopIndex *closedloopindex;
  StreamingProtobufs__PUCCHSpatialRelationInfo__ReferenceSignalCase reference_signal_case;
  union {
    uint32_t ssb_index;
    uint32_t csi_rs_index;
    StreamingProtobufs__Srs *srs;
  };
};
#define STREAMING_PROTOBUFS__PUCCH__SPATIAL_RELATION_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pucch__spatial_relation_info__descriptor) \
    , 0, NULL, 0, 0, NULL, STREAMING_PROTOBUFS__PUCCH__SPATIAL_RELATION_INFO__REFERENCE_SIGNAL__NOT_SET, {0} }


struct  _StreamingProtobufs__Srs
{
  ProtobufCMessage base;
  uint32_t resourceid;
  uint32_t uplinkbwp;
};
#define STREAMING_PROTOBUFS__SRS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__srs__descriptor) \
    , 0, 0 }


struct  _StreamingProtobufs__ClosedLoopIndex
{
  ProtobufCMessage base;
  StreamingProtobufs__ClosedLoopIndex__Value value;
};
#define STREAMING_PROTOBUFS__CLOSED_LOOP_INDEX__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__closed_loop_index__descriptor) \
    , STREAMING_PROTOBUFS__CLOSED_LOOP_INDEX__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__PUCCHPowerControl
{
  ProtobufCMessage base;
  Google__Protobuf__Int32Value *deltaf_pucch_f0;
  Google__Protobuf__Int32Value *deltaf_pucch_f1;
  Google__Protobuf__Int32Value *deltaf_pucch_f2;
  Google__Protobuf__Int32Value *deltaf_pucch_f3;
  Google__Protobuf__Int32Value *deltaf_pucch_f4;
  size_t n_p0_set;
  StreamingProtobufs__P0PUCCH **p0_set;
  size_t n_pathlossreferencerss;
  StreamingProtobufs__PUCCHPathlossReferenceRS **pathlossreferencerss;
  StreamingProtobufs__TwoPUCCHPCAdjustmentStates *twopucch_pc_adjustmentstates;
};
#define STREAMING_PROTOBUFS__PUCCH__POWER_CONTROL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pucch__power_control__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, 0,NULL, 0,NULL, NULL }


struct  _StreamingProtobufs__P0PUCCH
{
  ProtobufCMessage base;
  uint32_t p0_pucch_id;
  int32_t p0_pucch_value;
};
#define STREAMING_PROTOBUFS__P0__PUCCH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__p0__pucch__descriptor) \
    , 0, 0 }


typedef enum {
  STREAMING_PROTOBUFS__PUCCH__PATHLOSS_REFERENCE_RS__REFERENCE_SIGNAL__NOT_SET = 0,
  STREAMING_PROTOBUFS__PUCCH__PATHLOSS_REFERENCE_RS__REFERENCE_SIGNAL_SSB__INDEX = 2,
  STREAMING_PROTOBUFS__PUCCH__PATHLOSS_REFERENCE_RS__REFERENCE_SIGNAL_CSI__RS__INDEX = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PUCCH__PATHLOSS_REFERENCE_RS__REFERENCE_SIGNAL)
} StreamingProtobufs__PUCCHPathlossReferenceRS__ReferenceSignalCase;

struct  _StreamingProtobufs__PUCCHPathlossReferenceRS
{
  ProtobufCMessage base;
  uint32_t pucch_pathlossreferencers_id;
  StreamingProtobufs__PUCCHPathlossReferenceRS__ReferenceSignalCase reference_signal_case;
  union {
    uint32_t ssb_index;
    uint32_t csi_rs_index;
  };
};
#define STREAMING_PROTOBUFS__PUCCH__PATHLOSS_REFERENCE_RS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pucch__pathloss_reference_rs__descriptor) \
    , 0, STREAMING_PROTOBUFS__PUCCH__PATHLOSS_REFERENCE_RS__REFERENCE_SIGNAL__NOT_SET, {0} }


struct  _StreamingProtobufs__TwoPUCCHPCAdjustmentStates
{
  ProtobufCMessage base;
  StreamingProtobufs__TwoPUCCHPCAdjustmentStates__Value value;
};
#define STREAMING_PROTOBUFS__TWO_PUCCH__PC__ADJUSTMENT_STATES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__two_pucch__pc__adjustment_states__descriptor) \
    , STREAMING_PROTOBUFS__TWO_PUCCH__PC__ADJUSTMENT_STATES__VALUE__protobuf_unspecified }


typedef enum {
  STREAMING_PROTOBUFS__PUSCH__SERVING_CELL_CONFIG__CODE_BLOCK_GROUP_TRANSMISSION__NOT_SET = 0,
  STREAMING_PROTOBUFS__PUSCH__SERVING_CELL_CONFIG__CODE_BLOCK_GROUP_TRANSMISSION_RELEASE_CODE_BLOCK_GROUP_TRANSMISSION = 1,
  STREAMING_PROTOBUFS__PUSCH__SERVING_CELL_CONFIG__CODE_BLOCK_GROUP_TRANSMISSION_SETUP_CODE_BLOCK_GROUP_TRANSMISSION = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PUSCH__SERVING_CELL_CONFIG__CODE_BLOCK_GROUP_TRANSMISSION)
} StreamingProtobufs__PUSCHServingCellConfig__CodeBlockGroupTransmissionCase;

struct  _StreamingProtobufs__PUSCHServingCellConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__RateMatching *ratematching;
  StreamingProtobufs__XOverhead *xoverhead;
  Google__Protobuf__UInt32Value *maxmimo_layers;
  Google__Protobuf__BoolValue *processingtype2enabled;
  StreamingProtobufs__PUSCHServingCellConfig__CodeBlockGroupTransmissionCase code_block_group_transmission_case;
  union {
    StreamingProtobufs__Null *release_codeblockgrouptransmission;
    StreamingProtobufs__PUSCHCodeBlockGroupTransmission *setup_codeblockgrouptransmission;
  };
};
#define STREAMING_PROTOBUFS__PUSCH__SERVING_CELL_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pusch__serving_cell_config__descriptor) \
    , NULL, NULL, NULL, NULL, STREAMING_PROTOBUFS__PUSCH__SERVING_CELL_CONFIG__CODE_BLOCK_GROUP_TRANSMISSION__NOT_SET, {0} }


struct  _StreamingProtobufs__PUSCHCodeBlockGroupTransmission
{
  ProtobufCMessage base;
  StreamingProtobufs__MaxCodeBlockGroupsPerTransportBlock *maxcodeblockgroupspertransportblock;
};
#define STREAMING_PROTOBUFS__PUSCH__CODE_BLOCK_GROUP_TRANSMISSION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pusch__code_block_group_transmission__descriptor) \
    , NULL }


struct  _StreamingProtobufs__RateMatching
{
  ProtobufCMessage base;
  StreamingProtobufs__RateMatching__Value value;
};
#define STREAMING_PROTOBUFS__RATE_MATCHING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__rate_matching__descriptor) \
    , STREAMING_PROTOBUFS__RATE_MATCHING__VALUE__protobuf_unspecified }


typedef enum {
  STREAMING_PROTOBUFS__SRS__CARRIER_SWITCHING__SRS__TPC__PDCCH__GROUP__NOT_SET = 0,
  STREAMING_PROTOBUFS__SRS__CARRIER_SWITCHING__SRS__TPC__PDCCH__GROUP_TYPE_A = 3,
  STREAMING_PROTOBUFS__SRS__CARRIER_SWITCHING__SRS__TPC__PDCCH__GROUP_TYPE_B = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SRS__CARRIER_SWITCHING__SRS__TPC__PDCCH__GROUP)
} StreamingProtobufs__SRSCarrierSwitching__SrsTPCPDCCHGroupCase;

struct  _StreamingProtobufs__SRSCarrierSwitching
{
  ProtobufCMessage base;
  Google__Protobuf__UInt32Value *srs_switchfromservcellindex;
  StreamingProtobufs__SRSSwitchFromCarrier *srs_switchfromcarrier;
  size_t n_monitoringcells;
  uint32_t *monitoringcells;
  StreamingProtobufs__SRSCarrierSwitching__SrsTPCPDCCHGroupCase srs__tpc__pdcch__group_case;
  union {
    StreamingProtobufs__SRSTPCPDCCHConfigList *typea;
    StreamingProtobufs__SRSTPCPDCCHConfig *typeb;
  };
};
#define STREAMING_PROTOBUFS__SRS__CARRIER_SWITCHING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__srs__carrier_switching__descriptor) \
    , NULL, NULL, 0,NULL, STREAMING_PROTOBUFS__SRS__CARRIER_SWITCHING__SRS__TPC__PDCCH__GROUP__NOT_SET, {0} }


struct  _StreamingProtobufs__SRSSwitchFromCarrier
{
  ProtobufCMessage base;
  StreamingProtobufs__SRSSwitchFromCarrier__Value value;
};
#define STREAMING_PROTOBUFS__SRS__SWITCH_FROM_CARRIER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__srs__switch_from_carrier__descriptor) \
    , STREAMING_PROTOBUFS__SRS__SWITCH_FROM_CARRIER__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__SRSTPCPDCCHConfigList
{
  ProtobufCMessage base;
  size_t n_items;
  StreamingProtobufs__SRSTPCPDCCHConfig **items;
};
#define STREAMING_PROTOBUFS__SRS__TPC__PDCCH__CONFIG_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__srs__tpc__pdcch__config_list__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__SRSTPCPDCCHConfig
{
  ProtobufCMessage base;
  size_t n_srs_cc_setindexlist;
  StreamingProtobufs__SRSCCSetIndex **srs_cc_setindexlist;
};
#define STREAMING_PROTOBUFS__SRS__TPC__PDCCH__CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__srs__tpc__pdcch__config__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__SRSCCSetIndex
{
  ProtobufCMessage base;
  Google__Protobuf__UInt32Value *cc_setindex;
  Google__Protobuf__UInt32Value *cc_indexinonecc_set;
};
#define STREAMING_PROTOBUFS__SRS__CC__SET_INDEX__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__srs__cc__set_index__descriptor) \
    , NULL, NULL }


typedef enum {
  STREAMING_PROTOBUFS__PUSCH__CONFIG__DMRS__UPLINK_FOR_PUSCH__MAPPING_TYPE_A__NOT_SET = 0,
  STREAMING_PROTOBUFS__PUSCH__CONFIG__DMRS__UPLINK_FOR_PUSCH__MAPPING_TYPE_A_RELEASE_DMRS__UPLINK_FOR_PUSCH__MAPPING_TYPE_A = 3,
  STREAMING_PROTOBUFS__PUSCH__CONFIG__DMRS__UPLINK_FOR_PUSCH__MAPPING_TYPE_A_SETUP_DMRS__UPLINK_FOR_PUSCH__MAPPING_TYPE_A = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PUSCH__CONFIG__DMRS__UPLINK_FOR_PUSCH__MAPPING_TYPE_A)
} StreamingProtobufs__PUSCHConfig__DmrsUplinkForPUSCHMappingTypeACase;

typedef enum {
  STREAMING_PROTOBUFS__PUSCH__CONFIG__DMRS__UPLINK_FOR_PUSCH__MAPPING_TYPE_B__NOT_SET = 0,
  STREAMING_PROTOBUFS__PUSCH__CONFIG__DMRS__UPLINK_FOR_PUSCH__MAPPING_TYPE_B_RELEASE_DMRS__UPLINK_FOR_PUSCH__MAPPING_TYPE_B = 5,
  STREAMING_PROTOBUFS__PUSCH__CONFIG__DMRS__UPLINK_FOR_PUSCH__MAPPING_TYPE_B_SETUP_DMRS__UPLINK_FOR_PUSCH__MAPPING_TYPE_B = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PUSCH__CONFIG__DMRS__UPLINK_FOR_PUSCH__MAPPING_TYPE_B)
} StreamingProtobufs__PUSCHConfig__DmrsUplinkForPUSCHMappingTypeBCase;

typedef enum {
  STREAMING_PROTOBUFS__PUSCH__CONFIG__PUSCH__TIME_DOMAIN_ALLOCATION_LIST__NOT_SET = 0,
  STREAMING_PROTOBUFS__PUSCH__CONFIG__PUSCH__TIME_DOMAIN_ALLOCATION_LIST_RELEASE_PUSCH__TIME_DOMAIN_ALLOCATION_LIST = 11,
  STREAMING_PROTOBUFS__PUSCH__CONFIG__PUSCH__TIME_DOMAIN_ALLOCATION_LIST_SETUP_PUSCH__TIME_DOMAIN_ALLOCATION_LIST = 12
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PUSCH__CONFIG__PUSCH__TIME_DOMAIN_ALLOCATION_LIST)
} StreamingProtobufs__PUSCHConfig__PuschTimeDomainAllocationListCase;

typedef enum {
  STREAMING_PROTOBUFS__PUSCH__CONFIG__UCI__ON_PUSCH__NOT_SET = 0,
  STREAMING_PROTOBUFS__PUSCH__CONFIG__UCI__ON_PUSCH_RELEASE_UCI__ON_PUSCH = 20,
  STREAMING_PROTOBUFS__PUSCH__CONFIG__UCI__ON_PUSCH_SETUP_UCI__ON_PUSCH = 21
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PUSCH__CONFIG__UCI__ON_PUSCH)
} StreamingProtobufs__PUSCHConfig__UciOnPUSCHCase;

struct  _StreamingProtobufs__PUSCHConfig
{
  ProtobufCMessage base;
  Google__Protobuf__UInt32Value *datascramblingidentitypusch;
  StreamingProtobufs__TxConfig *tx_config;
  StreamingProtobufs__PUSCHPowerControl *pusch_powercontrol;
  StreamingProtobufs__FrequencyHopping *frequencyhopping;
  size_t n_frequencyhoppingoffsetlists;
  uint32_t *frequencyhoppingoffsetlists;
  StreamingProtobufs__ResourceAllocation *resource_allocation;
  StreamingProtobufs__PUSCHAggregationFactor *pusch_aggregationfactor;
  StreamingProtobufs__MCSTable *mcs_table;
  StreamingProtobufs__MCSTable *mcs_tabletransformprecoder;
  StreamingProtobufs__EnabledDisabledOpt *transformprecoder;
  StreamingProtobufs__CodebookSubset *codebooksubset;
  Google__Protobuf__UInt32Value *maxrank;
  StreamingProtobufs__RBGSize2 *rbg_size;
  StreamingProtobufs__EnabledOpt *tp_pi2bpsk;
  StreamingProtobufs__PUSCHConfig__DmrsUplinkForPUSCHMappingTypeACase dmrs__uplink_for_pusch__mapping_type_a_case;
  union {
    StreamingProtobufs__Null *release_dmrs_uplinkforpusch_mappingtypea;
    StreamingProtobufs__DMRSUplinkConfig *setup_dmrs_uplinkforpusch_mappingtypea;
  };
  StreamingProtobufs__PUSCHConfig__DmrsUplinkForPUSCHMappingTypeBCase dmrs__uplink_for_pusch__mapping_type_b_case;
  union {
    StreamingProtobufs__Null *release_dmrs_uplinkforpusch_mappingtypeb;
    StreamingProtobufs__DMRSUplinkConfig *setup_dmrs_uplinkforpusch_mappingtypeb;
  };
  StreamingProtobufs__PUSCHConfig__PuschTimeDomainAllocationListCase pusch__time_domain_allocation_list_case;
  union {
    StreamingProtobufs__Null *release_pusch_timedomainallocationlist;
    StreamingProtobufs__PUSCHTimeDomainResourceAllocationList *setup_pusch_timedomainallocationlist;
  };
  StreamingProtobufs__PUSCHConfig__UciOnPUSCHCase uci__on_pusch_case;
  union {
    StreamingProtobufs__Null *release_uci_onpusch;
    StreamingProtobufs__UCIOnPUSCH *setup_uci_onpusch;
  };
};
#define STREAMING_PROTOBUFS__PUSCH__CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pusch__config__descriptor) \
    , NULL, NULL, NULL, NULL, 0,NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, STREAMING_PROTOBUFS__PUSCH__CONFIG__DMRS__UPLINK_FOR_PUSCH__MAPPING_TYPE_A__NOT_SET, {0}, STREAMING_PROTOBUFS__PUSCH__CONFIG__DMRS__UPLINK_FOR_PUSCH__MAPPING_TYPE_B__NOT_SET, {0}, STREAMING_PROTOBUFS__PUSCH__CONFIG__PUSCH__TIME_DOMAIN_ALLOCATION_LIST__NOT_SET, {0}, STREAMING_PROTOBUFS__PUSCH__CONFIG__UCI__ON_PUSCH__NOT_SET, {0} }


struct  _StreamingProtobufs__TxConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__TxConfig__Value value;
};
#define STREAMING_PROTOBUFS__TX__CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__tx__config__descriptor) \
    , STREAMING_PROTOBUFS__TX__CONFIG__VALUE__protobuf_unspecified }


typedef enum {
  STREAMING_PROTOBUFS__DMRS__UPLINK_CONFIG__PHASE_TRACKING_RS__NOT_SET = 0,
  STREAMING_PROTOBUFS__DMRS__UPLINK_CONFIG__PHASE_TRACKING_RS_RELEASE_PHASE_TRACKING_RS = 3,
  STREAMING_PROTOBUFS__DMRS__UPLINK_CONFIG__PHASE_TRACKING_RS_SETUP_PHASE_TRACKING_RS = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__DMRS__UPLINK_CONFIG__PHASE_TRACKING_RS)
} StreamingProtobufs__DMRSUplinkConfig__PhaseTrackingRSCase;

struct  _StreamingProtobufs__DMRSUplinkConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__DMRSType *dmrs_type;
  StreamingProtobufs__DMRSAdditionalPosition *dmrs_additionalposition;
  StreamingProtobufs__MaxLength *maxlength;
  StreamingProtobufs__TransformPrecodingDisabled *transformprecodingdisabled;
  StreamingProtobufs__TransformPrecodingEnabled *transformprecodingenabled;
  StreamingProtobufs__DMRSUplinkConfig__PhaseTrackingRSCase phase_tracking_rs_case;
  union {
    StreamingProtobufs__Null *release_phasetrackingrs;
    StreamingProtobufs__PTRSUplinkConfig *setup_phasetrackingrs;
  };
};
#define STREAMING_PROTOBUFS__DMRS__UPLINK_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__dmrs__uplink_config__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, STREAMING_PROTOBUFS__DMRS__UPLINK_CONFIG__PHASE_TRACKING_RS__NOT_SET, {0} }


struct  _StreamingProtobufs__PTRSUplinkConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__TransformPrecoderDisabled *transformprecoderdisabled;
  StreamingProtobufs__TransformPrecoderEnabled *transformprecoderenabled;
};
#define STREAMING_PROTOBUFS__PTRS__UPLINK_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__ptrs__uplink_config__descriptor) \
    , NULL, NULL }


struct  _StreamingProtobufs__TransformPrecoderDisabled
{
  ProtobufCMessage base;
  size_t n_frequencydensity;
  uint32_t *frequencydensity;
  size_t n_timedensity;
  uint32_t *timedensity;
  StreamingProtobufs__MaxNrofPorts *maxnrofports;
  StreamingProtobufs__ResourceElementOffset *resourceelementoffset;
  StreamingProtobufs__PTRSPower *ptrs_power;
};
#define STREAMING_PROTOBUFS__TRANSFORM_PRECODER_DISABLED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__transform_precoder_disabled__descriptor) \
    , 0,NULL, 0,NULL, NULL, NULL, NULL }


struct  _StreamingProtobufs__MaxNrofPorts
{
  ProtobufCMessage base;
  StreamingProtobufs__MaxNrofPorts__Value value;
};
#define STREAMING_PROTOBUFS__MAX_NROF_PORTS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__max_nrof_ports__descriptor) \
    , STREAMING_PROTOBUFS__MAX_NROF_PORTS__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__PTRSPower
{
  ProtobufCMessage base;
  StreamingProtobufs__PTRSPower__Value value;
};
#define STREAMING_PROTOBUFS__PTRS__POWER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__ptrs__power__descriptor) \
    , STREAMING_PROTOBUFS__PTRS__POWER__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__TransformPrecoderEnabled
{
  ProtobufCMessage base;
  size_t n_sampledensity;
  uint32_t *sampledensity;
  StreamingProtobufs__TimeDensityTransformPrecoding *timedensitytransformprecoding;
};
#define STREAMING_PROTOBUFS__TRANSFORM_PRECODER_ENABLED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__transform_precoder_enabled__descriptor) \
    , 0,NULL, NULL }


struct  _StreamingProtobufs__TimeDensityTransformPrecoding
{
  ProtobufCMessage base;
  StreamingProtobufs__TimeDensityTransformPrecoding__Value value;
};
#define STREAMING_PROTOBUFS__TIME_DENSITY_TRANSFORM_PRECODING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__time_density_transform_precoding__descriptor) \
    , STREAMING_PROTOBUFS__TIME_DENSITY_TRANSFORM_PRECODING__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__TransformPrecodingDisabled
{
  ProtobufCMessage base;
  Google__Protobuf__UInt32Value *scramblingid0;
  Google__Protobuf__UInt32Value *scramblingid1;
};
#define STREAMING_PROTOBUFS__TRANSFORM_PRECODING_DISABLED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__transform_precoding_disabled__descriptor) \
    , NULL, NULL }


struct  _StreamingProtobufs__TransformPrecodingEnabled
{
  ProtobufCMessage base;
  Google__Protobuf__UInt32Value *npusch_identity;
  StreamingProtobufs__DisabledOpt *sequencegrouphopping;
  StreamingProtobufs__EnabledOpt *sequencehopping;
};
#define STREAMING_PROTOBUFS__TRANSFORM_PRECODING_ENABLED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__transform_precoding_enabled__descriptor) \
    , NULL, NULL, NULL }


struct  _StreamingProtobufs__PUSCHPowerControl
{
  ProtobufCMessage base;
  StreamingProtobufs__EnabledOpt *tpc_accumulation;
  StreamingProtobufs__Alpha *msg3_alpha;
  Google__Protobuf__Int32Value *p0_nominalwithoutgrant;
  size_t n_p0_alphasets;
  StreamingProtobufs__P0PUSCHAlphaSet **p0_alphasets;
  size_t n_pathlossreferencerstoaddmodlist;
  StreamingProtobufs__PUSCHPathlossReferenceRS **pathlossreferencerstoaddmodlist;
  size_t n_pathlossreferencerstoreleaselist;
  uint32_t *pathlossreferencerstoreleaselist;
  StreamingProtobufs__TwoPUSCHPCAdjustmentStates *twopusch_pc_adjustmentstates;
  StreamingProtobufs__EnabledOpt *deltamcs;
  size_t n_sri_pusch_mappingtoaddmodlist;
  StreamingProtobufs__SRIPUSCHPowerControl **sri_pusch_mappingtoaddmodlist;
  size_t n_sri_pusch_mappingtoreleaselist;
  uint32_t *sri_pusch_mappingtoreleaselist;
};
#define STREAMING_PROTOBUFS__PUSCH__POWER_CONTROL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pusch__power_control__descriptor) \
    , NULL, NULL, NULL, 0,NULL, 0,NULL, 0,NULL, NULL, NULL, 0,NULL, 0,NULL }


struct  _StreamingProtobufs__Alpha
{
  ProtobufCMessage base;
  StreamingProtobufs__Alpha__Value value;
};
#define STREAMING_PROTOBUFS__ALPHA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__alpha__descriptor) \
    , STREAMING_PROTOBUFS__ALPHA__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__P0PUSCHAlphaSet
{
  ProtobufCMessage base;
  uint32_t p0_pusch_alphasetid;
  Google__Protobuf__Int32Value *p0;
  StreamingProtobufs__Alpha *alpha;
};
#define STREAMING_PROTOBUFS__P0__PUSCH__ALPHA_SET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__p0__pusch__alpha_set__descriptor) \
    , 0, NULL, NULL }


typedef enum {
  STREAMING_PROTOBUFS__PUSCH__PATHLOSS_REFERENCE_RS__REFERENCE_SIGNAL__NOT_SET = 0,
  STREAMING_PROTOBUFS__PUSCH__PATHLOSS_REFERENCE_RS__REFERENCE_SIGNAL_SSB__INDEX = 2,
  STREAMING_PROTOBUFS__PUSCH__PATHLOSS_REFERENCE_RS__REFERENCE_SIGNAL_CSI__RS__INDEX = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PUSCH__PATHLOSS_REFERENCE_RS__REFERENCE_SIGNAL)
} StreamingProtobufs__PUSCHPathlossReferenceRS__ReferenceSignalCase;

struct  _StreamingProtobufs__PUSCHPathlossReferenceRS
{
  ProtobufCMessage base;
  uint32_t pusch_pathlossreferencers_id;
  StreamingProtobufs__PUSCHPathlossReferenceRS__ReferenceSignalCase reference_signal_case;
  union {
    uint32_t ssb_index;
    uint32_t csi_rs_index;
  };
};
#define STREAMING_PROTOBUFS__PUSCH__PATHLOSS_REFERENCE_RS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pusch__pathloss_reference_rs__descriptor) \
    , 0, STREAMING_PROTOBUFS__PUSCH__PATHLOSS_REFERENCE_RS__REFERENCE_SIGNAL__NOT_SET, {0} }


struct  _StreamingProtobufs__TwoPUSCHPCAdjustmentStates
{
  ProtobufCMessage base;
  StreamingProtobufs__TwoPUSCHPCAdjustmentStates__Value value;
};
#define STREAMING_PROTOBUFS__TWO_PUSCH__PC__ADJUSTMENT_STATES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__two_pusch__pc__adjustment_states__descriptor) \
    , STREAMING_PROTOBUFS__TWO_PUSCH__PC__ADJUSTMENT_STATES__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__SRIPUSCHPowerControl
{
  ProtobufCMessage base;
  uint32_t sri_pusch_powercontrolid;
  uint32_t sri_pusch_pathlossreferencers_id;
  uint32_t sri_p0_pusch_alphasetid;
  StreamingProtobufs__ClosedLoopIndex *sri_pusch_closedloopindex;
};
#define STREAMING_PROTOBUFS__SRI__PUSCH__POWER_CONTROL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__sri__pusch__power_control__descriptor) \
    , 0, 0, 0, NULL }


struct  _StreamingProtobufs__FrequencyHopping
{
  ProtobufCMessage base;
  StreamingProtobufs__FrequencyHopping__Value value;
};
#define STREAMING_PROTOBUFS__FREQUENCY_HOPPING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__frequency_hopping__descriptor) \
    , STREAMING_PROTOBUFS__FREQUENCY_HOPPING__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__PUSCHAggregationFactor
{
  ProtobufCMessage base;
  StreamingProtobufs__PUSCHAggregationFactor__Value value;
};
#define STREAMING_PROTOBUFS__PUSCH__AGGREGATION_FACTOR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pusch__aggregation_factor__descriptor) \
    , STREAMING_PROTOBUFS__PUSCH__AGGREGATION_FACTOR__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__CodebookSubset
{
  ProtobufCMessage base;
  StreamingProtobufs__CodebookSubset__Value value;
};
#define STREAMING_PROTOBUFS__CODEBOOK_SUBSET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__codebook_subset__descriptor) \
    , STREAMING_PROTOBUFS__CODEBOOK_SUBSET__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__RBGSize2
{
  ProtobufCMessage base;
  StreamingProtobufs__RBGSize2__Value value;
};
#define STREAMING_PROTOBUFS__RBG__SIZE2__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__rbg__size2__descriptor) \
    , STREAMING_PROTOBUFS__RBG__SIZE2__VALUE__protobuf_unspecified }


typedef enum {
  STREAMING_PROTOBUFS__UCI__ON_PUSCH__BETA_OFFSETS__NOT_SET = 0,
  STREAMING_PROTOBUFS__UCI__ON_PUSCH__BETA_OFFSETS_DYNAMIC = 1,
  STREAMING_PROTOBUFS__UCI__ON_PUSCH__BETA_OFFSETS_SEMI_STATIC = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__UCI__ON_PUSCH__BETA_OFFSETS)
} StreamingProtobufs__UCIOnPUSCH__BetaOffsetsCase;

struct  _StreamingProtobufs__UCIOnPUSCH
{
  ProtobufCMessage base;
  StreamingProtobufs__Scaling *scaling;
  StreamingProtobufs__UCIOnPUSCH__BetaOffsetsCase beta_offsets_case;
  union {
    StreamingProtobufs__BetaOffsetsList *dynamic;
    StreamingProtobufs__BetaOffsets *semistatic;
  };
};
#define STREAMING_PROTOBUFS__UCI__ON_PUSCH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__uci__on_pusch__descriptor) \
    , NULL, STREAMING_PROTOBUFS__UCI__ON_PUSCH__BETA_OFFSETS__NOT_SET, {0} }


struct  _StreamingProtobufs__BetaOffsetsList
{
  ProtobufCMessage base;
  size_t n_betaoffsets;
  StreamingProtobufs__BetaOffsets **betaoffsets;
};
#define STREAMING_PROTOBUFS__BETA_OFFSETS_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__beta_offsets_list__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__Scaling
{
  ProtobufCMessage base;
  StreamingProtobufs__Scaling__Value value;
};
#define STREAMING_PROTOBUFS__SCALING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__scaling__descriptor) \
    , STREAMING_PROTOBUFS__SCALING__VALUE__protobuf_unspecified }


typedef enum {
  STREAMING_PROTOBUFS__CONFIGURED_GRANT_CONFIG__UCI__ON_PUSCH__NOT_SET = 0,
  STREAMING_PROTOBUFS__CONFIGURED_GRANT_CONFIG__UCI__ON_PUSCH_RELEASE_UCI__ON_PUSCH = 5,
  STREAMING_PROTOBUFS__CONFIGURED_GRANT_CONFIG__UCI__ON_PUSCH_SETUP_UCI__ON_PUSCH = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CONFIGURED_GRANT_CONFIG__UCI__ON_PUSCH)
} StreamingProtobufs__ConfiguredGrantConfig__UciOnPUSCHCase;

struct  _StreamingProtobufs__ConfiguredGrantConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__FrequencyHopping *frequencyhopping;
  StreamingProtobufs__DMRSUplinkConfig *cg_dmrs_configuration;
  StreamingProtobufs__MCSTable *mcs_table;
  StreamingProtobufs__MCSTable *mcs_tabletransformprecoder;
  StreamingProtobufs__ResourceAllocation *resourceallocation;
  StreamingProtobufs__RBGSize2 *rbg_size;
  StreamingProtobufs__PowerControlLoopToUse *powercontrollooptouse;
  uint32_t p0_pusch_alpha;
  StreamingProtobufs__EnabledDisabledOpt *transformprecoder;
  uint32_t nrofharq_processes;
  StreamingProtobufs__RepK *repk;
  StreamingProtobufs__RepKRV *repk_rv;
  StreamingProtobufs__GrantPeriodicity *periodicity;
  Google__Protobuf__UInt32Value *configuredgranttimer;
  StreamingProtobufs__RRCConfiguredUplinkGrant *rrc_configureduplinkgrant;
  StreamingProtobufs__ConfiguredGrantConfig__UciOnPUSCHCase uci__on_pusch_case;
  union {
    StreamingProtobufs__Null *release_uci_onpusch;
    StreamingProtobufs__CGUCIOnPUSCH *setup_uci_onpusch;
  };
};
#define STREAMING_PROTOBUFS__CONFIGURED_GRANT_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__configured_grant_config__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, NULL, 0, NULL, NULL, NULL, NULL, NULL, STREAMING_PROTOBUFS__CONFIGURED_GRANT_CONFIG__UCI__ON_PUSCH__NOT_SET, {0} }


typedef enum {
  STREAMING_PROTOBUFS__CG__UCI__ON_PUSCH__BETA_OFFSETS__NOT_SET = 0,
  STREAMING_PROTOBUFS__CG__UCI__ON_PUSCH__BETA_OFFSETS_DYNAMIC = 1,
  STREAMING_PROTOBUFS__CG__UCI__ON_PUSCH__BETA_OFFSETS_SEMI_STATIC = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CG__UCI__ON_PUSCH__BETA_OFFSETS)
} StreamingProtobufs__CGUCIOnPUSCH__BetaOffsetsCase;

struct  _StreamingProtobufs__CGUCIOnPUSCH
{
  ProtobufCMessage base;
  StreamingProtobufs__CGUCIOnPUSCH__BetaOffsetsCase beta_offsets_case;
  union {
    StreamingProtobufs__BetaOffsetsList *dynamic;
    StreamingProtobufs__BetaOffsets *semistatic;
  };
};
#define STREAMING_PROTOBUFS__CG__UCI__ON_PUSCH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__cg__uci__on_pusch__descriptor) \
    , STREAMING_PROTOBUFS__CG__UCI__ON_PUSCH__BETA_OFFSETS__NOT_SET, {0} }


struct  _StreamingProtobufs__BetaOffsets
{
  ProtobufCMessage base;
  Google__Protobuf__UInt32Value *betaoffsetack_index1;
  Google__Protobuf__UInt32Value *betaoffsetack_index2;
  Google__Protobuf__UInt32Value *betaoffsetack_index3;
  Google__Protobuf__UInt32Value *betaoffsetcsi_part1_index1;
  Google__Protobuf__UInt32Value *betaoffsetcsi_part1_index2;
  Google__Protobuf__UInt32Value *betaoffsetcsi_part2_index1;
  Google__Protobuf__UInt32Value *betaoffsetcsi_part2_index2;
};
#define STREAMING_PROTOBUFS__BETA_OFFSETS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__beta_offsets__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, NULL, NULL }


struct  _StreamingProtobufs__PowerControlLoopToUse
{
  ProtobufCMessage base;
  StreamingProtobufs__PowerControlLoopToUse__Value value;
};
#define STREAMING_PROTOBUFS__POWER_CONTROL_LOOP_TO_USE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__power_control_loop_to_use__descriptor) \
    , STREAMING_PROTOBUFS__POWER_CONTROL_LOOP_TO_USE__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__RepK
{
  ProtobufCMessage base;
  StreamingProtobufs__RepK__Value value;
};
#define STREAMING_PROTOBUFS__REP_K__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__rep_k__descriptor) \
    , STREAMING_PROTOBUFS__REP_K__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__RepKRV
{
  ProtobufCMessage base;
  StreamingProtobufs__RepKRV__Value value;
};
#define STREAMING_PROTOBUFS__REP_K__RV__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__rep_k__rv__descriptor) \
    , STREAMING_PROTOBUFS__REP_K__RV__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__GrantPeriodicity
{
  ProtobufCMessage base;
  StreamingProtobufs__GrantPeriodicity__Value value;
};
#define STREAMING_PROTOBUFS__GRANT_PERIODICITY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__grant_periodicity__descriptor) \
    , STREAMING_PROTOBUFS__GRANT_PERIODICITY__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__RRCConfiguredUplinkGrant
{
  ProtobufCMessage base;
  uint32_t timedomainoffset;
  uint32_t timedomainallocation;
  ProtobufCBinaryData frequencydomainallocation;
  uint32_t antennaport;
  Google__Protobuf__UInt32Value *dmrs_seqinitialization;
  uint32_t precodingandnumberoflayers;
  Google__Protobuf__UInt32Value *srs_resourceindicator;
  uint32_t mcsandtbs;
  Google__Protobuf__UInt32Value *frequencyhoppingoffset;
  uint32_t pathlossreferenceindex;
};
#define STREAMING_PROTOBUFS__RRC__CONFIGURED_UPLINK_GRANT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__rrc__configured_uplink_grant__descriptor) \
    , 0, 0, {0,NULL}, 0, NULL, 0, NULL, 0, NULL, 0 }


struct  _StreamingProtobufs__SRSConfig
{
  ProtobufCMessage base;
  size_t n_srs_resourcesettoreleaselist;
  uint32_t *srs_resourcesettoreleaselist;
  size_t n_srs_resourcesettoaddmodlist;
  StreamingProtobufs__SRSResourceSet **srs_resourcesettoaddmodlist;
  size_t n_srs_resourcetoreleaselist;
  uint32_t *srs_resourcetoreleaselist;
  size_t n_srs_resourcetoaddmodlist;
  StreamingProtobufs__SRSResource **srs_resourcetoaddmodlist;
  StreamingProtobufs__DisabledOpt *tpc_accumulation;
};
#define STREAMING_PROTOBUFS__SRS__CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__srs__config__descriptor) \
    , 0,NULL, 0,NULL, 0,NULL, 0,NULL, NULL }


typedef enum {
  STREAMING_PROTOBUFS__SRS__RESOURCE_SET__RESOURCE_TYPE__NOT_SET = 0,
  STREAMING_PROTOBUFS__SRS__RESOURCE_SET__RESOURCE_TYPE_APERIODIC = 3,
  STREAMING_PROTOBUFS__SRS__RESOURCE_SET__RESOURCE_TYPE_SEMI_PERSISTENT = 4,
  STREAMING_PROTOBUFS__SRS__RESOURCE_SET__RESOURCE_TYPE_PERIODIC = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SRS__RESOURCE_SET__RESOURCE_TYPE)
} StreamingProtobufs__SRSResourceSet__ResourceTypeCase;

typedef enum {
  STREAMING_PROTOBUFS__SRS__RESOURCE_SET__PATHLOSS_REFERENCE_RS__NOT_SET = 0,
  STREAMING_PROTOBUFS__SRS__RESOURCE_SET__PATHLOSS_REFERENCE_RS_SSB__INDEX = 9,
  STREAMING_PROTOBUFS__SRS__RESOURCE_SET__PATHLOSS_REFERENCE_RS_CSI__RS__INDEX = 10
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SRS__RESOURCE_SET__PATHLOSS_REFERENCE_RS)
} StreamingProtobufs__SRSResourceSet__PathlossReferenceRSCase;

struct  _StreamingProtobufs__SRSResourceSet
{
  ProtobufCMessage base;
  uint32_t srs_resourcesetid;
  size_t n_srs_resourceidlist;
  uint32_t *srs_resourceidlist;
  StreamingProtobufs__SRSResourceSetUsage *usage;
  StreamingProtobufs__Alpha *alpha;
  Google__Protobuf__Int32Value *p0;
  StreamingProtobufs__SRSPowerControlAdjustmentStates *srs_powercontroladjustmentstates;
  StreamingProtobufs__SRSResourceSet__ResourceTypeCase resource_type_case;
  union {
    StreamingProtobufs__SRSResourceSetTypeAperiodic *aperiodic;
    StreamingProtobufs__SRSResourceSetTypeSemiPersistent *semi_persistent;
    StreamingProtobufs__SRSResourceSetTypePeriodic *periodic;
  };
  StreamingProtobufs__SRSResourceSet__PathlossReferenceRSCase pathloss_reference_rs_case;
  union {
    uint32_t ssb_index;
    uint32_t csi_rs_index;
  };
};
#define STREAMING_PROTOBUFS__SRS__RESOURCE_SET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__srs__resource_set__descriptor) \
    , 0, 0,NULL, NULL, NULL, NULL, NULL, STREAMING_PROTOBUFS__SRS__RESOURCE_SET__RESOURCE_TYPE__NOT_SET, {0}, STREAMING_PROTOBUFS__SRS__RESOURCE_SET__PATHLOSS_REFERENCE_RS__NOT_SET, {0} }


struct  _StreamingProtobufs__SRSResourceSetTypeAperiodic
{
  ProtobufCMessage base;
  uint32_t aperiodicsrs_resourcetrigger;
  Google__Protobuf__UInt32Value *csi_rs;
  Google__Protobuf__UInt32Value *slotoffset;
  size_t n_aperiodicsrs_resourcetriggerlist_v1530;
  uint32_t *aperiodicsrs_resourcetriggerlist_v1530;
};
#define STREAMING_PROTOBUFS__SRS__RESOURCE_SET_TYPE__APERIODIC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__srs__resource_set_type__aperiodic__descriptor) \
    , 0, NULL, NULL, 0,NULL }


struct  _StreamingProtobufs__SRSResourceSetTypeSemiPersistent
{
  ProtobufCMessage base;
  Google__Protobuf__UInt32Value *associatedcsi_rs;
};
#define STREAMING_PROTOBUFS__SRS__RESOURCE_SET_TYPE__SEMI__PERSISTENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__srs__resource_set_type__semi__persistent__descriptor) \
    , NULL }


struct  _StreamingProtobufs__SRSResourceSetTypePeriodic
{
  ProtobufCMessage base;
  Google__Protobuf__UInt32Value *associatedcsi_rs;
};
#define STREAMING_PROTOBUFS__SRS__RESOURCE_SET_TYPE__PERIODIC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__srs__resource_set_type__periodic__descriptor) \
    , NULL }


struct  _StreamingProtobufs__SRSResourceSetUsage
{
  ProtobufCMessage base;
  StreamingProtobufs__SRSResourceSetUsage__Value value;
};
#define STREAMING_PROTOBUFS__SRS__RESOURCE_SET__USAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__srs__resource_set__usage__descriptor) \
    , STREAMING_PROTOBUFS__SRS__RESOURCE_SET__USAGE__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__SRSPowerControlAdjustmentStates
{
  ProtobufCMessage base;
  StreamingProtobufs__SRSPowerControlAdjustmentStates__Value value;
};
#define STREAMING_PROTOBUFS__SRS__POWER_CONTROL_ADJUSTMENT_STATES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__srs__power_control_adjustment_states__descriptor) \
    , STREAMING_PROTOBUFS__SRS__POWER_CONTROL_ADJUSTMENT_STATES__VALUE__protobuf_unspecified }


typedef enum {
  STREAMING_PROTOBUFS__SRS__RESOURCE__TRANSMISSION_COMB__NOT_SET = 0,
  STREAMING_PROTOBUFS__SRS__RESOURCE__TRANSMISSION_COMB_N2 = 4,
  STREAMING_PROTOBUFS__SRS__RESOURCE__TRANSMISSION_COMB_N4 = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SRS__RESOURCE__TRANSMISSION_COMB)
} StreamingProtobufs__SRSResource__TransmissionCombCase;

typedef enum {
  STREAMING_PROTOBUFS__SRS__RESOURCE__RESOURCE_TYPE__NOT_SET = 0,
  STREAMING_PROTOBUFS__SRS__RESOURCE__RESOURCE_TYPE_APERIODIC = 11,
  STREAMING_PROTOBUFS__SRS__RESOURCE__RESOURCE_TYPE_SEMI_PERSISTENT = 12,
  STREAMING_PROTOBUFS__SRS__RESOURCE__RESOURCE_TYPE_PERIODIC = 13
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SRS__RESOURCE__RESOURCE_TYPE)
} StreamingProtobufs__SRSResource__ResourceTypeCase;

struct  _StreamingProtobufs__SRSResource
{
  ProtobufCMessage base;
  uint32_t srs_resourceid;
  StreamingProtobufs__NrofSRSPorts *nrofsrs_ports;
  StreamingProtobufs__PTRSPortIndex *ptrs_portindex;
  StreamingProtobufs__ResourceMapping *resourcemapping;
  uint32_t freqdomainposition;
  uint32_t freqdomainshift;
  StreamingProtobufs__FreqHopping *freqhopping;
  StreamingProtobufs__GroupOrSequenceHopping *grouporsequencehopping;
  uint32_t sequenceid;
  StreamingProtobufs__SRSSpatialRelationInfo *spatialrelationinfo;
  StreamingProtobufs__SRSResource__TransmissionCombCase transmission_comb_case;
  union {
    StreamingProtobufs__N2 *n2;
    StreamingProtobufs__N4 *n4;
  };
  StreamingProtobufs__SRSResource__ResourceTypeCase resource_type_case;
  union {
    StreamingProtobufs__SRSResourceTypeAperiodic *aperiodic;
    StreamingProtobufs__SRSResourceTypeSemiPersistent *semi_persistent;
    StreamingProtobufs__SRSResourceTypePeriodic *periodic;
  };
};
#define STREAMING_PROTOBUFS__SRS__RESOURCE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__srs__resource__descriptor) \
    , 0, NULL, NULL, NULL, 0, 0, NULL, NULL, 0, NULL, STREAMING_PROTOBUFS__SRS__RESOURCE__TRANSMISSION_COMB__NOT_SET, {0}, STREAMING_PROTOBUFS__SRS__RESOURCE__RESOURCE_TYPE__NOT_SET, {0} }


struct  _StreamingProtobufs__NrofSRSPorts
{
  ProtobufCMessage base;
  StreamingProtobufs__NrofSRSPorts__Value value;
};
#define STREAMING_PROTOBUFS__NROF_SRS__PORTS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__nrof_srs__ports__descriptor) \
    , STREAMING_PROTOBUFS__NROF_SRS__PORTS__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__PTRSPortIndex
{
  ProtobufCMessage base;
  StreamingProtobufs__PTRSPortIndex__Value value;
};
#define STREAMING_PROTOBUFS__PTRS__PORT_INDEX__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__ptrs__port_index__descriptor) \
    , STREAMING_PROTOBUFS__PTRS__PORT_INDEX__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__N2
{
  ProtobufCMessage base;
  uint32_t comboffset_n2;
  uint32_t cyclicshift_n2;
};
#define STREAMING_PROTOBUFS__N2__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__n2__descriptor) \
    , 0, 0 }


struct  _StreamingProtobufs__N4
{
  ProtobufCMessage base;
  uint32_t comboffset_n4;
  uint32_t cyclicshift_n4;
};
#define STREAMING_PROTOBUFS__N4__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__n4__descriptor) \
    , 0, 0 }


struct  _StreamingProtobufs__ResourceMapping
{
  ProtobufCMessage base;
  uint32_t startposition;
  StreamingProtobufs__NrofSymbols *nrofsymbols;
  StreamingProtobufs__RepetitionFactor *repetitionfactor;
};
#define STREAMING_PROTOBUFS__RESOURCE_MAPPING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__resource_mapping__descriptor) \
    , 0, NULL, NULL }


struct  _StreamingProtobufs__NrofSymbols
{
  ProtobufCMessage base;
  StreamingProtobufs__NrofSymbols__Value value;
};
#define STREAMING_PROTOBUFS__NROF_SYMBOLS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__nrof_symbols__descriptor) \
    , STREAMING_PROTOBUFS__NROF_SYMBOLS__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__RepetitionFactor
{
  ProtobufCMessage base;
  StreamingProtobufs__RepetitionFactor__Value value;
};
#define STREAMING_PROTOBUFS__REPETITION_FACTOR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__repetition_factor__descriptor) \
    , STREAMING_PROTOBUFS__REPETITION_FACTOR__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__FreqHopping
{
  ProtobufCMessage base;
  uint32_t c_srs;
  uint32_t b_srs;
  uint32_t b_hop;
};
#define STREAMING_PROTOBUFS__FREQ_HOPPING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__freq_hopping__descriptor) \
    , 0, 0, 0 }


struct  _StreamingProtobufs__GroupOrSequenceHopping
{
  ProtobufCMessage base;
  StreamingProtobufs__GroupOrSequenceHopping__Value value;
};
#define STREAMING_PROTOBUFS__GROUP_OR_SEQUENCE_HOPPING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__group_or_sequence_hopping__descriptor) \
    , STREAMING_PROTOBUFS__GROUP_OR_SEQUENCE_HOPPING__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__SRSResourceTypeAperiodic
{
  ProtobufCMessage base;
};
#define STREAMING_PROTOBUFS__SRS__RESOURCE_TYPE__APERIODIC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__srs__resource_type__aperiodic__descriptor) \
     }


struct  _StreamingProtobufs__SRSResourceTypeSemiPersistent
{
  ProtobufCMessage base;
  StreamingProtobufs__SRSPeriodicityAndOffset *periodicityandoffset_sp;
};
#define STREAMING_PROTOBUFS__SRS__RESOURCE_TYPE__SEMI__PERSISTENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__srs__resource_type__semi__persistent__descriptor) \
    , NULL }


typedef enum {
  STREAMING_PROTOBUFS__SRS__PERIODICITY_AND_OFFSET__C__NOT_SET = 0,
  STREAMING_PROTOBUFS__SRS__PERIODICITY_AND_OFFSET__C_SL1 = 1,
  STREAMING_PROTOBUFS__SRS__PERIODICITY_AND_OFFSET__C_SL2 = 2,
  STREAMING_PROTOBUFS__SRS__PERIODICITY_AND_OFFSET__C_SL4 = 3,
  STREAMING_PROTOBUFS__SRS__PERIODICITY_AND_OFFSET__C_SL5 = 4,
  STREAMING_PROTOBUFS__SRS__PERIODICITY_AND_OFFSET__C_SL8 = 5,
  STREAMING_PROTOBUFS__SRS__PERIODICITY_AND_OFFSET__C_SL10 = 6,
  STREAMING_PROTOBUFS__SRS__PERIODICITY_AND_OFFSET__C_SL16 = 7,
  STREAMING_PROTOBUFS__SRS__PERIODICITY_AND_OFFSET__C_SL20 = 8,
  STREAMING_PROTOBUFS__SRS__PERIODICITY_AND_OFFSET__C_SL32 = 9,
  STREAMING_PROTOBUFS__SRS__PERIODICITY_AND_OFFSET__C_SL40 = 10,
  STREAMING_PROTOBUFS__SRS__PERIODICITY_AND_OFFSET__C_SL64 = 11,
  STREAMING_PROTOBUFS__SRS__PERIODICITY_AND_OFFSET__C_SL80 = 12,
  STREAMING_PROTOBUFS__SRS__PERIODICITY_AND_OFFSET__C_SL160 = 13,
  STREAMING_PROTOBUFS__SRS__PERIODICITY_AND_OFFSET__C_SL320 = 14,
  STREAMING_PROTOBUFS__SRS__PERIODICITY_AND_OFFSET__C_SL640 = 15,
  STREAMING_PROTOBUFS__SRS__PERIODICITY_AND_OFFSET__C_SL1280 = 16,
  STREAMING_PROTOBUFS__SRS__PERIODICITY_AND_OFFSET__C_SL2560 = 17
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SRS__PERIODICITY_AND_OFFSET__C)
} StreamingProtobufs__SRSPeriodicityAndOffset__CCase;

struct  _StreamingProtobufs__SRSPeriodicityAndOffset
{
  ProtobufCMessage base;
  StreamingProtobufs__SRSPeriodicityAndOffset__CCase c_case;
  union {
    StreamingProtobufs__Null *sl1;
    uint32_t sl2;
    uint32_t sl4;
    uint32_t sl5;
    uint32_t sl8;
    uint32_t sl10;
    uint32_t sl16;
    uint32_t sl20;
    uint32_t sl32;
    uint32_t sl40;
    uint32_t sl64;
    uint32_t sl80;
    uint32_t sl160;
    uint32_t sl320;
    uint32_t sl640;
    uint32_t sl1280;
    uint32_t sl2560;
  };
};
#define STREAMING_PROTOBUFS__SRS__PERIODICITY_AND_OFFSET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__srs__periodicity_and_offset__descriptor) \
    , STREAMING_PROTOBUFS__SRS__PERIODICITY_AND_OFFSET__C__NOT_SET, {0} }


struct  _StreamingProtobufs__SRSResourceTypePeriodic
{
  ProtobufCMessage base;
  StreamingProtobufs__SRSPeriodicityAndOffset *periodicityandoffset_p;
};
#define STREAMING_PROTOBUFS__SRS__RESOURCE_TYPE__PERIODIC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__srs__resource_type__periodic__descriptor) \
    , NULL }


typedef enum {
  STREAMING_PROTOBUFS__SRS__SPATIAL_RELATION_INFO__REFERENCE_SIGNAL__NOT_SET = 0,
  STREAMING_PROTOBUFS__SRS__SPATIAL_RELATION_INFO__REFERENCE_SIGNAL_SSB__INDEX = 2,
  STREAMING_PROTOBUFS__SRS__SPATIAL_RELATION_INFO__REFERENCE_SIGNAL_CSI__RS__INDEX = 3,
  STREAMING_PROTOBUFS__SRS__SPATIAL_RELATION_INFO__REFERENCE_SIGNAL_SRS = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SRS__SPATIAL_RELATION_INFO__REFERENCE_SIGNAL)
} StreamingProtobufs__SRSSpatialRelationInfo__ReferenceSignalCase;

struct  _StreamingProtobufs__SRSSpatialRelationInfo
{
  ProtobufCMessage base;
  Google__Protobuf__UInt32Value *servingcellid;
  StreamingProtobufs__SRSSpatialRelationInfo__ReferenceSignalCase reference_signal_case;
  union {
    uint32_t ssb_index;
    uint32_t csi_rs_index;
    StreamingProtobufs__Srs *srs;
  };
};
#define STREAMING_PROTOBUFS__SRS__SPATIAL_RELATION_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__srs__spatial_relation_info__descriptor) \
    , NULL, STREAMING_PROTOBUFS__SRS__SPATIAL_RELATION_INFO__REFERENCE_SIGNAL__NOT_SET, {0} }


struct  _StreamingProtobufs__BeamFailureRecoveryConfig
{
  ProtobufCMessage base;
  Google__Protobuf__UInt32Value *rootsequenceindex_bfr;
  StreamingProtobufs__RACHConfigGeneric *rach_configbfr;
  Google__Protobuf__UInt32Value *rsrp_thresholdssb;
  size_t n_candidatebeamrslist;
  StreamingProtobufs__PRACHResourceDedicatedBFR **candidatebeamrslist;
  StreamingProtobufs__SSBPerRACHOccasion *ssb_perrach_occasion;
  Google__Protobuf__UInt32Value *ra_ssb_occasionmaskindex;
  Google__Protobuf__UInt32Value *recoverysearchspaceid;
  StreamingProtobufs__RAPrioritization *ra_prioritization;
  StreamingProtobufs__BeamFailureRecoveryTimer *beamfailurerecoverytimer;
  StreamingProtobufs__SubcarrierSpacing *msg1_subcarrierspacing_v1530;
};
#define STREAMING_PROTOBUFS__BEAM_FAILURE_RECOVERY_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__beam_failure_recovery_config__descriptor) \
    , NULL, NULL, NULL, 0,NULL, NULL, NULL, NULL, NULL, NULL, NULL }


typedef enum {
  STREAMING_PROTOBUFS__PRACH__RESOURCE_DEDICATED_BFR__C__NOT_SET = 0,
  STREAMING_PROTOBUFS__PRACH__RESOURCE_DEDICATED_BFR__C_SSB = 1,
  STREAMING_PROTOBUFS__PRACH__RESOURCE_DEDICATED_BFR__C_CSI__RS = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PRACH__RESOURCE_DEDICATED_BFR__C)
} StreamingProtobufs__PRACHResourceDedicatedBFR__CCase;

struct  _StreamingProtobufs__PRACHResourceDedicatedBFR
{
  ProtobufCMessage base;
  StreamingProtobufs__PRACHResourceDedicatedBFR__CCase c_case;
  union {
    StreamingProtobufs__BFRSSBResource *ssb;
    StreamingProtobufs__BFRCSIRSResource *csi_rs;
  };
};
#define STREAMING_PROTOBUFS__PRACH__RESOURCE_DEDICATED_BFR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__prach__resource_dedicated_bfr__descriptor) \
    , STREAMING_PROTOBUFS__PRACH__RESOURCE_DEDICATED_BFR__C__NOT_SET, {0} }


struct  _StreamingProtobufs__BFRSSBResource
{
  ProtobufCMessage base;
  uint32_t ssb;
  uint32_t ra_preambleindex;
};
#define STREAMING_PROTOBUFS__BFR__SSB__RESOURCE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__bfr__ssb__resource__descriptor) \
    , 0, 0 }


struct  _StreamingProtobufs__BFRCSIRSResource
{
  ProtobufCMessage base;
  uint32_t csi_rs;
  size_t n_ra_occasionlist;
  uint32_t *ra_occasionlist;
  Google__Protobuf__UInt32Value *ra_preambleindex;
};
#define STREAMING_PROTOBUFS__BFR__CSIRS__RESOURCE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__bfr__csirs__resource__descriptor) \
    , 0, 0,NULL, NULL }


struct  _StreamingProtobufs__SSBPerRACHOccasion
{
  ProtobufCMessage base;
  StreamingProtobufs__SSBPerRACHOccasion__Value value;
};
#define STREAMING_PROTOBUFS__SSB_PER_RACH__OCCASION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__ssb_per_rach__occasion__descriptor) \
    , STREAMING_PROTOBUFS__SSB_PER_RACH__OCCASION__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__BeamFailureRecoveryTimer
{
  ProtobufCMessage base;
  StreamingProtobufs__BeamFailureRecoveryTimer__Value value;
};
#define STREAMING_PROTOBUFS__BEAM_FAILURE_RECOVERY_TIMER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__beam_failure_recovery_timer__descriptor) \
    , STREAMING_PROTOBUFS__BEAM_FAILURE_RECOVERY_TIMER__VALUE__protobuf_unspecified }


typedef enum {
  STREAMING_PROTOBUFS__PDCCH__SERVING_CELL_CONFIG__SLOT_FORMAT_INDICATOR__NOT_SET = 0,
  STREAMING_PROTOBUFS__PDCCH__SERVING_CELL_CONFIG__SLOT_FORMAT_INDICATOR_RELEASE_SLOT_FORMAT_INDICATOR = 1,
  STREAMING_PROTOBUFS__PDCCH__SERVING_CELL_CONFIG__SLOT_FORMAT_INDICATOR_SETUP_SLOT_FORMAT_INDICATOR = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PDCCH__SERVING_CELL_CONFIG__SLOT_FORMAT_INDICATOR)
} StreamingProtobufs__PDCCHServingCellConfig__SlotFormatIndicatorCase;

struct  _StreamingProtobufs__PDCCHServingCellConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__PDCCHServingCellConfig__SlotFormatIndicatorCase slot_format_indicator_case;
  union {
    StreamingProtobufs__Null *release_slotformatindicator;
    StreamingProtobufs__SlotFormatIndicator *setup_slotformatindicator;
  };
};
#define STREAMING_PROTOBUFS__PDCCH__SERVING_CELL_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pdcch__serving_cell_config__descriptor) \
    , STREAMING_PROTOBUFS__PDCCH__SERVING_CELL_CONFIG__SLOT_FORMAT_INDICATOR__NOT_SET, {0} }


struct  _StreamingProtobufs__SlotFormatIndicator
{
  ProtobufCMessage base;
  uint32_t sfi_rnti;
  uint32_t dci_payloadsize;
  size_t n_slotformatcombtoaddmodlist;
  StreamingProtobufs__SlotFormatCombinationsPerCell **slotformatcombtoaddmodlist;
  size_t n_slotformatcombtoreleaselist;
  uint32_t *slotformatcombtoreleaselist;
};
#define STREAMING_PROTOBUFS__SLOT_FORMAT_INDICATOR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__slot_format_indicator__descriptor) \
    , 0, 0, 0,NULL, 0,NULL }


struct  _StreamingProtobufs__SlotFormatCombinationsPerCell
{
  ProtobufCMessage base;
  uint32_t servingcellid;
  StreamingProtobufs__SubcarrierSpacing *subcarrierspacing;
  StreamingProtobufs__SubcarrierSpacing *subcarrierspacing2;
  size_t n_slotformatcombinations;
  StreamingProtobufs__SlotFormatCombination **slotformatcombinations;
  Google__Protobuf__UInt32Value *positionindci;
};
#define STREAMING_PROTOBUFS__SLOT_FORMAT_COMBINATIONS_PER_CELL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__slot_format_combinations_per_cell__descriptor) \
    , 0, NULL, NULL, 0,NULL, NULL }


struct  _StreamingProtobufs__SlotFormatCombination
{
  ProtobufCMessage base;
  uint32_t slotformatcombinationid;
  size_t n_slotformats;
  uint32_t *slotformats;
};
#define STREAMING_PROTOBUFS__SLOT_FORMAT_COMBINATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__slot_format_combination__descriptor) \
    , 0, 0,NULL }


typedef enum {
  STREAMING_PROTOBUFS__PDSCH__SERVING_CELL_CONFIG__CODE_BLOCK_GROUP_TRANSMISSION__NOT_SET = 0,
  STREAMING_PROTOBUFS__PDSCH__SERVING_CELL_CONFIG__CODE_BLOCK_GROUP_TRANSMISSION_RELEASE_CODE_BLOCK_GROUP_TRANSMISSION = 1,
  STREAMING_PROTOBUFS__PDSCH__SERVING_CELL_CONFIG__CODE_BLOCK_GROUP_TRANSMISSION_SETUP_CODE_BLOCK_GROUP_TRANSMISSION = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PDSCH__SERVING_CELL_CONFIG__CODE_BLOCK_GROUP_TRANSMISSION)
} StreamingProtobufs__PDSCHServingCellConfig__CodeBlockGroupTransmissionCase;

struct  _StreamingProtobufs__PDSCHServingCellConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__XOverhead *xoverhead;
  StreamingProtobufs__NrofHARQProcessesForPDSCH *nrofharq_processesforpdsch;
  Google__Protobuf__UInt32Value *pucch_cell;
  Google__Protobuf__UInt32Value *maxmimo_layers;
  Google__Protobuf__BoolValue *processingtype2enabled;
  StreamingProtobufs__PDSCHServingCellConfig__CodeBlockGroupTransmissionCase code_block_group_transmission_case;
  union {
    StreamingProtobufs__Null *release_codeblockgrouptransmission;
    StreamingProtobufs__PDSCHCodeBlockGroupTransmission *setup_codeblockgrouptransmission;
  };
};
#define STREAMING_PROTOBUFS__PDSCH__SERVING_CELL_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pdsch__serving_cell_config__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, STREAMING_PROTOBUFS__PDSCH__SERVING_CELL_CONFIG__CODE_BLOCK_GROUP_TRANSMISSION__NOT_SET, {0} }


struct  _StreamingProtobufs__PDSCHCodeBlockGroupTransmission
{
  ProtobufCMessage base;
  StreamingProtobufs__MaxCodeBlockGroupsPerTransportBlock *maxcodeblockgroupspertransportblock;
  protobuf_c_boolean codeblockgroupflushindicator;
};
#define STREAMING_PROTOBUFS__PDSCH__CODE_BLOCK_GROUP_TRANSMISSION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pdsch__code_block_group_transmission__descriptor) \
    , NULL, 0 }


struct  _StreamingProtobufs__MaxCodeBlockGroupsPerTransportBlock
{
  ProtobufCMessage base;
  StreamingProtobufs__MaxCodeBlockGroupsPerTransportBlock__Value value;
};
#define STREAMING_PROTOBUFS__MAX_CODE_BLOCK_GROUPS_PER_TRANSPORT_BLOCK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__max_code_block_groups_per_transport_block__descriptor) \
    , STREAMING_PROTOBUFS__MAX_CODE_BLOCK_GROUPS_PER_TRANSPORT_BLOCK__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__XOverhead
{
  ProtobufCMessage base;
  StreamingProtobufs__XOverhead__Value value;
};
#define STREAMING_PROTOBUFS__XOVERHEAD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__xoverhead__descriptor) \
    , STREAMING_PROTOBUFS__XOVERHEAD__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__NrofHARQProcessesForPDSCH
{
  ProtobufCMessage base;
  StreamingProtobufs__NrofHARQProcessesForPDSCH__Value value;
};
#define STREAMING_PROTOBUFS__NROF_HARQ__PROCESSES_FOR_PDSCH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__nrof_harq__processes_for_pdsch__descriptor) \
    , STREAMING_PROTOBUFS__NROF_HARQ__PROCESSES_FOR_PDSCH__VALUE__protobuf_unspecified }


typedef enum {
  STREAMING_PROTOBUFS__CSI__MEAS_CONFIG__CSI__APERIODIC_TRIGGER_STATE_LIST__NOT_SET = 0,
  STREAMING_PROTOBUFS__CSI__MEAS_CONFIG__CSI__APERIODIC_TRIGGER_STATE_LIST_RELEASE_CSI__APERIODIC_TRIGGER_STATE_LIST = 16,
  STREAMING_PROTOBUFS__CSI__MEAS_CONFIG__CSI__APERIODIC_TRIGGER_STATE_LIST_SETUP_CSI__APERIODIC_TRIGGER_STATE_LIST = 17
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CSI__MEAS_CONFIG__CSI__APERIODIC_TRIGGER_STATE_LIST)
} StreamingProtobufs__CSIMeasConfig__CsiAperiodicTriggerStateListCase;

typedef enum {
  STREAMING_PROTOBUFS__CSI__MEAS_CONFIG__SEMI_PERSISTENT_ON_PUSCH__TRIGGER_STATE_LIST__NOT_SET = 0,
  STREAMING_PROTOBUFS__CSI__MEAS_CONFIG__SEMI_PERSISTENT_ON_PUSCH__TRIGGER_STATE_LIST_RELEASE_SEMI_PERSISTENT_ON_PUSCH__TRIGGER_STATE_LIST = 18,
  STREAMING_PROTOBUFS__CSI__MEAS_CONFIG__SEMI_PERSISTENT_ON_PUSCH__TRIGGER_STATE_LIST_SETUP_SEMI_PERSISTENT_ON_PUSCH__TRIGGER_STATE_LIST = 19
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CSI__MEAS_CONFIG__SEMI_PERSISTENT_ON_PUSCH__TRIGGER_STATE_LIST)
} StreamingProtobufs__CSIMeasConfig__SemiPersistentOnPUSCHTriggerStateListCase;

struct  _StreamingProtobufs__CSIMeasConfig
{
  ProtobufCMessage base;
  size_t n_nzp_csi_rs_resourcetoaddmodlist;
  StreamingProtobufs__NZPCSIRSResource **nzp_csi_rs_resourcetoaddmodlist;
  size_t n_nzp_csi_rs_resourcetoreleaselist;
  uint32_t *nzp_csi_rs_resourcetoreleaselist;
  size_t n_nzp_csi_rs_resourcesettoaddmodlist;
  StreamingProtobufs__NZPCSIRSResourceSet **nzp_csi_rs_resourcesettoaddmodlist;
  size_t n_nzp_csi_rs_resourcesettoreleaselist;
  uint32_t *nzp_csi_rs_resourcesettoreleaselist;
  size_t n_csi_im_resourcetoaddmodlist;
  StreamingProtobufs__CSIIMResource **csi_im_resourcetoaddmodlist;
  size_t n_csi_im_resourcetoreleaselist;
  uint32_t *csi_im_resourcetoreleaselist;
  size_t n_csi_im_resourcesettoaddmodlist;
  StreamingProtobufs__CSIIMResourceSet **csi_im_resourcesettoaddmodlist;
  size_t n_csi_im_resourcesettoreleaselist;
  uint32_t *csi_im_resourcesettoreleaselist;
  size_t n_csi_ssb_resourcesettoaddmodlist;
  StreamingProtobufs__CSISSBResourceSet **csi_ssb_resourcesettoaddmodlist;
  size_t n_csi_ssb_resourcesettoaddreleaselist;
  uint32_t *csi_ssb_resourcesettoaddreleaselist;
  size_t n_csi_resourceconfigtoaddmodlist;
  StreamingProtobufs__CSIResourceConfig **csi_resourceconfigtoaddmodlist;
  size_t n_csi_resourceconfigtoreleaselist;
  uint32_t *csi_resourceconfigtoreleaselist;
  size_t n_csi_reportconfigtoaddmodlist;
  StreamingProtobufs__CSIReportConfig **csi_reportconfigtoaddmodlist;
  size_t n_csi_reportconfigtoreleaselist;
  uint32_t *csi_reportconfigtoreleaselist;
  Google__Protobuf__UInt32Value *reporttriggersize;
  StreamingProtobufs__CSIMeasConfig__CsiAperiodicTriggerStateListCase csi__aperiodic_trigger_state_list_case;
  union {
    StreamingProtobufs__Null *release_csi_aperiodictriggerstatelist;
    StreamingProtobufs__CSIAperiodicTriggerStateList *setup_csi_aperiodictriggerstatelist;
  };
  StreamingProtobufs__CSIMeasConfig__SemiPersistentOnPUSCHTriggerStateListCase semi_persistent_on_pusch__trigger_state_list_case;
  union {
    StreamingProtobufs__Null *release_semipersistentonpusch_triggerstatelist;
    StreamingProtobufs__CSISemiPersistentOnPUSCHTriggerStateList *setup_semipersistentonpusch_triggerstatelist;
  };
};
#define STREAMING_PROTOBUFS__CSI__MEAS_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__csi__meas_config__descriptor) \
    , 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, NULL, STREAMING_PROTOBUFS__CSI__MEAS_CONFIG__CSI__APERIODIC_TRIGGER_STATE_LIST__NOT_SET, {0}, STREAMING_PROTOBUFS__CSI__MEAS_CONFIG__SEMI_PERSISTENT_ON_PUSCH__TRIGGER_STATE_LIST__NOT_SET, {0} }


struct  _StreamingProtobufs__NZPCSIRSResource
{
  ProtobufCMessage base;
  uint32_t nzp_csi_rs_resourceid;
  StreamingProtobufs__CSIRSResourceMapping *resourcemapping;
  int32_t powercontroloffset;
  StreamingProtobufs__PowerControlOffsetSS *powercontroloffsetss;
  uint32_t scramblingid;
  StreamingProtobufs__CSIResourcePeriodicityAndOffset *periodicityandoffset;
  Google__Protobuf__UInt32Value *qcl_infoperiodiccsi_rs;
};
#define STREAMING_PROTOBUFS__NZP__CSI__RS__RESOURCE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__nzp__csi__rs__resource__descriptor) \
    , 0, NULL, 0, NULL, 0, NULL, NULL }


struct  _StreamingProtobufs__PowerControlOffsetSS
{
  ProtobufCMessage base;
  StreamingProtobufs__PowerControlOffsetSS__Value value;
};
#define STREAMING_PROTOBUFS__POWER_CONTROL_OFFSET_SS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__power_control_offset_ss__descriptor) \
    , STREAMING_PROTOBUFS__POWER_CONTROL_OFFSET_SS__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__NZPCSIRSResourceSet
{
  ProtobufCMessage base;
  uint32_t nzp_csi_resourcesetid;
  size_t n_nzp_csi_rs_resources;
  uint32_t *nzp_csi_rs_resources;
  StreamingProtobufs__OnOffOpt *repetition;
  Google__Protobuf__UInt32Value *aperiodictriggeringoffset;
  StreamingProtobufs__TrueOpt *trs_info;
};
#define STREAMING_PROTOBUFS__NZP__CSI__RS__RESOURCE_SET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__nzp__csi__rs__resource_set__descriptor) \
    , 0, 0,NULL, NULL, NULL, NULL }


typedef enum {
  STREAMING_PROTOBUFS__CSI__IM__RESOURCE__CSI__IM__RESOURCE_ELEMENT_PATTERN__NOT_SET = 0,
  STREAMING_PROTOBUFS__CSI__IM__RESOURCE__CSI__IM__RESOURCE_ELEMENT_PATTERN_PATTERN0 = 2,
  STREAMING_PROTOBUFS__CSI__IM__RESOURCE__CSI__IM__RESOURCE_ELEMENT_PATTERN_PATTERN1 = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CSI__IM__RESOURCE__CSI__IM__RESOURCE_ELEMENT_PATTERN)
} StreamingProtobufs__CSIIMResource__CsiIMResourceElementPatternCase;

struct  _StreamingProtobufs__CSIIMResource
{
  ProtobufCMessage base;
  uint32_t csi_im_resourceid;
  StreamingProtobufs__CSIFrequencyOccupation *freqband;
  StreamingProtobufs__CSIResourcePeriodicityAndOffset *periodicityandoffset;
  StreamingProtobufs__CSIIMResource__CsiIMResourceElementPatternCase csi__im__resource_element_pattern_case;
  union {
    StreamingProtobufs__Pattern0 *pattern0;
    StreamingProtobufs__Pattern1 *pattern1;
  };
};
#define STREAMING_PROTOBUFS__CSI__IM__RESOURCE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__csi__im__resource__descriptor) \
    , 0, NULL, NULL, STREAMING_PROTOBUFS__CSI__IM__RESOURCE__CSI__IM__RESOURCE_ELEMENT_PATTERN__NOT_SET, {0} }


struct  _StreamingProtobufs__Pattern0
{
  ProtobufCMessage base;
  StreamingProtobufs__SubcarrierLocationP0 *subcarrierlocation_p0;
  uint32_t symbollocation_p0;
};
#define STREAMING_PROTOBUFS__PATTERN0__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pattern0__descriptor) \
    , NULL, 0 }


struct  _StreamingProtobufs__SubcarrierLocationP0
{
  ProtobufCMessage base;
  StreamingProtobufs__SubcarrierLocationP0__Value value;
};
#define STREAMING_PROTOBUFS__SUBCARRIER_LOCATION_P0__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__subcarrier_location_p0__descriptor) \
    , STREAMING_PROTOBUFS__SUBCARRIER_LOCATION_P0__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__Pattern1
{
  ProtobufCMessage base;
  StreamingProtobufs__SubcarrierLocationP1 *subcarrierlocation_p1;
  uint32_t symbollocation_p1;
};
#define STREAMING_PROTOBUFS__PATTERN1__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pattern1__descriptor) \
    , NULL, 0 }


struct  _StreamingProtobufs__SubcarrierLocationP1
{
  ProtobufCMessage base;
  StreamingProtobufs__SubcarrierLocationP1__Value value;
};
#define STREAMING_PROTOBUFS__SUBCARRIER_LOCATION_P1__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__subcarrier_location_p1__descriptor) \
    , STREAMING_PROTOBUFS__SUBCARRIER_LOCATION_P1__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__CSIIMResourceSet
{
  ProtobufCMessage base;
  uint32_t csi_im_resourcesetid;
  size_t n_csi_im_resources;
  uint32_t *csi_im_resources;
};
#define STREAMING_PROTOBUFS__CSI__IM__RESOURCE_SET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__csi__im__resource_set__descriptor) \
    , 0, 0,NULL }


struct  _StreamingProtobufs__CSISSBResourceSet
{
  ProtobufCMessage base;
  uint32_t csi_ssb_resourcesetid;
  size_t n_csi_ssb_resourcelist;
  uint32_t *csi_ssb_resourcelist;
};
#define STREAMING_PROTOBUFS__CSI__SSB__RESOURCE_SET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__csi__ssb__resource_set__descriptor) \
    , 0, 0,NULL }


typedef enum {
  STREAMING_PROTOBUFS__CSI__RESOURCE_CONFIG__CSI__RS__RESOURCE_SET_LIST__NOT_SET = 0,
  STREAMING_PROTOBUFS__CSI__RESOURCE_CONFIG__CSI__RS__RESOURCE_SET_LIST_NZP__CSI__RS__SSB = 2,
  STREAMING_PROTOBUFS__CSI__RESOURCE_CONFIG__CSI__RS__RESOURCE_SET_LIST_CSI__IM__RESOURCE_SET_LIST = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CSI__RESOURCE_CONFIG__CSI__RS__RESOURCE_SET_LIST)
} StreamingProtobufs__CSIResourceConfig__CsiRSResourceSetListCase;

struct  _StreamingProtobufs__CSIResourceConfig
{
  ProtobufCMessage base;
  uint32_t csi_resourceconfigid;
  uint32_t bwp_id;
  StreamingProtobufs__ResourceType *resourcetype;
  StreamingProtobufs__CSIResourceConfig__CsiRSResourceSetListCase csi__rs__resource_set_list_case;
  union {
    StreamingProtobufs__NZPCSIRSSSB *nzp_csi_rs_ssb;
    StreamingProtobufs__CSIIMResourceSetList *csi_im_resourcesetlist;
  };
};
#define STREAMING_PROTOBUFS__CSI__RESOURCE_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__csi__resource_config__descriptor) \
    , 0, 0, NULL, STREAMING_PROTOBUFS__CSI__RESOURCE_CONFIG__CSI__RS__RESOURCE_SET_LIST__NOT_SET, {0} }


struct  _StreamingProtobufs__NZPCSIRSSSB
{
  ProtobufCMessage base;
  size_t n_nzp_csi_rs_resourcesetlist;
  uint32_t *nzp_csi_rs_resourcesetlist;
  size_t n_csi_ssb_resourcesetlist;
  uint32_t *csi_ssb_resourcesetlist;
};
#define STREAMING_PROTOBUFS__NZP__CSI__RS__SSB__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__nzp__csi__rs__ssb__descriptor) \
    , 0,NULL, 0,NULL }


struct  _StreamingProtobufs__CSIIMResourceSetList
{
  ProtobufCMessage base;
  size_t n_items;
  uint32_t *items;
};
#define STREAMING_PROTOBUFS__CSI__IM__RESOURCE_SET_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__csi__im__resource_set_list__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__ResourceType
{
  ProtobufCMessage base;
  StreamingProtobufs__ResourceType__Value value;
};
#define STREAMING_PROTOBUFS__RESOURCE_TYPE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__resource_type__descriptor) \
    , STREAMING_PROTOBUFS__RESOURCE_TYPE__VALUE__protobuf_unspecified }


typedef enum {
  STREAMING_PROTOBUFS__CSI__REPORT_CONFIG__REPORT_CONFIG_TYPE__NOT_SET = 0,
  STREAMING_PROTOBUFS__CSI__REPORT_CONFIG__REPORT_CONFIG_TYPE_PERIODIC = 6,
  STREAMING_PROTOBUFS__CSI__REPORT_CONFIG__REPORT_CONFIG_TYPE_SEMI_PERSISTENT_ON_PUCCH = 7,
  STREAMING_PROTOBUFS__CSI__REPORT_CONFIG__REPORT_CONFIG_TYPE_SEMI_PERSISTENT_ON_PUSCH = 8,
  STREAMING_PROTOBUFS__CSI__REPORT_CONFIG__REPORT_CONFIG_TYPE_APERIODIC = 9
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CSI__REPORT_CONFIG__REPORT_CONFIG_TYPE)
} StreamingProtobufs__CSIReportConfig__ReportConfigTypeCase;

typedef enum {
  STREAMING_PROTOBUFS__CSI__REPORT_CONFIG__REPORT_QUANTITY__NOT_SET = 0,
  STREAMING_PROTOBUFS__CSI__REPORT_CONFIG__REPORT_QUANTITY_NONE = 10,
  STREAMING_PROTOBUFS__CSI__REPORT_CONFIG__REPORT_QUANTITY_CRI__RI__PMI__CQI = 11,
  STREAMING_PROTOBUFS__CSI__REPORT_CONFIG__REPORT_QUANTITY_CRI__RI_I1 = 12,
  STREAMING_PROTOBUFS__CSI__REPORT_CONFIG__REPORT_QUANTITY_CRI__RI_I1__CQI = 13,
  STREAMING_PROTOBUFS__CSI__REPORT_CONFIG__REPORT_QUANTITY_CRI__RI__CQI = 14,
  STREAMING_PROTOBUFS__CSI__REPORT_CONFIG__REPORT_QUANTITY_CRI__RSRP = 15,
  STREAMING_PROTOBUFS__CSI__REPORT_CONFIG__REPORT_QUANTITY_SSB__INDEX__RSRP = 16,
  STREAMING_PROTOBUFS__CSI__REPORT_CONFIG__REPORT_QUANTITY_CRI__RI__LI__PMI__CQI = 17
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CSI__REPORT_CONFIG__REPORT_QUANTITY)
} StreamingProtobufs__CSIReportConfig__ReportQuantityCase;

typedef enum {
  STREAMING_PROTOBUFS__CSI__REPORT_CONFIG__GROUP_BASED_BEAM_REPORTING__NOT_SET = 0,
  STREAMING_PROTOBUFS__CSI__REPORT_CONFIG__GROUP_BASED_BEAM_REPORTING_ENABLED = 23,
  STREAMING_PROTOBUFS__CSI__REPORT_CONFIG__GROUP_BASED_BEAM_REPORTING_DISABLED = 24
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CSI__REPORT_CONFIG__GROUP_BASED_BEAM_REPORTING)
} StreamingProtobufs__CSIReportConfig__GroupBasedBeamReportingCase;

struct  _StreamingProtobufs__CSIReportConfig
{
  ProtobufCMessage base;
  uint32_t reportconfigid;
  Google__Protobuf__UInt32Value *carrier;
  uint32_t resourcesforchannelmeasurement;
  Google__Protobuf__UInt32Value *csi_im_resourcesforinterference;
  Google__Protobuf__UInt32Value *nzp_csi_rs_resourcesforinterference;
  StreamingProtobufs__ReportFreqConfiguration *reportfreqconfiguration;
  StreamingProtobufs__ConfiguredOpt *timerestrictionforchannelmeasurements;
  StreamingProtobufs__ConfiguredOpt *timerestrictionforinterferencemeasurements;
  StreamingProtobufs__CodebookConfig *codebookconfig;
  StreamingProtobufs__CSIReportConfigDummy *dummy;
  StreamingProtobufs__CQITable *cqi_table;
  StreamingProtobufs__SubbandSize *subbandsize;
  size_t n_non_pmi_portindication;
  StreamingProtobufs__PortIndexFor8Ranks **non_pmi_portindication;
  StreamingProtobufs__SemiPersistentOnPUSCHV1530 *semipersistentonpusch_v1530;
  StreamingProtobufs__CSIReportConfig__ReportConfigTypeCase report_config_type_case;
  union {
    StreamingProtobufs__CSIReportConfigTypePeriodic *periodic;
    StreamingProtobufs__CSIReportConfigTypeSemiPersistentOnPUCCH *semipersistentonpucch;
    StreamingProtobufs__CSIReportConfigTypeSemiPersistentOnPUSCH *semipersistentonpusch;
    StreamingProtobufs__CSIReportConfigTypeAperiodic *aperiodic;
  };
  StreamingProtobufs__CSIReportConfig__ReportQuantityCase report_quantity_case;
  union {
    StreamingProtobufs__Null *none;
    StreamingProtobufs__Null *cri_ri_pmi_cqi;
    StreamingProtobufs__Null *cri_ri_i1;
    StreamingProtobufs__CRIRII1CQI *cri_ri_i1_cqi;
    StreamingProtobufs__Null *cri_ri_cqi;
    StreamingProtobufs__Null *cri_rsrp;
    StreamingProtobufs__Null *ssb_index_rsrp;
    StreamingProtobufs__Null *cri_ri_li_pmi_cqi;
  };
  StreamingProtobufs__CSIReportConfig__GroupBasedBeamReportingCase group_based_beam_reporting_case;
  union {
    StreamingProtobufs__Null *enabled;
    StreamingProtobufs__GroupBasedBeamReportingDisabled *disabled;
  };
};
#define STREAMING_PROTOBUFS__CSI__REPORT_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__csi__report_config__descriptor) \
    , 0, NULL, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0,NULL, NULL, STREAMING_PROTOBUFS__CSI__REPORT_CONFIG__REPORT_CONFIG_TYPE__NOT_SET, {0}, STREAMING_PROTOBUFS__CSI__REPORT_CONFIG__REPORT_QUANTITY__NOT_SET, {0}, STREAMING_PROTOBUFS__CSI__REPORT_CONFIG__GROUP_BASED_BEAM_REPORTING__NOT_SET, {0} }


struct  _StreamingProtobufs__CSIReportConfigTypePeriodic
{
  ProtobufCMessage base;
  StreamingProtobufs__CSIReportPeriodicityAndOffset *reportslotconfig;
  size_t n_pucch_csi_resourcelist;
  StreamingProtobufs__PUCCHCSIResource **pucch_csi_resourcelist;
};
#define STREAMING_PROTOBUFS__CSI__REPORT_CONFIG_TYPE__PERIODIC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__csi__report_config_type__periodic__descriptor) \
    , NULL, 0,NULL }


typedef enum {
  STREAMING_PROTOBUFS__CSI__REPORT_PERIODICITY_AND_OFFSET__C__NOT_SET = 0,
  STREAMING_PROTOBUFS__CSI__REPORT_PERIODICITY_AND_OFFSET__C_SLOTS4 = 1,
  STREAMING_PROTOBUFS__CSI__REPORT_PERIODICITY_AND_OFFSET__C_SLOTS5 = 2,
  STREAMING_PROTOBUFS__CSI__REPORT_PERIODICITY_AND_OFFSET__C_SLOTS8 = 3,
  STREAMING_PROTOBUFS__CSI__REPORT_PERIODICITY_AND_OFFSET__C_SLOTS10 = 4,
  STREAMING_PROTOBUFS__CSI__REPORT_PERIODICITY_AND_OFFSET__C_SLOTS16 = 5,
  STREAMING_PROTOBUFS__CSI__REPORT_PERIODICITY_AND_OFFSET__C_SLOTS20 = 6,
  STREAMING_PROTOBUFS__CSI__REPORT_PERIODICITY_AND_OFFSET__C_SLOTS40 = 7,
  STREAMING_PROTOBUFS__CSI__REPORT_PERIODICITY_AND_OFFSET__C_SLOTS80 = 8,
  STREAMING_PROTOBUFS__CSI__REPORT_PERIODICITY_AND_OFFSET__C_SLOTS160 = 9,
  STREAMING_PROTOBUFS__CSI__REPORT_PERIODICITY_AND_OFFSET__C_SLOTS320 = 10
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CSI__REPORT_PERIODICITY_AND_OFFSET__C)
} StreamingProtobufs__CSIReportPeriodicityAndOffset__CCase;

struct  _StreamingProtobufs__CSIReportPeriodicityAndOffset
{
  ProtobufCMessage base;
  StreamingProtobufs__CSIReportPeriodicityAndOffset__CCase c_case;
  union {
    uint32_t slots4;
    uint32_t slots5;
    uint32_t slots8;
    uint32_t slots10;
    uint32_t slots16;
    uint32_t slots20;
    uint32_t slots40;
    uint32_t slots80;
    uint32_t slots160;
    uint32_t slots320;
  };
};
#define STREAMING_PROTOBUFS__CSI__REPORT_PERIODICITY_AND_OFFSET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__csi__report_periodicity_and_offset__descriptor) \
    , STREAMING_PROTOBUFS__CSI__REPORT_PERIODICITY_AND_OFFSET__C__NOT_SET, {0} }


struct  _StreamingProtobufs__PUCCHCSIResource
{
  ProtobufCMessage base;
  uint32_t uplinkbandwidthpartid;
  uint32_t pucch_resource;
};
#define STREAMING_PROTOBUFS__PUCCH__CSI__RESOURCE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pucch__csi__resource__descriptor) \
    , 0, 0 }


struct  _StreamingProtobufs__CSIReportConfigTypeSemiPersistentOnPUCCH
{
  ProtobufCMessage base;
  StreamingProtobufs__CSIReportPeriodicityAndOffset *reportslotconfig;
  size_t n_pucch_csi_resourcelist;
  StreamingProtobufs__PUCCHCSIResource **pucch_csi_resourcelist;
};
#define STREAMING_PROTOBUFS__CSI__REPORT_CONFIG_TYPE__SEMI_PERSISTENT_ON_PUCCH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__csi__report_config_type__semi_persistent_on_pucch__descriptor) \
    , NULL, 0,NULL }


struct  _StreamingProtobufs__CSIReportConfigTypeSemiPersistentOnPUSCH
{
  ProtobufCMessage base;
  StreamingProtobufs__ReportSlotConfig *reportslotconfig;
  size_t n_reportslotoffsetlist;
  uint32_t *reportslotoffsetlist;
  uint32_t p0alpha;
};
#define STREAMING_PROTOBUFS__CSI__REPORT_CONFIG_TYPE__SEMI_PERSISTENT_ON_PUSCH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__csi__report_config_type__semi_persistent_on_pusch__descriptor) \
    , NULL, 0,NULL, 0 }


struct  _StreamingProtobufs__ReportSlotConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__ReportSlotConfig__Value value;
};
#define STREAMING_PROTOBUFS__REPORT_SLOT_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__report_slot_config__descriptor) \
    , STREAMING_PROTOBUFS__REPORT_SLOT_CONFIG__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__CSIReportConfigTypeAperiodic
{
  ProtobufCMessage base;
  size_t n_reportslotoffsetlist;
  uint32_t *reportslotoffsetlist;
};
#define STREAMING_PROTOBUFS__CSI__REPORT_CONFIG_TYPE__APERIODIC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__csi__report_config_type__aperiodic__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__CRIRII1CQI
{
  ProtobufCMessage base;
  StreamingProtobufs__CRIRII1CQI__Value value;
};
#define STREAMING_PROTOBUFS__CRI__RI_I1__CQI__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__cri__ri_i1__cqi__descriptor) \
    , STREAMING_PROTOBUFS__CRI__RI_I1__CQI__VALUE__protobuf_unspecified }


typedef enum {
  STREAMING_PROTOBUFS__REPORT_FREQ_CONFIGURATION__CSI__REPORTING_BAND__NOT_SET = 0,
  STREAMING_PROTOBUFS__REPORT_FREQ_CONFIGURATION__CSI__REPORTING_BAND_SUBBANDS3 = 3,
  STREAMING_PROTOBUFS__REPORT_FREQ_CONFIGURATION__CSI__REPORTING_BAND_SUBBANDS4 = 4,
  STREAMING_PROTOBUFS__REPORT_FREQ_CONFIGURATION__CSI__REPORTING_BAND_SUBBANDS5 = 5,
  STREAMING_PROTOBUFS__REPORT_FREQ_CONFIGURATION__CSI__REPORTING_BAND_SUBBANDS6 = 6,
  STREAMING_PROTOBUFS__REPORT_FREQ_CONFIGURATION__CSI__REPORTING_BAND_SUBBANDS7 = 7,
  STREAMING_PROTOBUFS__REPORT_FREQ_CONFIGURATION__CSI__REPORTING_BAND_SUBBANDS8 = 8,
  STREAMING_PROTOBUFS__REPORT_FREQ_CONFIGURATION__CSI__REPORTING_BAND_SUBBANDS9 = 9,
  STREAMING_PROTOBUFS__REPORT_FREQ_CONFIGURATION__CSI__REPORTING_BAND_SUBBANDS10 = 10,
  STREAMING_PROTOBUFS__REPORT_FREQ_CONFIGURATION__CSI__REPORTING_BAND_SUBBANDS11 = 11,
  STREAMING_PROTOBUFS__REPORT_FREQ_CONFIGURATION__CSI__REPORTING_BAND_SUBBANDS12 = 12,
  STREAMING_PROTOBUFS__REPORT_FREQ_CONFIGURATION__CSI__REPORTING_BAND_SUBBANDS13 = 13,
  STREAMING_PROTOBUFS__REPORT_FREQ_CONFIGURATION__CSI__REPORTING_BAND_SUBBANDS14 = 14,
  STREAMING_PROTOBUFS__REPORT_FREQ_CONFIGURATION__CSI__REPORTING_BAND_SUBBANDS15 = 15,
  STREAMING_PROTOBUFS__REPORT_FREQ_CONFIGURATION__CSI__REPORTING_BAND_SUBBANDS16 = 16,
  STREAMING_PROTOBUFS__REPORT_FREQ_CONFIGURATION__CSI__REPORTING_BAND_SUBBANDS17 = 17,
  STREAMING_PROTOBUFS__REPORT_FREQ_CONFIGURATION__CSI__REPORTING_BAND_SUBBANDS18 = 18,
  STREAMING_PROTOBUFS__REPORT_FREQ_CONFIGURATION__CSI__REPORTING_BAND_SUBBANDS19_V1530 = 19
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__REPORT_FREQ_CONFIGURATION__CSI__REPORTING_BAND)
} StreamingProtobufs__ReportFreqConfiguration__CsiReportingBandCase;

struct  _StreamingProtobufs__ReportFreqConfiguration
{
  ProtobufCMessage base;
  StreamingProtobufs__CQIFormatIndicator *cqi_formatindicator;
  StreamingProtobufs__PMIFormatIndicator *pmi_formatindicator;
  StreamingProtobufs__ReportFreqConfiguration__CsiReportingBandCase csi__reporting_band_case;
  union {
    ProtobufCBinaryData subbands3;
    ProtobufCBinaryData subbands4;
    ProtobufCBinaryData subbands5;
    ProtobufCBinaryData subbands6;
    ProtobufCBinaryData subbands7;
    ProtobufCBinaryData subbands8;
    ProtobufCBinaryData subbands9;
    ProtobufCBinaryData subbands10;
    ProtobufCBinaryData subbands11;
    ProtobufCBinaryData subbands12;
    ProtobufCBinaryData subbands13;
    ProtobufCBinaryData subbands14;
    ProtobufCBinaryData subbands15;
    ProtobufCBinaryData subbands16;
    ProtobufCBinaryData subbands17;
    ProtobufCBinaryData subbands18;
    ProtobufCBinaryData subbands19_v1530;
  };
};
#define STREAMING_PROTOBUFS__REPORT_FREQ_CONFIGURATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__report_freq_configuration__descriptor) \
    , NULL, NULL, STREAMING_PROTOBUFS__REPORT_FREQ_CONFIGURATION__CSI__REPORTING_BAND__NOT_SET, {0} }


struct  _StreamingProtobufs__CQIFormatIndicator
{
  ProtobufCMessage base;
  StreamingProtobufs__CQIFormatIndicator__Value value;
};
#define STREAMING_PROTOBUFS__CQI__FORMAT_INDICATOR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__cqi__format_indicator__descriptor) \
    , STREAMING_PROTOBUFS__CQI__FORMAT_INDICATOR__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__PMIFormatIndicator
{
  ProtobufCMessage base;
  StreamingProtobufs__PMIFormatIndicator__Value value;
};
#define STREAMING_PROTOBUFS__PMI__FORMAT_INDICATOR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pmi__format_indicator__descriptor) \
    , STREAMING_PROTOBUFS__PMI__FORMAT_INDICATOR__VALUE__protobuf_unspecified }


typedef enum {
  STREAMING_PROTOBUFS__CODEBOOK_CONFIG__CODEBOOK_TYPE__NOT_SET = 0,
  STREAMING_PROTOBUFS__CODEBOOK_CONFIG__CODEBOOK_TYPE_TYPE1 = 1,
  STREAMING_PROTOBUFS__CODEBOOK_CONFIG__CODEBOOK_TYPE_TYPE2 = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CODEBOOK_CONFIG__CODEBOOK_TYPE)
} StreamingProtobufs__CodebookConfig__CodebookTypeCase;

struct  _StreamingProtobufs__CodebookConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__CodebookConfig__CodebookTypeCase codebook_type_case;
  union {
    StreamingProtobufs__CodebookTypeType1 *type1;
    StreamingProtobufs__CodebookTypeType2 *type2;
  };
};
#define STREAMING_PROTOBUFS__CODEBOOK_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__codebook_config__descriptor) \
    , STREAMING_PROTOBUFS__CODEBOOK_CONFIG__CODEBOOK_TYPE__NOT_SET, {0} }


typedef enum {
  STREAMING_PROTOBUFS__CODEBOOK_TYPE__TYPE1__SUB_TYPE__NOT_SET = 0,
  STREAMING_PROTOBUFS__CODEBOOK_TYPE__TYPE1__SUB_TYPE_TYPE_I__SINGLE_PANEL = 1,
  STREAMING_PROTOBUFS__CODEBOOK_TYPE__TYPE1__SUB_TYPE_TYPE_I__MULTI_PANELL = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CODEBOOK_TYPE__TYPE1__SUB_TYPE)
} StreamingProtobufs__CodebookTypeType1__SubTypeCase;

struct  _StreamingProtobufs__CodebookTypeType1
{
  ProtobufCMessage base;
  uint32_t codebookmode;
  StreamingProtobufs__CodebookTypeType1__SubTypeCase sub_type_case;
  union {
    StreamingProtobufs__CodebookSubTypeSinglePanel *typei_singlepanel;
    StreamingProtobufs__CodebookSubTypeMultiPanel *typei_multipanell;
  };
};
#define STREAMING_PROTOBUFS__CODEBOOK_TYPE__TYPE1__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__codebook_type__type1__descriptor) \
    , 0, STREAMING_PROTOBUFS__CODEBOOK_TYPE__TYPE1__SUB_TYPE__NOT_SET, {0} }


typedef enum {
  STREAMING_PROTOBUFS__CODEBOOK_SUB_TYPE__SINGLE_PANEL__NR_OF_ANTENNA_PORTS__NOT_SET = 0,
  STREAMING_PROTOBUFS__CODEBOOK_SUB_TYPE__SINGLE_PANEL__NR_OF_ANTENNA_PORTS_TWO = 1,
  STREAMING_PROTOBUFS__CODEBOOK_SUB_TYPE__SINGLE_PANEL__NR_OF_ANTENNA_PORTS_MORE_THAN_TWO = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CODEBOOK_SUB_TYPE__SINGLE_PANEL__NR_OF_ANTENNA_PORTS)
} StreamingProtobufs__CodebookSubTypeSinglePanel__NrOfAntennaPortsCase;

struct  _StreamingProtobufs__CodebookSubTypeSinglePanel
{
  ProtobufCMessage base;
  ProtobufCBinaryData typei_singlepanel_ri_restriction;
  StreamingProtobufs__CodebookSubTypeSinglePanel__NrOfAntennaPortsCase nr_of_antenna_ports_case;
  union {
    StreamingProtobufs__CodebookNrOfAntennaPortsTwo *two;
    StreamingProtobufs__CodebookNrOfAntennaPortsMoreThanTwo *morethantwo;
  };
};
#define STREAMING_PROTOBUFS__CODEBOOK_SUB_TYPE__SINGLE_PANEL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__codebook_sub_type__single_panel__descriptor) \
    , {0,NULL}, STREAMING_PROTOBUFS__CODEBOOK_SUB_TYPE__SINGLE_PANEL__NR_OF_ANTENNA_PORTS__NOT_SET, {0} }


struct  _StreamingProtobufs__CodebookNrOfAntennaPortsTwo
{
  ProtobufCMessage base;
  ProtobufCBinaryData twotx_codebooksubsetrestriction;
};
#define STREAMING_PROTOBUFS__CODEBOOK_NR_OF_ANTENNA_PORTS__TWO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__codebook_nr_of_antenna_ports__two__descriptor) \
    , {0,NULL} }


typedef enum {
  STREAMING_PROTOBUFS__CODEBOOK_NR_OF_ANTENNA_PORTS__MORE_THAN_TWO__N1_N2__NOT_SET = 0,
  STREAMING_PROTOBUFS__CODEBOOK_NR_OF_ANTENNA_PORTS__MORE_THAN_TWO__N1_N2_TWO_ONE__TYPE_I__SINGLE_PANEL__RESTRICTION = 1,
  STREAMING_PROTOBUFS__CODEBOOK_NR_OF_ANTENNA_PORTS__MORE_THAN_TWO__N1_N2_TWO_TWO__TYPE_I__SINGLE_PANEL__RESTRICTION = 2,
  STREAMING_PROTOBUFS__CODEBOOK_NR_OF_ANTENNA_PORTS__MORE_THAN_TWO__N1_N2_FOUR_ONE__TYPE_I__SINGLE_PANEL__RESTRICTION = 3,
  STREAMING_PROTOBUFS__CODEBOOK_NR_OF_ANTENNA_PORTS__MORE_THAN_TWO__N1_N2_THREE_TWO__TYPE_I__SINGLE_PANEL__RESTRICTION = 4,
  STREAMING_PROTOBUFS__CODEBOOK_NR_OF_ANTENNA_PORTS__MORE_THAN_TWO__N1_N2_SIX_ONE__TYPE_I__SINGLE_PANEL__RESTRICTION = 5,
  STREAMING_PROTOBUFS__CODEBOOK_NR_OF_ANTENNA_PORTS__MORE_THAN_TWO__N1_N2_FOUR_TWO__TYPE_I__SINGLE_PANEL__RESTRICTION = 6,
  STREAMING_PROTOBUFS__CODEBOOK_NR_OF_ANTENNA_PORTS__MORE_THAN_TWO__N1_N2_EIGHT_ONE__TYPE_I__SINGLE_PANEL__RESTRICTION = 7,
  STREAMING_PROTOBUFS__CODEBOOK_NR_OF_ANTENNA_PORTS__MORE_THAN_TWO__N1_N2_FOUR_THREE__TYPE_I__SINGLE_PANEL__RESTRICTION = 8,
  STREAMING_PROTOBUFS__CODEBOOK_NR_OF_ANTENNA_PORTS__MORE_THAN_TWO__N1_N2_SIX_TWO__TYPE_I__SINGLE_PANEL__RESTRICTION = 9,
  STREAMING_PROTOBUFS__CODEBOOK_NR_OF_ANTENNA_PORTS__MORE_THAN_TWO__N1_N2_TWELVE_ONE__TYPE_I__SINGLE_PANEL__RESTRICTION = 10,
  STREAMING_PROTOBUFS__CODEBOOK_NR_OF_ANTENNA_PORTS__MORE_THAN_TWO__N1_N2_FOUR_FOUR__TYPE_I__SINGLE_PANEL__RESTRICTION = 11,
  STREAMING_PROTOBUFS__CODEBOOK_NR_OF_ANTENNA_PORTS__MORE_THAN_TWO__N1_N2_EIGHT_TWO__TYPE_I__SINGLE_PANEL__RESTRICTION = 12,
  STREAMING_PROTOBUFS__CODEBOOK_NR_OF_ANTENNA_PORTS__MORE_THAN_TWO__N1_N2_SIXTEEN_ONE__TYPE_I__SINGLE_PANEL__RESTRICTION = 13
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CODEBOOK_NR_OF_ANTENNA_PORTS__MORE_THAN_TWO__N1_N2)
} StreamingProtobufs__CodebookNrOfAntennaPortsMoreThanTwo__N1N2Case;

struct  _StreamingProtobufs__CodebookNrOfAntennaPortsMoreThanTwo
{
  ProtobufCMessage base;
  Google__Protobuf__BytesValue *typei_singlepanel_codebooksubsetrestriction_i2;
  StreamingProtobufs__CodebookNrOfAntennaPortsMoreThanTwo__N1N2Case n1_n2_case;
  union {
    ProtobufCBinaryData two_one_typei_singlepanel_restriction;
    ProtobufCBinaryData two_two_typei_singlepanel_restriction;
    ProtobufCBinaryData four_one_typei_singlepanel_restriction;
    ProtobufCBinaryData three_two_typei_singlepanel_restriction;
    ProtobufCBinaryData six_one_typei_singlepanel_restriction;
    ProtobufCBinaryData four_two_typei_singlepanel_restriction;
    ProtobufCBinaryData eight_one_typei_singlepanel_restriction;
    ProtobufCBinaryData four_three_typei_singlepanel_restriction;
    ProtobufCBinaryData six_two_typei_singlepanel_restriction;
    ProtobufCBinaryData twelve_one_typei_singlepanel_restriction;
    ProtobufCBinaryData four_four_typei_singlepanel_restriction;
    ProtobufCBinaryData eight_two_typei_singlepanel_restriction;
    ProtobufCBinaryData sixteen_one_typei_singlepanel_restriction;
  };
};
#define STREAMING_PROTOBUFS__CODEBOOK_NR_OF_ANTENNA_PORTS__MORE_THAN_TWO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__codebook_nr_of_antenna_ports__more_than_two__descriptor) \
    , NULL, STREAMING_PROTOBUFS__CODEBOOK_NR_OF_ANTENNA_PORTS__MORE_THAN_TWO__N1_N2__NOT_SET, {0} }


typedef enum {
  STREAMING_PROTOBUFS__CODEBOOK_SUB_TYPE__MULTI_PANEL__NG_N1_N2__NOT_SET = 0,
  STREAMING_PROTOBUFS__CODEBOOK_SUB_TYPE__MULTI_PANEL__NG_N1_N2_TWO_TWO_ONE__TYPE_I__MULTI_PANEL__RESTRICTION = 1,
  STREAMING_PROTOBUFS__CODEBOOK_SUB_TYPE__MULTI_PANEL__NG_N1_N2_TWO_FOUR_ONE__TYPE_I__MULTI_PANEL__RESTRICTION = 2,
  STREAMING_PROTOBUFS__CODEBOOK_SUB_TYPE__MULTI_PANEL__NG_N1_N2_FOUR_TWO_ONE__TYPE_I__MULTI_PANEL__RESTRICTION = 3,
  STREAMING_PROTOBUFS__CODEBOOK_SUB_TYPE__MULTI_PANEL__NG_N1_N2_TWO_TWO_TWO__TYPE_I__MULTI_PANEL__RESTRICTION = 4,
  STREAMING_PROTOBUFS__CODEBOOK_SUB_TYPE__MULTI_PANEL__NG_N1_N2_TWO_EIGHT_ONE__TYPE_I__MULTI_PANEL__RESTRICTION = 5,
  STREAMING_PROTOBUFS__CODEBOOK_SUB_TYPE__MULTI_PANEL__NG_N1_N2_FOUR_FOUR_ONE__TYPE_I__MULTI_PANEL__RESTRICTION = 6,
  STREAMING_PROTOBUFS__CODEBOOK_SUB_TYPE__MULTI_PANEL__NG_N1_N2_TWO_FOUR_TWO__TYPE_I__MULTI_PANEL__RESTRICTION = 7,
  STREAMING_PROTOBUFS__CODEBOOK_SUB_TYPE__MULTI_PANEL__NG_N1_N2_FOUR_TWO_TWO__TYPE_I__MULTI_PANEL__RESTRICTION = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CODEBOOK_SUB_TYPE__MULTI_PANEL__NG_N1_N2)
} StreamingProtobufs__CodebookSubTypeMultiPanel__NgN1N2Case;

struct  _StreamingProtobufs__CodebookSubTypeMultiPanel
{
  ProtobufCMessage base;
  ProtobufCBinaryData ri_restriction;
  StreamingProtobufs__CodebookSubTypeMultiPanel__NgN1N2Case ng_n1_n2_case;
  union {
    ProtobufCBinaryData two_two_one_typei_multipanel_restriction;
    ProtobufCBinaryData two_four_one_typei_multipanel_restriction;
    ProtobufCBinaryData four_two_one_typei_multipanel_restriction;
    ProtobufCBinaryData two_two_two_typei_multipanel_restriction;
    ProtobufCBinaryData two_eight_one_typei_multipanel_restriction;
    ProtobufCBinaryData four_four_one_typei_multipanel_restriction;
    ProtobufCBinaryData two_four_two_typei_multipanel_restriction;
    ProtobufCBinaryData four_two_two_typei_multipanel_restriction;
  };
};
#define STREAMING_PROTOBUFS__CODEBOOK_SUB_TYPE__MULTI_PANEL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__codebook_sub_type__multi_panel__descriptor) \
    , {0,NULL}, STREAMING_PROTOBUFS__CODEBOOK_SUB_TYPE__MULTI_PANEL__NG_N1_N2__NOT_SET, {0} }


typedef enum {
  STREAMING_PROTOBUFS__CODEBOOK_TYPE__TYPE2__SUB_TYPE__NOT_SET = 0,
  STREAMING_PROTOBUFS__CODEBOOK_TYPE__TYPE2__SUB_TYPE_TYPE_II = 1,
  STREAMING_PROTOBUFS__CODEBOOK_TYPE__TYPE2__SUB_TYPE_TYPE_II__PORT_SELECTION = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CODEBOOK_TYPE__TYPE2__SUB_TYPE)
} StreamingProtobufs__CodebookTypeType2__SubTypeCase;

struct  _StreamingProtobufs__CodebookTypeType2
{
  ProtobufCMessage base;
  StreamingProtobufs__PhaseAlphabetSize *phasealphabetsize;
  protobuf_c_boolean subbandamplitude;
  StreamingProtobufs__NumberOfBeams *numberofbeams;
  StreamingProtobufs__CodebookTypeType2__SubTypeCase sub_type_case;
  union {
    StreamingProtobufs__CodebookSubTypeTypeII *typeii;
    StreamingProtobufs__CodebookSubTypeTypeIIPortSelection *typeii_portselection;
  };
};
#define STREAMING_PROTOBUFS__CODEBOOK_TYPE__TYPE2__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__codebook_type__type2__descriptor) \
    , NULL, 0, NULL, STREAMING_PROTOBUFS__CODEBOOK_TYPE__TYPE2__SUB_TYPE__NOT_SET, {0} }


typedef enum {
  STREAMING_PROTOBUFS__CODEBOOK_SUB_TYPE__TYPE_II__N1_N2_CODEBOOK_SUBSET_RESTRICTION__NOT_SET = 0,
  STREAMING_PROTOBUFS__CODEBOOK_SUB_TYPE__TYPE_II__N1_N2_CODEBOOK_SUBSET_RESTRICTION_TWO_ONE = 1,
  STREAMING_PROTOBUFS__CODEBOOK_SUB_TYPE__TYPE_II__N1_N2_CODEBOOK_SUBSET_RESTRICTION_TWO_TWO = 2,
  STREAMING_PROTOBUFS__CODEBOOK_SUB_TYPE__TYPE_II__N1_N2_CODEBOOK_SUBSET_RESTRICTION_FOUR_ONE = 3,
  STREAMING_PROTOBUFS__CODEBOOK_SUB_TYPE__TYPE_II__N1_N2_CODEBOOK_SUBSET_RESTRICTION_THREE_TWO = 4,
  STREAMING_PROTOBUFS__CODEBOOK_SUB_TYPE__TYPE_II__N1_N2_CODEBOOK_SUBSET_RESTRICTION_SIX_ONE = 5,
  STREAMING_PROTOBUFS__CODEBOOK_SUB_TYPE__TYPE_II__N1_N2_CODEBOOK_SUBSET_RESTRICTION_FOUR_TWO = 6,
  STREAMING_PROTOBUFS__CODEBOOK_SUB_TYPE__TYPE_II__N1_N2_CODEBOOK_SUBSET_RESTRICTION_EIGHT_ONE = 7,
  STREAMING_PROTOBUFS__CODEBOOK_SUB_TYPE__TYPE_II__N1_N2_CODEBOOK_SUBSET_RESTRICTION_FOUR_THREE = 8,
  STREAMING_PROTOBUFS__CODEBOOK_SUB_TYPE__TYPE_II__N1_N2_CODEBOOK_SUBSET_RESTRICTION_SIX_TWO = 9,
  STREAMING_PROTOBUFS__CODEBOOK_SUB_TYPE__TYPE_II__N1_N2_CODEBOOK_SUBSET_RESTRICTION_TWELVE_ONE = 10,
  STREAMING_PROTOBUFS__CODEBOOK_SUB_TYPE__TYPE_II__N1_N2_CODEBOOK_SUBSET_RESTRICTION_FOUR_FOUR = 11,
  STREAMING_PROTOBUFS__CODEBOOK_SUB_TYPE__TYPE_II__N1_N2_CODEBOOK_SUBSET_RESTRICTION_EIGHT_TWO = 12,
  STREAMING_PROTOBUFS__CODEBOOK_SUB_TYPE__TYPE_II__N1_N2_CODEBOOK_SUBSET_RESTRICTION_SIXTEEN_ONE = 13
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CODEBOOK_SUB_TYPE__TYPE_II__N1_N2_CODEBOOK_SUBSET_RESTRICTION)
} StreamingProtobufs__CodebookSubTypeTypeII__N1N2CodebookSubsetRestrictionCase;

struct  _StreamingProtobufs__CodebookSubTypeTypeII
{
  ProtobufCMessage base;
  ProtobufCBinaryData typeii_ri_restriction;
  StreamingProtobufs__CodebookSubTypeTypeII__N1N2CodebookSubsetRestrictionCase n1_n2_codebook_subset_restriction_case;
  union {
    ProtobufCBinaryData two_one;
    ProtobufCBinaryData two_two;
    ProtobufCBinaryData four_one;
    ProtobufCBinaryData three_two;
    ProtobufCBinaryData six_one;
    ProtobufCBinaryData four_two;
    ProtobufCBinaryData eight_one;
    ProtobufCBinaryData four_three;
    ProtobufCBinaryData six_two;
    ProtobufCBinaryData twelve_one;
    ProtobufCBinaryData four_four;
    ProtobufCBinaryData eight_two;
    ProtobufCBinaryData sixteen_one;
  };
};
#define STREAMING_PROTOBUFS__CODEBOOK_SUB_TYPE__TYPE_II__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__codebook_sub_type__type_ii__descriptor) \
    , {0,NULL}, STREAMING_PROTOBUFS__CODEBOOK_SUB_TYPE__TYPE_II__N1_N2_CODEBOOK_SUBSET_RESTRICTION__NOT_SET, {0} }


struct  _StreamingProtobufs__CodebookSubTypeTypeIIPortSelection
{
  ProtobufCMessage base;
  StreamingProtobufs__PortSelectionSamplingSize *portselectionsamplingsize;
  ProtobufCBinaryData typeii_portselectionri_restriction;
};
#define STREAMING_PROTOBUFS__CODEBOOK_SUB_TYPE__TYPE_II__PORT_SELECTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__codebook_sub_type__type_ii__port_selection__descriptor) \
    , NULL, {0,NULL} }


struct  _StreamingProtobufs__PhaseAlphabetSize
{
  ProtobufCMessage base;
  StreamingProtobufs__PhaseAlphabetSize__Value value;
};
#define STREAMING_PROTOBUFS__PHASE_ALPHABET_SIZE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__phase_alphabet_size__descriptor) \
    , STREAMING_PROTOBUFS__PHASE_ALPHABET_SIZE__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__NumberOfBeams
{
  ProtobufCMessage base;
  StreamingProtobufs__NumberOfBeams__Value value;
};
#define STREAMING_PROTOBUFS__NUMBER_OF_BEAMS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__number_of_beams__descriptor) \
    , STREAMING_PROTOBUFS__NUMBER_OF_BEAMS__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__PortSelectionSamplingSize
{
  ProtobufCMessage base;
  StreamingProtobufs__PortSelectionSamplingSize__Value value;
};
#define STREAMING_PROTOBUFS__PORT_SELECTION_SAMPLING_SIZE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__port_selection_sampling_size__descriptor) \
    , STREAMING_PROTOBUFS__PORT_SELECTION_SAMPLING_SIZE__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__CSIReportConfigDummy
{
  ProtobufCMessage base;
  StreamingProtobufs__CSIReportConfigDummy__Value value;
};
#define STREAMING_PROTOBUFS__CSI__REPORT_CONFIG_DUMMY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__csi__report_config_dummy__descriptor) \
    , STREAMING_PROTOBUFS__CSI__REPORT_CONFIG_DUMMY__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__GroupBasedBeamReportingDisabled
{
  ProtobufCMessage base;
  StreamingProtobufs__NrofReportedRS *nrofreportedrs;
};
#define STREAMING_PROTOBUFS__GROUP_BASED_BEAM_REPORTING__DISABLED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__group_based_beam_reporting__disabled__descriptor) \
    , NULL }


struct  _StreamingProtobufs__NrofReportedRS
{
  ProtobufCMessage base;
  StreamingProtobufs__NrofReportedRS__Value value;
};
#define STREAMING_PROTOBUFS__NROF_REPORTED_RS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__nrof_reported_rs__descriptor) \
    , STREAMING_PROTOBUFS__NROF_REPORTED_RS__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__CQITable
{
  ProtobufCMessage base;
  StreamingProtobufs__CQITable__Value value;
};
#define STREAMING_PROTOBUFS__CQI__TABLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__cqi__table__descriptor) \
    , STREAMING_PROTOBUFS__CQI__TABLE__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__SubbandSize
{
  ProtobufCMessage base;
  StreamingProtobufs__SubbandSize__Value value;
};
#define STREAMING_PROTOBUFS__SUBBAND_SIZE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__subband_size__descriptor) \
    , STREAMING_PROTOBUFS__SUBBAND_SIZE__VALUE__protobuf_unspecified }


typedef enum {
  STREAMING_PROTOBUFS__PORT_INDEX_FOR8_RANKS__C__NOT_SET = 0,
  STREAMING_PROTOBUFS__PORT_INDEX_FOR8_RANKS__C_PORT_INDEX8 = 1,
  STREAMING_PROTOBUFS__PORT_INDEX_FOR8_RANKS__C_PORT_INDEX4 = 2,
  STREAMING_PROTOBUFS__PORT_INDEX_FOR8_RANKS__C_PORT_INDEX2 = 3,
  STREAMING_PROTOBUFS__PORT_INDEX_FOR8_RANKS__C_PORT_INDEX1 = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PORT_INDEX_FOR8_RANKS__C)
} StreamingProtobufs__PortIndexFor8Ranks__CCase;

struct  _StreamingProtobufs__PortIndexFor8Ranks
{
  ProtobufCMessage base;
  StreamingProtobufs__PortIndexFor8Ranks__CCase c_case;
  union {
    StreamingProtobufs__PortIndex8 *portindex8;
    StreamingProtobufs__PortIndex4 *portindex4;
    StreamingProtobufs__PortIndex2 *portindex2;
    StreamingProtobufs__Null *portindex1;
  };
};
#define STREAMING_PROTOBUFS__PORT_INDEX_FOR8_RANKS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__port_index_for8_ranks__descriptor) \
    , STREAMING_PROTOBUFS__PORT_INDEX_FOR8_RANKS__C__NOT_SET, {0} }


struct  _StreamingProtobufs__PortIndex8
{
  ProtobufCMessage base;
  Google__Protobuf__UInt32Value *rank1_8;
  size_t n_rank2_8;
  uint32_t *rank2_8;
  size_t n_rank3_8;
  uint32_t *rank3_8;
  size_t n_rank4_8;
  uint32_t *rank4_8;
  size_t n_rank5_8;
  uint32_t *rank5_8;
  size_t n_rank6_8;
  uint32_t *rank6_8;
  size_t n_rank7_8;
  uint32_t *rank7_8;
  size_t n_rank8_8;
  uint32_t *rank8_8;
};
#define STREAMING_PROTOBUFS__PORT_INDEX8__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__port_index8__descriptor) \
    , NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL }


struct  _StreamingProtobufs__PortIndex4
{
  ProtobufCMessage base;
  Google__Protobuf__UInt32Value *rank1_4;
  size_t n_rank2_4;
  uint32_t *rank2_4;
  size_t n_rank3_4;
  uint32_t *rank3_4;
  size_t n_rank4_4;
  uint32_t *rank4_4;
};
#define STREAMING_PROTOBUFS__PORT_INDEX4__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__port_index4__descriptor) \
    , NULL, 0,NULL, 0,NULL, 0,NULL }


struct  _StreamingProtobufs__PortIndex2
{
  ProtobufCMessage base;
  Google__Protobuf__UInt32Value *rank1_2;
  size_t n_rank2_2;
  uint32_t *rank2_2;
};
#define STREAMING_PROTOBUFS__PORT_INDEX2__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__port_index2__descriptor) \
    , NULL, 0,NULL }


struct  _StreamingProtobufs__SemiPersistentOnPUSCHV1530
{
  ProtobufCMessage base;
  StreamingProtobufs__SemiPersistentOnPUSCHV1530__ReportSlotConfigV1530 reportslotconfig_v1530;
};
#define STREAMING_PROTOBUFS__SEMI_PERSISTENT_ON_PUSCH_V1530__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__semi_persistent_on_pusch_v1530__descriptor) \
    , STREAMING_PROTOBUFS__SEMI_PERSISTENT_ON_PUSCH_V1530__REPORT_SLOT_CONFIG_V1530__protobuf_unspecified }


struct  _StreamingProtobufs__CSIAperiodicTriggerStateList
{
  ProtobufCMessage base;
  size_t n_items;
  StreamingProtobufs__CSIAperiodicTriggerState **items;
};
#define STREAMING_PROTOBUFS__CSI__APERIODIC_TRIGGER_STATE_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__csi__aperiodic_trigger_state_list__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__CSIAperiodicTriggerState
{
  ProtobufCMessage base;
  size_t n_associatedreportconfiginfolist;
  StreamingProtobufs__CSIAssociatedReportConfigInfo **associatedreportconfiginfolist;
};
#define STREAMING_PROTOBUFS__CSI__APERIODIC_TRIGGER_STATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__csi__aperiodic_trigger_state__descriptor) \
    , 0,NULL }


typedef enum {
  STREAMING_PROTOBUFS__CSI__ASSOCIATED_REPORT_CONFIG_INFO__RESOURCES_FOR_CHANNEL__NOT_SET = 0,
  STREAMING_PROTOBUFS__CSI__ASSOCIATED_REPORT_CONFIG_INFO__RESOURCES_FOR_CHANNEL_NZP__CSI__RS = 2,
  STREAMING_PROTOBUFS__CSI__ASSOCIATED_REPORT_CONFIG_INFO__RESOURCES_FOR_CHANNEL_CSI__SSB__RESOURCE_SET = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CSI__ASSOCIATED_REPORT_CONFIG_INFO__RESOURCES_FOR_CHANNEL)
} StreamingProtobufs__CSIAssociatedReportConfigInfo__ResourcesForChannelCase;

struct  _StreamingProtobufs__CSIAssociatedReportConfigInfo
{
  ProtobufCMessage base;
  uint32_t reportconfigid;
  Google__Protobuf__UInt32Value *csi_im_resourcesforinterference;
  Google__Protobuf__UInt32Value *nzp_csi_rs_resourcesforinterference;
  StreamingProtobufs__CSIAssociatedReportConfigInfo__ResourcesForChannelCase resources_for_channel_case;
  union {
    StreamingProtobufs__NZPCSIRS *nzp_csi_rs;
    uint32_t csi_ssb_resourceset;
  };
};
#define STREAMING_PROTOBUFS__CSI__ASSOCIATED_REPORT_CONFIG_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__csi__associated_report_config_info__descriptor) \
    , 0, NULL, NULL, STREAMING_PROTOBUFS__CSI__ASSOCIATED_REPORT_CONFIG_INFO__RESOURCES_FOR_CHANNEL__NOT_SET, {0} }


struct  _StreamingProtobufs__NZPCSIRS
{
  ProtobufCMessage base;
  uint32_t resourceset;
  size_t n_qcl_info;
  uint32_t *qcl_info;
};
#define STREAMING_PROTOBUFS__NZP__CSI__RS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__nzp__csi__rs__descriptor) \
    , 0, 0,NULL }


struct  _StreamingProtobufs__CSISemiPersistentOnPUSCHTriggerStateList
{
  ProtobufCMessage base;
  size_t n_items;
  StreamingProtobufs__CSISemiPersistentOnPUSCHTriggerState **items;
};
#define STREAMING_PROTOBUFS__CSI__SEMI_PERSISTENT_ON_PUSCH__TRIGGER_STATE_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__csi__semi_persistent_on_pusch__trigger_state_list__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__CSISemiPersistentOnPUSCHTriggerState
{
  ProtobufCMessage base;
  uint32_t associatedreportconfiginfo;
};
#define STREAMING_PROTOBUFS__CSI__SEMI_PERSISTENT_ON_PUSCH__TRIGGER_STATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__csi__semi_persistent_on_pusch__trigger_state__descriptor) \
    , 0 }


struct  _StreamingProtobufs__SCellDeactivationTimer
{
  ProtobufCMessage base;
  StreamingProtobufs__SCellDeactivationTimer__Value value;
};
#define STREAMING_PROTOBUFS__SCELL_DEACTIVATION_TIMER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__scell_deactivation_timer__descriptor) \
    , STREAMING_PROTOBUFS__SCELL_DEACTIVATION_TIMER__VALUE__protobuf_unspecified }


typedef enum {
  STREAMING_PROTOBUFS__CROSS_CARRIER_SCHEDULING_CONFIG__SCHEDULING_CELL_INFO__NOT_SET = 0,
  STREAMING_PROTOBUFS__CROSS_CARRIER_SCHEDULING_CONFIG__SCHEDULING_CELL_INFO_OWN = 1,
  STREAMING_PROTOBUFS__CROSS_CARRIER_SCHEDULING_CONFIG__SCHEDULING_CELL_INFO_OTHER = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CROSS_CARRIER_SCHEDULING_CONFIG__SCHEDULING_CELL_INFO)
} StreamingProtobufs__CrossCarrierSchedulingConfig__SchedulingCellInfoCase;

struct  _StreamingProtobufs__CrossCarrierSchedulingConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__CrossCarrierSchedulingConfig__SchedulingCellInfoCase scheduling_cell_info_case;
  union {
    StreamingProtobufs__OwnCrossCarrierSchedulingConfig *own;
    StreamingProtobufs__OtherCrossCarrierSchedulingConfig *other;
  };
};
#define STREAMING_PROTOBUFS__CROSS_CARRIER_SCHEDULING_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__cross_carrier_scheduling_config__descriptor) \
    , STREAMING_PROTOBUFS__CROSS_CARRIER_SCHEDULING_CONFIG__SCHEDULING_CELL_INFO__NOT_SET, {0} }


struct  _StreamingProtobufs__OwnCrossCarrierSchedulingConfig
{
  ProtobufCMessage base;
  protobuf_c_boolean cif_presence;
};
#define STREAMING_PROTOBUFS__OWN_CROSS_CARRIER_SCHEDULING_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__own_cross_carrier_scheduling_config__descriptor) \
    , 0 }


struct  _StreamingProtobufs__OtherCrossCarrierSchedulingConfig
{
  ProtobufCMessage base;
  uint32_t schedulingcellid;
  uint32_t cif_inschedulingcell;
};
#define STREAMING_PROTOBUFS__OTHER_CROSS_CARRIER_SCHEDULING_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__other_cross_carrier_scheduling_config__descriptor) \
    , 0, 0 }


struct  _StreamingProtobufs__PathlossReferenceLinking
{
  ProtobufCMessage base;
  StreamingProtobufs__PathlossReferenceLinking__Value value;
};
#define STREAMING_PROTOBUFS__PATHLOSS_REFERENCE_LINKING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pathloss_reference_linking__descriptor) \
    , STREAMING_PROTOBUFS__PATHLOSS_REFERENCE_LINKING__VALUE__protobuf_unspecified }


typedef enum {
  STREAMING_PROTOBUFS__MEAS_CONFIG__S__MEASURE_CONFIG__NOT_SET = 0,
  STREAMING_PROTOBUFS__MEAS_CONFIG__S__MEASURE_CONFIG_SSB__RSRP = 7,
  STREAMING_PROTOBUFS__MEAS_CONFIG__S__MEASURE_CONFIG_CSI__RSRP = 8
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__MEAS_CONFIG__S__MEASURE_CONFIG)
} StreamingProtobufs__MeasConfig__SMeasureConfigCase;

struct  _StreamingProtobufs__MeasConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__MeasObjectToRemoveList *measobjecttoremovelist;
  StreamingProtobufs__MeasObjectToAddModList *measobjecttoaddmodlist;
  StreamingProtobufs__ReportConfigToRemoveList *reportconfigtoremovelist;
  StreamingProtobufs__ReportConfigToAddModList *reportconfigtoaddmodlist;
  StreamingProtobufs__MeasIdToRemoveList *measidtoremovelist;
  StreamingProtobufs__MeasIdToAddModList *measidtoaddmodlist;
  StreamingProtobufs__QuantityConfig *quantityconfig;
  StreamingProtobufs__MeasGapConfig *measgapconfig;
  StreamingProtobufs__MeasGapSharingConfig *measgapsharingconfig;
  StreamingProtobufs__MeasConfig__SMeasureConfigCase s__measure_config_case;
  union {
    uint32_t ssb_rsrp;
    uint32_t csi_rsrp;
  };
};
#define STREAMING_PROTOBUFS__MEAS_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__meas_config__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, STREAMING_PROTOBUFS__MEAS_CONFIG__S__MEASURE_CONFIG__NOT_SET, {0} }


struct  _StreamingProtobufs__MeasObjectToRemoveList
{
  ProtobufCMessage base;
  size_t n_items;
  uint32_t *items;
};
#define STREAMING_PROTOBUFS__MEAS_OBJECT_TO_REMOVE_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__meas_object_to_remove_list__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__MeasObjectToAddModList
{
  ProtobufCMessage base;
  size_t n_items;
  StreamingProtobufs__MeasObjectToAddMod **items;
};
#define STREAMING_PROTOBUFS__MEAS_OBJECT_TO_ADD_MOD_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__meas_object_to_add_mod_list__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__ReportConfigToRemoveList
{
  ProtobufCMessage base;
  size_t n_items;
  uint32_t *items;
};
#define STREAMING_PROTOBUFS__REPORT_CONFIG_TO_REMOVE_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__report_config_to_remove_list__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__ReportConfigToAddModList
{
  ProtobufCMessage base;
  size_t n_items;
  StreamingProtobufs__ReportConfigToAddMod **items;
};
#define STREAMING_PROTOBUFS__REPORT_CONFIG_TO_ADD_MOD_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__report_config_to_add_mod_list__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__MeasIdToRemoveList
{
  ProtobufCMessage base;
  size_t n_items;
  uint32_t *items;
};
#define STREAMING_PROTOBUFS__MEAS_ID_TO_REMOVE_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__meas_id_to_remove_list__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__MeasIdToAddModList
{
  ProtobufCMessage base;
  size_t n_items;
  StreamingProtobufs__MeasIdToAddMod **items;
};
#define STREAMING_PROTOBUFS__MEAS_ID_TO_ADD_MOD_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__meas_id_to_add_mod_list__descriptor) \
    , 0,NULL }


typedef enum {
  STREAMING_PROTOBUFS__MEAS_OBJECT_TO_ADD_MOD__MEAS_OBJECT__NOT_SET = 0,
  STREAMING_PROTOBUFS__MEAS_OBJECT_TO_ADD_MOD__MEAS_OBJECT_MEAS_OBJECT_NR = 2,
  STREAMING_PROTOBUFS__MEAS_OBJECT_TO_ADD_MOD__MEAS_OBJECT_MEAS_OBJECT_EUTRA = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__MEAS_OBJECT_TO_ADD_MOD__MEAS_OBJECT)
} StreamingProtobufs__MeasObjectToAddMod__MeasObjectCase;

struct  _StreamingProtobufs__MeasObjectToAddMod
{
  ProtobufCMessage base;
  uint32_t measobjectid;
  StreamingProtobufs__MeasObjectToAddMod__MeasObjectCase meas_object_case;
  union {
    StreamingProtobufs__MeasObjectNR *measobjectnr;
    StreamingProtobufs__MeasObjectEUTRA *measobjecteutra;
  };
};
#define STREAMING_PROTOBUFS__MEAS_OBJECT_TO_ADD_MOD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__meas_object_to_add_mod__descriptor) \
    , 0, STREAMING_PROTOBUFS__MEAS_OBJECT_TO_ADD_MOD__MEAS_OBJECT__NOT_SET, {0} }


struct  _StreamingProtobufs__MeasObjectNR
{
  ProtobufCMessage base;
  Google__Protobuf__UInt32Value *ssbfrequency;
  StreamingProtobufs__SubcarrierSpacing *ssbsubcarrierspacing;
  StreamingProtobufs__SSBMTC *smtc1;
  StreamingProtobufs__SSBMTC2 *smtc2;
  Google__Protobuf__UInt32Value *reffreqcsi_rs;
  StreamingProtobufs__ReferenceSignalConfig *referencesignalconfig;
  StreamingProtobufs__ThresholdNR *absthreshss_blocksconsolidation;
  StreamingProtobufs__ThresholdNR *absthreshcsi_rs_consolidation;
  Google__Protobuf__UInt32Value *nrofss_blockstoaverage;
  Google__Protobuf__UInt32Value *nrofcsi_rs_resourcestoaverage;
  uint32_t quantityconfigindex;
  StreamingProtobufs__QOffsetRangeList *offsetmo;
  StreamingProtobufs__PCIList *cellstoremovelist;
  StreamingProtobufs__CellsToAddModList *cellstoaddmodlist;
  StreamingProtobufs__PCIRangeIndexList *blackcellstoremovelist;
  size_t n_blackcellstoaddmodlist;
  StreamingProtobufs__PCIRangeElement **blackcellstoaddmodlist;
  StreamingProtobufs__PCIRangeIndexList *whitecellstoremovelist;
  size_t n_whitecellstoaddmodlist;
  StreamingProtobufs__PCIRangeElement **whitecellstoaddmodlist;
  Google__Protobuf__UInt32Value *freqbandindicatornr_v1530;
  StreamingProtobufs__MeasCycleSCellV1530 *meascyclescell_v1530;
};
#define STREAMING_PROTOBUFS__MEAS_OBJECT_NR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__meas_object_nr__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, 0,NULL, NULL, 0,NULL, NULL, NULL }


typedef enum {
  STREAMING_PROTOBUFS__REFERENCE_SIGNAL_CONFIG__CSI_RS__RESOURCE_CONFIG_MOBILITY__NOT_SET = 0,
  STREAMING_PROTOBUFS__REFERENCE_SIGNAL_CONFIG__CSI_RS__RESOURCE_CONFIG_MOBILITY_RELEASE_CSI_RS__RESOURCE_CONFIG_MOBILITY = 2,
  STREAMING_PROTOBUFS__REFERENCE_SIGNAL_CONFIG__CSI_RS__RESOURCE_CONFIG_MOBILITY_SETUP_CSI_RS__RESOURCE_CONFIG_MOBILITY = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__REFERENCE_SIGNAL_CONFIG__CSI_RS__RESOURCE_CONFIG_MOBILITY)
} StreamingProtobufs__ReferenceSignalConfig__CsiRsResourceConfigMobilityCase;

struct  _StreamingProtobufs__ReferenceSignalConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__SSBConfigMobility *ssb_configmobility;
  StreamingProtobufs__ReferenceSignalConfig__CsiRsResourceConfigMobilityCase csi_rs__resource_config_mobility_case;
  union {
    StreamingProtobufs__Null *release_csi_rs_resourceconfigmobility;
    StreamingProtobufs__CSIRSResourceConfigMobility *setup_csi_rs_resourceconfigmobility;
  };
};
#define STREAMING_PROTOBUFS__REFERENCE_SIGNAL_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__reference_signal_config__descriptor) \
    , NULL, STREAMING_PROTOBUFS__REFERENCE_SIGNAL_CONFIG__CSI_RS__RESOURCE_CONFIG_MOBILITY__NOT_SET, {0} }


typedef enum {
  STREAMING_PROTOBUFS__SSB__CONFIG_MOBILITY__SSB__TO_MEASURE__NOT_SET = 0,
  STREAMING_PROTOBUFS__SSB__CONFIG_MOBILITY__SSB__TO_MEASURE_RELEASE_SSB__TO_MEASURE = 1,
  STREAMING_PROTOBUFS__SSB__CONFIG_MOBILITY__SSB__TO_MEASURE_SETUP_SSB__TO_MEASURE = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SSB__CONFIG_MOBILITY__SSB__TO_MEASURE)
} StreamingProtobufs__SSBConfigMobility__SsbToMeasureCase;

struct  _StreamingProtobufs__SSBConfigMobility
{
  ProtobufCMessage base;
  protobuf_c_boolean derivessb_indexfromcell;
  StreamingProtobufs__SSRSSIMeasurement *ss_rssi_measurement;
  StreamingProtobufs__SSBConfigMobility__SsbToMeasureCase ssb__to_measure_case;
  union {
    StreamingProtobufs__Null *release_ssb_tomeasure;
    StreamingProtobufs__SSBToMeasure *setup_ssb_tomeasure;
  };
};
#define STREAMING_PROTOBUFS__SSB__CONFIG_MOBILITY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__ssb__config_mobility__descriptor) \
    , 0, NULL, STREAMING_PROTOBUFS__SSB__CONFIG_MOBILITY__SSB__TO_MEASURE__NOT_SET, {0} }


typedef enum {
  STREAMING_PROTOBUFS__SSB__TO_MEASURE__C__NOT_SET = 0,
  STREAMING_PROTOBUFS__SSB__TO_MEASURE__C_SHORT_BITMAP = 1,
  STREAMING_PROTOBUFS__SSB__TO_MEASURE__C_MEDIUM_BITMAP = 2,
  STREAMING_PROTOBUFS__SSB__TO_MEASURE__C_LONG_BITMAP = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SSB__TO_MEASURE__C)
} StreamingProtobufs__SSBToMeasure__CCase;

struct  _StreamingProtobufs__SSBToMeasure
{
  ProtobufCMessage base;
  StreamingProtobufs__SSBToMeasure__CCase c_case;
  union {
    ProtobufCBinaryData shortbitmap;
    ProtobufCBinaryData mediumbitmap;
    ProtobufCBinaryData longbitmap;
  };
};
#define STREAMING_PROTOBUFS__SSB__TO_MEASURE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__ssb__to_measure__descriptor) \
    , STREAMING_PROTOBUFS__SSB__TO_MEASURE__C__NOT_SET, {0} }


struct  _StreamingProtobufs__SSRSSIMeasurement
{
  ProtobufCMessage base;
  ProtobufCBinaryData measurementslots;
  uint32_t endsymbol;
};
#define STREAMING_PROTOBUFS__SS__RSSI__MEASUREMENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__ss__rssi__measurement__descriptor) \
    , {0,NULL}, 0 }


struct  _StreamingProtobufs__CSIRSResourceConfigMobility
{
  ProtobufCMessage base;
  StreamingProtobufs__SubcarrierSpacing *subcarrierspacing;
  size_t n_csi_rs_celllist_mobility;
  StreamingProtobufs__CSIRSCellMobility **csi_rs_celllist_mobility;
  Google__Protobuf__UInt32Value *refservcellindex_v1530;
};
#define STREAMING_PROTOBUFS__CSI__RS__RESOURCE_CONFIG_MOBILITY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__csi__rs__resource_config_mobility__descriptor) \
    , NULL, 0,NULL, NULL }


struct  _StreamingProtobufs__CSIRSCellMobility
{
  ProtobufCMessage base;
  uint32_t cellid;
  StreamingProtobufs__CSIRSMeasurementBW *csi_rs_measurementbw;
  StreamingProtobufs__Density *density;
  size_t n_csi_rs_resourcelist_mobility;
  StreamingProtobufs__CSIRSResourceMobility **csi_rs_resourcelist_mobility;
};
#define STREAMING_PROTOBUFS__CSI__RS__CELL_MOBILITY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__csi__rs__cell_mobility__descriptor) \
    , 0, NULL, NULL, 0,NULL }


struct  _StreamingProtobufs__CSIRSMeasurementBW
{
  ProtobufCMessage base;
  StreamingProtobufs__CSIRSMeasurementBW__NrofPRBs nrofprbs;
  uint32_t startprb;
};
#define STREAMING_PROTOBUFS__CSI__RS__MEASUREMENT_BW__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__csi__rs__measurement_bw__descriptor) \
    , STREAMING_PROTOBUFS__CSI__RS__MEASUREMENT_BW__NROF_PRBS__protobuf_unspecified, 0 }


struct  _StreamingProtobufs__Density
{
  ProtobufCMessage base;
  StreamingProtobufs__Density__Value value;
};
#define STREAMING_PROTOBUFS__DENSITY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__density__descriptor) \
    , STREAMING_PROTOBUFS__DENSITY__VALUE__protobuf_unspecified }


typedef enum {
  STREAMING_PROTOBUFS__CSI__RS__RESOURCE__MOBILITY__SLOT_CONFIG__NOT_SET = 0,
  STREAMING_PROTOBUFS__CSI__RS__RESOURCE__MOBILITY__SLOT_CONFIG_MS4 = 2,
  STREAMING_PROTOBUFS__CSI__RS__RESOURCE__MOBILITY__SLOT_CONFIG_MS5 = 3,
  STREAMING_PROTOBUFS__CSI__RS__RESOURCE__MOBILITY__SLOT_CONFIG_MS10 = 4,
  STREAMING_PROTOBUFS__CSI__RS__RESOURCE__MOBILITY__SLOT_CONFIG_MS20 = 5,
  STREAMING_PROTOBUFS__CSI__RS__RESOURCE__MOBILITY__SLOT_CONFIG_MS40 = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CSI__RS__RESOURCE__MOBILITY__SLOT_CONFIG)
} StreamingProtobufs__CSIRSResourceMobility__SlotConfigCase;

typedef enum {
  STREAMING_PROTOBUFS__CSI__RS__RESOURCE__MOBILITY__FREQUENCY_DOMAIN_ALLOCATION__NOT_SET = 0,
  STREAMING_PROTOBUFS__CSI__RS__RESOURCE__MOBILITY__FREQUENCY_DOMAIN_ALLOCATION_ROW1 = 8,
  STREAMING_PROTOBUFS__CSI__RS__RESOURCE__MOBILITY__FREQUENCY_DOMAIN_ALLOCATION_ROW2 = 9
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CSI__RS__RESOURCE__MOBILITY__FREQUENCY_DOMAIN_ALLOCATION)
} StreamingProtobufs__CSIRSResourceMobility__FrequencyDomainAllocationCase;

struct  _StreamingProtobufs__CSIRSResourceMobility
{
  ProtobufCMessage base;
  uint32_t csi_rs_index;
  StreamingProtobufs__AssociatedSSB *associatedssb;
  uint32_t firstofdmsymbolintimedomain;
  uint32_t sequencegenerationconfig;
  StreamingProtobufs__CSIRSResourceMobility__SlotConfigCase slot_config_case;
  union {
    uint32_t ms4;
    uint32_t ms5;
    uint32_t ms10;
    uint32_t ms20;
    uint32_t ms40;
  };
  StreamingProtobufs__CSIRSResourceMobility__FrequencyDomainAllocationCase frequency_domain_allocation_case;
  union {
    ProtobufCBinaryData row1;
    ProtobufCBinaryData row2;
  };
};
#define STREAMING_PROTOBUFS__CSI__RS__RESOURCE__MOBILITY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__csi__rs__resource__mobility__descriptor) \
    , 0, NULL, 0, 0, STREAMING_PROTOBUFS__CSI__RS__RESOURCE__MOBILITY__SLOT_CONFIG__NOT_SET, {0}, STREAMING_PROTOBUFS__CSI__RS__RESOURCE__MOBILITY__FREQUENCY_DOMAIN_ALLOCATION__NOT_SET, {0} }


struct  _StreamingProtobufs__AssociatedSSB
{
  ProtobufCMessage base;
  uint32_t ssb_index;
  protobuf_c_boolean isquasicolocated;
};
#define STREAMING_PROTOBUFS__ASSOCIATED_SSB__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__associated_ssb__descriptor) \
    , 0, 0 }


struct  _StreamingProtobufs__ThresholdNR
{
  ProtobufCMessage base;
  Google__Protobuf__UInt32Value *thresholdrsrp;
  Google__Protobuf__UInt32Value *thresholdrsrq;
  Google__Protobuf__UInt32Value *thresholdsinr;
};
#define STREAMING_PROTOBUFS__THRESHOLD_NR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__threshold_nr__descriptor) \
    , NULL, NULL, NULL }


struct  _StreamingProtobufs__QOffsetRangeList
{
  ProtobufCMessage base;
  StreamingProtobufs__QOffsetRange *rsrpoffsetssb;
  StreamingProtobufs__QOffsetRange *rsrqoffsetssb;
  StreamingProtobufs__QOffsetRange *sinroffsetssb;
  StreamingProtobufs__QOffsetRange *rsrpoffsetcsi_rs;
  StreamingProtobufs__QOffsetRange *rsrqoffsetcsi_rs;
  StreamingProtobufs__QOffsetRange *sinroffsetcsi_rs;
};
#define STREAMING_PROTOBUFS__Q__OFFSET_RANGE_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__q__offset_range_list__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, NULL }


struct  _StreamingProtobufs__QOffsetRange
{
  ProtobufCMessage base;
  StreamingProtobufs__QOffsetRange__Value value;
};
#define STREAMING_PROTOBUFS__Q__OFFSET_RANGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__q__offset_range__descriptor) \
    , STREAMING_PROTOBUFS__Q__OFFSET_RANGE__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__CellsToAddModList
{
  ProtobufCMessage base;
  size_t n_items;
  StreamingProtobufs__CellsToAddMod **items;
};
#define STREAMING_PROTOBUFS__CELLS_TO_ADD_MOD_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__cells_to_add_mod_list__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__CellsToAddMod
{
  ProtobufCMessage base;
  uint32_t physcellid;
  StreamingProtobufs__QOffsetRangeList *cellindividualoffset;
};
#define STREAMING_PROTOBUFS__CELLS_TO_ADD_MOD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__cells_to_add_mod__descriptor) \
    , 0, NULL }


struct  _StreamingProtobufs__PCIList
{
  ProtobufCMessage base;
  size_t n_items;
  uint32_t *items;
};
#define STREAMING_PROTOBUFS__PCI__LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pci__list__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__PCIRangeIndexList
{
  ProtobufCMessage base;
  size_t n_items;
  uint32_t *items;
};
#define STREAMING_PROTOBUFS__PCI__RANGE_INDEX_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pci__range_index_list__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__PCIRangeElement
{
  ProtobufCMessage base;
  uint32_t pci_rangeindex;
  StreamingProtobufs__PCIRange *pci_range;
};
#define STREAMING_PROTOBUFS__PCI__RANGE_ELEMENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pci__range_element__descriptor) \
    , 0, NULL }


struct  _StreamingProtobufs__PCIRange
{
  ProtobufCMessage base;
  uint32_t start;
  StreamingProtobufs__Range *range;
};
#define STREAMING_PROTOBUFS__PCI__RANGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pci__range__descriptor) \
    , 0, NULL }


struct  _StreamingProtobufs__Range
{
  ProtobufCMessage base;
  StreamingProtobufs__Range__Value value;
};
#define STREAMING_PROTOBUFS__RANGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__range__descriptor) \
    , STREAMING_PROTOBUFS__RANGE__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__MeasCycleSCellV1530
{
  ProtobufCMessage base;
  StreamingProtobufs__MeasCycleSCellV1530__Value value;
};
#define STREAMING_PROTOBUFS__MEAS_CYCLE_SCELL_V1530__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__meas_cycle_scell_v1530__descriptor) \
    , STREAMING_PROTOBUFS__MEAS_CYCLE_SCELL_V1530__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__MeasObjectEUTRA
{
  ProtobufCMessage base;
  uint32_t carrierfreq;
  StreamingProtobufs__EUTRAAllowedMeasBandwidth *allowedmeasbandwidth;
  StreamingProtobufs__EUTRACellIndexList *cellstoremovelisteutran;
  size_t n_cellstoaddmodlisteutran;
  StreamingProtobufs__EUTRACell **cellstoaddmodlisteutran;
  StreamingProtobufs__EUTRACellIndexList *blackcellstoremovelisteutran;
  size_t n_blackcellstoaddmodlisteutran;
  StreamingProtobufs__EUTRABlackCell **blackcellstoaddmodlisteutran;
  protobuf_c_boolean eutra_presenceantennaport1;
  StreamingProtobufs__EUTRAQOffsetRange *eutra_q_offsetrange;
  protobuf_c_boolean widebandrsrq_meas;
};
#define STREAMING_PROTOBUFS__MEAS_OBJECT_EUTRA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__meas_object_eutra__descriptor) \
    , 0, NULL, NULL, 0,NULL, NULL, 0,NULL, 0, NULL, 0 }


struct  _StreamingProtobufs__EUTRAAllowedMeasBandwidth
{
  ProtobufCMessage base;
  StreamingProtobufs__EUTRAAllowedMeasBandwidth__Value value;
};
#define STREAMING_PROTOBUFS__EUTRA__ALLOWED_MEAS_BANDWIDTH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__eutra__allowed_meas_bandwidth__descriptor) \
    , STREAMING_PROTOBUFS__EUTRA__ALLOWED_MEAS_BANDWIDTH__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__EUTRACellIndexList
{
  ProtobufCMessage base;
  size_t n_items;
  uint32_t *items;
};
#define STREAMING_PROTOBUFS__EUTRA__CELL_INDEX_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__eutra__cell_index_list__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__EUTRACell
{
  ProtobufCMessage base;
  uint32_t cellindexeutra;
  uint32_t physcellid;
  StreamingProtobufs__EUTRAQOffsetRange *cellindividualoffset;
};
#define STREAMING_PROTOBUFS__EUTRA__CELL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__eutra__cell__descriptor) \
    , 0, 0, NULL }


struct  _StreamingProtobufs__EUTRAQOffsetRange
{
  ProtobufCMessage base;
  StreamingProtobufs__EUTRAQOffsetRange__Value value;
};
#define STREAMING_PROTOBUFS__EUTRA__Q__OFFSET_RANGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__eutra__q__offset_range__descriptor) \
    , STREAMING_PROTOBUFS__EUTRA__Q__OFFSET_RANGE__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__EUTRABlackCell
{
  ProtobufCMessage base;
  uint32_t cellindexeutra;
  StreamingProtobufs__EUTRAPhysCellIdRange *physcellidrange;
};
#define STREAMING_PROTOBUFS__EUTRA__BLACK_CELL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__eutra__black_cell__descriptor) \
    , 0, NULL }


struct  _StreamingProtobufs__EUTRAPhysCellIdRange
{
  ProtobufCMessage base;
  uint32_t start;
  StreamingProtobufs__EUTRARange *range;
};
#define STREAMING_PROTOBUFS__EUTRA__PHYS_CELL_ID_RANGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__eutra__phys_cell_id_range__descriptor) \
    , 0, NULL }


struct  _StreamingProtobufs__EUTRARange
{
  ProtobufCMessage base;
  StreamingProtobufs__EUTRARange__Value value;
};
#define STREAMING_PROTOBUFS__EUTRA__RANGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__eutra__range__descriptor) \
    , STREAMING_PROTOBUFS__EUTRA__RANGE__VALUE__protobuf_unspecified }


typedef enum {
  STREAMING_PROTOBUFS__REPORT_CONFIG_TO_ADD_MOD__REPORT_CONFIG__NOT_SET = 0,
  STREAMING_PROTOBUFS__REPORT_CONFIG_TO_ADD_MOD__REPORT_CONFIG_REPORT_CONFIG_NR = 2,
  STREAMING_PROTOBUFS__REPORT_CONFIG_TO_ADD_MOD__REPORT_CONFIG_REPORT_CONFIG_INTER_RAT = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__REPORT_CONFIG_TO_ADD_MOD__REPORT_CONFIG)
} StreamingProtobufs__ReportConfigToAddMod__ReportConfigCase;

struct  _StreamingProtobufs__ReportConfigToAddMod
{
  ProtobufCMessage base;
  uint32_t reportconfigid;
  StreamingProtobufs__ReportConfigToAddMod__ReportConfigCase report_config_case;
  union {
    StreamingProtobufs__ReportConfigNR *reportconfignr;
    StreamingProtobufs__ReportConfigInterRAT *reportconfiginterrat;
  };
};
#define STREAMING_PROTOBUFS__REPORT_CONFIG_TO_ADD_MOD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__report_config_to_add_mod__descriptor) \
    , 0, STREAMING_PROTOBUFS__REPORT_CONFIG_TO_ADD_MOD__REPORT_CONFIG__NOT_SET, {0} }


typedef enum {
  STREAMING_PROTOBUFS__REPORT_CONFIG_NR__REPORT_TYPE__NOT_SET = 0,
  STREAMING_PROTOBUFS__REPORT_CONFIG_NR__REPORT_TYPE_PERIODICAL = 1,
  STREAMING_PROTOBUFS__REPORT_CONFIG_NR__REPORT_TYPE_EVENT_TRIGGERED = 2,
  STREAMING_PROTOBUFS__REPORT_CONFIG_NR__REPORT_TYPE_REPORT_CGI = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__REPORT_CONFIG_NR__REPORT_TYPE)
} StreamingProtobufs__ReportConfigNR__ReportTypeCase;

struct  _StreamingProtobufs__ReportConfigNR
{
  ProtobufCMessage base;
  StreamingProtobufs__ReportConfigNR__ReportTypeCase report_type_case;
  union {
    StreamingProtobufs__PeriodicalReportConfig *periodical;
    StreamingProtobufs__EventTriggerConfig *eventtriggered;
    StreamingProtobufs__ReportCGI *reportcgi;
  };
};
#define STREAMING_PROTOBUFS__REPORT_CONFIG_NR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__report_config_nr__descriptor) \
    , STREAMING_PROTOBUFS__REPORT_CONFIG_NR__REPORT_TYPE__NOT_SET, {0} }


struct  _StreamingProtobufs__PeriodicalReportConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__NRRSType *rstype;
  StreamingProtobufs__ReportInterval *reportinterval;
  StreamingProtobufs__ReportAmount *reportamount;
  StreamingProtobufs__MeasReportQuantity *reportquantitycell;
  uint32_t maxreportcells;
  StreamingProtobufs__MeasReportQuantity *reportquantityrs_indexes;
  Google__Protobuf__UInt32Value *maxnrofrs_indexestoreport;
  protobuf_c_boolean includebeammeasurements;
  protobuf_c_boolean usewhitecelllist;
};
#define STREAMING_PROTOBUFS__PERIODICAL_REPORT_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__periodical_report_config__descriptor) \
    , NULL, NULL, NULL, NULL, 0, NULL, NULL, 0, 0 }


struct  _StreamingProtobufs__NRRSType
{
  ProtobufCMessage base;
  StreamingProtobufs__NRRSType__Value value;
};
#define STREAMING_PROTOBUFS__NR__RS__TYPE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__nr__rs__type__descriptor) \
    , STREAMING_PROTOBUFS__NR__RS__TYPE__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__NRFreqInfo
{
  ProtobufCMessage base;
  Google__Protobuf__UInt32Value *measuredfrequency;
};
#define STREAMING_PROTOBUFS__NR__FREQ_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__nr__freq_info__descriptor) \
    , NULL }


struct  _StreamingProtobufs__ReportInterval
{
  ProtobufCMessage base;
  StreamingProtobufs__ReportInterval__Value value;
};
#define STREAMING_PROTOBUFS__REPORT_INTERVAL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__report_interval__descriptor) \
    , STREAMING_PROTOBUFS__REPORT_INTERVAL__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__ReportAmount
{
  ProtobufCMessage base;
  StreamingProtobufs__ReportAmount__Value value;
};
#define STREAMING_PROTOBUFS__REPORT_AMOUNT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__report_amount__descriptor) \
    , STREAMING_PROTOBUFS__REPORT_AMOUNT__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__MeasReportQuantity
{
  ProtobufCMessage base;
  protobuf_c_boolean rsrp;
  protobuf_c_boolean rsrq;
  protobuf_c_boolean sinr;
};
#define STREAMING_PROTOBUFS__MEAS_REPORT_QUANTITY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__meas_report_quantity__descriptor) \
    , 0, 0, 0 }


typedef enum {
  STREAMING_PROTOBUFS__EVENT_TRIGGER_CONFIG__EVENT_ID__NOT_SET = 0,
  STREAMING_PROTOBUFS__EVENT_TRIGGER_CONFIG__EVENT_ID_EVENT_A1 = 1,
  STREAMING_PROTOBUFS__EVENT_TRIGGER_CONFIG__EVENT_ID_EVENT_A2 = 2,
  STREAMING_PROTOBUFS__EVENT_TRIGGER_CONFIG__EVENT_ID_EVENT_A3 = 3,
  STREAMING_PROTOBUFS__EVENT_TRIGGER_CONFIG__EVENT_ID_EVENT_A4 = 4,
  STREAMING_PROTOBUFS__EVENT_TRIGGER_CONFIG__EVENT_ID_EVENT_A5 = 5,
  STREAMING_PROTOBUFS__EVENT_TRIGGER_CONFIG__EVENT_ID_EVENT_A6 = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__EVENT_TRIGGER_CONFIG__EVENT_ID)
} StreamingProtobufs__EventTriggerConfig__EventIdCase;

struct  _StreamingProtobufs__EventTriggerConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__NRRSType *rstype;
  StreamingProtobufs__ReportInterval *reportinterval;
  StreamingProtobufs__ReportAmount *reportamount;
  StreamingProtobufs__MeasReportQuantity *reportquantitycell;
  uint32_t maxreportcells;
  StreamingProtobufs__MeasReportQuantity *reportquantityrs_indexes;
  Google__Protobuf__UInt32Value *maxnrofrs_indexestoreport;
  protobuf_c_boolean includebeammeasurements;
  StreamingProtobufs__ReportAddNeighMeas *reportaddneighmeas;
  StreamingProtobufs__EventTriggerConfig__EventIdCase event_id_case;
  union {
    StreamingProtobufs__EventA1 *eventa1;
    StreamingProtobufs__EventA2 *eventa2;
    StreamingProtobufs__EventA3 *eventa3;
    StreamingProtobufs__EventA4 *eventa4;
    StreamingProtobufs__EventA5 *eventa5;
    StreamingProtobufs__EventA6 *eventa6;
  };
};
#define STREAMING_PROTOBUFS__EVENT_TRIGGER_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__event_trigger_config__descriptor) \
    , NULL, NULL, NULL, NULL, 0, NULL, NULL, 0, NULL, STREAMING_PROTOBUFS__EVENT_TRIGGER_CONFIG__EVENT_ID__NOT_SET, {0} }


struct  _StreamingProtobufs__EventA1
{
  ProtobufCMessage base;
  StreamingProtobufs__MeasTriggerQuantity *a1_threshold;
  protobuf_c_boolean reportonleave;
  uint32_t hysteresis;
  StreamingProtobufs__TimeToTrigger *timetotrigger;
};
#define STREAMING_PROTOBUFS__EVENT_A1__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__event_a1__descriptor) \
    , NULL, 0, 0, NULL }


struct  _StreamingProtobufs__EventA2
{
  ProtobufCMessage base;
  StreamingProtobufs__MeasTriggerQuantity *a2_threshold;
  protobuf_c_boolean reportonleave;
  uint32_t hysteresis;
  StreamingProtobufs__TimeToTrigger *timetotrigger;
};
#define STREAMING_PROTOBUFS__EVENT_A2__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__event_a2__descriptor) \
    , NULL, 0, 0, NULL }


struct  _StreamingProtobufs__EventA3
{
  ProtobufCMessage base;
  StreamingProtobufs__MeasTriggerQuantityOffset *a3_offset;
  protobuf_c_boolean reportonleave;
  uint32_t hysteresis;
  StreamingProtobufs__TimeToTrigger *timetotrigger;
  protobuf_c_boolean usewhitecelllist;
};
#define STREAMING_PROTOBUFS__EVENT_A3__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__event_a3__descriptor) \
    , NULL, 0, 0, NULL, 0 }


struct  _StreamingProtobufs__EventA4
{
  ProtobufCMessage base;
  StreamingProtobufs__MeasTriggerQuantity *a4_threshold;
  protobuf_c_boolean reportonleave;
  uint32_t hysteresis;
  StreamingProtobufs__TimeToTrigger *timetotrigger;
  protobuf_c_boolean usewhitecelllist;
};
#define STREAMING_PROTOBUFS__EVENT_A4__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__event_a4__descriptor) \
    , NULL, 0, 0, NULL, 0 }


struct  _StreamingProtobufs__EventA5
{
  ProtobufCMessage base;
  StreamingProtobufs__MeasTriggerQuantity *a5_threshold1;
  StreamingProtobufs__MeasTriggerQuantity *a5_threshold2;
  protobuf_c_boolean reportonleave;
  uint32_t hysteresis;
  StreamingProtobufs__TimeToTrigger *timetotrigger;
  protobuf_c_boolean usewhitecelllist;
};
#define STREAMING_PROTOBUFS__EVENT_A5__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__event_a5__descriptor) \
    , NULL, NULL, 0, 0, NULL, 0 }


struct  _StreamingProtobufs__EventA6
{
  ProtobufCMessage base;
  StreamingProtobufs__MeasTriggerQuantityOffset *a6_offset;
  protobuf_c_boolean reportonleave;
  uint32_t hysteresis;
  StreamingProtobufs__TimeToTrigger *timetotrigger;
  protobuf_c_boolean usewhitecelllist;
};
#define STREAMING_PROTOBUFS__EVENT_A6__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__event_a6__descriptor) \
    , NULL, 0, 0, NULL, 0 }


typedef enum {
  STREAMING_PROTOBUFS__MEAS_TRIGGER_QUANTITY__C__NOT_SET = 0,
  STREAMING_PROTOBUFS__MEAS_TRIGGER_QUANTITY__C_RSRP = 1,
  STREAMING_PROTOBUFS__MEAS_TRIGGER_QUANTITY__C_RSRQ = 2,
  STREAMING_PROTOBUFS__MEAS_TRIGGER_QUANTITY__C_SINR = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__MEAS_TRIGGER_QUANTITY__C)
} StreamingProtobufs__MeasTriggerQuantity__CCase;

struct  _StreamingProtobufs__MeasTriggerQuantity
{
  ProtobufCMessage base;
  StreamingProtobufs__MeasTriggerQuantity__CCase c_case;
  union {
    uint32_t rsrp;
    uint32_t rsrq;
    uint32_t sinr;
  };
};
#define STREAMING_PROTOBUFS__MEAS_TRIGGER_QUANTITY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__meas_trigger_quantity__descriptor) \
    , STREAMING_PROTOBUFS__MEAS_TRIGGER_QUANTITY__C__NOT_SET, {0} }


struct  _StreamingProtobufs__TimeToTrigger
{
  ProtobufCMessage base;
  StreamingProtobufs__TimeToTrigger__Value value;
};
#define STREAMING_PROTOBUFS__TIME_TO_TRIGGER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__time_to_trigger__descriptor) \
    , STREAMING_PROTOBUFS__TIME_TO_TRIGGER__VALUE__protobuf_unspecified }


typedef enum {
  STREAMING_PROTOBUFS__MEAS_TRIGGER_QUANTITY_OFFSET__C__NOT_SET = 0,
  STREAMING_PROTOBUFS__MEAS_TRIGGER_QUANTITY_OFFSET__C_RSRP = 1,
  STREAMING_PROTOBUFS__MEAS_TRIGGER_QUANTITY_OFFSET__C_RSRQ = 2,
  STREAMING_PROTOBUFS__MEAS_TRIGGER_QUANTITY_OFFSET__C_SINR = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__MEAS_TRIGGER_QUANTITY_OFFSET__C)
} StreamingProtobufs__MeasTriggerQuantityOffset__CCase;

struct  _StreamingProtobufs__MeasTriggerQuantityOffset
{
  ProtobufCMessage base;
  StreamingProtobufs__MeasTriggerQuantityOffset__CCase c_case;
  union {
    int32_t rsrp;
    int32_t rsrq;
    int32_t sinr;
  };
};
#define STREAMING_PROTOBUFS__MEAS_TRIGGER_QUANTITY_OFFSET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__meas_trigger_quantity_offset__descriptor) \
    , STREAMING_PROTOBUFS__MEAS_TRIGGER_QUANTITY_OFFSET__C__NOT_SET, {0} }


struct  _StreamingProtobufs__ReportAddNeighMeas
{
  ProtobufCMessage base;
  StreamingProtobufs__ReportAddNeighMeas__Value value;
};
#define STREAMING_PROTOBUFS__REPORT_ADD_NEIGH_MEAS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__report_add_neigh_meas__descriptor) \
    , STREAMING_PROTOBUFS__REPORT_ADD_NEIGH_MEAS__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__ReportCGI
{
  ProtobufCMessage base;
  uint32_t cellforwhichtoreportcgi;
};
#define STREAMING_PROTOBUFS__REPORT_CGI__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__report_cgi__descriptor) \
    , 0 }


typedef enum {
  STREAMING_PROTOBUFS__REPORT_CONFIG_INTER_RAT__REPORT_TYPE__NOT_SET = 0,
  STREAMING_PROTOBUFS__REPORT_CONFIG_INTER_RAT__REPORT_TYPE_PERIODICAL = 1,
  STREAMING_PROTOBUFS__REPORT_CONFIG_INTER_RAT__REPORT_TYPE_EVENT_TRIGGERED = 2,
  STREAMING_PROTOBUFS__REPORT_CONFIG_INTER_RAT__REPORT_TYPE_REPORT_CGI = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__REPORT_CONFIG_INTER_RAT__REPORT_TYPE)
} StreamingProtobufs__ReportConfigInterRAT__ReportTypeCase;

struct  _StreamingProtobufs__ReportConfigInterRAT
{
  ProtobufCMessage base;
  StreamingProtobufs__ReportConfigInterRAT__ReportTypeCase report_type_case;
  union {
    StreamingProtobufs__PeriodicalReportConfigInterRAT *periodical;
    StreamingProtobufs__EventTriggerConfigInterRAT *eventtriggered;
    StreamingProtobufs__ReportCGIEUTRA *reportcgi;
  };
};
#define STREAMING_PROTOBUFS__REPORT_CONFIG_INTER_RAT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__report_config_inter_rat__descriptor) \
    , STREAMING_PROTOBUFS__REPORT_CONFIG_INTER_RAT__REPORT_TYPE__NOT_SET, {0} }


struct  _StreamingProtobufs__PeriodicalReportConfigInterRAT
{
  ProtobufCMessage base;
  StreamingProtobufs__ReportInterval *reportinterval;
  StreamingProtobufs__ReportAmount *reportamount;
  StreamingProtobufs__MeasReportQuantity *reportquantity;
  uint32_t maxreportcells;
};
#define STREAMING_PROTOBUFS__PERIODICAL_REPORT_CONFIG_INTER_RAT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__periodical_report_config_inter_rat__descriptor) \
    , NULL, NULL, NULL, 0 }


typedef enum {
  STREAMING_PROTOBUFS__EVENT_TRIGGER_CONFIG_INTER_RAT__EVENT_ID__NOT_SET = 0,
  STREAMING_PROTOBUFS__EVENT_TRIGGER_CONFIG_INTER_RAT__EVENT_ID_EVENT_B1 = 1,
  STREAMING_PROTOBUFS__EVENT_TRIGGER_CONFIG_INTER_RAT__EVENT_ID_EVENT_B2 = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__EVENT_TRIGGER_CONFIG_INTER_RAT__EVENT_ID)
} StreamingProtobufs__EventTriggerConfigInterRAT__EventIdCase;

struct  _StreamingProtobufs__EventTriggerConfigInterRAT
{
  ProtobufCMessage base;
  StreamingProtobufs__NRRSType *rstype;
  StreamingProtobufs__ReportInterval *reportinterval;
  StreamingProtobufs__ReportAmount *reportamount;
  StreamingProtobufs__MeasReportQuantity *reportquantity;
  uint32_t maxreportcells;
  StreamingProtobufs__EventTriggerConfigInterRAT__EventIdCase event_id_case;
  union {
    StreamingProtobufs__EventB1 *eventb1;
    StreamingProtobufs__EventB2 *eventb2;
  };
};
#define STREAMING_PROTOBUFS__EVENT_TRIGGER_CONFIG_INTER_RAT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__event_trigger_config_inter_rat__descriptor) \
    , NULL, NULL, NULL, NULL, 0, STREAMING_PROTOBUFS__EVENT_TRIGGER_CONFIG_INTER_RAT__EVENT_ID__NOT_SET, {0} }


struct  _StreamingProtobufs__EventB1
{
  ProtobufCMessage base;
  StreamingProtobufs__MeasTriggerQuantityEUTRA *b1_thresholdeutra;
  protobuf_c_boolean reportonleave;
  uint32_t hysteresis;
  StreamingProtobufs__TimeToTrigger *timetotrigger;
};
#define STREAMING_PROTOBUFS__EVENT_B1__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__event_b1__descriptor) \
    , NULL, 0, 0, NULL }


struct  _StreamingProtobufs__EventB2
{
  ProtobufCMessage base;
  StreamingProtobufs__MeasTriggerQuantity *b2_threshold1;
  StreamingProtobufs__MeasTriggerQuantityEUTRA *b2_threshold2eutra;
  protobuf_c_boolean reportonleave;
  uint32_t hysteresis;
  StreamingProtobufs__TimeToTrigger *timetotrigger;
};
#define STREAMING_PROTOBUFS__EVENT_B2__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__event_b2__descriptor) \
    , NULL, NULL, 0, 0, NULL }


typedef enum {
  STREAMING_PROTOBUFS__MEAS_TRIGGER_QUANTITY_EUTRA__C__NOT_SET = 0,
  STREAMING_PROTOBUFS__MEAS_TRIGGER_QUANTITY_EUTRA__C_RSRP = 1,
  STREAMING_PROTOBUFS__MEAS_TRIGGER_QUANTITY_EUTRA__C_RSRQ = 2,
  STREAMING_PROTOBUFS__MEAS_TRIGGER_QUANTITY_EUTRA__C_SINR = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__MEAS_TRIGGER_QUANTITY_EUTRA__C)
} StreamingProtobufs__MeasTriggerQuantityEUTRA__CCase;

struct  _StreamingProtobufs__MeasTriggerQuantityEUTRA
{
  ProtobufCMessage base;
  StreamingProtobufs__MeasTriggerQuantityEUTRA__CCase c_case;
  union {
    uint32_t rsrp;
    uint32_t rsrq;
    uint32_t sinr;
  };
};
#define STREAMING_PROTOBUFS__MEAS_TRIGGER_QUANTITY_EUTRA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__meas_trigger_quantity_eutra__descriptor) \
    , STREAMING_PROTOBUFS__MEAS_TRIGGER_QUANTITY_EUTRA__C__NOT_SET, {0} }


struct  _StreamingProtobufs__ReportCGIEUTRA
{
  ProtobufCMessage base;
  uint32_t cellforwhichtoreportcgi;
};
#define STREAMING_PROTOBUFS__REPORT_CGI__EUTRA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__report_cgi__eutra__descriptor) \
    , 0 }


struct  _StreamingProtobufs__MeasIdToAddMod
{
  ProtobufCMessage base;
  uint32_t measid;
  uint32_t measobjectid;
  uint32_t reportconfigid;
};
#define STREAMING_PROTOBUFS__MEAS_ID_TO_ADD_MOD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__meas_id_to_add_mod__descriptor) \
    , 0, 0, 0 }


struct  _StreamingProtobufs__QuantityConfig
{
  ProtobufCMessage base;
  size_t n_quantityconfignr_list;
  StreamingProtobufs__QuantityConfigNR **quantityconfignr_list;
  StreamingProtobufs__FilterConfig *quantityconfigeutra;
};
#define STREAMING_PROTOBUFS__QUANTITY_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__quantity_config__descriptor) \
    , 0,NULL, NULL }


struct  _StreamingProtobufs__QuantityConfigNR
{
  ProtobufCMessage base;
  StreamingProtobufs__QuantityConfigRS *quantityconfigcell;
  StreamingProtobufs__QuantityConfigRS *quantityconfigrs_index;
};
#define STREAMING_PROTOBUFS__QUANTITY_CONFIG_NR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__quantity_config_nr__descriptor) \
    , NULL, NULL }


struct  _StreamingProtobufs__QuantityConfigRS
{
  ProtobufCMessage base;
  StreamingProtobufs__FilterConfig *ssb_filterconfig;
  StreamingProtobufs__FilterConfig *csi_rs_filterconfig;
};
#define STREAMING_PROTOBUFS__QUANTITY_CONFIG_RS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__quantity_config_rs__descriptor) \
    , NULL, NULL }


struct  _StreamingProtobufs__FilterConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__FilterCoefficient *filtercoefficientrsrp;
  StreamingProtobufs__FilterCoefficient *filtercoefficientrsrq;
  StreamingProtobufs__FilterCoefficient *filtercoefficientrs_sinr;
};
#define STREAMING_PROTOBUFS__FILTER_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__filter_config__descriptor) \
    , NULL, NULL, NULL }


struct  _StreamingProtobufs__FilterCoefficient
{
  ProtobufCMessage base;
  StreamingProtobufs__FilterCoefficient__Value value;
};
#define STREAMING_PROTOBUFS__FILTER_COEFFICIENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__filter_coefficient__descriptor) \
    , STREAMING_PROTOBUFS__FILTER_COEFFICIENT__VALUE__protobuf_unspecified }


typedef enum {
  STREAMING_PROTOBUFS__MEAS_GAP_CONFIG__GAP_FR2__NOT_SET = 0,
  STREAMING_PROTOBUFS__MEAS_GAP_CONFIG__GAP_FR2_RELEASE_GAP_FR2 = 1,
  STREAMING_PROTOBUFS__MEAS_GAP_CONFIG__GAP_FR2_SETUP_GAP_FR2 = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__MEAS_GAP_CONFIG__GAP_FR2)
} StreamingProtobufs__MeasGapConfig__GapFR2Case;

typedef enum {
  STREAMING_PROTOBUFS__MEAS_GAP_CONFIG__GAP_FR1__NOT_SET = 0,
  STREAMING_PROTOBUFS__MEAS_GAP_CONFIG__GAP_FR1_RELEASE_GAP_FR1 = 3,
  STREAMING_PROTOBUFS__MEAS_GAP_CONFIG__GAP_FR1_SETUP_GAP_FR1 = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__MEAS_GAP_CONFIG__GAP_FR1)
} StreamingProtobufs__MeasGapConfig__GapFR1Case;

typedef enum {
  STREAMING_PROTOBUFS__MEAS_GAP_CONFIG__GAP_UE__NOT_SET = 0,
  STREAMING_PROTOBUFS__MEAS_GAP_CONFIG__GAP_UE_RELEASE_GAP_UE = 5,
  STREAMING_PROTOBUFS__MEAS_GAP_CONFIG__GAP_UE_SETUP_GAP_UE = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__MEAS_GAP_CONFIG__GAP_UE)
} StreamingProtobufs__MeasGapConfig__GapUECase;

struct  _StreamingProtobufs__MeasGapConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__MeasGapConfig__GapFR2Case gap_fr2_case;
  union {
    StreamingProtobufs__Null *release_gapfr2;
    StreamingProtobufs__GapConfig *setup_gapfr2;
  };
  StreamingProtobufs__MeasGapConfig__GapFR1Case gap_fr1_case;
  union {
    StreamingProtobufs__Null *release_gapfr1;
    StreamingProtobufs__GapConfig *setup_gapfr1;
  };
  StreamingProtobufs__MeasGapConfig__GapUECase gap_ue_case;
  union {
    StreamingProtobufs__Null *release_gapue;
    StreamingProtobufs__GapConfig *setup_gapue;
  };
};
#define STREAMING_PROTOBUFS__MEAS_GAP_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__meas_gap_config__descriptor) \
    , STREAMING_PROTOBUFS__MEAS_GAP_CONFIG__GAP_FR2__NOT_SET, {0}, STREAMING_PROTOBUFS__MEAS_GAP_CONFIG__GAP_FR1__NOT_SET, {0}, STREAMING_PROTOBUFS__MEAS_GAP_CONFIG__GAP_UE__NOT_SET, {0} }


struct  _StreamingProtobufs__GapConfig
{
  ProtobufCMessage base;
  uint32_t gapoffset;
  StreamingProtobufs__MGL *mgl;
  StreamingProtobufs__MGRP *mgrp;
  StreamingProtobufs__MGTA *mgta;
};
#define STREAMING_PROTOBUFS__GAP_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__gap_config__descriptor) \
    , 0, NULL, NULL, NULL }


struct  _StreamingProtobufs__MGL
{
  ProtobufCMessage base;
  StreamingProtobufs__MGL__Value value;
};
#define STREAMING_PROTOBUFS__MGL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__mgl__descriptor) \
    , STREAMING_PROTOBUFS__MGL__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__MGRP
{
  ProtobufCMessage base;
  StreamingProtobufs__MGRP__Value value;
};
#define STREAMING_PROTOBUFS__MGRP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__mgrp__descriptor) \
    , STREAMING_PROTOBUFS__MGRP__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__MGTA
{
  ProtobufCMessage base;
  StreamingProtobufs__MGTA__Value value;
};
#define STREAMING_PROTOBUFS__MGTA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__mgta__descriptor) \
    , STREAMING_PROTOBUFS__MGTA__VALUE__protobuf_unspecified }


typedef enum {
  STREAMING_PROTOBUFS__MEAS_GAP_SHARING_CONFIG__GAP_SHARING_FR2__NOT_SET = 0,
  STREAMING_PROTOBUFS__MEAS_GAP_SHARING_CONFIG__GAP_SHARING_FR2_RELEASE_GAP_SHARING_FR2 = 1,
  STREAMING_PROTOBUFS__MEAS_GAP_SHARING_CONFIG__GAP_SHARING_FR2_SETUP_GAP_SHARING_FR2 = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__MEAS_GAP_SHARING_CONFIG__GAP_SHARING_FR2)
} StreamingProtobufs__MeasGapSharingConfig__GapSharingFR2Case;

typedef enum {
  STREAMING_PROTOBUFS__MEAS_GAP_SHARING_CONFIG__GAP_SHARING_FR1__NOT_SET = 0,
  STREAMING_PROTOBUFS__MEAS_GAP_SHARING_CONFIG__GAP_SHARING_FR1_RELEASE_GAP_SHARING_FR1 = 3,
  STREAMING_PROTOBUFS__MEAS_GAP_SHARING_CONFIG__GAP_SHARING_FR1_SETUP_GAP_SHARING_FR1 = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__MEAS_GAP_SHARING_CONFIG__GAP_SHARING_FR1)
} StreamingProtobufs__MeasGapSharingConfig__GapSharingFR1Case;

typedef enum {
  STREAMING_PROTOBUFS__MEAS_GAP_SHARING_CONFIG__GAP_SHARING_UE__NOT_SET = 0,
  STREAMING_PROTOBUFS__MEAS_GAP_SHARING_CONFIG__GAP_SHARING_UE_RELEASE_GAP_SHARING_UE = 5,
  STREAMING_PROTOBUFS__MEAS_GAP_SHARING_CONFIG__GAP_SHARING_UE_SETUP_GAP_SHARING_UE = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__MEAS_GAP_SHARING_CONFIG__GAP_SHARING_UE)
} StreamingProtobufs__MeasGapSharingConfig__GapSharingUECase;

struct  _StreamingProtobufs__MeasGapSharingConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__MeasGapSharingConfig__GapSharingFR2Case gap_sharing_fr2_case;
  union {
    StreamingProtobufs__Null *release_gapsharingfr2;
    StreamingProtobufs__MeasGapSharingScheme *setup_gapsharingfr2;
  };
  StreamingProtobufs__MeasGapSharingConfig__GapSharingFR1Case gap_sharing_fr1_case;
  union {
    StreamingProtobufs__Null *release_gapsharingfr1;
    StreamingProtobufs__MeasGapSharingScheme *setup_gapsharingfr1;
  };
  StreamingProtobufs__MeasGapSharingConfig__GapSharingUECase gap_sharing_ue_case;
  union {
    StreamingProtobufs__Null *release_gapsharingue;
    StreamingProtobufs__MeasGapSharingScheme *setup_gapsharingue;
  };
};
#define STREAMING_PROTOBUFS__MEAS_GAP_SHARING_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__meas_gap_sharing_config__descriptor) \
    , STREAMING_PROTOBUFS__MEAS_GAP_SHARING_CONFIG__GAP_SHARING_FR2__NOT_SET, {0}, STREAMING_PROTOBUFS__MEAS_GAP_SHARING_CONFIG__GAP_SHARING_FR1__NOT_SET, {0}, STREAMING_PROTOBUFS__MEAS_GAP_SHARING_CONFIG__GAP_SHARING_UE__NOT_SET, {0} }


struct  _StreamingProtobufs__MeasGapSharingScheme
{
  ProtobufCMessage base;
  StreamingProtobufs__MeasGapSharingScheme__Value value;
};
#define STREAMING_PROTOBUFS__MEAS_GAP_SHARING_SCHEME__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__meas_gap_sharing_scheme__descriptor) \
    , STREAMING_PROTOBUFS__MEAS_GAP_SHARING_SCHEME__VALUE__protobuf_unspecified }


typedef enum {
  STREAMING_PROTOBUFS__OTHER_CONFIG__DELAY_BUDGET_REPORTING_CONFIG__NOT_SET = 0,
  STREAMING_PROTOBUFS__OTHER_CONFIG__DELAY_BUDGET_REPORTING_CONFIG_RELEASE = 1,
  STREAMING_PROTOBUFS__OTHER_CONFIG__DELAY_BUDGET_REPORTING_CONFIG_SETUP = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__OTHER_CONFIG__DELAY_BUDGET_REPORTING_CONFIG)
} StreamingProtobufs__OtherConfig__DelayBudgetReportingConfigCase;

struct  _StreamingProtobufs__OtherConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__OtherConfig__DelayBudgetReportingConfigCase delay_budget_reporting_config_case;
  union {
    StreamingProtobufs__Null *release;
    StreamingProtobufs__DelayBudgetReportingProhibitTimer *setup;
  };
};
#define STREAMING_PROTOBUFS__OTHER_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__other_config__descriptor) \
    , STREAMING_PROTOBUFS__OTHER_CONFIG__DELAY_BUDGET_REPORTING_CONFIG__NOT_SET, {0} }


struct  _StreamingProtobufs__DelayBudgetReportingProhibitTimer
{
  ProtobufCMessage base;
  StreamingProtobufs__DelayBudgetReportingProhibitTimer__Value value;
};
#define STREAMING_PROTOBUFS__DELAY_BUDGET_REPORTING_PROHIBIT_TIMER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__delay_budget_reporting_prohibit_timer__descriptor) \
    , STREAMING_PROTOBUFS__DELAY_BUDGET_REPORTING_PROHIBIT_TIMER__VALUE__protobuf_unspecified }


typedef enum {
  STREAMING_PROTOBUFS__OTHER_CONFIG_V1540__OVERHEATING_ASSISTANCE_CONFIG__NOT_SET = 0,
  STREAMING_PROTOBUFS__OTHER_CONFIG_V1540__OVERHEATING_ASSISTANCE_CONFIG_RELEASE_OVERHEATING_ASSISTANCE_CONFIG = 1,
  STREAMING_PROTOBUFS__OTHER_CONFIG_V1540__OVERHEATING_ASSISTANCE_CONFIG_SETUP_OVERHEATING_ASSISTANCE_CONFIG = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__OTHER_CONFIG_V1540__OVERHEATING_ASSISTANCE_CONFIG)
} StreamingProtobufs__OtherConfigV1540__OverheatingAssistanceConfigCase;

struct  _StreamingProtobufs__OtherConfigV1540
{
  ProtobufCMessage base;
  StreamingProtobufs__OtherConfigV1540__OverheatingAssistanceConfigCase overheating_assistance_config_case;
  union {
    StreamingProtobufs__Null *release_overheatingassistanceconfig;
    StreamingProtobufs__OverheatingAssistanceConfig *setup_overheatingassistanceconfig;
  };
};
#define STREAMING_PROTOBUFS__OTHER_CONFIG_V1540__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__other_config_v1540__descriptor) \
    , STREAMING_PROTOBUFS__OTHER_CONFIG_V1540__OVERHEATING_ASSISTANCE_CONFIG__NOT_SET, {0} }


struct  _StreamingProtobufs__OverheatingAssistanceConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__OverheatingAssistanceConfig__OverheatingIndicationProhibitTimer overheatingindicationprohibittimer;
};
#define STREAMING_PROTOBUFS__OVERHEATING_ASSISTANCE_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__overheating_assistance_config__descriptor) \
    , STREAMING_PROTOBUFS__OVERHEATING_ASSISTANCE_CONFIG__OVERHEATING_INDICATION_PROHIBIT_TIMER__protobuf_unspecified }


struct  _StreamingProtobufs__SCellConfig
{
  ProtobufCMessage base;
  uint32_t scellindex;
  StreamingProtobufs__ServingCellConfigCommon *scellconfigcommon;
  StreamingProtobufs__ServingCellConfig *scellconfigdedicated;
  StreamingProtobufs__SSBMTC *smtc;
};
#define STREAMING_PROTOBUFS__SCELL_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__scell_config__descriptor) \
    , 0, NULL, NULL, NULL }


typedef enum {
  STREAMING_PROTOBUFS__SEARCH_SPACE__MONITORING_SLOT_PERIODICITY_AND_OFFSET__NOT_SET = 0,
  STREAMING_PROTOBUFS__SEARCH_SPACE__MONITORING_SLOT_PERIODICITY_AND_OFFSET_SL1 = 3,
  STREAMING_PROTOBUFS__SEARCH_SPACE__MONITORING_SLOT_PERIODICITY_AND_OFFSET_SL2 = 4,
  STREAMING_PROTOBUFS__SEARCH_SPACE__MONITORING_SLOT_PERIODICITY_AND_OFFSET_SL4 = 5,
  STREAMING_PROTOBUFS__SEARCH_SPACE__MONITORING_SLOT_PERIODICITY_AND_OFFSET_SL5 = 6,
  STREAMING_PROTOBUFS__SEARCH_SPACE__MONITORING_SLOT_PERIODICITY_AND_OFFSET_SL8 = 7,
  STREAMING_PROTOBUFS__SEARCH_SPACE__MONITORING_SLOT_PERIODICITY_AND_OFFSET_SL10 = 8,
  STREAMING_PROTOBUFS__SEARCH_SPACE__MONITORING_SLOT_PERIODICITY_AND_OFFSET_SL16 = 9,
  STREAMING_PROTOBUFS__SEARCH_SPACE__MONITORING_SLOT_PERIODICITY_AND_OFFSET_SL20 = 10,
  STREAMING_PROTOBUFS__SEARCH_SPACE__MONITORING_SLOT_PERIODICITY_AND_OFFSET_SL40 = 11,
  STREAMING_PROTOBUFS__SEARCH_SPACE__MONITORING_SLOT_PERIODICITY_AND_OFFSET_SL80 = 12,
  STREAMING_PROTOBUFS__SEARCH_SPACE__MONITORING_SLOT_PERIODICITY_AND_OFFSET_SL160 = 13,
  STREAMING_PROTOBUFS__SEARCH_SPACE__MONITORING_SLOT_PERIODICITY_AND_OFFSET_SL320 = 14,
  STREAMING_PROTOBUFS__SEARCH_SPACE__MONITORING_SLOT_PERIODICITY_AND_OFFSET_SL640 = 15,
  STREAMING_PROTOBUFS__SEARCH_SPACE__MONITORING_SLOT_PERIODICITY_AND_OFFSET_SL1280 = 16,
  STREAMING_PROTOBUFS__SEARCH_SPACE__MONITORING_SLOT_PERIODICITY_AND_OFFSET_SL2560 = 17
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SEARCH_SPACE__MONITORING_SLOT_PERIODICITY_AND_OFFSET)
} StreamingProtobufs__SearchSpace__MonitoringSlotPeriodicityAndOffsetCase;

typedef enum {
  STREAMING_PROTOBUFS__SEARCH_SPACE__SEARCH_SPACE_TYPE__NOT_SET = 0,
  STREAMING_PROTOBUFS__SEARCH_SPACE__SEARCH_SPACE_TYPE_COMMON = 21,
  STREAMING_PROTOBUFS__SEARCH_SPACE__SEARCH_SPACE_TYPE_UE__SPECIFIC = 22
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__SEARCH_SPACE__SEARCH_SPACE_TYPE)
} StreamingProtobufs__SearchSpace__SearchSpaceTypeCase;

struct  _StreamingProtobufs__SearchSpace
{
  ProtobufCMessage base;
  uint32_t searchspaceid;
  Google__Protobuf__UInt32Value *controlresourcesetid;
  Google__Protobuf__UInt32Value *duration;
  Google__Protobuf__BytesValue *monitoringsymbolswithinslot;
  StreamingProtobufs__NrofCandidates *nrofcandidates;
  StreamingProtobufs__SearchSpace__MonitoringSlotPeriodicityAndOffsetCase monitoring_slot_periodicity_and_offset_case;
  union {
    StreamingProtobufs__Null *sl1;
    uint32_t sl2;
    uint32_t sl4;
    uint32_t sl5;
    uint32_t sl8;
    uint32_t sl10;
    uint32_t sl16;
    uint32_t sl20;
    uint32_t sl40;
    uint32_t sl80;
    uint32_t sl160;
    uint32_t sl320;
    uint32_t sl640;
    uint32_t sl1280;
    uint32_t sl2560;
  };
  StreamingProtobufs__SearchSpace__SearchSpaceTypeCase search_space_type_case;
  union {
    StreamingProtobufs__Common *common;
    StreamingProtobufs__UESpecific *ue_specific;
  };
};
#define STREAMING_PROTOBUFS__SEARCH_SPACE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__search_space__descriptor) \
    , 0, NULL, NULL, NULL, NULL, STREAMING_PROTOBUFS__SEARCH_SPACE__MONITORING_SLOT_PERIODICITY_AND_OFFSET__NOT_SET, {0}, STREAMING_PROTOBUFS__SEARCH_SPACE__SEARCH_SPACE_TYPE__NOT_SET, {0} }


struct  _StreamingProtobufs__NrofCandidates
{
  ProtobufCMessage base;
  StreamingProtobufs__AggregationLevel *aggregationlevel1;
  StreamingProtobufs__AggregationLevel *aggregationlevel2;
  StreamingProtobufs__AggregationLevel *aggregationlevel4;
  StreamingProtobufs__AggregationLevel *aggregationlevel8;
  StreamingProtobufs__AggregationLevel *aggregationlevel16;
};
#define STREAMING_PROTOBUFS__NROF_CANDIDATES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__nrof_candidates__descriptor) \
    , NULL, NULL, NULL, NULL, NULL }


struct  _StreamingProtobufs__AggregationLevel
{
  ProtobufCMessage base;
  StreamingProtobufs__AggregationLevel__Value value;
};
#define STREAMING_PROTOBUFS__AGGREGATION_LEVEL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__aggregation_level__descriptor) \
    , STREAMING_PROTOBUFS__AGGREGATION_LEVEL__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__Common
{
  ProtobufCMessage base;
  StreamingProtobufs__DCIFormat00AndFormat10 *dci_format0_0_andformat1_0;
  StreamingProtobufs__DCIFormat20 *dci_format2_0;
  StreamingProtobufs__DCIFormat21 *dci_format2_1;
  StreamingProtobufs__DCIFormat22 *dci_format2_2;
  StreamingProtobufs__DCIFormat23 *dci_format2_3;
};
#define STREAMING_PROTOBUFS__COMMON__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__common__descriptor) \
    , NULL, NULL, NULL, NULL, NULL }


struct  _StreamingProtobufs__DCIFormat00AndFormat10
{
  ProtobufCMessage base;
};
#define STREAMING_PROTOBUFS__DCI__FORMAT0_0__AND_FORMAT1_0__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__dci__format0_0__and_format1_0__descriptor) \
     }


struct  _StreamingProtobufs__DCIFormat20
{
  ProtobufCMessage base;
  StreamingProtobufs__NrofCandidatesSFI *nrofcandidates_sfi;
};
#define STREAMING_PROTOBUFS__DCI__FORMAT2_0__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__dci__format2_0__descriptor) \
    , NULL }


struct  _StreamingProtobufs__NrofCandidatesSFI
{
  ProtobufCMessage base;
  StreamingProtobufs__AggregationLevelSFI *aggregationlevel1;
  StreamingProtobufs__AggregationLevelSFI *aggregationlevel2;
  StreamingProtobufs__AggregationLevelSFI *aggregationlevel4;
  StreamingProtobufs__AggregationLevelSFI *aggregationlevel8;
  StreamingProtobufs__AggregationLevelSFI *aggregationlevel16;
};
#define STREAMING_PROTOBUFS__NROF_CANDIDATES__SFI__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__nrof_candidates__sfi__descriptor) \
    , NULL, NULL, NULL, NULL, NULL }


struct  _StreamingProtobufs__AggregationLevelSFI
{
  ProtobufCMessage base;
  StreamingProtobufs__AggregationLevelSFI__Value value;
};
#define STREAMING_PROTOBUFS__AGGREGATION_LEVEL__SFI__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__aggregation_level__sfi__descriptor) \
    , STREAMING_PROTOBUFS__AGGREGATION_LEVEL__SFI__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__DCIFormat21
{
  ProtobufCMessage base;
};
#define STREAMING_PROTOBUFS__DCI__FORMAT2_1__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__dci__format2_1__descriptor) \
     }


struct  _StreamingProtobufs__DCIFormat22
{
  ProtobufCMessage base;
};
#define STREAMING_PROTOBUFS__DCI__FORMAT2_2__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__dci__format2_2__descriptor) \
     }


struct  _StreamingProtobufs__DCIFormat23
{
  ProtobufCMessage base;
  StreamingProtobufs__Dummy1 *dummy1;
  StreamingProtobufs__Dummy2 *dummy2;
};
#define STREAMING_PROTOBUFS__DCI__FORMAT2_3__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__dci__format2_3__descriptor) \
    , NULL, NULL }


struct  _StreamingProtobufs__Dummy1
{
  ProtobufCMessage base;
  StreamingProtobufs__Dummy1__Value value;
};
#define STREAMING_PROTOBUFS__DUMMY1__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__dummy1__descriptor) \
    , STREAMING_PROTOBUFS__DUMMY1__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__Dummy2
{
  ProtobufCMessage base;
  StreamingProtobufs__Dummy2__Value value;
};
#define STREAMING_PROTOBUFS__DUMMY2__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__dummy2__descriptor) \
    , STREAMING_PROTOBUFS__DUMMY2__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__UESpecific
{
  ProtobufCMessage base;
  StreamingProtobufs__DCIFormats *dci_formats;
};
#define STREAMING_PROTOBUFS__UE__SPECIFIC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__ue__specific__descriptor) \
    , NULL }


struct  _StreamingProtobufs__DCIFormats
{
  ProtobufCMessage base;
  StreamingProtobufs__DCIFormats__Value value;
};
#define STREAMING_PROTOBUFS__DCI__FORMATS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__dci__formats__descriptor) \
    , STREAMING_PROTOBUFS__DCI__FORMATS__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__MeasResultCellListSFTD
{
  ProtobufCMessage base;
  size_t n_items;
  StreamingProtobufs__MeasResultCellSFTD **items;
};
#define STREAMING_PROTOBUFS__MEAS_RESULT_CELL_LIST_SFTD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__meas_result_cell_list_sftd__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__MeasResultCellSFTD
{
  ProtobufCMessage base;
  uint32_t physcellid;
  uint32_t sfn_offsetresult;
  int32_t frameboundaryoffsetresult;
  Google__Protobuf__UInt32Value *rsrp_result;
};
#define STREAMING_PROTOBUFS__MEAS_RESULT_CELL_SFTD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__meas_result_cell_sftd__descriptor) \
    , 0, 0, 0, NULL }


struct  _StreamingProtobufs__MeasResultList2NR
{
  ProtobufCMessage base;
  size_t n_items;
  StreamingProtobufs__MeasResult2NR **items;
};
#define STREAMING_PROTOBUFS__MEAS_RESULT_LIST2_NR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__meas_result_list2_nr__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__MeasResult2NR
{
  ProtobufCMessage base;
  Google__Protobuf__UInt32Value *ssbfrequency;
  Google__Protobuf__UInt32Value *reffreqcsi_rs;
  StreamingProtobufs__MeasResultNR *measresultservingcell;
  StreamingProtobufs__MeasResultListNR *measresultneighcelllistnr;
};
#define STREAMING_PROTOBUFS__MEAS_RESULT2_NR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__meas_result2_nr__descriptor) \
    , NULL, NULL, NULL, NULL }


struct  _StreamingProtobufs__MeasQuantityResults
{
  ProtobufCMessage base;
  Google__Protobuf__UInt32Value *rsrp;
  Google__Protobuf__UInt32Value *rsrq;
  Google__Protobuf__UInt32Value *sinr;
};
#define STREAMING_PROTOBUFS__MEAS_QUANTITY_RESULTS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__meas_quantity_results__descriptor) \
    , NULL, NULL, NULL }


struct  _StreamingProtobufs__ResultsPerSSBIndex
{
  ProtobufCMessage base;
  uint32_t ssb_index;
  StreamingProtobufs__MeasQuantityResults *ssb_results;
};
#define STREAMING_PROTOBUFS__RESULTS_PER_SSB__INDEX__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__results_per_ssb__index__descriptor) \
    , 0, NULL }


struct  _StreamingProtobufs__ResultsPerCSIRSIndex
{
  ProtobufCMessage base;
  uint32_t csi_rs_index;
  StreamingProtobufs__MeasQuantityResults *csi_rs_results;
};
#define STREAMING_PROTOBUFS__RESULTS_PER_CSI__RS__INDEX__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__results_per_csi__rs__index__descriptor) \
    , 0, NULL }


struct  _StreamingProtobufs__MeasQuantityResultsEUTRA
{
  ProtobufCMessage base;
  Google__Protobuf__UInt32Value *rsrp;
  Google__Protobuf__UInt32Value *rsrq;
  Google__Protobuf__UInt32Value *sinr;
};
#define STREAMING_PROTOBUFS__MEAS_QUANTITY_RESULTS_EUTRA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__meas_quantity_results_eutra__descriptor) \
    , NULL, NULL, NULL }


struct  _StreamingProtobufs__CellResults
{
  ProtobufCMessage base;
  StreamingProtobufs__MeasQuantityResults *resultsssb_cell;
  StreamingProtobufs__MeasQuantityResults *resultscsi_rs_cell;
};
#define STREAMING_PROTOBUFS__CELL_RESULTS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__cell_results__descriptor) \
    , NULL, NULL }


struct  _StreamingProtobufs__ResultsPerCSIRSIndexList
{
  ProtobufCMessage base;
  size_t n_items;
  StreamingProtobufs__ResultsPerCSIRSIndex **items;
};
#define STREAMING_PROTOBUFS__RESULTS_PER_CSI__RS__INDEX_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__results_per_csi__rs__index_list__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__ResultsPerSSBIndexList
{
  ProtobufCMessage base;
  size_t n_items;
  StreamingProtobufs__ResultsPerSSBIndex **items;
};
#define STREAMING_PROTOBUFS__RESULTS_PER_SSB__INDEX_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__results_per_ssb__index_list__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__RsIndexResults
{
  ProtobufCMessage base;
  StreamingProtobufs__ResultsPerSSBIndexList *resultsssb_indexes;
  StreamingProtobufs__ResultsPerCSIRSIndexList *resultscsi_rs_indexes;
};
#define STREAMING_PROTOBUFS__RS_INDEX_RESULTS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__rs_index_results__descriptor) \
    , NULL, NULL }


struct  _StreamingProtobufs__MeasResult
{
  ProtobufCMessage base;
  StreamingProtobufs__CellResults *cellresults;
  StreamingProtobufs__RsIndexResults *rsindexresults;
};
#define STREAMING_PROTOBUFS__MEAS_RESULT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__meas_result__descriptor) \
    , NULL, NULL }


struct  _StreamingProtobufs__PLMNIdentity
{
  ProtobufCMessage base;
  StreamingProtobufs__MCC *mcc;
  StreamingProtobufs__MNC *mnc;
};
#define STREAMING_PROTOBUFS__PLMN__IDENTITY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__plmn__identity__descriptor) \
    , NULL, NULL }


struct  _StreamingProtobufs__MNC
{
  ProtobufCMessage base;
  size_t n_mncval;
  uint32_t *mncval;
};
#define STREAMING_PROTOBUFS__MNC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__mnc__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__MCC
{
  ProtobufCMessage base;
  size_t n_mccval;
  uint32_t *mccval;
};
#define STREAMING_PROTOBUFS__MCC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__mcc__descriptor) \
    , 0,NULL }


typedef enum {
  STREAMING_PROTOBUFS__PLMN__IDENTITY__EUTRA_5_GC__C__NOT_SET = 0,
  STREAMING_PROTOBUFS__PLMN__IDENTITY__EUTRA_5_GC__C_PLMN__IDENTITY__EUTRA_5_GC = 1,
  STREAMING_PROTOBUFS__PLMN__IDENTITY__EUTRA_5_GC__C_PLMN_INDEX = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PLMN__IDENTITY__EUTRA_5_GC__C)
} StreamingProtobufs__PLMNIdentityEUTRA5GC__CCase;

struct  _StreamingProtobufs__PLMNIdentityEUTRA5GC
{
  ProtobufCMessage base;
  StreamingProtobufs__PLMNIdentityEUTRA5GC__CCase c_case;
  union {
    StreamingProtobufs__PLMNIdentity *plmn_identity_eutra_5gc;
    uint32_t plmn_index;
  };
};
#define STREAMING_PROTOBUFS__PLMN__IDENTITY__EUTRA_5_GC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__plmn__identity__eutra_5_gc__descriptor) \
    , STREAMING_PROTOBUFS__PLMN__IDENTITY__EUTRA_5_GC__C__NOT_SET, {0} }


struct  _StreamingProtobufs__PLMNIdentityListEUTRA5GC
{
  ProtobufCMessage base;
  size_t n_items;
  StreamingProtobufs__PLMNIdentityEUTRA5GC **items;
};
#define STREAMING_PROTOBUFS__PLMN__IDENTITY_LIST__EUTRA_5_GC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__plmn__identity_list__eutra_5_gc__descriptor) \
    , 0,NULL }


typedef enum {
  STREAMING_PROTOBUFS__CELL_ACCESS_RELATED_INFO__EUTRA_5_GC__CELLIDENTITY_EUTRA_5GC__NOT_SET = 0,
  STREAMING_PROTOBUFS__CELL_ACCESS_RELATED_INFO__EUTRA_5_GC__CELLIDENTITY_EUTRA_5GC_CELL_IDENTITY__EUTRA = 4,
  STREAMING_PROTOBUFS__CELL_ACCESS_RELATED_INFO__EUTRA_5_GC__CELLIDENTITY_EUTRA_5GC_CELL_ID_INDEX = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__CELL_ACCESS_RELATED_INFO__EUTRA_5_GC__CELLIDENTITY_EUTRA_5GC)
} StreamingProtobufs__CellAccessRelatedInfoEUTRA5GC__CellidentityEutra5gcCase;

struct  _StreamingProtobufs__CellAccessRelatedInfoEUTRA5GC
{
  ProtobufCMessage base;
  StreamingProtobufs__PLMNIdentityListEUTRA5GC *plmn_identitylist_eutra_5gc;
  ProtobufCBinaryData trackingareacode_eutra_5gc;
  Google__Protobuf__UInt32Value *ranac_5gc;
  StreamingProtobufs__CellAccessRelatedInfoEUTRA5GC__CellidentityEutra5gcCase cellidentity_eutra_5gc_case;
  union {
    ProtobufCBinaryData cellidentity_eutra;
    uint32_t cellid_index;
  };
};
#define STREAMING_PROTOBUFS__CELL_ACCESS_RELATED_INFO__EUTRA_5_GC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__cell_access_related_info__eutra_5_gc__descriptor) \
    , NULL, {0,NULL}, NULL, STREAMING_PROTOBUFS__CELL_ACCESS_RELATED_INFO__EUTRA_5_GC__CELLIDENTITY_EUTRA_5GC__NOT_SET, {0} }


struct  _StreamingProtobufs__PLMNIdentityListEUTRAEPC
{
  ProtobufCMessage base;
  size_t n_items;
  StreamingProtobufs__PLMNIdentity **items;
};
#define STREAMING_PROTOBUFS__PLMN__IDENTITY_LIST__EUTRA__EPC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__plmn__identity_list__eutra__epc__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__CellAccessRelatedInfoEUTRAEPC
{
  ProtobufCMessage base;
  StreamingProtobufs__PLMNIdentityListEUTRAEPC *plmn_identitylist_eutra_epc;
  ProtobufCBinaryData trackingareacode_eutra_epc;
  ProtobufCBinaryData cellidentity_eutra_epc;
};
#define STREAMING_PROTOBUFS__CELL_ACCESS_RELATED_INFO__EUTRA__EPC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__cell_access_related_info__eutra__epc__descriptor) \
    , NULL, {0,NULL}, {0,NULL} }


struct  _StreamingProtobufs__CGIInfoEPC
{
  ProtobufCMessage base;
  StreamingProtobufs__CellAccessRelatedInfoEUTRAEPC *cgi_info_epc_legacy;
  size_t n_cgi_info_epc_list;
  StreamingProtobufs__CellAccessRelatedInfoEUTRAEPC **cgi_info_epc_list;
};
#define STREAMING_PROTOBUFS__CGI_INFO__EPC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__cgi_info__epc__descriptor) \
    , NULL, 0,NULL }


struct  _StreamingProtobufs__PLMNIdentityInfo
{
  ProtobufCMessage base;
  size_t n_plmn_identitylist;
  StreamingProtobufs__PLMNIdentity **plmn_identitylist;
  Google__Protobuf__BytesValue *trackingareacode;
  Google__Protobuf__UInt32Value *ranac;
  ProtobufCBinaryData cellidentity;
  StreamingProtobufs__PLMNIdentityInfo__CellReservedForOperatorUse cellreservedforoperatoruse;
};
#define STREAMING_PROTOBUFS__PLMN__IDENTITY_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__plmn__identity_info__descriptor) \
    , 0,NULL, NULL, NULL, {0,NULL}, STREAMING_PROTOBUFS__PLMN__IDENTITY_INFO__CELL_RESERVED_FOR_OPERATOR_USE__protobuf_unspecified }


struct  _StreamingProtobufs__PDCCHConfigSIB1
{
  ProtobufCMessage base;
  uint32_t controlresourcesetzero;
  uint32_t searchspacezero;
};
#define STREAMING_PROTOBUFS__PDCCH__CONFIG_SIB1__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pdcch__config_sib1__descriptor) \
    , 0, 0 }


struct  _StreamingProtobufs__NoSIB1
{
  ProtobufCMessage base;
  uint32_t ssb_subcarrieroffset;
  StreamingProtobufs__PDCCHConfigSIB1 *pdcch_configsib1;
};
#define STREAMING_PROTOBUFS__NO_SIB1__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__no_sib1__descriptor) \
    , 0, NULL }


struct  _StreamingProtobufs__PLMNIdentityInfoList
{
  ProtobufCMessage base;
  size_t n_items;
  StreamingProtobufs__PLMNIdentityInfo **items;
};
#define STREAMING_PROTOBUFS__PLMN__IDENTITY_INFO_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__plmn__identity_info_list__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__MultiFrequencyBandListNR
{
  ProtobufCMessage base;
  size_t n_items;
  uint32_t *items;
};
#define STREAMING_PROTOBUFS__MULTI_FREQUENCY_BAND_LIST_NR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__multi_frequency_band_list_nr__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__CGIInfo
{
  ProtobufCMessage base;
  StreamingProtobufs__PLMNIdentityInfoList *plmn_identityinfolist;
  StreamingProtobufs__MultiFrequencyBandListNR *frequencybandlist;
  StreamingProtobufs__NoSIB1 *nosib1;
};
#define STREAMING_PROTOBUFS__CGI__INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__cgi__info__descriptor) \
    , NULL, NULL, NULL }


struct  _StreamingProtobufs__MultiBandInfoListEUTRA
{
  ProtobufCMessage base;
  size_t n_items;
  uint32_t *items;
};
#define STREAMING_PROTOBUFS__MULTI_BAND_INFO_LIST_EUTRA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__multi_band_info_list_eutra__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__EUTRACGIInfo
{
  ProtobufCMessage base;
  StreamingProtobufs__CGIInfoEPC *cgi_info_epc;
  size_t n_cgi_info_5gc;
  StreamingProtobufs__CellAccessRelatedInfoEUTRA5GC **cgi_info_5gc;
  Google__Protobuf__UInt32Value *freqbandindicator;
  StreamingProtobufs__MultiBandInfoListEUTRA *multibandinfolist;
  StreamingProtobufs__TrueOpt *freqbandindicatorpriority;
};
#define STREAMING_PROTOBUFS__EUTRA__CGI__INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__eutra__cgi__info__descriptor) \
    , NULL, 0,NULL, NULL, NULL, NULL }


struct  _StreamingProtobufs__MeasResultNR
{
  ProtobufCMessage base;
  Google__Protobuf__UInt32Value *physcellid;
  StreamingProtobufs__MeasResult *measresult;
  StreamingProtobufs__CGIInfo *cgi_info;
};
#define STREAMING_PROTOBUFS__MEAS_RESULT_NR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__meas_result_nr__descriptor) \
    , NULL, NULL, NULL }


struct  _StreamingProtobufs__MeasResultEUTRA
{
  ProtobufCMessage base;
  uint32_t eutra_physcellid;
  StreamingProtobufs__MeasQuantityResultsEUTRA *measresult;
  StreamingProtobufs__EUTRACGIInfo *cgi_info;
};
#define STREAMING_PROTOBUFS__MEAS_RESULT_EUTRA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__meas_result_eutra__descriptor) \
    , 0, NULL, NULL }


struct  _StreamingProtobufs__MeasResultServMO
{
  ProtobufCMessage base;
  uint32_t servcellid;
  StreamingProtobufs__MeasResultNR *measresultservingcell;
  StreamingProtobufs__MeasResultNR *measresultbestneighcell;
};
#define STREAMING_PROTOBUFS__MEAS_RESULT_SERV_MO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__meas_result_serv_mo__descriptor) \
    , 0, NULL, NULL }


struct  _StreamingProtobufs__MeasResultServMOList
{
  ProtobufCMessage base;
  size_t n_items;
  StreamingProtobufs__MeasResultServMO **items;
};
#define STREAMING_PROTOBUFS__MEAS_RESULT_SERV_MOLIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__meas_result_serv_molist__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__MeasResultListNR
{
  ProtobufCMessage base;
  size_t n_items;
  StreamingProtobufs__MeasResultNR **items;
};
#define STREAMING_PROTOBUFS__MEAS_RESULT_LIST_NR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__meas_result_list_nr__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__MeasResultListEUTRA
{
  ProtobufCMessage base;
  size_t n_items;
  StreamingProtobufs__MeasResultEUTRA **items;
};
#define STREAMING_PROTOBUFS__MEAS_RESULT_LIST_EUTRA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__meas_result_list_eutra__descriptor) \
    , 0,NULL }


typedef enum {
  STREAMING_PROTOBUFS__MEAS_RESULTS__MEAS_RESULT_NEIGH_CELLS__NOT_SET = 0,
  STREAMING_PROTOBUFS__MEAS_RESULTS__MEAS_RESULT_NEIGH_CELLS_MEAS_RESULT_LIST_NR = 3,
  STREAMING_PROTOBUFS__MEAS_RESULTS__MEAS_RESULT_NEIGH_CELLS_MEAS_RESULT_LIST_EUTRA = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__MEAS_RESULTS__MEAS_RESULT_NEIGH_CELLS)
} StreamingProtobufs__MeasResults__MeasResultNeighCellsCase;

struct  _StreamingProtobufs__MeasResults
{
  ProtobufCMessage base;
  uint32_t measid;
  StreamingProtobufs__MeasResultServMOList *measresultservingmolist;
  StreamingProtobufs__MeasResults__MeasResultNeighCellsCase meas_result_neigh_cells_case;
  union {
    StreamingProtobufs__MeasResultListNR *measresultlistnr;
    StreamingProtobufs__MeasResultListEUTRA *measresultlisteutra;
  };
};
#define STREAMING_PROTOBUFS__MEAS_RESULTS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__meas_results__descriptor) \
    , 0, NULL, STREAMING_PROTOBUFS__MEAS_RESULTS__MEAS_RESULT_NEIGH_CELLS__NOT_SET, {0} }


typedef enum {
  STREAMING_PROTOBUFS__DRX__INFO__DRX__LONG_CYCLE_START_OFFSET__NOT_SET = 0,
  STREAMING_PROTOBUFS__DRX__INFO__DRX__LONG_CYCLE_START_OFFSET_MS10 = 1,
  STREAMING_PROTOBUFS__DRX__INFO__DRX__LONG_CYCLE_START_OFFSET_MS20 = 2,
  STREAMING_PROTOBUFS__DRX__INFO__DRX__LONG_CYCLE_START_OFFSET_MS32 = 3,
  STREAMING_PROTOBUFS__DRX__INFO__DRX__LONG_CYCLE_START_OFFSET_MS40 = 4,
  STREAMING_PROTOBUFS__DRX__INFO__DRX__LONG_CYCLE_START_OFFSET_MS60 = 5,
  STREAMING_PROTOBUFS__DRX__INFO__DRX__LONG_CYCLE_START_OFFSET_MS64 = 6,
  STREAMING_PROTOBUFS__DRX__INFO__DRX__LONG_CYCLE_START_OFFSET_MS70 = 7,
  STREAMING_PROTOBUFS__DRX__INFO__DRX__LONG_CYCLE_START_OFFSET_MS80 = 8,
  STREAMING_PROTOBUFS__DRX__INFO__DRX__LONG_CYCLE_START_OFFSET_MS128 = 9,
  STREAMING_PROTOBUFS__DRX__INFO__DRX__LONG_CYCLE_START_OFFSET_MS160 = 10,
  STREAMING_PROTOBUFS__DRX__INFO__DRX__LONG_CYCLE_START_OFFSET_MS256 = 11,
  STREAMING_PROTOBUFS__DRX__INFO__DRX__LONG_CYCLE_START_OFFSET_MS320 = 12,
  STREAMING_PROTOBUFS__DRX__INFO__DRX__LONG_CYCLE_START_OFFSET_MS512 = 13,
  STREAMING_PROTOBUFS__DRX__INFO__DRX__LONG_CYCLE_START_OFFSET_MS640 = 14,
  STREAMING_PROTOBUFS__DRX__INFO__DRX__LONG_CYCLE_START_OFFSET_MS1024 = 15,
  STREAMING_PROTOBUFS__DRX__INFO__DRX__LONG_CYCLE_START_OFFSET_MS1280 = 16,
  STREAMING_PROTOBUFS__DRX__INFO__DRX__LONG_CYCLE_START_OFFSET_MS2048 = 17,
  STREAMING_PROTOBUFS__DRX__INFO__DRX__LONG_CYCLE_START_OFFSET_MS2560 = 18,
  STREAMING_PROTOBUFS__DRX__INFO__DRX__LONG_CYCLE_START_OFFSET_MS5120 = 19,
  STREAMING_PROTOBUFS__DRX__INFO__DRX__LONG_CYCLE_START_OFFSET_MS10240 = 20
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__DRX__INFO__DRX__LONG_CYCLE_START_OFFSET)
} StreamingProtobufs__DRXInfo__DrxLongCycleStartOffsetCase;

struct  _StreamingProtobufs__DRXInfo
{
  ProtobufCMessage base;
  StreamingProtobufs__ShortDRX *shortdrx;
  StreamingProtobufs__DRXInfo__DrxLongCycleStartOffsetCase drx__long_cycle_start_offset_case;
  union {
    uint32_t ms10;
    uint32_t ms20;
    uint32_t ms32;
    uint32_t ms40;
    uint32_t ms60;
    uint32_t ms64;
    uint32_t ms70;
    uint32_t ms80;
    uint32_t ms128;
    uint32_t ms160;
    uint32_t ms256;
    uint32_t ms320;
    uint32_t ms512;
    uint32_t ms640;
    uint32_t ms1024;
    uint32_t ms1280;
    uint32_t ms2048;
    uint32_t ms2560;
    uint32_t ms5120;
    uint32_t ms10240;
  };
};
#define STREAMING_PROTOBUFS__DRX__INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__drx__info__descriptor) \
    , NULL, STREAMING_PROTOBUFS__DRX__INFO__DRX__LONG_CYCLE_START_OFFSET__NOT_SET, {0} }


struct  _StreamingProtobufs__RadioBearerConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__SRBToAddModList *srb_toaddmodlist;
  Google__Protobuf__BoolValue *srb3_torelease;
  StreamingProtobufs__DRBToAddModList *drb_toaddmodlist;
  StreamingProtobufs__DRBToReleaseList *drb_toreleaselist;
  StreamingProtobufs__SecurityConfig *securityconfig;
};
#define STREAMING_PROTOBUFS__RADIO_BEARER_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__radio_bearer_config__descriptor) \
    , NULL, NULL, NULL, NULL, NULL }


struct  _StreamingProtobufs__SRBToAddModList
{
  ProtobufCMessage base;
  size_t n_items;
  StreamingProtobufs__SRBToAddMod **items;
};
#define STREAMING_PROTOBUFS__SRB__TO_ADD_MOD_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__srb__to_add_mod_list__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__SRBToAddMod
{
  ProtobufCMessage base;
  uint32_t srb_identity;
  Google__Protobuf__BoolValue *reestablishpdcp;
  Google__Protobuf__BoolValue *discardonpdcp;
  StreamingProtobufs__PDCPConfig *pdcp_config;
};
#define STREAMING_PROTOBUFS__SRB__TO_ADD_MOD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__srb__to_add_mod__descriptor) \
    , 0, NULL, NULL, NULL }


struct  _StreamingProtobufs__PDCPConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__DRB *drb;
  StreamingProtobufs__MoreThanOneRLC *morethanonerlc;
  StreamingProtobufs__TReordering *t_reordering;
  Google__Protobuf__BoolValue *cipheringdisabled;
};
#define STREAMING_PROTOBUFS__PDCP__CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pdcp__config__descriptor) \
    , NULL, NULL, NULL, NULL }


typedef enum {
  STREAMING_PROTOBUFS__DRB__HEADER_COMPRESSION__NOT_SET = 0,
  STREAMING_PROTOBUFS__DRB__HEADER_COMPRESSION_NOT_USED = 4,
  STREAMING_PROTOBUFS__DRB__HEADER_COMPRESSION_ROHC = 5,
  STREAMING_PROTOBUFS__DRB__HEADER_COMPRESSION_UPLINK_ONLY_ROHC = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__DRB__HEADER_COMPRESSION)
} StreamingProtobufs__DRB__HeaderCompressionCase;

struct  _StreamingProtobufs__DRB
{
  ProtobufCMessage base;
  StreamingProtobufs__DiscardTimer *discardtimer;
  StreamingProtobufs__PDCPSNSize *pdcp_sn_sizeul;
  StreamingProtobufs__PDCPSNSize *pdcp_sn_sizedl;
  Google__Protobuf__BoolValue *integrityprotection;
  Google__Protobuf__BoolValue *statusreportrequired;
  Google__Protobuf__BoolValue *outoforderdelivery;
  StreamingProtobufs__DRB__HeaderCompressionCase header_compression_case;
  union {
    StreamingProtobufs__Null *notused;
    StreamingProtobufs__Rohc *rohc;
    StreamingProtobufs__UplinkOnlyROHC *uplinkonlyrohc;
  };
};
#define STREAMING_PROTOBUFS__DRB__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__drb__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, NULL, STREAMING_PROTOBUFS__DRB__HEADER_COMPRESSION__NOT_SET, {0} }


struct  _StreamingProtobufs__DiscardTimer
{
  ProtobufCMessage base;
  StreamingProtobufs__DiscardTimer__Value value;
};
#define STREAMING_PROTOBUFS__DISCARD_TIMER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__discard_timer__descriptor) \
    , STREAMING_PROTOBUFS__DISCARD_TIMER__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__PDCPSNSize
{
  ProtobufCMessage base;
  StreamingProtobufs__PDCPSNSize__Value value;
};
#define STREAMING_PROTOBUFS__PDCP__SN__SIZE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pdcp__sn__size__descriptor) \
    , STREAMING_PROTOBUFS__PDCP__SN__SIZE__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__Rohc
{
  ProtobufCMessage base;
  uint32_t maxcid;
  StreamingProtobufs__RohcProfiles *profiles;
  Google__Protobuf__BoolValue *drb_continuerohc;
};
#define STREAMING_PROTOBUFS__ROHC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__rohc__descriptor) \
    , 0, NULL, NULL }


struct  _StreamingProtobufs__RohcProfiles
{
  ProtobufCMessage base;
  protobuf_c_boolean profile0x0001;
  protobuf_c_boolean profile0x0002;
  protobuf_c_boolean profile0x0003;
  protobuf_c_boolean profile0x0004;
  protobuf_c_boolean profile0x0006;
  protobuf_c_boolean profile0x0101;
  protobuf_c_boolean profile0x0102;
  protobuf_c_boolean profile0x0103;
  protobuf_c_boolean profile0x0104;
};
#define STREAMING_PROTOBUFS__ROHC_PROFILES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__rohc_profiles__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0, 0 }


struct  _StreamingProtobufs__UplinkOnlyROHC
{
  ProtobufCMessage base;
  uint32_t maxcid;
  StreamingProtobufs__UplinkOnlyROHCProfiles *profiles;
  Google__Protobuf__BoolValue *drb_continuerohc;
};
#define STREAMING_PROTOBUFS__UPLINK_ONLY_ROHC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__uplink_only_rohc__descriptor) \
    , 0, NULL, NULL }


struct  _StreamingProtobufs__UplinkOnlyROHCProfiles
{
  ProtobufCMessage base;
  protobuf_c_boolean profile0x0106;
};
#define STREAMING_PROTOBUFS__UPLINK_ONLY_ROHCPROFILES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__uplink_only_rohcprofiles__descriptor) \
    , 0 }


struct  _StreamingProtobufs__MoreThanOneRLC
{
  ProtobufCMessage base;
  StreamingProtobufs__PrimaryPath *primarypath;
  StreamingProtobufs__ULDataSplitThreshold *ul_datasplitthreshold;
  Google__Protobuf__BoolValue *pdcp_duplication;
};
#define STREAMING_PROTOBUFS__MORE_THAN_ONE_RLC__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__more_than_one_rlc__descriptor) \
    , NULL, NULL, NULL }


struct  _StreamingProtobufs__PrimaryPath
{
  ProtobufCMessage base;
  Google__Protobuf__UInt32Value *cellgroup;
  Google__Protobuf__UInt32Value *logicalchannel;
};
#define STREAMING_PROTOBUFS__PRIMARY_PATH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__primary_path__descriptor) \
    , NULL, NULL }


struct  _StreamingProtobufs__ULDataSplitThreshold
{
  ProtobufCMessage base;
  StreamingProtobufs__ULDataSplitThreshold__Value value;
};
#define STREAMING_PROTOBUFS__UL__DATA_SPLIT_THRESHOLD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__ul__data_split_threshold__descriptor) \
    , STREAMING_PROTOBUFS__UL__DATA_SPLIT_THRESHOLD__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__TReordering
{
  ProtobufCMessage base;
  StreamingProtobufs__TReordering__Value value;
};
#define STREAMING_PROTOBUFS__T__REORDERING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__t__reordering__descriptor) \
    , STREAMING_PROTOBUFS__T__REORDERING__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__DRBToAddModList
{
  ProtobufCMessage base;
  size_t n_items;
  StreamingProtobufs__DRBToAddMod **items;
};
#define STREAMING_PROTOBUFS__DRB__TO_ADD_MOD_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__drb__to_add_mod_list__descriptor) \
    , 0,NULL }


typedef enum {
  STREAMING_PROTOBUFS__DRB__TO_ADD_MOD__CN_ASSOCIATION__NOT_SET = 0,
  STREAMING_PROTOBUFS__DRB__TO_ADD_MOD__CN_ASSOCIATION_EPS__BEARER_IDENTITY = 1,
  STREAMING_PROTOBUFS__DRB__TO_ADD_MOD__CN_ASSOCIATION_SDAP__CONFIG = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__DRB__TO_ADD_MOD__CN_ASSOCIATION)
} StreamingProtobufs__DRBToAddMod__CnAssociationCase;

struct  _StreamingProtobufs__DRBToAddMod
{
  ProtobufCMessage base;
  uint32_t drb_identity;
  Google__Protobuf__BoolValue *reestablishpdcp;
  Google__Protobuf__BoolValue *recoverpdcp;
  StreamingProtobufs__PDCPConfig *pdcp_config;
  StreamingProtobufs__DRBToAddMod__CnAssociationCase cn_association_case;
  union {
    uint32_t eps_beareridentity;
    StreamingProtobufs__SDAPConfig *sdap_config;
  };
};
#define STREAMING_PROTOBUFS__DRB__TO_ADD_MOD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__drb__to_add_mod__descriptor) \
    , 0, NULL, NULL, NULL, STREAMING_PROTOBUFS__DRB__TO_ADD_MOD__CN_ASSOCIATION__NOT_SET, {0} }


struct  _StreamingProtobufs__DRBToReleaseList
{
  ProtobufCMessage base;
  size_t n_items;
  uint32_t *items;
};
#define STREAMING_PROTOBUFS__DRB__TO_RELEASE_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__drb__to_release_list__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__SDAPConfig
{
  ProtobufCMessage base;
  uint32_t pdu_session;
  StreamingProtobufs__SDAPHeader *sdap_headerdl;
  StreamingProtobufs__SDAPHeader *sdap_headerul;
  protobuf_c_boolean defaultdrb;
  size_t n_mappedqos_flowstoadd;
  uint32_t *mappedqos_flowstoadd;
  size_t n_mappedqos_flowstorelease;
  uint32_t *mappedqos_flowstorelease;
};
#define STREAMING_PROTOBUFS__SDAP__CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__sdap__config__descriptor) \
    , 0, NULL, NULL, 0, 0,NULL, 0,NULL }


struct  _StreamingProtobufs__SDAPHeader
{
  ProtobufCMessage base;
  StreamingProtobufs__SDAPHeader__Value value;
};
#define STREAMING_PROTOBUFS__SDAP__HEADER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__sdap__header__descriptor) \
    , STREAMING_PROTOBUFS__SDAP__HEADER__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__SecurityConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__SecurityAlgorithmConfig *securityalgorithmconfig;
  StreamingProtobufs__KeyToUse *keytouse;
};
#define STREAMING_PROTOBUFS__SECURITY_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__security_config__descriptor) \
    , NULL, NULL }


struct  _StreamingProtobufs__SecurityAlgorithmConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__CipheringAlgorithm *cipheringalgorithm;
  StreamingProtobufs__IntegrityProtAlgorithm *integrityprotalgorithm;
};
#define STREAMING_PROTOBUFS__SECURITY_ALGORITHM_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__security_algorithm_config__descriptor) \
    , NULL, NULL }


struct  _StreamingProtobufs__CipheringAlgorithm
{
  ProtobufCMessage base;
  StreamingProtobufs__CipheringAlgorithm__Value value;
};
#define STREAMING_PROTOBUFS__CIPHERING_ALGORITHM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__ciphering_algorithm__descriptor) \
    , STREAMING_PROTOBUFS__CIPHERING_ALGORITHM__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__IntegrityProtAlgorithm
{
  ProtobufCMessage base;
  StreamingProtobufs__IntegrityProtAlgorithm__Value value;
};
#define STREAMING_PROTOBUFS__INTEGRITY_PROT_ALGORITHM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__integrity_prot_algorithm__descriptor) \
    , STREAMING_PROTOBUFS__INTEGRITY_PROT_ALGORITHM__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__KeyToUse
{
  ProtobufCMessage base;
  StreamingProtobufs__KeyToUse__Value value;
};
#define STREAMING_PROTOBUFS__KEY_TO_USE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__key_to_use__descriptor) \
    , STREAMING_PROTOBUFS__KEY_TO_USE__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__UplinkTxDirectCurrentList
{
  ProtobufCMessage base;
  size_t n_items;
  StreamingProtobufs__UplinkTxDirectCurrentCell **items;
};
#define STREAMING_PROTOBUFS__UPLINK_TX_DIRECT_CURRENT_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__uplink_tx_direct_current_list__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__UplinkTxDirectCurrentCell
{
  ProtobufCMessage base;
  uint32_t servcellindex;
  size_t n_uplinkdirectcurrentbwp;
  StreamingProtobufs__UplinkTxDirectCurrentBWP **uplinkdirectcurrentbwp;
};
#define STREAMING_PROTOBUFS__UPLINK_TX_DIRECT_CURRENT_CELL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__uplink_tx_direct_current_cell__descriptor) \
    , 0, 0,NULL }


struct  _StreamingProtobufs__UplinkTxDirectCurrentBWP
{
  ProtobufCMessage base;
  uint32_t bwp_id;
  protobuf_c_boolean shift7dot5khz;
  uint32_t txdirectcurrentlocation;
};
#define STREAMING_PROTOBUFS__UPLINK_TX_DIRECT_CURRENT_BWP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__uplink_tx_direct_current_bwp__descriptor) \
    , 0, 0, 0 }


struct  _StreamingProtobufs__CellAccessRelatedInfo
{
  ProtobufCMessage base;
  StreamingProtobufs__PLMNIdentityInfoList *plmn_identitylist;
  StreamingProtobufs__TrueOpt *cellreservedforotheruse;
};
#define STREAMING_PROTOBUFS__CELL_ACCESS_RELATED_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__cell_access_related_info__descriptor) \
    , NULL, NULL }


struct  _StreamingProtobufs__ConnEstFailureControl
{
  ProtobufCMessage base;
  StreamingProtobufs__ConnEstFailCount *connestfailcount;
  StreamingProtobufs__ConnEstFailOffsetValidity *connestfailoffsetvalidity;
  Google__Protobuf__UInt32Value *connestfailoffset;
};
#define STREAMING_PROTOBUFS__CONN_EST_FAILURE_CONTROL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__conn_est_failure_control__descriptor) \
    , NULL, NULL, NULL }


struct  _StreamingProtobufs__ConnEstFailCount
{
  ProtobufCMessage base;
  StreamingProtobufs__ConnEstFailCount__Value value;
};
#define STREAMING_PROTOBUFS__CONN_EST_FAIL_COUNT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__conn_est_fail_count__descriptor) \
    , STREAMING_PROTOBUFS__CONN_EST_FAIL_COUNT__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__ConnEstFailOffsetValidity
{
  ProtobufCMessage base;
  StreamingProtobufs__ConnEstFailOffsetValidity__Value value;
};
#define STREAMING_PROTOBUFS__CONN_EST_FAIL_OFFSET_VALIDITY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__conn_est_fail_offset_validity__descriptor) \
    , STREAMING_PROTOBUFS__CONN_EST_FAIL_OFFSET_VALIDITY__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__SISchedulingInfo
{
  ProtobufCMessage base;
  size_t n_schedulinginfolist;
  StreamingProtobufs__SchedulingInfo **schedulinginfolist;
  StreamingProtobufs__SIWindowLength *si_windowlength;
  StreamingProtobufs__SIRequestConfig *si_requestconfig;
  StreamingProtobufs__SIRequestConfig *si_requestconfigsul;
  Google__Protobuf__BytesValue *systeminformationareaid;
};
#define STREAMING_PROTOBUFS__SI__SCHEDULING_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__si__scheduling_info__descriptor) \
    , 0,NULL, NULL, NULL, NULL, NULL }


struct  _StreamingProtobufs__SIWindowLength
{
  ProtobufCMessage base;
  StreamingProtobufs__SIWindowLength__Value value;
};
#define STREAMING_PROTOBUFS__SI__WINDOW_LENGTH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__si__window_length__descriptor) \
    , STREAMING_PROTOBUFS__SI__WINDOW_LENGTH__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__SchedulingInfo
{
  ProtobufCMessage base;
  StreamingProtobufs__SIBroadcastStatus *si_broadcaststatus;
  StreamingProtobufs__SIPeriodicity *si_periodicity;
  StreamingProtobufs__SIBMapping *sib_mappinginfo;
};
#define STREAMING_PROTOBUFS__SCHEDULING_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__scheduling_info__descriptor) \
    , NULL, NULL, NULL }


struct  _StreamingProtobufs__SIBMapping
{
  ProtobufCMessage base;
  size_t n_items;
  StreamingProtobufs__SIBTypeInfo **items;
};
#define STREAMING_PROTOBUFS__SIB__MAPPING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__sib__mapping__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__SIBroadcastStatus
{
  ProtobufCMessage base;
  StreamingProtobufs__SIBroadcastStatus__Value value;
};
#define STREAMING_PROTOBUFS__SI__BROADCAST_STATUS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__si__broadcast_status__descriptor) \
    , STREAMING_PROTOBUFS__SI__BROADCAST_STATUS__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__SIPeriodicity
{
  ProtobufCMessage base;
  StreamingProtobufs__SIPeriodicity__Value value;
};
#define STREAMING_PROTOBUFS__SI__PERIODICITY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__si__periodicity__descriptor) \
    , STREAMING_PROTOBUFS__SI__PERIODICITY__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__SIBTypeInfo
{
  ProtobufCMessage base;
  StreamingProtobufs__SIBTypeInfoType *type;
  Google__Protobuf__UInt32Value *valuetag;
  StreamingProtobufs__TrueOpt *areascope;
};
#define STREAMING_PROTOBUFS__SIB__TYPE_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__sib__type_info__descriptor) \
    , NULL, NULL, NULL }


struct  _StreamingProtobufs__SIBTypeInfoType
{
  ProtobufCMessage base;
  StreamingProtobufs__SIBTypeInfoType__Value value;
};
#define STREAMING_PROTOBUFS__SIB__TYPE_INFO_TYPE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__sib__type_info_type__descriptor) \
    , STREAMING_PROTOBUFS__SIB__TYPE_INFO_TYPE__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__SIRequestConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__RACHOccasionsSI *rach_occasionssi;
  StreamingProtobufs__SIRequestPeriod *si_requestperiod;
  size_t n_si_requestresources;
  StreamingProtobufs__SIRequestResources **si_requestresources;
};
#define STREAMING_PROTOBUFS__SI__REQUEST_CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__si__request_config__descriptor) \
    , NULL, NULL, 0,NULL }


struct  _StreamingProtobufs__SIRequestPeriod
{
  ProtobufCMessage base;
  StreamingProtobufs__SIRequestPeriod__Value value;
};
#define STREAMING_PROTOBUFS__SI__REQUEST_PERIOD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__si__request_period__descriptor) \
    , STREAMING_PROTOBUFS__SI__REQUEST_PERIOD__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__RACHOccasionsSI
{
  ProtobufCMessage base;
  StreamingProtobufs__RACHConfigGeneric *rach_configsi;
  StreamingProtobufs__SSBPerRACHOccasion *ssb_perrach_occasion;
};
#define STREAMING_PROTOBUFS__RACH__OCCASIONS_SI__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__rach__occasions_si__descriptor) \
    , NULL, NULL }


struct  _StreamingProtobufs__SIRequestResources
{
  ProtobufCMessage base;
  uint32_t ra_preamblestartindex;
  Google__Protobuf__UInt32Value *ra_associationperiodindex;
  Google__Protobuf__UInt32Value *ra_ssb_occasionmaskindex;
};
#define STREAMING_PROTOBUFS__SI__REQUEST_RESOURCES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__si__request_resources__descriptor) \
    , 0, NULL, NULL }


struct  _StreamingProtobufs__ServingCellConfigCommonSIB
{
  ProtobufCMessage base;
  StreamingProtobufs__DownlinkConfigCommonSIB *downlinkconfigcommon;
  StreamingProtobufs__UplinkConfigCommonSIB *uplinkconfigcommon;
  StreamingProtobufs__UplinkConfigCommonSIB *supplementaryuplink;
  StreamingProtobufs__SIBNTimingAdvanceOffset *n_timingadvanceoffset;
  StreamingProtobufs__SIBSSBPositionsInBurst *ssb_positionsinburst;
  StreamingProtobufs__SIBSSBPeriodicityServingCell *ssb_periodicityservingcell;
  StreamingProtobufs__TDDULDLConfigCommon *tdd_ul_dl_configurationcommon;
  int32_t ss_pbch_blockpower;
};
#define STREAMING_PROTOBUFS__SERVING_CELL_CONFIG_COMMON_SIB__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__serving_cell_config_common_sib__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0 }


struct  _StreamingProtobufs__DownlinkConfigCommonSIB
{
  ProtobufCMessage base;
  StreamingProtobufs__FrequencyInfoDLSIB *frequencyinfodl;
  StreamingProtobufs__BWPDownlinkCommon *initialdownlinkbwp;
  StreamingProtobufs__BCCHConfig *bcch_config;
  StreamingProtobufs__PCCHConfig *pcch_config;
};
#define STREAMING_PROTOBUFS__DOWNLINK_CONFIG_COMMON_SIB__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__downlink_config_common_sib__descriptor) \
    , NULL, NULL, NULL, NULL }


struct  _StreamingProtobufs__FrequencyInfoDLSIB
{
  ProtobufCMessage base;
  StreamingProtobufs__MultiFrequencyBandListNRSIB *frequencybandlist;
  uint32_t offsettopointa;
  size_t n_scs_specificcarrierlist;
  StreamingProtobufs__SCSSpecificCarrier **scs_specificcarrierlist;
};
#define STREAMING_PROTOBUFS__FREQUENCY_INFO_DL__SIB__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__frequency_info_dl__sib__descriptor) \
    , NULL, 0, 0,NULL }


struct  _StreamingProtobufs__MultiFrequencyBandListNRSIB
{
  ProtobufCMessage base;
  size_t n_items;
  StreamingProtobufs__NRMultiBandInfo **items;
};
#define STREAMING_PROTOBUFS__MULTI_FREQUENCY_BAND_LIST_NR__SIB__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__multi_frequency_band_list_nr__sib__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__NRMultiBandInfo
{
  ProtobufCMessage base;
  Google__Protobuf__UInt32Value *freqbandindicatornr;
  StreamingProtobufs__NRNSPmaxList *nr_ns_pmaxlist;
};
#define STREAMING_PROTOBUFS__NR__MULTI_BAND_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__nr__multi_band_info__descriptor) \
    , NULL, NULL }


struct  _StreamingProtobufs__NRNSPmaxList
{
  ProtobufCMessage base;
  size_t n_items;
  StreamingProtobufs__NRNSPmaxValue **items;
};
#define STREAMING_PROTOBUFS__NR__NS__PMAX_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__nr__ns__pmax_list__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__NRNSPmaxValue
{
  ProtobufCMessage base;
  Google__Protobuf__Int32Value *additionalpmax;
  uint32_t additionalspectrumemission;
};
#define STREAMING_PROTOBUFS__NR__NS__PMAX_VALUE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__nr__ns__pmax_value__descriptor) \
    , NULL, 0 }


struct  _StreamingProtobufs__BCCHConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__BCCHConfig__ModificationPeriodCoeff modificationperiodcoeff;
};
#define STREAMING_PROTOBUFS__BCCH__CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__bcch__config__descriptor) \
    , STREAMING_PROTOBUFS__BCCH__CONFIG__MODIFICATION_PERIOD_COEFF__protobuf_unspecified }


typedef enum {
  STREAMING_PROTOBUFS__PCCH__CONFIG__N_AND_PAGING_FRAME_OFFSET__NOT_SET = 0,
  STREAMING_PROTOBUFS__PCCH__CONFIG__N_AND_PAGING_FRAME_OFFSET_ONE_T = 2,
  STREAMING_PROTOBUFS__PCCH__CONFIG__N_AND_PAGING_FRAME_OFFSET_HALF_T = 3,
  STREAMING_PROTOBUFS__PCCH__CONFIG__N_AND_PAGING_FRAME_OFFSET_QUARTER_T = 4,
  STREAMING_PROTOBUFS__PCCH__CONFIG__N_AND_PAGING_FRAME_OFFSET_ONE_EIGHTH_T = 5,
  STREAMING_PROTOBUFS__PCCH__CONFIG__N_AND_PAGING_FRAME_OFFSET_ONE_SIXTEENTH_T = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PCCH__CONFIG__N_AND_PAGING_FRAME_OFFSET)
} StreamingProtobufs__PCCHConfig__NAndPagingFrameOffsetCase;

typedef enum {
  STREAMING_PROTOBUFS__PCCH__CONFIG__FIRST_PDCCH__MONITORING_OCCASION_OF_PO__NOT_SET = 0,
  STREAMING_PROTOBUFS__PCCH__CONFIG__FIRST_PDCCH__MONITORING_OCCASION_OF_PO_S_CS15_KHZONE_T = 8,
  STREAMING_PROTOBUFS__PCCH__CONFIG__FIRST_PDCCH__MONITORING_OCCASION_OF_PO_S_CS30_KHZONE_T__SCS15_KHZHALF_T = 9,
  STREAMING_PROTOBUFS__PCCH__CONFIG__FIRST_PDCCH__MONITORING_OCCASION_OF_PO_S_CS60_KHZONE_T__SCS30_KHZHALF_T__SCS15_KHZQUARTER_T = 10,
  STREAMING_PROTOBUFS__PCCH__CONFIG__FIRST_PDCCH__MONITORING_OCCASION_OF_PO_S_CS120_KHZONE_T__SCS60_KHZHALF_T__SCS30_KHZQUARTER_T__SCS15_KHZONE_EIGHTH_T = 11,
  STREAMING_PROTOBUFS__PCCH__CONFIG__FIRST_PDCCH__MONITORING_OCCASION_OF_PO_S_CS120_KHZHALF_T__SCS60_KHZQUARTER_T__SCS30_KHZONE_EIGHTH_T__SCS15_KHZONE_SIXTEENTH_T = 12,
  STREAMING_PROTOBUFS__PCCH__CONFIG__FIRST_PDCCH__MONITORING_OCCASION_OF_PO_S_CS120_KHZQUARTER_T__SCS60_KHZONE_EIGHTH_T__SCS30_KHZONE_SIXTEENTH_T = 13,
  STREAMING_PROTOBUFS__PCCH__CONFIG__FIRST_PDCCH__MONITORING_OCCASION_OF_PO_S_CS120_KHZONE_EIGHTH_T__SCS60_KHZONE_SIXTEENTH_T = 14,
  STREAMING_PROTOBUFS__PCCH__CONFIG__FIRST_PDCCH__MONITORING_OCCASION_OF_PO_S_CS120_KHZONE_SIXTEENTH_T = 15
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__PCCH__CONFIG__FIRST_PDCCH__MONITORING_OCCASION_OF_PO)
} StreamingProtobufs__PCCHConfig__FirstPDCCHMonitoringOccasionOfPOCase;

struct  _StreamingProtobufs__PCCHConfig
{
  ProtobufCMessage base;
  StreamingProtobufs__PagingCycle *defaultpagingcycle;
  StreamingProtobufs__PCCHConfigNs *ns;
  StreamingProtobufs__PCCHConfig__NAndPagingFrameOffsetCase n_and_paging_frame_offset_case;
  union {
    StreamingProtobufs__Null *onet;
    uint32_t halft;
    uint32_t quartert;
    uint32_t oneeightht;
    uint32_t onesixteentht;
  };
  StreamingProtobufs__PCCHConfig__FirstPDCCHMonitoringOccasionOfPOCase first_pdcch__monitoring_occasion_of_po_case;
  union {
    StreamingProtobufs__SCS15KHZoneT *scs15khzonet;
    StreamingProtobufs__SCS30KHZoneTSCS15KHZhalfT *scs30khzonet_scs15khzhalft;
    StreamingProtobufs__SCS60KHZoneTSCS30KHZhalfTSCS15KHZquarterT *scs60khzonet_scs30khzhalft_scs15khzquartert;
    StreamingProtobufs__SCS120KHZoneTSCS60KHZhalfTSCS30KHZquarterTSCS15KHZoneEighthT *scs120khzonet_scs60khzhalft_scs30khzquartert_scs15khzoneeightht;
    StreamingProtobufs__SCS120KHZhalfTSCS60KHZquarterTSCS30KHZoneEighthTSCS15KHZoneSixteenthT *scs120khzhalft_scs60khzquartert_scs30khzoneeightht_scs15khzonesixteentht;
    StreamingProtobufs__SCS120KHZquarterTSCS60KHZoneEighthTSCS30KHZoneSixteenthT *scs120khzquartert_scs60khzoneeightht_scs30khzonesixteentht;
    StreamingProtobufs__SCS120KHZoneEighthTSCS60KHZoneSixteenthT *scs120khzoneeightht_scs60khzonesixteentht;
    StreamingProtobufs__SCS120KHZoneSixteenthT *scs120khzonesixteentht;
  };
};
#define STREAMING_PROTOBUFS__PCCH__CONFIG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pcch__config__descriptor) \
    , NULL, NULL, STREAMING_PROTOBUFS__PCCH__CONFIG__N_AND_PAGING_FRAME_OFFSET__NOT_SET, {0}, STREAMING_PROTOBUFS__PCCH__CONFIG__FIRST_PDCCH__MONITORING_OCCASION_OF_PO__NOT_SET, {0} }


struct  _StreamingProtobufs__PagingCycle
{
  ProtobufCMessage base;
  StreamingProtobufs__PagingCycle__Value value;
};
#define STREAMING_PROTOBUFS__PAGING_CYCLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__paging_cycle__descriptor) \
    , STREAMING_PROTOBUFS__PAGING_CYCLE__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__PCCHConfigNs
{
  ProtobufCMessage base;
  StreamingProtobufs__PCCHConfigNs__Value value;
};
#define STREAMING_PROTOBUFS__PCCH__CONFIG_NS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__pcch__config_ns__descriptor) \
    , STREAMING_PROTOBUFS__PCCH__CONFIG_NS__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__SCS15KHZoneT
{
  ProtobufCMessage base;
  size_t n_values;
  uint32_t *values;
};
#define STREAMING_PROTOBUFS__SCS15_KHZONE_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__scs15_khzone_t__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__SCS30KHZoneTSCS15KHZhalfT
{
  ProtobufCMessage base;
  size_t n_values;
  uint32_t *values;
};
#define STREAMING_PROTOBUFS__SCS30_KHZONE_T__SCS15_KHZHALF_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__scs30_khzone_t__scs15_khzhalf_t__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__SCS60KHZoneTSCS30KHZhalfTSCS15KHZquarterT
{
  ProtobufCMessage base;
  size_t n_values;
  uint32_t *values;
};
#define STREAMING_PROTOBUFS__SCS60_KHZONE_T__SCS30_KHZHALF_T__SCS15_KHZQUARTER_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__scs60_khzone_t__scs30_khzhalf_t__scs15_khzquarter_t__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__SCS120KHZoneTSCS60KHZhalfTSCS30KHZquarterTSCS15KHZoneEighthT
{
  ProtobufCMessage base;
  size_t n_values;
  uint32_t *values;
};
#define STREAMING_PROTOBUFS__SCS120_KHZONE_T__SCS60_KHZHALF_T__SCS30_KHZQUARTER_T__SCS15_KHZONE_EIGHTH_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__scs120_khzone_t__scs60_khzhalf_t__scs30_khzquarter_t__scs15_khzone_eighth_t__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__SCS120KHZhalfTSCS60KHZquarterTSCS30KHZoneEighthTSCS15KHZoneSixteenthT
{
  ProtobufCMessage base;
  size_t n_values;
  uint32_t *values;
};
#define STREAMING_PROTOBUFS__SCS120_KHZHALF_T__SCS60_KHZQUARTER_T__SCS30_KHZONE_EIGHTH_T__SCS15_KHZONE_SIXTEENTH_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__scs120_khzhalf_t__scs60_khzquarter_t__scs30_khzone_eighth_t__scs15_khzone_sixteenth_t__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__SCS120KHZquarterTSCS60KHZoneEighthTSCS30KHZoneSixteenthT
{
  ProtobufCMessage base;
  size_t n_values;
  uint32_t *values;
};
#define STREAMING_PROTOBUFS__SCS120_KHZQUARTER_T__SCS60_KHZONE_EIGHTH_T__SCS30_KHZONE_SIXTEENTH_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__scs120_khzquarter_t__scs60_khzone_eighth_t__scs30_khzone_sixteenth_t__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__SCS120KHZoneEighthTSCS60KHZoneSixteenthT
{
  ProtobufCMessage base;
  size_t n_values;
  uint32_t *values;
};
#define STREAMING_PROTOBUFS__SCS120_KHZONE_EIGHTH_T__SCS60_KHZONE_SIXTEENTH_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__scs120_khzone_eighth_t__scs60_khzone_sixteenth_t__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__SCS120KHZoneSixteenthT
{
  ProtobufCMessage base;
  size_t n_values;
  uint32_t *values;
};
#define STREAMING_PROTOBUFS__SCS120_KHZONE_SIXTEENTH_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__scs120_khzone_sixteenth_t__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__UplinkConfigCommonSIB
{
  ProtobufCMessage base;
  StreamingProtobufs__FrequencyInfoULSIB *frequencyinfoul;
  StreamingProtobufs__BWPUplinkCommon *initialuplinkbwp;
  StreamingProtobufs__TimeAlignmentTimer *timealignmenttimercommon;
};
#define STREAMING_PROTOBUFS__UPLINK_CONFIG_COMMON_SIB__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__uplink_config_common_sib__descriptor) \
    , NULL, NULL, NULL }


struct  _StreamingProtobufs__FrequencyInfoULSIB
{
  ProtobufCMessage base;
  StreamingProtobufs__MultiFrequencyBandListNRSIB *frequencybandlist;
  Google__Protobuf__UInt32Value *absolutefrequencypointa;
  size_t n_scs_specificcarrierlist;
  StreamingProtobufs__SCSSpecificCarrier **scs_specificcarrierlist;
  Google__Protobuf__Int32Value *p_max;
  StreamingProtobufs__TrueOpt *frequencyshift7p5khz;
};
#define STREAMING_PROTOBUFS__FREQUENCY_INFO_UL__SIB__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__frequency_info_ul__sib__descriptor) \
    , NULL, NULL, 0,NULL, NULL, NULL }


struct  _StreamingProtobufs__SIBNTimingAdvanceOffset
{
  ProtobufCMessage base;
  StreamingProtobufs__SIBNTimingAdvanceOffset__Value value;
};
#define STREAMING_PROTOBUFS__SIB__N__TIMING_ADVANCE_OFFSET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__sib__n__timing_advance_offset__descriptor) \
    , STREAMING_PROTOBUFS__SIB__N__TIMING_ADVANCE_OFFSET__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__SIBSSBPositionsInBurst
{
  ProtobufCMessage base;
  ProtobufCBinaryData inonegroup;
  Google__Protobuf__BytesValue *grouppresence;
};
#define STREAMING_PROTOBUFS__SIB__SSB__POSITIONS_IN_BURST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__sib__ssb__positions_in_burst__descriptor) \
    , {0,NULL}, NULL }


struct  _StreamingProtobufs__SIBSSBPeriodicityServingCell
{
  ProtobufCMessage base;
  StreamingProtobufs__SIBSSBPeriodicityServingCell__Value value;
};
#define STREAMING_PROTOBUFS__SIB__SSB__PERIODICITY_SERVING_CELL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__sib__ssb__periodicity_serving_cell__descriptor) \
    , STREAMING_PROTOBUFS__SIB__SSB__PERIODICITY_SERVING_CELL__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__UETimersAndConstants
{
  ProtobufCMessage base;
  StreamingProtobufs__UETimersAndConstantsT300T301T319 *t300;
  StreamingProtobufs__UETimersAndConstantsT300T301T319 *t301;
  StreamingProtobufs__UETimersAndConstantsT310 *t310;
  StreamingProtobufs__UETimersAndConstantsN310 *n310;
  StreamingProtobufs__UETimersAndConstantsT311 *t311;
  StreamingProtobufs__UETimersAndConstantsN311 *n311;
  StreamingProtobufs__UETimersAndConstantsT300T301T319 *t319;
};
#define STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__ue__timers_and_constants__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, NULL, NULL }


struct  _StreamingProtobufs__UETimersAndConstantsT300T301T319
{
  ProtobufCMessage base;
  StreamingProtobufs__UETimersAndConstantsT300T301T319__Value value;
};
#define STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_T300__T301__T319__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__ue__timers_and_constants_t300__t301__t319__descriptor) \
    , STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_T300__T301__T319__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__UETimersAndConstantsT310
{
  ProtobufCMessage base;
  StreamingProtobufs__UETimersAndConstantsT310__Value value;
};
#define STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_T310__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__ue__timers_and_constants_t310__descriptor) \
    , STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_T310__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__UETimersAndConstantsN310
{
  ProtobufCMessage base;
  StreamingProtobufs__UETimersAndConstantsN310__Value value;
};
#define STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_N310__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__ue__timers_and_constants_n310__descriptor) \
    , STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_N310__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__UETimersAndConstantsT311
{
  ProtobufCMessage base;
  StreamingProtobufs__UETimersAndConstantsT311__Value value;
};
#define STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_T311__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__ue__timers_and_constants_t311__descriptor) \
    , STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_T311__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__UETimersAndConstantsN311
{
  ProtobufCMessage base;
  StreamingProtobufs__UETimersAndConstantsN311__Value value;
};
#define STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_N311__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__ue__timers_and_constants_n311__descriptor) \
    , STREAMING_PROTOBUFS__UE__TIMERS_AND_CONSTANTS_N311__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__UACBarringPerCatList
{
  ProtobufCMessage base;
  size_t n_items;
  StreamingProtobufs__UACBarringPerCat **items;
};
#define STREAMING_PROTOBUFS__UAC__BARRING_PER_CAT_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__uac__barring_per_cat_list__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__UACBarringPerCat
{
  ProtobufCMessage base;
  uint32_t accesscategory;
  uint32_t uac_barringinfosetindex;
};
#define STREAMING_PROTOBUFS__UAC__BARRING_PER_CAT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__uac__barring_per_cat__descriptor) \
    , 0, 0 }


struct  _StreamingProtobufs__UACBarringPerPLMNList
{
  ProtobufCMessage base;
  size_t n_items;
  StreamingProtobufs__UACBarringPerPLMN **items;
};
#define STREAMING_PROTOBUFS__UAC__BARRING_PER_PLMN__LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__uac__barring_per_plmn__list__descriptor) \
    , 0,NULL }


typedef enum {
  STREAMING_PROTOBUFS__UAC__BARRING_PER_PLMN__UAC__ACBARRING_LIST_TYPE__NOT_SET = 0,
  STREAMING_PROTOBUFS__UAC__BARRING_PER_PLMN__UAC__ACBARRING_LIST_TYPE_UAC__IMPLICIT_ACBARRING_LIST = 2,
  STREAMING_PROTOBUFS__UAC__BARRING_PER_PLMN__UAC__ACBARRING_LIST_TYPE_UAC__EXPLICIT_ACBARRING_LIST = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STREAMING_PROTOBUFS__UAC__BARRING_PER_PLMN__UAC__ACBARRING_LIST_TYPE)
} StreamingProtobufs__UACBarringPerPLMN__UacACBarringListTypeCase;

struct  _StreamingProtobufs__UACBarringPerPLMN
{
  ProtobufCMessage base;
  uint32_t plmn_identityindex;
  StreamingProtobufs__UACBarringPerPLMN__UacACBarringListTypeCase uac__acbarring_list_type_case;
  union {
    StreamingProtobufs__UACImplicitACBarringList *uac_implicitacbarringlist;
    StreamingProtobufs__UACBarringPerCatList *uac_explicitacbarringlist;
  };
};
#define STREAMING_PROTOBUFS__UAC__BARRING_PER_PLMN__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__uac__barring_per_plmn__descriptor) \
    , 0, STREAMING_PROTOBUFS__UAC__BARRING_PER_PLMN__UAC__ACBARRING_LIST_TYPE__NOT_SET, {0} }


struct  _StreamingProtobufs__UACImplicitACBarringList
{
  ProtobufCMessage base;
  size_t n_items;
  uint32_t *items;
};
#define STREAMING_PROTOBUFS__UAC__IMPLICIT_ACBARRING_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__uac__implicit_acbarring_list__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__UACBarringInfoSetList
{
  ProtobufCMessage base;
  size_t n_items;
  StreamingProtobufs__UACBarringInfoSet **items;
};
#define STREAMING_PROTOBUFS__UAC__BARRING_INFO_SET_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__uac__barring_info_set_list__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__UACBarringInfoSet
{
  ProtobufCMessage base;
  StreamingProtobufs__UACBarringFactor *uac_barringfactor;
  StreamingProtobufs__UACBarringTime *uac_barringtime;
  ProtobufCBinaryData uac_barringforaccessidentity;
};
#define STREAMING_PROTOBUFS__UAC__BARRING_INFO_SET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__uac__barring_info_set__descriptor) \
    , NULL, NULL, {0,NULL} }


struct  _StreamingProtobufs__UACBarringFactor
{
  ProtobufCMessage base;
  StreamingProtobufs__UACBarringFactor__Value value;
};
#define STREAMING_PROTOBUFS__UAC__BARRING_FACTOR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__uac__barring_factor__descriptor) \
    , STREAMING_PROTOBUFS__UAC__BARRING_FACTOR__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__UACBarringTime
{
  ProtobufCMessage base;
  StreamingProtobufs__UACBarringTime__Value value;
};
#define STREAMING_PROTOBUFS__UAC__BARRING_TIME__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__uac__barring_time__descriptor) \
    , STREAMING_PROTOBUFS__UAC__BARRING_TIME__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__MobilityStateParameters
{
  ProtobufCMessage base;
  StreamingProtobufs__TEvaluationHystNormal *t_evaluation;
  StreamingProtobufs__TEvaluationHystNormal *t_hystnormal;
  uint32_t n_cellchangemedium;
  uint32_t n_cellchangehigh;
};
#define STREAMING_PROTOBUFS__MOBILITY_STATE_PARAMETERS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__mobility_state_parameters__descriptor) \
    , NULL, NULL, 0, 0 }


struct  _StreamingProtobufs__TEvaluationHystNormal
{
  ProtobufCMessage base;
  StreamingProtobufs__TEvaluationHystNormal__Value value;
};
#define STREAMING_PROTOBUFS__T__EVALUATION__HYST_NORMAL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__t__evaluation__hyst_normal__descriptor) \
    , STREAMING_PROTOBUFS__T__EVALUATION__HYST_NORMAL__VALUE__protobuf_unspecified }


struct  _StreamingProtobufs__EUTRAMultiBandInfoList
{
  ProtobufCMessage base;
  size_t n_items;
  StreamingProtobufs__EUTRAMultiBandInfo **items;
};
#define STREAMING_PROTOBUFS__EUTRA__MULTI_BAND_INFO_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__eutra__multi_band_info_list__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__EUTRAMultiBandInfo
{
  ProtobufCMessage base;
  uint32_t eutra_freqbandindicator;
  StreamingProtobufs__EUTRANSPmaxList *eutra_ns_pmaxlist;
};
#define STREAMING_PROTOBUFS__EUTRA__MULTI_BAND_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__eutra__multi_band_info__descriptor) \
    , 0, NULL }


struct  _StreamingProtobufs__EUTRANSPmaxList
{
  ProtobufCMessage base;
  size_t n_items;
  StreamingProtobufs__EUTRANSPmaxValue **items;
};
#define STREAMING_PROTOBUFS__EUTRA__NS__PMAX_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__eutra__ns__pmax_list__descriptor) \
    , 0,NULL }


struct  _StreamingProtobufs__EUTRANSPmaxValue
{
  ProtobufCMessage base;
  Google__Protobuf__Int32Value *additionalpmax;
  Google__Protobuf__UInt32Value *additionalspectrumemission;
};
#define STREAMING_PROTOBUFS__EUTRA__NS__PMAX_VALUE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&streaming_protobufs__eutra__ns__pmax_value__descriptor) \
    , NULL, NULL }


/* StreamingProtobufs__CellGroupConfig methods */
void   streaming_protobufs__cell_group_config__init
                     (StreamingProtobufs__CellGroupConfig         *message);
size_t streaming_protobufs__cell_group_config__get_packed_size
                     (const StreamingProtobufs__CellGroupConfig   *message);
size_t streaming_protobufs__cell_group_config__pack
                     (const StreamingProtobufs__CellGroupConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__cell_group_config__pack_to_buffer
                     (const StreamingProtobufs__CellGroupConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CellGroupConfig *
       streaming_protobufs__cell_group_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__cell_group_config__free_unpacked
                     (StreamingProtobufs__CellGroupConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__RLCBearerConfig methods */
void   streaming_protobufs__rlc__bearer_config__init
                     (StreamingProtobufs__RLCBearerConfig         *message);
size_t streaming_protobufs__rlc__bearer_config__get_packed_size
                     (const StreamingProtobufs__RLCBearerConfig   *message);
size_t streaming_protobufs__rlc__bearer_config__pack
                     (const StreamingProtobufs__RLCBearerConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__rlc__bearer_config__pack_to_buffer
                     (const StreamingProtobufs__RLCBearerConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__RLCBearerConfig *
       streaming_protobufs__rlc__bearer_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__rlc__bearer_config__free_unpacked
                     (StreamingProtobufs__RLCBearerConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__RLCConfig methods */
void   streaming_protobufs__rlc__config__init
                     (StreamingProtobufs__RLCConfig         *message);
size_t streaming_protobufs__rlc__config__get_packed_size
                     (const StreamingProtobufs__RLCConfig   *message);
size_t streaming_protobufs__rlc__config__pack
                     (const StreamingProtobufs__RLCConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__rlc__config__pack_to_buffer
                     (const StreamingProtobufs__RLCConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__RLCConfig *
       streaming_protobufs__rlc__config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__rlc__config__free_unpacked
                     (StreamingProtobufs__RLCConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__AM methods */
void   streaming_protobufs__am__init
                     (StreamingProtobufs__AM         *message);
size_t streaming_protobufs__am__get_packed_size
                     (const StreamingProtobufs__AM   *message);
size_t streaming_protobufs__am__pack
                     (const StreamingProtobufs__AM   *message,
                      uint8_t             *out);
size_t streaming_protobufs__am__pack_to_buffer
                     (const StreamingProtobufs__AM   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__AM *
       streaming_protobufs__am__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__am__free_unpacked
                     (StreamingProtobufs__AM *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ULAMRLC methods */
void   streaming_protobufs__ul__am__rlc__init
                     (StreamingProtobufs__ULAMRLC         *message);
size_t streaming_protobufs__ul__am__rlc__get_packed_size
                     (const StreamingProtobufs__ULAMRLC   *message);
size_t streaming_protobufs__ul__am__rlc__pack
                     (const StreamingProtobufs__ULAMRLC   *message,
                      uint8_t             *out);
size_t streaming_protobufs__ul__am__rlc__pack_to_buffer
                     (const StreamingProtobufs__ULAMRLC   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ULAMRLC *
       streaming_protobufs__ul__am__rlc__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__ul__am__rlc__free_unpacked
                     (StreamingProtobufs__ULAMRLC *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MaxRetxThreshold methods */
void   streaming_protobufs__max_retx_threshold__init
                     (StreamingProtobufs__MaxRetxThreshold         *message);
size_t streaming_protobufs__max_retx_threshold__get_packed_size
                     (const StreamingProtobufs__MaxRetxThreshold   *message);
size_t streaming_protobufs__max_retx_threshold__pack
                     (const StreamingProtobufs__MaxRetxThreshold   *message,
                      uint8_t             *out);
size_t streaming_protobufs__max_retx_threshold__pack_to_buffer
                     (const StreamingProtobufs__MaxRetxThreshold   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MaxRetxThreshold *
       streaming_protobufs__max_retx_threshold__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__max_retx_threshold__free_unpacked
                     (StreamingProtobufs__MaxRetxThreshold *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SNFieldLengthAM methods */
void   streaming_protobufs__sn__field_length_am__init
                     (StreamingProtobufs__SNFieldLengthAM         *message);
size_t streaming_protobufs__sn__field_length_am__get_packed_size
                     (const StreamingProtobufs__SNFieldLengthAM   *message);
size_t streaming_protobufs__sn__field_length_am__pack
                     (const StreamingProtobufs__SNFieldLengthAM   *message,
                      uint8_t             *out);
size_t streaming_protobufs__sn__field_length_am__pack_to_buffer
                     (const StreamingProtobufs__SNFieldLengthAM   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SNFieldLengthAM *
       streaming_protobufs__sn__field_length_am__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__sn__field_length_am__free_unpacked
                     (StreamingProtobufs__SNFieldLengthAM *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__TPollRetransmit methods */
void   streaming_protobufs__t__poll_retransmit__init
                     (StreamingProtobufs__TPollRetransmit         *message);
size_t streaming_protobufs__t__poll_retransmit__get_packed_size
                     (const StreamingProtobufs__TPollRetransmit   *message);
size_t streaming_protobufs__t__poll_retransmit__pack
                     (const StreamingProtobufs__TPollRetransmit   *message,
                      uint8_t             *out);
size_t streaming_protobufs__t__poll_retransmit__pack_to_buffer
                     (const StreamingProtobufs__TPollRetransmit   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__TPollRetransmit *
       streaming_protobufs__t__poll_retransmit__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__t__poll_retransmit__free_unpacked
                     (StreamingProtobufs__TPollRetransmit *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PollPDU methods */
void   streaming_protobufs__poll_pdu__init
                     (StreamingProtobufs__PollPDU         *message);
size_t streaming_protobufs__poll_pdu__get_packed_size
                     (const StreamingProtobufs__PollPDU   *message);
size_t streaming_protobufs__poll_pdu__pack
                     (const StreamingProtobufs__PollPDU   *message,
                      uint8_t             *out);
size_t streaming_protobufs__poll_pdu__pack_to_buffer
                     (const StreamingProtobufs__PollPDU   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PollPDU *
       streaming_protobufs__poll_pdu__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__poll_pdu__free_unpacked
                     (StreamingProtobufs__PollPDU *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PollByte methods */
void   streaming_protobufs__poll_byte__init
                     (StreamingProtobufs__PollByte         *message);
size_t streaming_protobufs__poll_byte__get_packed_size
                     (const StreamingProtobufs__PollByte   *message);
size_t streaming_protobufs__poll_byte__pack
                     (const StreamingProtobufs__PollByte   *message,
                      uint8_t             *out);
size_t streaming_protobufs__poll_byte__pack_to_buffer
                     (const StreamingProtobufs__PollByte   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PollByte *
       streaming_protobufs__poll_byte__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__poll_byte__free_unpacked
                     (StreamingProtobufs__PollByte *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__DLAMRLC methods */
void   streaming_protobufs__dl__am__rlc__init
                     (StreamingProtobufs__DLAMRLC         *message);
size_t streaming_protobufs__dl__am__rlc__get_packed_size
                     (const StreamingProtobufs__DLAMRLC   *message);
size_t streaming_protobufs__dl__am__rlc__pack
                     (const StreamingProtobufs__DLAMRLC   *message,
                      uint8_t             *out);
size_t streaming_protobufs__dl__am__rlc__pack_to_buffer
                     (const StreamingProtobufs__DLAMRLC   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__DLAMRLC *
       streaming_protobufs__dl__am__rlc__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__dl__am__rlc__free_unpacked
                     (StreamingProtobufs__DLAMRLC *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__TReassembly methods */
void   streaming_protobufs__t__reassembly__init
                     (StreamingProtobufs__TReassembly         *message);
size_t streaming_protobufs__t__reassembly__get_packed_size
                     (const StreamingProtobufs__TReassembly   *message);
size_t streaming_protobufs__t__reassembly__pack
                     (const StreamingProtobufs__TReassembly   *message,
                      uint8_t             *out);
size_t streaming_protobufs__t__reassembly__pack_to_buffer
                     (const StreamingProtobufs__TReassembly   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__TReassembly *
       streaming_protobufs__t__reassembly__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__t__reassembly__free_unpacked
                     (StreamingProtobufs__TReassembly *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__TStatusProhibit methods */
void   streaming_protobufs__t__status_prohibit__init
                     (StreamingProtobufs__TStatusProhibit         *message);
size_t streaming_protobufs__t__status_prohibit__get_packed_size
                     (const StreamingProtobufs__TStatusProhibit   *message);
size_t streaming_protobufs__t__status_prohibit__pack
                     (const StreamingProtobufs__TStatusProhibit   *message,
                      uint8_t             *out);
size_t streaming_protobufs__t__status_prohibit__pack_to_buffer
                     (const StreamingProtobufs__TStatusProhibit   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__TStatusProhibit *
       streaming_protobufs__t__status_prohibit__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__t__status_prohibit__free_unpacked
                     (StreamingProtobufs__TStatusProhibit *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__UMBiDirectional methods */
void   streaming_protobufs__um__bi__directional__init
                     (StreamingProtobufs__UMBiDirectional         *message);
size_t streaming_protobufs__um__bi__directional__get_packed_size
                     (const StreamingProtobufs__UMBiDirectional   *message);
size_t streaming_protobufs__um__bi__directional__pack
                     (const StreamingProtobufs__UMBiDirectional   *message,
                      uint8_t             *out);
size_t streaming_protobufs__um__bi__directional__pack_to_buffer
                     (const StreamingProtobufs__UMBiDirectional   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__UMBiDirectional *
       streaming_protobufs__um__bi__directional__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__um__bi__directional__free_unpacked
                     (StreamingProtobufs__UMBiDirectional *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ULUMRLC methods */
void   streaming_protobufs__ul__um__rlc__init
                     (StreamingProtobufs__ULUMRLC         *message);
size_t streaming_protobufs__ul__um__rlc__get_packed_size
                     (const StreamingProtobufs__ULUMRLC   *message);
size_t streaming_protobufs__ul__um__rlc__pack
                     (const StreamingProtobufs__ULUMRLC   *message,
                      uint8_t             *out);
size_t streaming_protobufs__ul__um__rlc__pack_to_buffer
                     (const StreamingProtobufs__ULUMRLC   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ULUMRLC *
       streaming_protobufs__ul__um__rlc__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__ul__um__rlc__free_unpacked
                     (StreamingProtobufs__ULUMRLC *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SNFieldLengthUM methods */
void   streaming_protobufs__sn__field_length_um__init
                     (StreamingProtobufs__SNFieldLengthUM         *message);
size_t streaming_protobufs__sn__field_length_um__get_packed_size
                     (const StreamingProtobufs__SNFieldLengthUM   *message);
size_t streaming_protobufs__sn__field_length_um__pack
                     (const StreamingProtobufs__SNFieldLengthUM   *message,
                      uint8_t             *out);
size_t streaming_protobufs__sn__field_length_um__pack_to_buffer
                     (const StreamingProtobufs__SNFieldLengthUM   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SNFieldLengthUM *
       streaming_protobufs__sn__field_length_um__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__sn__field_length_um__free_unpacked
                     (StreamingProtobufs__SNFieldLengthUM *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__DLUMRLC methods */
void   streaming_protobufs__dl__um__rlc__init
                     (StreamingProtobufs__DLUMRLC         *message);
size_t streaming_protobufs__dl__um__rlc__get_packed_size
                     (const StreamingProtobufs__DLUMRLC   *message);
size_t streaming_protobufs__dl__um__rlc__pack
                     (const StreamingProtobufs__DLUMRLC   *message,
                      uint8_t             *out);
size_t streaming_protobufs__dl__um__rlc__pack_to_buffer
                     (const StreamingProtobufs__DLUMRLC   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__DLUMRLC *
       streaming_protobufs__dl__um__rlc__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__dl__um__rlc__free_unpacked
                     (StreamingProtobufs__DLUMRLC *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__UMUniDirectionalUL methods */
void   streaming_protobufs__um__uni__directional__ul__init
                     (StreamingProtobufs__UMUniDirectionalUL         *message);
size_t streaming_protobufs__um__uni__directional__ul__get_packed_size
                     (const StreamingProtobufs__UMUniDirectionalUL   *message);
size_t streaming_protobufs__um__uni__directional__ul__pack
                     (const StreamingProtobufs__UMUniDirectionalUL   *message,
                      uint8_t             *out);
size_t streaming_protobufs__um__uni__directional__ul__pack_to_buffer
                     (const StreamingProtobufs__UMUniDirectionalUL   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__UMUniDirectionalUL *
       streaming_protobufs__um__uni__directional__ul__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__um__uni__directional__ul__free_unpacked
                     (StreamingProtobufs__UMUniDirectionalUL *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__UMUniDirectionalDL methods */
void   streaming_protobufs__um__uni__directional__dl__init
                     (StreamingProtobufs__UMUniDirectionalDL         *message);
size_t streaming_protobufs__um__uni__directional__dl__get_packed_size
                     (const StreamingProtobufs__UMUniDirectionalDL   *message);
size_t streaming_protobufs__um__uni__directional__dl__pack
                     (const StreamingProtobufs__UMUniDirectionalDL   *message,
                      uint8_t             *out);
size_t streaming_protobufs__um__uni__directional__dl__pack_to_buffer
                     (const StreamingProtobufs__UMUniDirectionalDL   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__UMUniDirectionalDL *
       streaming_protobufs__um__uni__directional__dl__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__um__uni__directional__dl__free_unpacked
                     (StreamingProtobufs__UMUniDirectionalDL *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__LogicalChannelConfig methods */
void   streaming_protobufs__logical_channel_config__init
                     (StreamingProtobufs__LogicalChannelConfig         *message);
size_t streaming_protobufs__logical_channel_config__get_packed_size
                     (const StreamingProtobufs__LogicalChannelConfig   *message);
size_t streaming_protobufs__logical_channel_config__pack
                     (const StreamingProtobufs__LogicalChannelConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__logical_channel_config__pack_to_buffer
                     (const StreamingProtobufs__LogicalChannelConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__LogicalChannelConfig *
       streaming_protobufs__logical_channel_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__logical_channel_config__free_unpacked
                     (StreamingProtobufs__LogicalChannelConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ULSpecificParameters methods */
void   streaming_protobufs__ul__specific_parameters__init
                     (StreamingProtobufs__ULSpecificParameters         *message);
size_t streaming_protobufs__ul__specific_parameters__get_packed_size
                     (const StreamingProtobufs__ULSpecificParameters   *message);
size_t streaming_protobufs__ul__specific_parameters__pack
                     (const StreamingProtobufs__ULSpecificParameters   *message,
                      uint8_t             *out);
size_t streaming_protobufs__ul__specific_parameters__pack_to_buffer
                     (const StreamingProtobufs__ULSpecificParameters   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ULSpecificParameters *
       streaming_protobufs__ul__specific_parameters__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__ul__specific_parameters__free_unpacked
                     (StreamingProtobufs__ULSpecificParameters *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PrioritisedBitRate methods */
void   streaming_protobufs__prioritised_bit_rate__init
                     (StreamingProtobufs__PrioritisedBitRate         *message);
size_t streaming_protobufs__prioritised_bit_rate__get_packed_size
                     (const StreamingProtobufs__PrioritisedBitRate   *message);
size_t streaming_protobufs__prioritised_bit_rate__pack
                     (const StreamingProtobufs__PrioritisedBitRate   *message,
                      uint8_t             *out);
size_t streaming_protobufs__prioritised_bit_rate__pack_to_buffer
                     (const StreamingProtobufs__PrioritisedBitRate   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PrioritisedBitRate *
       streaming_protobufs__prioritised_bit_rate__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__prioritised_bit_rate__free_unpacked
                     (StreamingProtobufs__PrioritisedBitRate *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__BucketSizeDuration methods */
void   streaming_protobufs__bucket_size_duration__init
                     (StreamingProtobufs__BucketSizeDuration         *message);
size_t streaming_protobufs__bucket_size_duration__get_packed_size
                     (const StreamingProtobufs__BucketSizeDuration   *message);
size_t streaming_protobufs__bucket_size_duration__pack
                     (const StreamingProtobufs__BucketSizeDuration   *message,
                      uint8_t             *out);
size_t streaming_protobufs__bucket_size_duration__pack_to_buffer
                     (const StreamingProtobufs__BucketSizeDuration   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__BucketSizeDuration *
       streaming_protobufs__bucket_size_duration__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__bucket_size_duration__free_unpacked
                     (StreamingProtobufs__BucketSizeDuration *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SubcarrierSpacing methods */
void   streaming_protobufs__subcarrier_spacing__init
                     (StreamingProtobufs__SubcarrierSpacing         *message);
size_t streaming_protobufs__subcarrier_spacing__get_packed_size
                     (const StreamingProtobufs__SubcarrierSpacing   *message);
size_t streaming_protobufs__subcarrier_spacing__pack
                     (const StreamingProtobufs__SubcarrierSpacing   *message,
                      uint8_t             *out);
size_t streaming_protobufs__subcarrier_spacing__pack_to_buffer
                     (const StreamingProtobufs__SubcarrierSpacing   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SubcarrierSpacing *
       streaming_protobufs__subcarrier_spacing__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__subcarrier_spacing__free_unpacked
                     (StreamingProtobufs__SubcarrierSpacing *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MaxPUSCHDuration methods */
void   streaming_protobufs__max_pusch__duration__init
                     (StreamingProtobufs__MaxPUSCHDuration         *message);
size_t streaming_protobufs__max_pusch__duration__get_packed_size
                     (const StreamingProtobufs__MaxPUSCHDuration   *message);
size_t streaming_protobufs__max_pusch__duration__pack
                     (const StreamingProtobufs__MaxPUSCHDuration   *message,
                      uint8_t             *out);
size_t streaming_protobufs__max_pusch__duration__pack_to_buffer
                     (const StreamingProtobufs__MaxPUSCHDuration   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MaxPUSCHDuration *
       streaming_protobufs__max_pusch__duration__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__max_pusch__duration__free_unpacked
                     (StreamingProtobufs__MaxPUSCHDuration *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__BitRateQueryProhibitTimer methods */
void   streaming_protobufs__bit_rate_query_prohibit_timer__init
                     (StreamingProtobufs__BitRateQueryProhibitTimer         *message);
size_t streaming_protobufs__bit_rate_query_prohibit_timer__get_packed_size
                     (const StreamingProtobufs__BitRateQueryProhibitTimer   *message);
size_t streaming_protobufs__bit_rate_query_prohibit_timer__pack
                     (const StreamingProtobufs__BitRateQueryProhibitTimer   *message,
                      uint8_t             *out);
size_t streaming_protobufs__bit_rate_query_prohibit_timer__pack_to_buffer
                     (const StreamingProtobufs__BitRateQueryProhibitTimer   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__BitRateQueryProhibitTimer *
       streaming_protobufs__bit_rate_query_prohibit_timer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__bit_rate_query_prohibit_timer__free_unpacked
                     (StreamingProtobufs__BitRateQueryProhibitTimer *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MACCellGroupConfig methods */
void   streaming_protobufs__mac__cell_group_config__init
                     (StreamingProtobufs__MACCellGroupConfig         *message);
size_t streaming_protobufs__mac__cell_group_config__get_packed_size
                     (const StreamingProtobufs__MACCellGroupConfig   *message);
size_t streaming_protobufs__mac__cell_group_config__pack
                     (const StreamingProtobufs__MACCellGroupConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__mac__cell_group_config__pack_to_buffer
                     (const StreamingProtobufs__MACCellGroupConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MACCellGroupConfig *
       streaming_protobufs__mac__cell_group_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__mac__cell_group_config__free_unpacked
                     (StreamingProtobufs__MACCellGroupConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__DRXConfig methods */
void   streaming_protobufs__drx__config__init
                     (StreamingProtobufs__DRXConfig         *message);
size_t streaming_protobufs__drx__config__get_packed_size
                     (const StreamingProtobufs__DRXConfig   *message);
size_t streaming_protobufs__drx__config__pack
                     (const StreamingProtobufs__DRXConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__drx__config__pack_to_buffer
                     (const StreamingProtobufs__DRXConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__DRXConfig *
       streaming_protobufs__drx__config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__drx__config__free_unpacked
                     (StreamingProtobufs__DRXConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MilliSeconds methods */
void   streaming_protobufs__milli_seconds__init
                     (StreamingProtobufs__MilliSeconds         *message);
size_t streaming_protobufs__milli_seconds__get_packed_size
                     (const StreamingProtobufs__MilliSeconds   *message);
size_t streaming_protobufs__milli_seconds__pack
                     (const StreamingProtobufs__MilliSeconds   *message,
                      uint8_t             *out);
size_t streaming_protobufs__milli_seconds__pack_to_buffer
                     (const StreamingProtobufs__MilliSeconds   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MilliSeconds *
       streaming_protobufs__milli_seconds__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__milli_seconds__free_unpacked
                     (StreamingProtobufs__MilliSeconds *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__DRXInactivityTimer methods */
void   streaming_protobufs__drx__inactivity_timer__init
                     (StreamingProtobufs__DRXInactivityTimer         *message);
size_t streaming_protobufs__drx__inactivity_timer__get_packed_size
                     (const StreamingProtobufs__DRXInactivityTimer   *message);
size_t streaming_protobufs__drx__inactivity_timer__pack
                     (const StreamingProtobufs__DRXInactivityTimer   *message,
                      uint8_t             *out);
size_t streaming_protobufs__drx__inactivity_timer__pack_to_buffer
                     (const StreamingProtobufs__DRXInactivityTimer   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__DRXInactivityTimer *
       streaming_protobufs__drx__inactivity_timer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__drx__inactivity_timer__free_unpacked
                     (StreamingProtobufs__DRXInactivityTimer *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__DRXRetransmissionTimer methods */
void   streaming_protobufs__drx__retransmission_timer__init
                     (StreamingProtobufs__DRXRetransmissionTimer         *message);
size_t streaming_protobufs__drx__retransmission_timer__get_packed_size
                     (const StreamingProtobufs__DRXRetransmissionTimer   *message);
size_t streaming_protobufs__drx__retransmission_timer__pack
                     (const StreamingProtobufs__DRXRetransmissionTimer   *message,
                      uint8_t             *out);
size_t streaming_protobufs__drx__retransmission_timer__pack_to_buffer
                     (const StreamingProtobufs__DRXRetransmissionTimer   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__DRXRetransmissionTimer *
       streaming_protobufs__drx__retransmission_timer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__drx__retransmission_timer__free_unpacked
                     (StreamingProtobufs__DRXRetransmissionTimer *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ShortDRX methods */
void   streaming_protobufs__short_drx__init
                     (StreamingProtobufs__ShortDRX         *message);
size_t streaming_protobufs__short_drx__get_packed_size
                     (const StreamingProtobufs__ShortDRX   *message);
size_t streaming_protobufs__short_drx__pack
                     (const StreamingProtobufs__ShortDRX   *message,
                      uint8_t             *out);
size_t streaming_protobufs__short_drx__pack_to_buffer
                     (const StreamingProtobufs__ShortDRX   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ShortDRX *
       streaming_protobufs__short_drx__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__short_drx__free_unpacked
                     (StreamingProtobufs__ShortDRX *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__DRXShortCycle methods */
void   streaming_protobufs__drx__short_cycle__init
                     (StreamingProtobufs__DRXShortCycle         *message);
size_t streaming_protobufs__drx__short_cycle__get_packed_size
                     (const StreamingProtobufs__DRXShortCycle   *message);
size_t streaming_protobufs__drx__short_cycle__pack
                     (const StreamingProtobufs__DRXShortCycle   *message,
                      uint8_t             *out);
size_t streaming_protobufs__drx__short_cycle__pack_to_buffer
                     (const StreamingProtobufs__DRXShortCycle   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__DRXShortCycle *
       streaming_protobufs__drx__short_cycle__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__drx__short_cycle__free_unpacked
                     (StreamingProtobufs__DRXShortCycle *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SchedulingRequestConfig methods */
void   streaming_protobufs__scheduling_request_config__init
                     (StreamingProtobufs__SchedulingRequestConfig         *message);
size_t streaming_protobufs__scheduling_request_config__get_packed_size
                     (const StreamingProtobufs__SchedulingRequestConfig   *message);
size_t streaming_protobufs__scheduling_request_config__pack
                     (const StreamingProtobufs__SchedulingRequestConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__scheduling_request_config__pack_to_buffer
                     (const StreamingProtobufs__SchedulingRequestConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SchedulingRequestConfig *
       streaming_protobufs__scheduling_request_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__scheduling_request_config__free_unpacked
                     (StreamingProtobufs__SchedulingRequestConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SchedulingRequestToAddMod methods */
void   streaming_protobufs__scheduling_request_to_add_mod__init
                     (StreamingProtobufs__SchedulingRequestToAddMod         *message);
size_t streaming_protobufs__scheduling_request_to_add_mod__get_packed_size
                     (const StreamingProtobufs__SchedulingRequestToAddMod   *message);
size_t streaming_protobufs__scheduling_request_to_add_mod__pack
                     (const StreamingProtobufs__SchedulingRequestToAddMod   *message,
                      uint8_t             *out);
size_t streaming_protobufs__scheduling_request_to_add_mod__pack_to_buffer
                     (const StreamingProtobufs__SchedulingRequestToAddMod   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SchedulingRequestToAddMod *
       streaming_protobufs__scheduling_request_to_add_mod__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__scheduling_request_to_add_mod__free_unpacked
                     (StreamingProtobufs__SchedulingRequestToAddMod *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SRProhibitTimer methods */
void   streaming_protobufs__sr__prohibit_timer__init
                     (StreamingProtobufs__SRProhibitTimer         *message);
size_t streaming_protobufs__sr__prohibit_timer__get_packed_size
                     (const StreamingProtobufs__SRProhibitTimer   *message);
size_t streaming_protobufs__sr__prohibit_timer__pack
                     (const StreamingProtobufs__SRProhibitTimer   *message,
                      uint8_t             *out);
size_t streaming_protobufs__sr__prohibit_timer__pack_to_buffer
                     (const StreamingProtobufs__SRProhibitTimer   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SRProhibitTimer *
       streaming_protobufs__sr__prohibit_timer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__sr__prohibit_timer__free_unpacked
                     (StreamingProtobufs__SRProhibitTimer *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SRTransMax methods */
void   streaming_protobufs__sr__trans_max__init
                     (StreamingProtobufs__SRTransMax         *message);
size_t streaming_protobufs__sr__trans_max__get_packed_size
                     (const StreamingProtobufs__SRTransMax   *message);
size_t streaming_protobufs__sr__trans_max__pack
                     (const StreamingProtobufs__SRTransMax   *message,
                      uint8_t             *out);
size_t streaming_protobufs__sr__trans_max__pack_to_buffer
                     (const StreamingProtobufs__SRTransMax   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SRTransMax *
       streaming_protobufs__sr__trans_max__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__sr__trans_max__free_unpacked
                     (StreamingProtobufs__SRTransMax *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__BSRConfig methods */
void   streaming_protobufs__bsr__config__init
                     (StreamingProtobufs__BSRConfig         *message);
size_t streaming_protobufs__bsr__config__get_packed_size
                     (const StreamingProtobufs__BSRConfig   *message);
size_t streaming_protobufs__bsr__config__pack
                     (const StreamingProtobufs__BSRConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__bsr__config__pack_to_buffer
                     (const StreamingProtobufs__BSRConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__BSRConfig *
       streaming_protobufs__bsr__config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__bsr__config__free_unpacked
                     (StreamingProtobufs__BSRConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PeriodicBSRTimer methods */
void   streaming_protobufs__periodic_bsr__timer__init
                     (StreamingProtobufs__PeriodicBSRTimer         *message);
size_t streaming_protobufs__periodic_bsr__timer__get_packed_size
                     (const StreamingProtobufs__PeriodicBSRTimer   *message);
size_t streaming_protobufs__periodic_bsr__timer__pack
                     (const StreamingProtobufs__PeriodicBSRTimer   *message,
                      uint8_t             *out);
size_t streaming_protobufs__periodic_bsr__timer__pack_to_buffer
                     (const StreamingProtobufs__PeriodicBSRTimer   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PeriodicBSRTimer *
       streaming_protobufs__periodic_bsr__timer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__periodic_bsr__timer__free_unpacked
                     (StreamingProtobufs__PeriodicBSRTimer *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__RetxBSRTimer methods */
void   streaming_protobufs__retx_bsr__timer__init
                     (StreamingProtobufs__RetxBSRTimer         *message);
size_t streaming_protobufs__retx_bsr__timer__get_packed_size
                     (const StreamingProtobufs__RetxBSRTimer   *message);
size_t streaming_protobufs__retx_bsr__timer__pack
                     (const StreamingProtobufs__RetxBSRTimer   *message,
                      uint8_t             *out);
size_t streaming_protobufs__retx_bsr__timer__pack_to_buffer
                     (const StreamingProtobufs__RetxBSRTimer   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__RetxBSRTimer *
       streaming_protobufs__retx_bsr__timer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__retx_bsr__timer__free_unpacked
                     (StreamingProtobufs__RetxBSRTimer *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__LogicalChannelSRDelayTimer methods */
void   streaming_protobufs__logical_channel_sr__delay_timer__init
                     (StreamingProtobufs__LogicalChannelSRDelayTimer         *message);
size_t streaming_protobufs__logical_channel_sr__delay_timer__get_packed_size
                     (const StreamingProtobufs__LogicalChannelSRDelayTimer   *message);
size_t streaming_protobufs__logical_channel_sr__delay_timer__pack
                     (const StreamingProtobufs__LogicalChannelSRDelayTimer   *message,
                      uint8_t             *out);
size_t streaming_protobufs__logical_channel_sr__delay_timer__pack_to_buffer
                     (const StreamingProtobufs__LogicalChannelSRDelayTimer   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__LogicalChannelSRDelayTimer *
       streaming_protobufs__logical_channel_sr__delay_timer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__logical_channel_sr__delay_timer__free_unpacked
                     (StreamingProtobufs__LogicalChannelSRDelayTimer *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__TAGConfig methods */
void   streaming_protobufs__tag__config__init
                     (StreamingProtobufs__TAGConfig         *message);
size_t streaming_protobufs__tag__config__get_packed_size
                     (const StreamingProtobufs__TAGConfig   *message);
size_t streaming_protobufs__tag__config__pack
                     (const StreamingProtobufs__TAGConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__tag__config__pack_to_buffer
                     (const StreamingProtobufs__TAGConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__TAGConfig *
       streaming_protobufs__tag__config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__tag__config__free_unpacked
                     (StreamingProtobufs__TAGConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__TAG methods */
void   streaming_protobufs__tag__init
                     (StreamingProtobufs__TAG         *message);
size_t streaming_protobufs__tag__get_packed_size
                     (const StreamingProtobufs__TAG   *message);
size_t streaming_protobufs__tag__pack
                     (const StreamingProtobufs__TAG   *message,
                      uint8_t             *out);
size_t streaming_protobufs__tag__pack_to_buffer
                     (const StreamingProtobufs__TAG   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__TAG *
       streaming_protobufs__tag__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__tag__free_unpacked
                     (StreamingProtobufs__TAG *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__TimeAlignmentTimer methods */
void   streaming_protobufs__time_alignment_timer__init
                     (StreamingProtobufs__TimeAlignmentTimer         *message);
size_t streaming_protobufs__time_alignment_timer__get_packed_size
                     (const StreamingProtobufs__TimeAlignmentTimer   *message);
size_t streaming_protobufs__time_alignment_timer__pack
                     (const StreamingProtobufs__TimeAlignmentTimer   *message,
                      uint8_t             *out);
size_t streaming_protobufs__time_alignment_timer__pack_to_buffer
                     (const StreamingProtobufs__TimeAlignmentTimer   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__TimeAlignmentTimer *
       streaming_protobufs__time_alignment_timer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__time_alignment_timer__free_unpacked
                     (StreamingProtobufs__TimeAlignmentTimer *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PHRConfig methods */
void   streaming_protobufs__phr__config__init
                     (StreamingProtobufs__PHRConfig         *message);
size_t streaming_protobufs__phr__config__get_packed_size
                     (const StreamingProtobufs__PHRConfig   *message);
size_t streaming_protobufs__phr__config__pack
                     (const StreamingProtobufs__PHRConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__phr__config__pack_to_buffer
                     (const StreamingProtobufs__PHRConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PHRConfig *
       streaming_protobufs__phr__config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__phr__config__free_unpacked
                     (StreamingProtobufs__PHRConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PHRPeriodicTimer methods */
void   streaming_protobufs__phr__periodic_timer__init
                     (StreamingProtobufs__PHRPeriodicTimer         *message);
size_t streaming_protobufs__phr__periodic_timer__get_packed_size
                     (const StreamingProtobufs__PHRPeriodicTimer   *message);
size_t streaming_protobufs__phr__periodic_timer__pack
                     (const StreamingProtobufs__PHRPeriodicTimer   *message,
                      uint8_t             *out);
size_t streaming_protobufs__phr__periodic_timer__pack_to_buffer
                     (const StreamingProtobufs__PHRPeriodicTimer   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PHRPeriodicTimer *
       streaming_protobufs__phr__periodic_timer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__phr__periodic_timer__free_unpacked
                     (StreamingProtobufs__PHRPeriodicTimer *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PHRProhibitTimer methods */
void   streaming_protobufs__phr__prohibit_timer__init
                     (StreamingProtobufs__PHRProhibitTimer         *message);
size_t streaming_protobufs__phr__prohibit_timer__get_packed_size
                     (const StreamingProtobufs__PHRProhibitTimer   *message);
size_t streaming_protobufs__phr__prohibit_timer__pack
                     (const StreamingProtobufs__PHRProhibitTimer   *message,
                      uint8_t             *out);
size_t streaming_protobufs__phr__prohibit_timer__pack_to_buffer
                     (const StreamingProtobufs__PHRProhibitTimer   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PHRProhibitTimer *
       streaming_protobufs__phr__prohibit_timer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__phr__prohibit_timer__free_unpacked
                     (StreamingProtobufs__PHRProhibitTimer *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PHRTxPowerFactorChange methods */
void   streaming_protobufs__phr__tx__power_factor_change__init
                     (StreamingProtobufs__PHRTxPowerFactorChange         *message);
size_t streaming_protobufs__phr__tx__power_factor_change__get_packed_size
                     (const StreamingProtobufs__PHRTxPowerFactorChange   *message);
size_t streaming_protobufs__phr__tx__power_factor_change__pack
                     (const StreamingProtobufs__PHRTxPowerFactorChange   *message,
                      uint8_t             *out);
size_t streaming_protobufs__phr__tx__power_factor_change__pack_to_buffer
                     (const StreamingProtobufs__PHRTxPowerFactorChange   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PHRTxPowerFactorChange *
       streaming_protobufs__phr__tx__power_factor_change__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__phr__tx__power_factor_change__free_unpacked
                     (StreamingProtobufs__PHRTxPowerFactorChange *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PHRModeOtherCG methods */
void   streaming_protobufs__phr__mode_other_cg__init
                     (StreamingProtobufs__PHRModeOtherCG         *message);
size_t streaming_protobufs__phr__mode_other_cg__get_packed_size
                     (const StreamingProtobufs__PHRModeOtherCG   *message);
size_t streaming_protobufs__phr__mode_other_cg__pack
                     (const StreamingProtobufs__PHRModeOtherCG   *message,
                      uint8_t             *out);
size_t streaming_protobufs__phr__mode_other_cg__pack_to_buffer
                     (const StreamingProtobufs__PHRModeOtherCG   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PHRModeOtherCG *
       streaming_protobufs__phr__mode_other_cg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__phr__mode_other_cg__free_unpacked
                     (StreamingProtobufs__PHRModeOtherCG *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__DataInactivityTimer methods */
void   streaming_protobufs__data_inactivity_timer__init
                     (StreamingProtobufs__DataInactivityTimer         *message);
size_t streaming_protobufs__data_inactivity_timer__get_packed_size
                     (const StreamingProtobufs__DataInactivityTimer   *message);
size_t streaming_protobufs__data_inactivity_timer__pack
                     (const StreamingProtobufs__DataInactivityTimer   *message,
                      uint8_t             *out);
size_t streaming_protobufs__data_inactivity_timer__pack_to_buffer
                     (const StreamingProtobufs__DataInactivityTimer   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__DataInactivityTimer *
       streaming_protobufs__data_inactivity_timer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__data_inactivity_timer__free_unpacked
                     (StreamingProtobufs__DataInactivityTimer *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PhysicalCellGroupConfig methods */
void   streaming_protobufs__physical_cell_group_config__init
                     (StreamingProtobufs__PhysicalCellGroupConfig         *message);
size_t streaming_protobufs__physical_cell_group_config__get_packed_size
                     (const StreamingProtobufs__PhysicalCellGroupConfig   *message);
size_t streaming_protobufs__physical_cell_group_config__pack
                     (const StreamingProtobufs__PhysicalCellGroupConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__physical_cell_group_config__pack_to_buffer
                     (const StreamingProtobufs__PhysicalCellGroupConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PhysicalCellGroupConfig *
       streaming_protobufs__physical_cell_group_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__physical_cell_group_config__free_unpacked
                     (StreamingProtobufs__PhysicalCellGroupConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__XScale methods */
void   streaming_protobufs__xscale__init
                     (StreamingProtobufs__XScale         *message);
size_t streaming_protobufs__xscale__get_packed_size
                     (const StreamingProtobufs__XScale   *message);
size_t streaming_protobufs__xscale__pack
                     (const StreamingProtobufs__XScale   *message,
                      uint8_t             *out);
size_t streaming_protobufs__xscale__pack_to_buffer
                     (const StreamingProtobufs__XScale   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__XScale *
       streaming_protobufs__xscale__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__xscale__free_unpacked
                     (StreamingProtobufs__XScale *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SpCellConfig methods */
void   streaming_protobufs__sp_cell_config__init
                     (StreamingProtobufs__SpCellConfig         *message);
size_t streaming_protobufs__sp_cell_config__get_packed_size
                     (const StreamingProtobufs__SpCellConfig   *message);
size_t streaming_protobufs__sp_cell_config__pack
                     (const StreamingProtobufs__SpCellConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__sp_cell_config__pack_to_buffer
                     (const StreamingProtobufs__SpCellConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SpCellConfig *
       streaming_protobufs__sp_cell_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__sp_cell_config__free_unpacked
                     (StreamingProtobufs__SpCellConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ReconfigurationWithSync methods */
void   streaming_protobufs__reconfiguration_with_sync__init
                     (StreamingProtobufs__ReconfigurationWithSync         *message);
size_t streaming_protobufs__reconfiguration_with_sync__get_packed_size
                     (const StreamingProtobufs__ReconfigurationWithSync   *message);
size_t streaming_protobufs__reconfiguration_with_sync__pack
                     (const StreamingProtobufs__ReconfigurationWithSync   *message,
                      uint8_t             *out);
size_t streaming_protobufs__reconfiguration_with_sync__pack_to_buffer
                     (const StreamingProtobufs__ReconfigurationWithSync   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ReconfigurationWithSync *
       streaming_protobufs__reconfiguration_with_sync__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__reconfiguration_with_sync__free_unpacked
                     (StreamingProtobufs__ReconfigurationWithSync *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ServingCellConfigCommon methods */
void   streaming_protobufs__serving_cell_config_common__init
                     (StreamingProtobufs__ServingCellConfigCommon         *message);
size_t streaming_protobufs__serving_cell_config_common__get_packed_size
                     (const StreamingProtobufs__ServingCellConfigCommon   *message);
size_t streaming_protobufs__serving_cell_config_common__pack
                     (const StreamingProtobufs__ServingCellConfigCommon   *message,
                      uint8_t             *out);
size_t streaming_protobufs__serving_cell_config_common__pack_to_buffer
                     (const StreamingProtobufs__ServingCellConfigCommon   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ServingCellConfigCommon *
       streaming_protobufs__serving_cell_config_common__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__serving_cell_config_common__free_unpacked
                     (StreamingProtobufs__ServingCellConfigCommon *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__DownlinkConfigCommon methods */
void   streaming_protobufs__downlink_config_common__init
                     (StreamingProtobufs__DownlinkConfigCommon         *message);
size_t streaming_protobufs__downlink_config_common__get_packed_size
                     (const StreamingProtobufs__DownlinkConfigCommon   *message);
size_t streaming_protobufs__downlink_config_common__pack
                     (const StreamingProtobufs__DownlinkConfigCommon   *message,
                      uint8_t             *out);
size_t streaming_protobufs__downlink_config_common__pack_to_buffer
                     (const StreamingProtobufs__DownlinkConfigCommon   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__DownlinkConfigCommon *
       streaming_protobufs__downlink_config_common__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__downlink_config_common__free_unpacked
                     (StreamingProtobufs__DownlinkConfigCommon *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__FrequencyInfoDL methods */
void   streaming_protobufs__frequency_info_dl__init
                     (StreamingProtobufs__FrequencyInfoDL         *message);
size_t streaming_protobufs__frequency_info_dl__get_packed_size
                     (const StreamingProtobufs__FrequencyInfoDL   *message);
size_t streaming_protobufs__frequency_info_dl__pack
                     (const StreamingProtobufs__FrequencyInfoDL   *message,
                      uint8_t             *out);
size_t streaming_protobufs__frequency_info_dl__pack_to_buffer
                     (const StreamingProtobufs__FrequencyInfoDL   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__FrequencyInfoDL *
       streaming_protobufs__frequency_info_dl__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__frequency_info_dl__free_unpacked
                     (StreamingProtobufs__FrequencyInfoDL *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SCSSpecificCarrier methods */
void   streaming_protobufs__scs__specific_carrier__init
                     (StreamingProtobufs__SCSSpecificCarrier         *message);
size_t streaming_protobufs__scs__specific_carrier__get_packed_size
                     (const StreamingProtobufs__SCSSpecificCarrier   *message);
size_t streaming_protobufs__scs__specific_carrier__pack
                     (const StreamingProtobufs__SCSSpecificCarrier   *message,
                      uint8_t             *out);
size_t streaming_protobufs__scs__specific_carrier__pack_to_buffer
                     (const StreamingProtobufs__SCSSpecificCarrier   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SCSSpecificCarrier *
       streaming_protobufs__scs__specific_carrier__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__scs__specific_carrier__free_unpacked
                     (StreamingProtobufs__SCSSpecificCarrier *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__BWPDownlinkCommon methods */
void   streaming_protobufs__bwp__downlink_common__init
                     (StreamingProtobufs__BWPDownlinkCommon         *message);
size_t streaming_protobufs__bwp__downlink_common__get_packed_size
                     (const StreamingProtobufs__BWPDownlinkCommon   *message);
size_t streaming_protobufs__bwp__downlink_common__pack
                     (const StreamingProtobufs__BWPDownlinkCommon   *message,
                      uint8_t             *out);
size_t streaming_protobufs__bwp__downlink_common__pack_to_buffer
                     (const StreamingProtobufs__BWPDownlinkCommon   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__BWPDownlinkCommon *
       streaming_protobufs__bwp__downlink_common__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__bwp__downlink_common__free_unpacked
                     (StreamingProtobufs__BWPDownlinkCommon *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__BWP methods */
void   streaming_protobufs__bwp__init
                     (StreamingProtobufs__BWP         *message);
size_t streaming_protobufs__bwp__get_packed_size
                     (const StreamingProtobufs__BWP   *message);
size_t streaming_protobufs__bwp__pack
                     (const StreamingProtobufs__BWP   *message,
                      uint8_t             *out);
size_t streaming_protobufs__bwp__pack_to_buffer
                     (const StreamingProtobufs__BWP   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__BWP *
       streaming_protobufs__bwp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__bwp__free_unpacked
                     (StreamingProtobufs__BWP *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CyclicPrefix methods */
void   streaming_protobufs__cyclic_prefix__init
                     (StreamingProtobufs__CyclicPrefix         *message);
size_t streaming_protobufs__cyclic_prefix__get_packed_size
                     (const StreamingProtobufs__CyclicPrefix   *message);
size_t streaming_protobufs__cyclic_prefix__pack
                     (const StreamingProtobufs__CyclicPrefix   *message,
                      uint8_t             *out);
size_t streaming_protobufs__cyclic_prefix__pack_to_buffer
                     (const StreamingProtobufs__CyclicPrefix   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CyclicPrefix *
       streaming_protobufs__cyclic_prefix__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__cyclic_prefix__free_unpacked
                     (StreamingProtobufs__CyclicPrefix *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PDCCHConfigCommon methods */
void   streaming_protobufs__pdcch__config_common__init
                     (StreamingProtobufs__PDCCHConfigCommon         *message);
size_t streaming_protobufs__pdcch__config_common__get_packed_size
                     (const StreamingProtobufs__PDCCHConfigCommon   *message);
size_t streaming_protobufs__pdcch__config_common__pack
                     (const StreamingProtobufs__PDCCHConfigCommon   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pdcch__config_common__pack_to_buffer
                     (const StreamingProtobufs__PDCCHConfigCommon   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PDCCHConfigCommon *
       streaming_protobufs__pdcch__config_common__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pdcch__config_common__free_unpacked
                     (StreamingProtobufs__PDCCHConfigCommon *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ControlResourceSet methods */
void   streaming_protobufs__control_resource_set__init
                     (StreamingProtobufs__ControlResourceSet         *message);
size_t streaming_protobufs__control_resource_set__get_packed_size
                     (const StreamingProtobufs__ControlResourceSet   *message);
size_t streaming_protobufs__control_resource_set__pack
                     (const StreamingProtobufs__ControlResourceSet   *message,
                      uint8_t             *out);
size_t streaming_protobufs__control_resource_set__pack_to_buffer
                     (const StreamingProtobufs__ControlResourceSet   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ControlResourceSet *
       streaming_protobufs__control_resource_set__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__control_resource_set__free_unpacked
                     (StreamingProtobufs__ControlResourceSet *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__Interleaved methods */
void   streaming_protobufs__interleaved__init
                     (StreamingProtobufs__Interleaved         *message);
size_t streaming_protobufs__interleaved__get_packed_size
                     (const StreamingProtobufs__Interleaved   *message);
size_t streaming_protobufs__interleaved__pack
                     (const StreamingProtobufs__Interleaved   *message,
                      uint8_t             *out);
size_t streaming_protobufs__interleaved__pack_to_buffer
                     (const StreamingProtobufs__Interleaved   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__Interleaved *
       streaming_protobufs__interleaved__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__interleaved__free_unpacked
                     (StreamingProtobufs__Interleaved *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__RegBundleSize methods */
void   streaming_protobufs__reg__bundle_size__init
                     (StreamingProtobufs__RegBundleSize         *message);
size_t streaming_protobufs__reg__bundle_size__get_packed_size
                     (const StreamingProtobufs__RegBundleSize   *message);
size_t streaming_protobufs__reg__bundle_size__pack
                     (const StreamingProtobufs__RegBundleSize   *message,
                      uint8_t             *out);
size_t streaming_protobufs__reg__bundle_size__pack_to_buffer
                     (const StreamingProtobufs__RegBundleSize   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__RegBundleSize *
       streaming_protobufs__reg__bundle_size__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__reg__bundle_size__free_unpacked
                     (StreamingProtobufs__RegBundleSize *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__InterleaverSize methods */
void   streaming_protobufs__interleaver_size__init
                     (StreamingProtobufs__InterleaverSize         *message);
size_t streaming_protobufs__interleaver_size__get_packed_size
                     (const StreamingProtobufs__InterleaverSize   *message);
size_t streaming_protobufs__interleaver_size__pack
                     (const StreamingProtobufs__InterleaverSize   *message,
                      uint8_t             *out);
size_t streaming_protobufs__interleaver_size__pack_to_buffer
                     (const StreamingProtobufs__InterleaverSize   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__InterleaverSize *
       streaming_protobufs__interleaver_size__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__interleaver_size__free_unpacked
                     (StreamingProtobufs__InterleaverSize *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PrecoderGranularity methods */
void   streaming_protobufs__precoder_granularity__init
                     (StreamingProtobufs__PrecoderGranularity         *message);
size_t streaming_protobufs__precoder_granularity__get_packed_size
                     (const StreamingProtobufs__PrecoderGranularity   *message);
size_t streaming_protobufs__precoder_granularity__pack
                     (const StreamingProtobufs__PrecoderGranularity   *message,
                      uint8_t             *out);
size_t streaming_protobufs__precoder_granularity__pack_to_buffer
                     (const StreamingProtobufs__PrecoderGranularity   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PrecoderGranularity *
       streaming_protobufs__precoder_granularity__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__precoder_granularity__free_unpacked
                     (StreamingProtobufs__PrecoderGranularity *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__FirstPDCCHMonitoringOccasionOfP0 methods */
void   streaming_protobufs__first_pdcch__monitoring_occasion_of_p0__init
                     (StreamingProtobufs__FirstPDCCHMonitoringOccasionOfP0         *message);
size_t streaming_protobufs__first_pdcch__monitoring_occasion_of_p0__get_packed_size
                     (const StreamingProtobufs__FirstPDCCHMonitoringOccasionOfP0   *message);
size_t streaming_protobufs__first_pdcch__monitoring_occasion_of_p0__pack
                     (const StreamingProtobufs__FirstPDCCHMonitoringOccasionOfP0   *message,
                      uint8_t             *out);
size_t streaming_protobufs__first_pdcch__monitoring_occasion_of_p0__pack_to_buffer
                     (const StreamingProtobufs__FirstPDCCHMonitoringOccasionOfP0   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__FirstPDCCHMonitoringOccasionOfP0 *
       streaming_protobufs__first_pdcch__monitoring_occasion_of_p0__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__first_pdcch__monitoring_occasion_of_p0__free_unpacked
                     (StreamingProtobufs__FirstPDCCHMonitoringOccasionOfP0 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SequenceOfInteger methods */
void   streaming_protobufs__sequence__of__integer__init
                     (StreamingProtobufs__SequenceOfInteger         *message);
size_t streaming_protobufs__sequence__of__integer__get_packed_size
                     (const StreamingProtobufs__SequenceOfInteger   *message);
size_t streaming_protobufs__sequence__of__integer__pack
                     (const StreamingProtobufs__SequenceOfInteger   *message,
                      uint8_t             *out);
size_t streaming_protobufs__sequence__of__integer__pack_to_buffer
                     (const StreamingProtobufs__SequenceOfInteger   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SequenceOfInteger *
       streaming_protobufs__sequence__of__integer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__sequence__of__integer__free_unpacked
                     (StreamingProtobufs__SequenceOfInteger *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PDSCHConfigCommon methods */
void   streaming_protobufs__pdsch__config_common__init
                     (StreamingProtobufs__PDSCHConfigCommon         *message);
size_t streaming_protobufs__pdsch__config_common__get_packed_size
                     (const StreamingProtobufs__PDSCHConfigCommon   *message);
size_t streaming_protobufs__pdsch__config_common__pack
                     (const StreamingProtobufs__PDSCHConfigCommon   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pdsch__config_common__pack_to_buffer
                     (const StreamingProtobufs__PDSCHConfigCommon   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PDSCHConfigCommon *
       streaming_protobufs__pdsch__config_common__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pdsch__config_common__free_unpacked
                     (StreamingProtobufs__PDSCHConfigCommon *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PDSCHTimeDomainResourceAllocationList methods */
void   streaming_protobufs__pdsch__time_domain_resource_allocation_list__init
                     (StreamingProtobufs__PDSCHTimeDomainResourceAllocationList         *message);
size_t streaming_protobufs__pdsch__time_domain_resource_allocation_list__get_packed_size
                     (const StreamingProtobufs__PDSCHTimeDomainResourceAllocationList   *message);
size_t streaming_protobufs__pdsch__time_domain_resource_allocation_list__pack
                     (const StreamingProtobufs__PDSCHTimeDomainResourceAllocationList   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pdsch__time_domain_resource_allocation_list__pack_to_buffer
                     (const StreamingProtobufs__PDSCHTimeDomainResourceAllocationList   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PDSCHTimeDomainResourceAllocationList *
       streaming_protobufs__pdsch__time_domain_resource_allocation_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pdsch__time_domain_resource_allocation_list__free_unpacked
                     (StreamingProtobufs__PDSCHTimeDomainResourceAllocationList *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PDSCHTimeDomainResourceAllocation methods */
void   streaming_protobufs__pdsch__time_domain_resource_allocation__init
                     (StreamingProtobufs__PDSCHTimeDomainResourceAllocation         *message);
size_t streaming_protobufs__pdsch__time_domain_resource_allocation__get_packed_size
                     (const StreamingProtobufs__PDSCHTimeDomainResourceAllocation   *message);
size_t streaming_protobufs__pdsch__time_domain_resource_allocation__pack
                     (const StreamingProtobufs__PDSCHTimeDomainResourceAllocation   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pdsch__time_domain_resource_allocation__pack_to_buffer
                     (const StreamingProtobufs__PDSCHTimeDomainResourceAllocation   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PDSCHTimeDomainResourceAllocation *
       streaming_protobufs__pdsch__time_domain_resource_allocation__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pdsch__time_domain_resource_allocation__free_unpacked
                     (StreamingProtobufs__PDSCHTimeDomainResourceAllocation *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MappingType methods */
void   streaming_protobufs__mapping_type__init
                     (StreamingProtobufs__MappingType         *message);
size_t streaming_protobufs__mapping_type__get_packed_size
                     (const StreamingProtobufs__MappingType   *message);
size_t streaming_protobufs__mapping_type__pack
                     (const StreamingProtobufs__MappingType   *message,
                      uint8_t             *out);
size_t streaming_protobufs__mapping_type__pack_to_buffer
                     (const StreamingProtobufs__MappingType   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MappingType *
       streaming_protobufs__mapping_type__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__mapping_type__free_unpacked
                     (StreamingProtobufs__MappingType *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__UplinkConfigCommon methods */
void   streaming_protobufs__uplink_config_common__init
                     (StreamingProtobufs__UplinkConfigCommon         *message);
size_t streaming_protobufs__uplink_config_common__get_packed_size
                     (const StreamingProtobufs__UplinkConfigCommon   *message);
size_t streaming_protobufs__uplink_config_common__pack
                     (const StreamingProtobufs__UplinkConfigCommon   *message,
                      uint8_t             *out);
size_t streaming_protobufs__uplink_config_common__pack_to_buffer
                     (const StreamingProtobufs__UplinkConfigCommon   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__UplinkConfigCommon *
       streaming_protobufs__uplink_config_common__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__uplink_config_common__free_unpacked
                     (StreamingProtobufs__UplinkConfigCommon *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__FrequencyInfoUL methods */
void   streaming_protobufs__frequency_info_ul__init
                     (StreamingProtobufs__FrequencyInfoUL         *message);
size_t streaming_protobufs__frequency_info_ul__get_packed_size
                     (const StreamingProtobufs__FrequencyInfoUL   *message);
size_t streaming_protobufs__frequency_info_ul__pack
                     (const StreamingProtobufs__FrequencyInfoUL   *message,
                      uint8_t             *out);
size_t streaming_protobufs__frequency_info_ul__pack_to_buffer
                     (const StreamingProtobufs__FrequencyInfoUL   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__FrequencyInfoUL *
       streaming_protobufs__frequency_info_ul__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__frequency_info_ul__free_unpacked
                     (StreamingProtobufs__FrequencyInfoUL *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__BWPUplinkCommon methods */
void   streaming_protobufs__bwp__uplink_common__init
                     (StreamingProtobufs__BWPUplinkCommon         *message);
size_t streaming_protobufs__bwp__uplink_common__get_packed_size
                     (const StreamingProtobufs__BWPUplinkCommon   *message);
size_t streaming_protobufs__bwp__uplink_common__pack
                     (const StreamingProtobufs__BWPUplinkCommon   *message,
                      uint8_t             *out);
size_t streaming_protobufs__bwp__uplink_common__pack_to_buffer
                     (const StreamingProtobufs__BWPUplinkCommon   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__BWPUplinkCommon *
       streaming_protobufs__bwp__uplink_common__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__bwp__uplink_common__free_unpacked
                     (StreamingProtobufs__BWPUplinkCommon *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__BWPUplink methods */
void   streaming_protobufs__bwp__uplink__init
                     (StreamingProtobufs__BWPUplink         *message);
size_t streaming_protobufs__bwp__uplink__get_packed_size
                     (const StreamingProtobufs__BWPUplink   *message);
size_t streaming_protobufs__bwp__uplink__pack
                     (const StreamingProtobufs__BWPUplink   *message,
                      uint8_t             *out);
size_t streaming_protobufs__bwp__uplink__pack_to_buffer
                     (const StreamingProtobufs__BWPUplink   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__BWPUplink *
       streaming_protobufs__bwp__uplink__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__bwp__uplink__free_unpacked
                     (StreamingProtobufs__BWPUplink *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__RACHConfigCommon methods */
void   streaming_protobufs__rach__config_common__init
                     (StreamingProtobufs__RACHConfigCommon         *message);
size_t streaming_protobufs__rach__config_common__get_packed_size
                     (const StreamingProtobufs__RACHConfigCommon   *message);
size_t streaming_protobufs__rach__config_common__pack
                     (const StreamingProtobufs__RACHConfigCommon   *message,
                      uint8_t             *out);
size_t streaming_protobufs__rach__config_common__pack_to_buffer
                     (const StreamingProtobufs__RACHConfigCommon   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__RACHConfigCommon *
       streaming_protobufs__rach__config_common__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__rach__config_common__free_unpacked
                     (StreamingProtobufs__RACHConfigCommon *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__RACHConfigGeneric methods */
void   streaming_protobufs__rach__config_generic__init
                     (StreamingProtobufs__RACHConfigGeneric         *message);
size_t streaming_protobufs__rach__config_generic__get_packed_size
                     (const StreamingProtobufs__RACHConfigGeneric   *message);
size_t streaming_protobufs__rach__config_generic__pack
                     (const StreamingProtobufs__RACHConfigGeneric   *message,
                      uint8_t             *out);
size_t streaming_protobufs__rach__config_generic__pack_to_buffer
                     (const StreamingProtobufs__RACHConfigGeneric   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__RACHConfigGeneric *
       streaming_protobufs__rach__config_generic__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__rach__config_generic__free_unpacked
                     (StreamingProtobufs__RACHConfigGeneric *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__Msg1FDM methods */
void   streaming_protobufs__msg1__fdm__init
                     (StreamingProtobufs__Msg1FDM         *message);
size_t streaming_protobufs__msg1__fdm__get_packed_size
                     (const StreamingProtobufs__Msg1FDM   *message);
size_t streaming_protobufs__msg1__fdm__pack
                     (const StreamingProtobufs__Msg1FDM   *message,
                      uint8_t             *out);
size_t streaming_protobufs__msg1__fdm__pack_to_buffer
                     (const StreamingProtobufs__Msg1FDM   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__Msg1FDM *
       streaming_protobufs__msg1__fdm__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__msg1__fdm__free_unpacked
                     (StreamingProtobufs__Msg1FDM *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PreambleTransMax methods */
void   streaming_protobufs__preamble_trans_max__init
                     (StreamingProtobufs__PreambleTransMax         *message);
size_t streaming_protobufs__preamble_trans_max__get_packed_size
                     (const StreamingProtobufs__PreambleTransMax   *message);
size_t streaming_protobufs__preamble_trans_max__pack
                     (const StreamingProtobufs__PreambleTransMax   *message,
                      uint8_t             *out);
size_t streaming_protobufs__preamble_trans_max__pack_to_buffer
                     (const StreamingProtobufs__PreambleTransMax   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PreambleTransMax *
       streaming_protobufs__preamble_trans_max__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__preamble_trans_max__free_unpacked
                     (StreamingProtobufs__PreambleTransMax *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PowerRampingStep methods */
void   streaming_protobufs__power_ramping_step__init
                     (StreamingProtobufs__PowerRampingStep         *message);
size_t streaming_protobufs__power_ramping_step__get_packed_size
                     (const StreamingProtobufs__PowerRampingStep   *message);
size_t streaming_protobufs__power_ramping_step__pack
                     (const StreamingProtobufs__PowerRampingStep   *message,
                      uint8_t             *out);
size_t streaming_protobufs__power_ramping_step__pack_to_buffer
                     (const StreamingProtobufs__PowerRampingStep   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PowerRampingStep *
       streaming_protobufs__power_ramping_step__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__power_ramping_step__free_unpacked
                     (StreamingProtobufs__PowerRampingStep *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__RAResponseWindow methods */
void   streaming_protobufs__ra__response_window__init
                     (StreamingProtobufs__RAResponseWindow         *message);
size_t streaming_protobufs__ra__response_window__get_packed_size
                     (const StreamingProtobufs__RAResponseWindow   *message);
size_t streaming_protobufs__ra__response_window__pack
                     (const StreamingProtobufs__RAResponseWindow   *message,
                      uint8_t             *out);
size_t streaming_protobufs__ra__response_window__pack_to_buffer
                     (const StreamingProtobufs__RAResponseWindow   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__RAResponseWindow *
       streaming_protobufs__ra__response_window__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__ra__response_window__free_unpacked
                     (StreamingProtobufs__RAResponseWindow *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__Fraction methods */
void   streaming_protobufs__fraction__init
                     (StreamingProtobufs__Fraction         *message);
size_t streaming_protobufs__fraction__get_packed_size
                     (const StreamingProtobufs__Fraction   *message);
size_t streaming_protobufs__fraction__pack
                     (const StreamingProtobufs__Fraction   *message,
                      uint8_t             *out);
size_t streaming_protobufs__fraction__pack_to_buffer
                     (const StreamingProtobufs__Fraction   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__Fraction *
       streaming_protobufs__fraction__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__fraction__free_unpacked
                     (StreamingProtobufs__Fraction *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__OtherFraction methods */
void   streaming_protobufs__other_fraction__init
                     (StreamingProtobufs__OtherFraction         *message);
size_t streaming_protobufs__other_fraction__get_packed_size
                     (const StreamingProtobufs__OtherFraction   *message);
size_t streaming_protobufs__other_fraction__pack
                     (const StreamingProtobufs__OtherFraction   *message,
                      uint8_t             *out);
size_t streaming_protobufs__other_fraction__pack_to_buffer
                     (const StreamingProtobufs__OtherFraction   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__OtherFraction *
       streaming_protobufs__other_fraction__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__other_fraction__free_unpacked
                     (StreamingProtobufs__OtherFraction *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__GroupBconfigured methods */
void   streaming_protobufs__group_bconfigured__init
                     (StreamingProtobufs__GroupBconfigured         *message);
size_t streaming_protobufs__group_bconfigured__get_packed_size
                     (const StreamingProtobufs__GroupBconfigured   *message);
size_t streaming_protobufs__group_bconfigured__pack
                     (const StreamingProtobufs__GroupBconfigured   *message,
                      uint8_t             *out);
size_t streaming_protobufs__group_bconfigured__pack_to_buffer
                     (const StreamingProtobufs__GroupBconfigured   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__GroupBconfigured *
       streaming_protobufs__group_bconfigured__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__group_bconfigured__free_unpacked
                     (StreamingProtobufs__GroupBconfigured *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__RAMsg3SizeGroupA methods */
void   streaming_protobufs__ra__msg3_size_group_a__init
                     (StreamingProtobufs__RAMsg3SizeGroupA         *message);
size_t streaming_protobufs__ra__msg3_size_group_a__get_packed_size
                     (const StreamingProtobufs__RAMsg3SizeGroupA   *message);
size_t streaming_protobufs__ra__msg3_size_group_a__pack
                     (const StreamingProtobufs__RAMsg3SizeGroupA   *message,
                      uint8_t             *out);
size_t streaming_protobufs__ra__msg3_size_group_a__pack_to_buffer
                     (const StreamingProtobufs__RAMsg3SizeGroupA   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__RAMsg3SizeGroupA *
       streaming_protobufs__ra__msg3_size_group_a__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__ra__msg3_size_group_a__free_unpacked
                     (StreamingProtobufs__RAMsg3SizeGroupA *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MessagePowerOffsetGroupB methods */
void   streaming_protobufs__message_power_offset_group_b__init
                     (StreamingProtobufs__MessagePowerOffsetGroupB         *message);
size_t streaming_protobufs__message_power_offset_group_b__get_packed_size
                     (const StreamingProtobufs__MessagePowerOffsetGroupB   *message);
size_t streaming_protobufs__message_power_offset_group_b__pack
                     (const StreamingProtobufs__MessagePowerOffsetGroupB   *message,
                      uint8_t             *out);
size_t streaming_protobufs__message_power_offset_group_b__pack_to_buffer
                     (const StreamingProtobufs__MessagePowerOffsetGroupB   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MessagePowerOffsetGroupB *
       streaming_protobufs__message_power_offset_group_b__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__message_power_offset_group_b__free_unpacked
                     (StreamingProtobufs__MessagePowerOffsetGroupB *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__RAContentionResolutionTimer methods */
void   streaming_protobufs__ra__contention_resolution_timer__init
                     (StreamingProtobufs__RAContentionResolutionTimer         *message);
size_t streaming_protobufs__ra__contention_resolution_timer__get_packed_size
                     (const StreamingProtobufs__RAContentionResolutionTimer   *message);
size_t streaming_protobufs__ra__contention_resolution_timer__pack
                     (const StreamingProtobufs__RAContentionResolutionTimer   *message,
                      uint8_t             *out);
size_t streaming_protobufs__ra__contention_resolution_timer__pack_to_buffer
                     (const StreamingProtobufs__RAContentionResolutionTimer   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__RAContentionResolutionTimer *
       streaming_protobufs__ra__contention_resolution_timer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__ra__contention_resolution_timer__free_unpacked
                     (StreamingProtobufs__RAContentionResolutionTimer *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__RestrictedSetConfig methods */
void   streaming_protobufs__restricted_set_config__init
                     (StreamingProtobufs__RestrictedSetConfig         *message);
size_t streaming_protobufs__restricted_set_config__get_packed_size
                     (const StreamingProtobufs__RestrictedSetConfig   *message);
size_t streaming_protobufs__restricted_set_config__pack
                     (const StreamingProtobufs__RestrictedSetConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__restricted_set_config__pack_to_buffer
                     (const StreamingProtobufs__RestrictedSetConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__RestrictedSetConfig *
       streaming_protobufs__restricted_set_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__restricted_set_config__free_unpacked
                     (StreamingProtobufs__RestrictedSetConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PUSCHConfigCommon methods */
void   streaming_protobufs__pusch__config_common__init
                     (StreamingProtobufs__PUSCHConfigCommon         *message);
size_t streaming_protobufs__pusch__config_common__get_packed_size
                     (const StreamingProtobufs__PUSCHConfigCommon   *message);
size_t streaming_protobufs__pusch__config_common__pack
                     (const StreamingProtobufs__PUSCHConfigCommon   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pusch__config_common__pack_to_buffer
                     (const StreamingProtobufs__PUSCHConfigCommon   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PUSCHConfigCommon *
       streaming_protobufs__pusch__config_common__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pusch__config_common__free_unpacked
                     (StreamingProtobufs__PUSCHConfigCommon *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PUSCHTimeDomainResourceAllocationList methods */
void   streaming_protobufs__pusch__time_domain_resource_allocation_list__init
                     (StreamingProtobufs__PUSCHTimeDomainResourceAllocationList         *message);
size_t streaming_protobufs__pusch__time_domain_resource_allocation_list__get_packed_size
                     (const StreamingProtobufs__PUSCHTimeDomainResourceAllocationList   *message);
size_t streaming_protobufs__pusch__time_domain_resource_allocation_list__pack
                     (const StreamingProtobufs__PUSCHTimeDomainResourceAllocationList   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pusch__time_domain_resource_allocation_list__pack_to_buffer
                     (const StreamingProtobufs__PUSCHTimeDomainResourceAllocationList   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PUSCHTimeDomainResourceAllocationList *
       streaming_protobufs__pusch__time_domain_resource_allocation_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pusch__time_domain_resource_allocation_list__free_unpacked
                     (StreamingProtobufs__PUSCHTimeDomainResourceAllocationList *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PUSCHTimeDomainResourceAllocation methods */
void   streaming_protobufs__pusch__time_domain_resource_allocation__init
                     (StreamingProtobufs__PUSCHTimeDomainResourceAllocation         *message);
size_t streaming_protobufs__pusch__time_domain_resource_allocation__get_packed_size
                     (const StreamingProtobufs__PUSCHTimeDomainResourceAllocation   *message);
size_t streaming_protobufs__pusch__time_domain_resource_allocation__pack
                     (const StreamingProtobufs__PUSCHTimeDomainResourceAllocation   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pusch__time_domain_resource_allocation__pack_to_buffer
                     (const StreamingProtobufs__PUSCHTimeDomainResourceAllocation   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PUSCHTimeDomainResourceAllocation *
       streaming_protobufs__pusch__time_domain_resource_allocation__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pusch__time_domain_resource_allocation__free_unpacked
                     (StreamingProtobufs__PUSCHTimeDomainResourceAllocation *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PUCCHConfigCommon methods */
void   streaming_protobufs__pucch__config_common__init
                     (StreamingProtobufs__PUCCHConfigCommon         *message);
size_t streaming_protobufs__pucch__config_common__get_packed_size
                     (const StreamingProtobufs__PUCCHConfigCommon   *message);
size_t streaming_protobufs__pucch__config_common__pack
                     (const StreamingProtobufs__PUCCHConfigCommon   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pucch__config_common__pack_to_buffer
                     (const StreamingProtobufs__PUCCHConfigCommon   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PUCCHConfigCommon *
       streaming_protobufs__pucch__config_common__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pucch__config_common__free_unpacked
                     (StreamingProtobufs__PUCCHConfigCommon *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PUCCHGroupHopping methods */
void   streaming_protobufs__pucch__group_hopping__init
                     (StreamingProtobufs__PUCCHGroupHopping         *message);
size_t streaming_protobufs__pucch__group_hopping__get_packed_size
                     (const StreamingProtobufs__PUCCHGroupHopping   *message);
size_t streaming_protobufs__pucch__group_hopping__pack
                     (const StreamingProtobufs__PUCCHGroupHopping   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pucch__group_hopping__pack_to_buffer
                     (const StreamingProtobufs__PUCCHGroupHopping   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PUCCHGroupHopping *
       streaming_protobufs__pucch__group_hopping__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pucch__group_hopping__free_unpacked
                     (StreamingProtobufs__PUCCHGroupHopping *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__NTimingAdvanceOffset methods */
void   streaming_protobufs__n__timing_advance_offset__init
                     (StreamingProtobufs__NTimingAdvanceOffset         *message);
size_t streaming_protobufs__n__timing_advance_offset__get_packed_size
                     (const StreamingProtobufs__NTimingAdvanceOffset   *message);
size_t streaming_protobufs__n__timing_advance_offset__pack
                     (const StreamingProtobufs__NTimingAdvanceOffset   *message,
                      uint8_t             *out);
size_t streaming_protobufs__n__timing_advance_offset__pack_to_buffer
                     (const StreamingProtobufs__NTimingAdvanceOffset   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__NTimingAdvanceOffset *
       streaming_protobufs__n__timing_advance_offset__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__n__timing_advance_offset__free_unpacked
                     (StreamingProtobufs__NTimingAdvanceOffset *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SSBPeriodicityServingCell methods */
void   streaming_protobufs__ssb__periodicity_serving_cell__init
                     (StreamingProtobufs__SSBPeriodicityServingCell         *message);
size_t streaming_protobufs__ssb__periodicity_serving_cell__get_packed_size
                     (const StreamingProtobufs__SSBPeriodicityServingCell   *message);
size_t streaming_protobufs__ssb__periodicity_serving_cell__pack
                     (const StreamingProtobufs__SSBPeriodicityServingCell   *message,
                      uint8_t             *out);
size_t streaming_protobufs__ssb__periodicity_serving_cell__pack_to_buffer
                     (const StreamingProtobufs__SSBPeriodicityServingCell   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SSBPeriodicityServingCell *
       streaming_protobufs__ssb__periodicity_serving_cell__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__ssb__periodicity_serving_cell__free_unpacked
                     (StreamingProtobufs__SSBPeriodicityServingCell *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__DMRSTypeAPosition methods */
void   streaming_protobufs__dmrs__type_a__position__init
                     (StreamingProtobufs__DMRSTypeAPosition         *message);
size_t streaming_protobufs__dmrs__type_a__position__get_packed_size
                     (const StreamingProtobufs__DMRSTypeAPosition   *message);
size_t streaming_protobufs__dmrs__type_a__position__pack
                     (const StreamingProtobufs__DMRSTypeAPosition   *message,
                      uint8_t             *out);
size_t streaming_protobufs__dmrs__type_a__position__pack_to_buffer
                     (const StreamingProtobufs__DMRSTypeAPosition   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__DMRSTypeAPosition *
       streaming_protobufs__dmrs__type_a__position__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__dmrs__type_a__position__free_unpacked
                     (StreamingProtobufs__DMRSTypeAPosition *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__RateMatchPatternLTECRS methods */
void   streaming_protobufs__rate_match_pattern_lte__crs__init
                     (StreamingProtobufs__RateMatchPatternLTECRS         *message);
size_t streaming_protobufs__rate_match_pattern_lte__crs__get_packed_size
                     (const StreamingProtobufs__RateMatchPatternLTECRS   *message);
size_t streaming_protobufs__rate_match_pattern_lte__crs__pack
                     (const StreamingProtobufs__RateMatchPatternLTECRS   *message,
                      uint8_t             *out);
size_t streaming_protobufs__rate_match_pattern_lte__crs__pack_to_buffer
                     (const StreamingProtobufs__RateMatchPatternLTECRS   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__RateMatchPatternLTECRS *
       streaming_protobufs__rate_match_pattern_lte__crs__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__rate_match_pattern_lte__crs__free_unpacked
                     (StreamingProtobufs__RateMatchPatternLTECRS *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CarrierBandwidthDL methods */
void   streaming_protobufs__carrier_bandwidth_dl__init
                     (StreamingProtobufs__CarrierBandwidthDL         *message);
size_t streaming_protobufs__carrier_bandwidth_dl__get_packed_size
                     (const StreamingProtobufs__CarrierBandwidthDL   *message);
size_t streaming_protobufs__carrier_bandwidth_dl__pack
                     (const StreamingProtobufs__CarrierBandwidthDL   *message,
                      uint8_t             *out);
size_t streaming_protobufs__carrier_bandwidth_dl__pack_to_buffer
                     (const StreamingProtobufs__CarrierBandwidthDL   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CarrierBandwidthDL *
       streaming_protobufs__carrier_bandwidth_dl__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__carrier_bandwidth_dl__free_unpacked
                     (StreamingProtobufs__CarrierBandwidthDL *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__EUTRAMBSFNSubframeConfigList methods */
void   streaming_protobufs__eutra__mbsfn__subframe_config_list__init
                     (StreamingProtobufs__EUTRAMBSFNSubframeConfigList         *message);
size_t streaming_protobufs__eutra__mbsfn__subframe_config_list__get_packed_size
                     (const StreamingProtobufs__EUTRAMBSFNSubframeConfigList   *message);
size_t streaming_protobufs__eutra__mbsfn__subframe_config_list__pack
                     (const StreamingProtobufs__EUTRAMBSFNSubframeConfigList   *message,
                      uint8_t             *out);
size_t streaming_protobufs__eutra__mbsfn__subframe_config_list__pack_to_buffer
                     (const StreamingProtobufs__EUTRAMBSFNSubframeConfigList   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__EUTRAMBSFNSubframeConfigList *
       streaming_protobufs__eutra__mbsfn__subframe_config_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__eutra__mbsfn__subframe_config_list__free_unpacked
                     (StreamingProtobufs__EUTRAMBSFNSubframeConfigList *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__EUTRAMBSFNSubframeConfig methods */
void   streaming_protobufs__eutra__mbsfn__subframe_config__init
                     (StreamingProtobufs__EUTRAMBSFNSubframeConfig         *message);
size_t streaming_protobufs__eutra__mbsfn__subframe_config__get_packed_size
                     (const StreamingProtobufs__EUTRAMBSFNSubframeConfig   *message);
size_t streaming_protobufs__eutra__mbsfn__subframe_config__pack
                     (const StreamingProtobufs__EUTRAMBSFNSubframeConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__eutra__mbsfn__subframe_config__pack_to_buffer
                     (const StreamingProtobufs__EUTRAMBSFNSubframeConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__EUTRAMBSFNSubframeConfig *
       streaming_protobufs__eutra__mbsfn__subframe_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__eutra__mbsfn__subframe_config__free_unpacked
                     (StreamingProtobufs__EUTRAMBSFNSubframeConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__RadioframeAllocationPeriod methods */
void   streaming_protobufs__radioframe_allocation_period__init
                     (StreamingProtobufs__RadioframeAllocationPeriod         *message);
size_t streaming_protobufs__radioframe_allocation_period__get_packed_size
                     (const StreamingProtobufs__RadioframeAllocationPeriod   *message);
size_t streaming_protobufs__radioframe_allocation_period__pack
                     (const StreamingProtobufs__RadioframeAllocationPeriod   *message,
                      uint8_t             *out);
size_t streaming_protobufs__radioframe_allocation_period__pack_to_buffer
                     (const StreamingProtobufs__RadioframeAllocationPeriod   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__RadioframeAllocationPeriod *
       streaming_protobufs__radioframe_allocation_period__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__radioframe_allocation_period__free_unpacked
                     (StreamingProtobufs__RadioframeAllocationPeriod *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SubframeAllocation methods */
void   streaming_protobufs__subframe_allocation__init
                     (StreamingProtobufs__SubframeAllocation         *message);
size_t streaming_protobufs__subframe_allocation__get_packed_size
                     (const StreamingProtobufs__SubframeAllocation   *message);
size_t streaming_protobufs__subframe_allocation__pack
                     (const StreamingProtobufs__SubframeAllocation   *message,
                      uint8_t             *out);
size_t streaming_protobufs__subframe_allocation__pack_to_buffer
                     (const StreamingProtobufs__SubframeAllocation   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SubframeAllocation *
       streaming_protobufs__subframe_allocation__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__subframe_allocation__free_unpacked
                     (StreamingProtobufs__SubframeAllocation *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__NrofCRSPorts methods */
void   streaming_protobufs__nrof_crs__ports__init
                     (StreamingProtobufs__NrofCRSPorts         *message);
size_t streaming_protobufs__nrof_crs__ports__get_packed_size
                     (const StreamingProtobufs__NrofCRSPorts   *message);
size_t streaming_protobufs__nrof_crs__ports__pack
                     (const StreamingProtobufs__NrofCRSPorts   *message,
                      uint8_t             *out);
size_t streaming_protobufs__nrof_crs__ports__pack_to_buffer
                     (const StreamingProtobufs__NrofCRSPorts   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__NrofCRSPorts *
       streaming_protobufs__nrof_crs__ports__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__nrof_crs__ports__free_unpacked
                     (StreamingProtobufs__NrofCRSPorts *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__VShift methods */
void   streaming_protobufs__v__shift__init
                     (StreamingProtobufs__VShift         *message);
size_t streaming_protobufs__v__shift__get_packed_size
                     (const StreamingProtobufs__VShift   *message);
size_t streaming_protobufs__v__shift__pack
                     (const StreamingProtobufs__VShift   *message,
                      uint8_t             *out);
size_t streaming_protobufs__v__shift__pack_to_buffer
                     (const StreamingProtobufs__VShift   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__VShift *
       streaming_protobufs__v__shift__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__v__shift__free_unpacked
                     (StreamingProtobufs__VShift *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__RateMatchPattern methods */
void   streaming_protobufs__rate_match_pattern__init
                     (StreamingProtobufs__RateMatchPattern         *message);
size_t streaming_protobufs__rate_match_pattern__get_packed_size
                     (const StreamingProtobufs__RateMatchPattern   *message);
size_t streaming_protobufs__rate_match_pattern__pack
                     (const StreamingProtobufs__RateMatchPattern   *message,
                      uint8_t             *out);
size_t streaming_protobufs__rate_match_pattern__pack_to_buffer
                     (const StreamingProtobufs__RateMatchPattern   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__RateMatchPattern *
       streaming_protobufs__rate_match_pattern__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__rate_match_pattern__free_unpacked
                     (StreamingProtobufs__RateMatchPattern *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__Bitmaps methods */
void   streaming_protobufs__bitmaps__init
                     (StreamingProtobufs__Bitmaps         *message);
size_t streaming_protobufs__bitmaps__get_packed_size
                     (const StreamingProtobufs__Bitmaps   *message);
size_t streaming_protobufs__bitmaps__pack
                     (const StreamingProtobufs__Bitmaps   *message,
                      uint8_t             *out);
size_t streaming_protobufs__bitmaps__pack_to_buffer
                     (const StreamingProtobufs__Bitmaps   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__Bitmaps *
       streaming_protobufs__bitmaps__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__bitmaps__free_unpacked
                     (StreamingProtobufs__Bitmaps *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__Dummy methods */
void   streaming_protobufs__dummy__init
                     (StreamingProtobufs__Dummy         *message);
size_t streaming_protobufs__dummy__get_packed_size
                     (const StreamingProtobufs__Dummy   *message);
size_t streaming_protobufs__dummy__pack
                     (const StreamingProtobufs__Dummy   *message,
                      uint8_t             *out);
size_t streaming_protobufs__dummy__pack_to_buffer
                     (const StreamingProtobufs__Dummy   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__Dummy *
       streaming_protobufs__dummy__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__dummy__free_unpacked
                     (StreamingProtobufs__Dummy *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__TDDULDLConfigCommon methods */
void   streaming_protobufs__tdd__ul__dl__config_common__init
                     (StreamingProtobufs__TDDULDLConfigCommon         *message);
size_t streaming_protobufs__tdd__ul__dl__config_common__get_packed_size
                     (const StreamingProtobufs__TDDULDLConfigCommon   *message);
size_t streaming_protobufs__tdd__ul__dl__config_common__pack
                     (const StreamingProtobufs__TDDULDLConfigCommon   *message,
                      uint8_t             *out);
size_t streaming_protobufs__tdd__ul__dl__config_common__pack_to_buffer
                     (const StreamingProtobufs__TDDULDLConfigCommon   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__TDDULDLConfigCommon *
       streaming_protobufs__tdd__ul__dl__config_common__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__tdd__ul__dl__config_common__free_unpacked
                     (StreamingProtobufs__TDDULDLConfigCommon *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__TDDULDLPattern methods */
void   streaming_protobufs__tdd__ul__dl__pattern__init
                     (StreamingProtobufs__TDDULDLPattern         *message);
size_t streaming_protobufs__tdd__ul__dl__pattern__get_packed_size
                     (const StreamingProtobufs__TDDULDLPattern   *message);
size_t streaming_protobufs__tdd__ul__dl__pattern__pack
                     (const StreamingProtobufs__TDDULDLPattern   *message,
                      uint8_t             *out);
size_t streaming_protobufs__tdd__ul__dl__pattern__pack_to_buffer
                     (const StreamingProtobufs__TDDULDLPattern   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__TDDULDLPattern *
       streaming_protobufs__tdd__ul__dl__pattern__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__tdd__ul__dl__pattern__free_unpacked
                     (StreamingProtobufs__TDDULDLPattern *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__DLULTransmissionPeriodicity methods */
void   streaming_protobufs__dl__ul__transmission_periodicity__init
                     (StreamingProtobufs__DLULTransmissionPeriodicity         *message);
size_t streaming_protobufs__dl__ul__transmission_periodicity__get_packed_size
                     (const StreamingProtobufs__DLULTransmissionPeriodicity   *message);
size_t streaming_protobufs__dl__ul__transmission_periodicity__pack
                     (const StreamingProtobufs__DLULTransmissionPeriodicity   *message,
                      uint8_t             *out);
size_t streaming_protobufs__dl__ul__transmission_periodicity__pack_to_buffer
                     (const StreamingProtobufs__DLULTransmissionPeriodicity   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__DLULTransmissionPeriodicity *
       streaming_protobufs__dl__ul__transmission_periodicity__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__dl__ul__transmission_periodicity__free_unpacked
                     (StreamingProtobufs__DLULTransmissionPeriodicity *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__DLULTransmissionPeriodicityV1530 methods */
void   streaming_protobufs__dl__ul__transmission_periodicity_v1530__init
                     (StreamingProtobufs__DLULTransmissionPeriodicityV1530         *message);
size_t streaming_protobufs__dl__ul__transmission_periodicity_v1530__get_packed_size
                     (const StreamingProtobufs__DLULTransmissionPeriodicityV1530   *message);
size_t streaming_protobufs__dl__ul__transmission_periodicity_v1530__pack
                     (const StreamingProtobufs__DLULTransmissionPeriodicityV1530   *message,
                      uint8_t             *out);
size_t streaming_protobufs__dl__ul__transmission_periodicity_v1530__pack_to_buffer
                     (const StreamingProtobufs__DLULTransmissionPeriodicityV1530   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__DLULTransmissionPeriodicityV1530 *
       streaming_protobufs__dl__ul__transmission_periodicity_v1530__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__dl__ul__transmission_periodicity_v1530__free_unpacked
                     (StreamingProtobufs__DLULTransmissionPeriodicityV1530 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__T304 methods */
void   streaming_protobufs__t304__init
                     (StreamingProtobufs__T304         *message);
size_t streaming_protobufs__t304__get_packed_size
                     (const StreamingProtobufs__T304   *message);
size_t streaming_protobufs__t304__pack
                     (const StreamingProtobufs__T304   *message,
                      uint8_t             *out);
size_t streaming_protobufs__t304__pack_to_buffer
                     (const StreamingProtobufs__T304   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__T304 *
       streaming_protobufs__t304__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__t304__free_unpacked
                     (StreamingProtobufs__T304 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__RACHConfigDedicated methods */
void   streaming_protobufs__rach__config_dedicated__init
                     (StreamingProtobufs__RACHConfigDedicated         *message);
size_t streaming_protobufs__rach__config_dedicated__get_packed_size
                     (const StreamingProtobufs__RACHConfigDedicated   *message);
size_t streaming_protobufs__rach__config_dedicated__pack
                     (const StreamingProtobufs__RACHConfigDedicated   *message,
                      uint8_t             *out);
size_t streaming_protobufs__rach__config_dedicated__pack_to_buffer
                     (const StreamingProtobufs__RACHConfigDedicated   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__RACHConfigDedicated *
       streaming_protobufs__rach__config_dedicated__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__rach__config_dedicated__free_unpacked
                     (StreamingProtobufs__RACHConfigDedicated *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CFRA methods */
void   streaming_protobufs__cfra__init
                     (StreamingProtobufs__CFRA         *message);
size_t streaming_protobufs__cfra__get_packed_size
                     (const StreamingProtobufs__CFRA   *message);
size_t streaming_protobufs__cfra__pack
                     (const StreamingProtobufs__CFRA   *message,
                      uint8_t             *out);
size_t streaming_protobufs__cfra__pack_to_buffer
                     (const StreamingProtobufs__CFRA   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CFRA *
       streaming_protobufs__cfra__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__cfra__free_unpacked
                     (StreamingProtobufs__CFRA *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__Occasions methods */
void   streaming_protobufs__occasions__init
                     (StreamingProtobufs__Occasions         *message);
size_t streaming_protobufs__occasions__get_packed_size
                     (const StreamingProtobufs__Occasions   *message);
size_t streaming_protobufs__occasions__pack
                     (const StreamingProtobufs__Occasions   *message,
                      uint8_t             *out);
size_t streaming_protobufs__occasions__pack_to_buffer
                     (const StreamingProtobufs__Occasions   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__Occasions *
       streaming_protobufs__occasions__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__occasions__free_unpacked
                     (StreamingProtobufs__Occasions *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SSB methods */
void   streaming_protobufs__ssb__init
                     (StreamingProtobufs__SSB         *message);
size_t streaming_protobufs__ssb__get_packed_size
                     (const StreamingProtobufs__SSB   *message);
size_t streaming_protobufs__ssb__pack
                     (const StreamingProtobufs__SSB   *message,
                      uint8_t             *out);
size_t streaming_protobufs__ssb__pack_to_buffer
                     (const StreamingProtobufs__SSB   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SSB *
       streaming_protobufs__ssb__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__ssb__free_unpacked
                     (StreamingProtobufs__SSB *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CFRASSBResource methods */
void   streaming_protobufs__cfra__ssb__resource__init
                     (StreamingProtobufs__CFRASSBResource         *message);
size_t streaming_protobufs__cfra__ssb__resource__get_packed_size
                     (const StreamingProtobufs__CFRASSBResource   *message);
size_t streaming_protobufs__cfra__ssb__resource__pack
                     (const StreamingProtobufs__CFRASSBResource   *message,
                      uint8_t             *out);
size_t streaming_protobufs__cfra__ssb__resource__pack_to_buffer
                     (const StreamingProtobufs__CFRASSBResource   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CFRASSBResource *
       streaming_protobufs__cfra__ssb__resource__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__cfra__ssb__resource__free_unpacked
                     (StreamingProtobufs__CFRASSBResource *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CSIRS methods */
void   streaming_protobufs__csirs__init
                     (StreamingProtobufs__CSIRS         *message);
size_t streaming_protobufs__csirs__get_packed_size
                     (const StreamingProtobufs__CSIRS   *message);
size_t streaming_protobufs__csirs__pack
                     (const StreamingProtobufs__CSIRS   *message,
                      uint8_t             *out);
size_t streaming_protobufs__csirs__pack_to_buffer
                     (const StreamingProtobufs__CSIRS   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CSIRS *
       streaming_protobufs__csirs__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__csirs__free_unpacked
                     (StreamingProtobufs__CSIRS *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CFRACSIRSResource methods */
void   streaming_protobufs__cfra__csirs__resource__init
                     (StreamingProtobufs__CFRACSIRSResource         *message);
size_t streaming_protobufs__cfra__csirs__resource__get_packed_size
                     (const StreamingProtobufs__CFRACSIRSResource   *message);
size_t streaming_protobufs__cfra__csirs__resource__pack
                     (const StreamingProtobufs__CFRACSIRSResource   *message,
                      uint8_t             *out);
size_t streaming_protobufs__cfra__csirs__resource__pack_to_buffer
                     (const StreamingProtobufs__CFRACSIRSResource   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CFRACSIRSResource *
       streaming_protobufs__cfra__csirs__resource__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__cfra__csirs__resource__free_unpacked
                     (StreamingProtobufs__CFRACSIRSResource *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__RAPrioritization methods */
void   streaming_protobufs__ra__prioritization__init
                     (StreamingProtobufs__RAPrioritization         *message);
size_t streaming_protobufs__ra__prioritization__get_packed_size
                     (const StreamingProtobufs__RAPrioritization   *message);
size_t streaming_protobufs__ra__prioritization__pack
                     (const StreamingProtobufs__RAPrioritization   *message,
                      uint8_t             *out);
size_t streaming_protobufs__ra__prioritization__pack_to_buffer
                     (const StreamingProtobufs__RAPrioritization   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__RAPrioritization *
       streaming_protobufs__ra__prioritization__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__ra__prioritization__free_unpacked
                     (StreamingProtobufs__RAPrioritization *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PowerRampingStepHighPriority methods */
void   streaming_protobufs__power_ramping_step_high_priority__init
                     (StreamingProtobufs__PowerRampingStepHighPriority         *message);
size_t streaming_protobufs__power_ramping_step_high_priority__get_packed_size
                     (const StreamingProtobufs__PowerRampingStepHighPriority   *message);
size_t streaming_protobufs__power_ramping_step_high_priority__pack
                     (const StreamingProtobufs__PowerRampingStepHighPriority   *message,
                      uint8_t             *out);
size_t streaming_protobufs__power_ramping_step_high_priority__pack_to_buffer
                     (const StreamingProtobufs__PowerRampingStepHighPriority   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PowerRampingStepHighPriority *
       streaming_protobufs__power_ramping_step_high_priority__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__power_ramping_step_high_priority__free_unpacked
                     (StreamingProtobufs__PowerRampingStepHighPriority *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ScalingFactorBI methods */
void   streaming_protobufs__scaling_factor_bi__init
                     (StreamingProtobufs__ScalingFactorBI         *message);
size_t streaming_protobufs__scaling_factor_bi__get_packed_size
                     (const StreamingProtobufs__ScalingFactorBI   *message);
size_t streaming_protobufs__scaling_factor_bi__pack
                     (const StreamingProtobufs__ScalingFactorBI   *message,
                      uint8_t             *out);
size_t streaming_protobufs__scaling_factor_bi__pack_to_buffer
                     (const StreamingProtobufs__ScalingFactorBI   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ScalingFactorBI *
       streaming_protobufs__scaling_factor_bi__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__scaling_factor_bi__free_unpacked
                     (StreamingProtobufs__ScalingFactorBI *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SSBMTC methods */
void   streaming_protobufs__ssb__mtc__init
                     (StreamingProtobufs__SSBMTC         *message);
size_t streaming_protobufs__ssb__mtc__get_packed_size
                     (const StreamingProtobufs__SSBMTC   *message);
size_t streaming_protobufs__ssb__mtc__pack
                     (const StreamingProtobufs__SSBMTC   *message,
                      uint8_t             *out);
size_t streaming_protobufs__ssb__mtc__pack_to_buffer
                     (const StreamingProtobufs__SSBMTC   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SSBMTC *
       streaming_protobufs__ssb__mtc__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__ssb__mtc__free_unpacked
                     (StreamingProtobufs__SSBMTC *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__Duration methods */
void   streaming_protobufs__duration__init
                     (StreamingProtobufs__Duration         *message);
size_t streaming_protobufs__duration__get_packed_size
                     (const StreamingProtobufs__Duration   *message);
size_t streaming_protobufs__duration__pack
                     (const StreamingProtobufs__Duration   *message,
                      uint8_t             *out);
size_t streaming_protobufs__duration__pack_to_buffer
                     (const StreamingProtobufs__Duration   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__Duration *
       streaming_protobufs__duration__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__duration__free_unpacked
                     (StreamingProtobufs__Duration *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SSBMTC2 methods */
void   streaming_protobufs__ssb__mtc2__init
                     (StreamingProtobufs__SSBMTC2         *message);
size_t streaming_protobufs__ssb__mtc2__get_packed_size
                     (const StreamingProtobufs__SSBMTC2   *message);
size_t streaming_protobufs__ssb__mtc2__pack
                     (const StreamingProtobufs__SSBMTC2   *message,
                      uint8_t             *out);
size_t streaming_protobufs__ssb__mtc2__pack_to_buffer
                     (const StreamingProtobufs__SSBMTC2   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SSBMTC2 *
       streaming_protobufs__ssb__mtc2__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__ssb__mtc2__free_unpacked
                     (StreamingProtobufs__SSBMTC2 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__Periodicity methods */
void   streaming_protobufs__periodicity__init
                     (StreamingProtobufs__Periodicity         *message);
size_t streaming_protobufs__periodicity__get_packed_size
                     (const StreamingProtobufs__Periodicity   *message);
size_t streaming_protobufs__periodicity__pack
                     (const StreamingProtobufs__Periodicity   *message,
                      uint8_t             *out);
size_t streaming_protobufs__periodicity__pack_to_buffer
                     (const StreamingProtobufs__Periodicity   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__Periodicity *
       streaming_protobufs__periodicity__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__periodicity__free_unpacked
                     (StreamingProtobufs__Periodicity *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__RLFTimersAndConstants methods */
void   streaming_protobufs__rlf__timers_and_constants__init
                     (StreamingProtobufs__RLFTimersAndConstants         *message);
size_t streaming_protobufs__rlf__timers_and_constants__get_packed_size
                     (const StreamingProtobufs__RLFTimersAndConstants   *message);
size_t streaming_protobufs__rlf__timers_and_constants__pack
                     (const StreamingProtobufs__RLFTimersAndConstants   *message,
                      uint8_t             *out);
size_t streaming_protobufs__rlf__timers_and_constants__pack_to_buffer
                     (const StreamingProtobufs__RLFTimersAndConstants   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__RLFTimersAndConstants *
       streaming_protobufs__rlf__timers_and_constants__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__rlf__timers_and_constants__free_unpacked
                     (StreamingProtobufs__RLFTimersAndConstants *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__T310 methods */
void   streaming_protobufs__t310__init
                     (StreamingProtobufs__T310         *message);
size_t streaming_protobufs__t310__get_packed_size
                     (const StreamingProtobufs__T310   *message);
size_t streaming_protobufs__t310__pack
                     (const StreamingProtobufs__T310   *message,
                      uint8_t             *out);
size_t streaming_protobufs__t310__pack_to_buffer
                     (const StreamingProtobufs__T310   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__T310 *
       streaming_protobufs__t310__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__t310__free_unpacked
                     (StreamingProtobufs__T310 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__N310 methods */
void   streaming_protobufs__n310__init
                     (StreamingProtobufs__N310         *message);
size_t streaming_protobufs__n310__get_packed_size
                     (const StreamingProtobufs__N310   *message);
size_t streaming_protobufs__n310__pack
                     (const StreamingProtobufs__N310   *message,
                      uint8_t             *out);
size_t streaming_protobufs__n310__pack_to_buffer
                     (const StreamingProtobufs__N310   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__N310 *
       streaming_protobufs__n310__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__n310__free_unpacked
                     (StreamingProtobufs__N310 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__N311 methods */
void   streaming_protobufs__n311__init
                     (StreamingProtobufs__N311         *message);
size_t streaming_protobufs__n311__get_packed_size
                     (const StreamingProtobufs__N311   *message);
size_t streaming_protobufs__n311__pack
                     (const StreamingProtobufs__N311   *message,
                      uint8_t             *out);
size_t streaming_protobufs__n311__pack_to_buffer
                     (const StreamingProtobufs__N311   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__N311 *
       streaming_protobufs__n311__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__n311__free_unpacked
                     (StreamingProtobufs__N311 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__T311V1530 methods */
void   streaming_protobufs__t311_v1530__init
                     (StreamingProtobufs__T311V1530         *message);
size_t streaming_protobufs__t311_v1530__get_packed_size
                     (const StreamingProtobufs__T311V1530   *message);
size_t streaming_protobufs__t311_v1530__pack
                     (const StreamingProtobufs__T311V1530   *message,
                      uint8_t             *out);
size_t streaming_protobufs__t311_v1530__pack_to_buffer
                     (const StreamingProtobufs__T311V1530   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__T311V1530 *
       streaming_protobufs__t311_v1530__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__t311_v1530__free_unpacked
                     (StreamingProtobufs__T311V1530 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__RlmInSyncOutOfSyncThreshold methods */
void   streaming_protobufs__rlm_in_sync_out_of_sync_threshold__init
                     (StreamingProtobufs__RlmInSyncOutOfSyncThreshold         *message);
size_t streaming_protobufs__rlm_in_sync_out_of_sync_threshold__get_packed_size
                     (const StreamingProtobufs__RlmInSyncOutOfSyncThreshold   *message);
size_t streaming_protobufs__rlm_in_sync_out_of_sync_threshold__pack
                     (const StreamingProtobufs__RlmInSyncOutOfSyncThreshold   *message,
                      uint8_t             *out);
size_t streaming_protobufs__rlm_in_sync_out_of_sync_threshold__pack_to_buffer
                     (const StreamingProtobufs__RlmInSyncOutOfSyncThreshold   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__RlmInSyncOutOfSyncThreshold *
       streaming_protobufs__rlm_in_sync_out_of_sync_threshold__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__rlm_in_sync_out_of_sync_threshold__free_unpacked
                     (StreamingProtobufs__RlmInSyncOutOfSyncThreshold *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ServingCellConfig methods */
void   streaming_protobufs__serving_cell_config__init
                     (StreamingProtobufs__ServingCellConfig         *message);
size_t streaming_protobufs__serving_cell_config__get_packed_size
                     (const StreamingProtobufs__ServingCellConfig   *message);
size_t streaming_protobufs__serving_cell_config__pack
                     (const StreamingProtobufs__ServingCellConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__serving_cell_config__pack_to_buffer
                     (const StreamingProtobufs__ServingCellConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ServingCellConfig *
       streaming_protobufs__serving_cell_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__serving_cell_config__free_unpacked
                     (StreamingProtobufs__ServingCellConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__TDDULDLConfigDedicated methods */
void   streaming_protobufs__tdd__ul__dl__config_dedicated__init
                     (StreamingProtobufs__TDDULDLConfigDedicated         *message);
size_t streaming_protobufs__tdd__ul__dl__config_dedicated__get_packed_size
                     (const StreamingProtobufs__TDDULDLConfigDedicated   *message);
size_t streaming_protobufs__tdd__ul__dl__config_dedicated__pack
                     (const StreamingProtobufs__TDDULDLConfigDedicated   *message,
                      uint8_t             *out);
size_t streaming_protobufs__tdd__ul__dl__config_dedicated__pack_to_buffer
                     (const StreamingProtobufs__TDDULDLConfigDedicated   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__TDDULDLConfigDedicated *
       streaming_protobufs__tdd__ul__dl__config_dedicated__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__tdd__ul__dl__config_dedicated__free_unpacked
                     (StreamingProtobufs__TDDULDLConfigDedicated *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__TDDULDLSlotConfig methods */
void   streaming_protobufs__tdd__ul__dl__slot_config__init
                     (StreamingProtobufs__TDDULDLSlotConfig         *message);
size_t streaming_protobufs__tdd__ul__dl__slot_config__get_packed_size
                     (const StreamingProtobufs__TDDULDLSlotConfig   *message);
size_t streaming_protobufs__tdd__ul__dl__slot_config__pack
                     (const StreamingProtobufs__TDDULDLSlotConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__tdd__ul__dl__slot_config__pack_to_buffer
                     (const StreamingProtobufs__TDDULDLSlotConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__TDDULDLSlotConfig *
       streaming_protobufs__tdd__ul__dl__slot_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__tdd__ul__dl__slot_config__free_unpacked
                     (StreamingProtobufs__TDDULDLSlotConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__Explicit methods */
void   streaming_protobufs__explicit__init
                     (StreamingProtobufs__Explicit         *message);
size_t streaming_protobufs__explicit__get_packed_size
                     (const StreamingProtobufs__Explicit   *message);
size_t streaming_protobufs__explicit__pack
                     (const StreamingProtobufs__Explicit   *message,
                      uint8_t             *out);
size_t streaming_protobufs__explicit__pack_to_buffer
                     (const StreamingProtobufs__Explicit   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__Explicit *
       streaming_protobufs__explicit__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__explicit__free_unpacked
                     (StreamingProtobufs__Explicit *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__BWPDownlinkDedicated methods */
void   streaming_protobufs__bwp__downlink_dedicated__init
                     (StreamingProtobufs__BWPDownlinkDedicated         *message);
size_t streaming_protobufs__bwp__downlink_dedicated__get_packed_size
                     (const StreamingProtobufs__BWPDownlinkDedicated   *message);
size_t streaming_protobufs__bwp__downlink_dedicated__pack
                     (const StreamingProtobufs__BWPDownlinkDedicated   *message,
                      uint8_t             *out);
size_t streaming_protobufs__bwp__downlink_dedicated__pack_to_buffer
                     (const StreamingProtobufs__BWPDownlinkDedicated   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__BWPDownlinkDedicated *
       streaming_protobufs__bwp__downlink_dedicated__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__bwp__downlink_dedicated__free_unpacked
                     (StreamingProtobufs__BWPDownlinkDedicated *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PDCCHConfig methods */
void   streaming_protobufs__pdcch__config__init
                     (StreamingProtobufs__PDCCHConfig         *message);
size_t streaming_protobufs__pdcch__config__get_packed_size
                     (const StreamingProtobufs__PDCCHConfig   *message);
size_t streaming_protobufs__pdcch__config__pack
                     (const StreamingProtobufs__PDCCHConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pdcch__config__pack_to_buffer
                     (const StreamingProtobufs__PDCCHConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PDCCHConfig *
       streaming_protobufs__pdcch__config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pdcch__config__free_unpacked
                     (StreamingProtobufs__PDCCHConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__DownlinkPreemption methods */
void   streaming_protobufs__downlink_preemption__init
                     (StreamingProtobufs__DownlinkPreemption         *message);
size_t streaming_protobufs__downlink_preemption__get_packed_size
                     (const StreamingProtobufs__DownlinkPreemption   *message);
size_t streaming_protobufs__downlink_preemption__pack
                     (const StreamingProtobufs__DownlinkPreemption   *message,
                      uint8_t             *out);
size_t streaming_protobufs__downlink_preemption__pack_to_buffer
                     (const StreamingProtobufs__DownlinkPreemption   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__DownlinkPreemption *
       streaming_protobufs__downlink_preemption__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__downlink_preemption__free_unpacked
                     (StreamingProtobufs__DownlinkPreemption *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__TimeFrequencySet methods */
void   streaming_protobufs__time_frequency_set__init
                     (StreamingProtobufs__TimeFrequencySet         *message);
size_t streaming_protobufs__time_frequency_set__get_packed_size
                     (const StreamingProtobufs__TimeFrequencySet   *message);
size_t streaming_protobufs__time_frequency_set__pack
                     (const StreamingProtobufs__TimeFrequencySet   *message,
                      uint8_t             *out);
size_t streaming_protobufs__time_frequency_set__pack_to_buffer
                     (const StreamingProtobufs__TimeFrequencySet   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__TimeFrequencySet *
       streaming_protobufs__time_frequency_set__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__time_frequency_set__free_unpacked
                     (StreamingProtobufs__TimeFrequencySet *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__INTConfigurationPerServingCell methods */
void   streaming_protobufs__int__configuration_per_serving_cell__init
                     (StreamingProtobufs__INTConfigurationPerServingCell         *message);
size_t streaming_protobufs__int__configuration_per_serving_cell__get_packed_size
                     (const StreamingProtobufs__INTConfigurationPerServingCell   *message);
size_t streaming_protobufs__int__configuration_per_serving_cell__pack
                     (const StreamingProtobufs__INTConfigurationPerServingCell   *message,
                      uint8_t             *out);
size_t streaming_protobufs__int__configuration_per_serving_cell__pack_to_buffer
                     (const StreamingProtobufs__INTConfigurationPerServingCell   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__INTConfigurationPerServingCell *
       streaming_protobufs__int__configuration_per_serving_cell__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__int__configuration_per_serving_cell__free_unpacked
                     (StreamingProtobufs__INTConfigurationPerServingCell *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PUSCHTPCCommandConfig methods */
void   streaming_protobufs__pusch__tpc__command_config__init
                     (StreamingProtobufs__PUSCHTPCCommandConfig         *message);
size_t streaming_protobufs__pusch__tpc__command_config__get_packed_size
                     (const StreamingProtobufs__PUSCHTPCCommandConfig   *message);
size_t streaming_protobufs__pusch__tpc__command_config__pack
                     (const StreamingProtobufs__PUSCHTPCCommandConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pusch__tpc__command_config__pack_to_buffer
                     (const StreamingProtobufs__PUSCHTPCCommandConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PUSCHTPCCommandConfig *
       streaming_protobufs__pusch__tpc__command_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pusch__tpc__command_config__free_unpacked
                     (StreamingProtobufs__PUSCHTPCCommandConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PUCCHTPCCommandConfig methods */
void   streaming_protobufs__pucch__tpc__command_config__init
                     (StreamingProtobufs__PUCCHTPCCommandConfig         *message);
size_t streaming_protobufs__pucch__tpc__command_config__get_packed_size
                     (const StreamingProtobufs__PUCCHTPCCommandConfig   *message);
size_t streaming_protobufs__pucch__tpc__command_config__pack
                     (const StreamingProtobufs__PUCCHTPCCommandConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pucch__tpc__command_config__pack_to_buffer
                     (const StreamingProtobufs__PUCCHTPCCommandConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PUCCHTPCCommandConfig *
       streaming_protobufs__pucch__tpc__command_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pucch__tpc__command_config__free_unpacked
                     (StreamingProtobufs__PUCCHTPCCommandConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SRSTPCCommandConfig methods */
void   streaming_protobufs__srs__tpc__command_config__init
                     (StreamingProtobufs__SRSTPCCommandConfig         *message);
size_t streaming_protobufs__srs__tpc__command_config__get_packed_size
                     (const StreamingProtobufs__SRSTPCCommandConfig   *message);
size_t streaming_protobufs__srs__tpc__command_config__pack
                     (const StreamingProtobufs__SRSTPCCommandConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__srs__tpc__command_config__pack_to_buffer
                     (const StreamingProtobufs__SRSTPCCommandConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SRSTPCCommandConfig *
       streaming_protobufs__srs__tpc__command_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__srs__tpc__command_config__free_unpacked
                     (StreamingProtobufs__SRSTPCCommandConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PDSCHConfig methods */
void   streaming_protobufs__pdsch__config__init
                     (StreamingProtobufs__PDSCHConfig         *message);
size_t streaming_protobufs__pdsch__config__get_packed_size
                     (const StreamingProtobufs__PDSCHConfig   *message);
size_t streaming_protobufs__pdsch__config__pack
                     (const StreamingProtobufs__PDSCHConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pdsch__config__pack_to_buffer
                     (const StreamingProtobufs__PDSCHConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PDSCHConfig *
       streaming_protobufs__pdsch__config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pdsch__config__free_unpacked
                     (StreamingProtobufs__PDSCHConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__DMRSDownlinkConfig methods */
void   streaming_protobufs__dmrs__downlink_config__init
                     (StreamingProtobufs__DMRSDownlinkConfig         *message);
size_t streaming_protobufs__dmrs__downlink_config__get_packed_size
                     (const StreamingProtobufs__DMRSDownlinkConfig   *message);
size_t streaming_protobufs__dmrs__downlink_config__pack
                     (const StreamingProtobufs__DMRSDownlinkConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__dmrs__downlink_config__pack_to_buffer
                     (const StreamingProtobufs__DMRSDownlinkConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__DMRSDownlinkConfig *
       streaming_protobufs__dmrs__downlink_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__dmrs__downlink_config__free_unpacked
                     (StreamingProtobufs__DMRSDownlinkConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__DMRSType methods */
void   streaming_protobufs__dmrs__type__init
                     (StreamingProtobufs__DMRSType         *message);
size_t streaming_protobufs__dmrs__type__get_packed_size
                     (const StreamingProtobufs__DMRSType   *message);
size_t streaming_protobufs__dmrs__type__pack
                     (const StreamingProtobufs__DMRSType   *message,
                      uint8_t             *out);
size_t streaming_protobufs__dmrs__type__pack_to_buffer
                     (const StreamingProtobufs__DMRSType   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__DMRSType *
       streaming_protobufs__dmrs__type__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__dmrs__type__free_unpacked
                     (StreamingProtobufs__DMRSType *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__DMRSAdditionalPosition methods */
void   streaming_protobufs__dmrs__additional_position__init
                     (StreamingProtobufs__DMRSAdditionalPosition         *message);
size_t streaming_protobufs__dmrs__additional_position__get_packed_size
                     (const StreamingProtobufs__DMRSAdditionalPosition   *message);
size_t streaming_protobufs__dmrs__additional_position__pack
                     (const StreamingProtobufs__DMRSAdditionalPosition   *message,
                      uint8_t             *out);
size_t streaming_protobufs__dmrs__additional_position__pack_to_buffer
                     (const StreamingProtobufs__DMRSAdditionalPosition   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__DMRSAdditionalPosition *
       streaming_protobufs__dmrs__additional_position__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__dmrs__additional_position__free_unpacked
                     (StreamingProtobufs__DMRSAdditionalPosition *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MaxLength methods */
void   streaming_protobufs__max_length__init
                     (StreamingProtobufs__MaxLength         *message);
size_t streaming_protobufs__max_length__get_packed_size
                     (const StreamingProtobufs__MaxLength   *message);
size_t streaming_protobufs__max_length__pack
                     (const StreamingProtobufs__MaxLength   *message,
                      uint8_t             *out);
size_t streaming_protobufs__max_length__pack_to_buffer
                     (const StreamingProtobufs__MaxLength   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MaxLength *
       streaming_protobufs__max_length__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__max_length__free_unpacked
                     (StreamingProtobufs__MaxLength *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PTRSDownlinkConfig methods */
void   streaming_protobufs__ptrs__downlink_config__init
                     (StreamingProtobufs__PTRSDownlinkConfig         *message);
size_t streaming_protobufs__ptrs__downlink_config__get_packed_size
                     (const StreamingProtobufs__PTRSDownlinkConfig   *message);
size_t streaming_protobufs__ptrs__downlink_config__pack
                     (const StreamingProtobufs__PTRSDownlinkConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__ptrs__downlink_config__pack_to_buffer
                     (const StreamingProtobufs__PTRSDownlinkConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PTRSDownlinkConfig *
       streaming_protobufs__ptrs__downlink_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__ptrs__downlink_config__free_unpacked
                     (StreamingProtobufs__PTRSDownlinkConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ResourceElementOffset methods */
void   streaming_protobufs__resource_element_offset__init
                     (StreamingProtobufs__ResourceElementOffset         *message);
size_t streaming_protobufs__resource_element_offset__get_packed_size
                     (const StreamingProtobufs__ResourceElementOffset   *message);
size_t streaming_protobufs__resource_element_offset__pack
                     (const StreamingProtobufs__ResourceElementOffset   *message,
                      uint8_t             *out);
size_t streaming_protobufs__resource_element_offset__pack_to_buffer
                     (const StreamingProtobufs__ResourceElementOffset   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ResourceElementOffset *
       streaming_protobufs__resource_element_offset__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__resource_element_offset__free_unpacked
                     (StreamingProtobufs__ResourceElementOffset *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__TCIState methods */
void   streaming_protobufs__tci__state__init
                     (StreamingProtobufs__TCIState         *message);
size_t streaming_protobufs__tci__state__get_packed_size
                     (const StreamingProtobufs__TCIState   *message);
size_t streaming_protobufs__tci__state__pack
                     (const StreamingProtobufs__TCIState   *message,
                      uint8_t             *out);
size_t streaming_protobufs__tci__state__pack_to_buffer
                     (const StreamingProtobufs__TCIState   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__TCIState *
       streaming_protobufs__tci__state__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__tci__state__free_unpacked
                     (StreamingProtobufs__TCIState *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__QCLInfo methods */
void   streaming_protobufs__qcl__info__init
                     (StreamingProtobufs__QCLInfo         *message);
size_t streaming_protobufs__qcl__info__get_packed_size
                     (const StreamingProtobufs__QCLInfo   *message);
size_t streaming_protobufs__qcl__info__pack
                     (const StreamingProtobufs__QCLInfo   *message,
                      uint8_t             *out);
size_t streaming_protobufs__qcl__info__pack_to_buffer
                     (const StreamingProtobufs__QCLInfo   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__QCLInfo *
       streaming_protobufs__qcl__info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__qcl__info__free_unpacked
                     (StreamingProtobufs__QCLInfo *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__QCLType methods */
void   streaming_protobufs__qcl__type__init
                     (StreamingProtobufs__QCLType         *message);
size_t streaming_protobufs__qcl__type__get_packed_size
                     (const StreamingProtobufs__QCLType   *message);
size_t streaming_protobufs__qcl__type__pack
                     (const StreamingProtobufs__QCLType   *message,
                      uint8_t             *out);
size_t streaming_protobufs__qcl__type__pack_to_buffer
                     (const StreamingProtobufs__QCLType   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__QCLType *
       streaming_protobufs__qcl__type__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__qcl__type__free_unpacked
                     (StreamingProtobufs__QCLType *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__VRBToPRBInterleaver methods */
void   streaming_protobufs__vrb__to_prb__interleaver__init
                     (StreamingProtobufs__VRBToPRBInterleaver         *message);
size_t streaming_protobufs__vrb__to_prb__interleaver__get_packed_size
                     (const StreamingProtobufs__VRBToPRBInterleaver   *message);
size_t streaming_protobufs__vrb__to_prb__interleaver__pack
                     (const StreamingProtobufs__VRBToPRBInterleaver   *message,
                      uint8_t             *out);
size_t streaming_protobufs__vrb__to_prb__interleaver__pack_to_buffer
                     (const StreamingProtobufs__VRBToPRBInterleaver   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__VRBToPRBInterleaver *
       streaming_protobufs__vrb__to_prb__interleaver__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__vrb__to_prb__interleaver__free_unpacked
                     (StreamingProtobufs__VRBToPRBInterleaver *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ResourceAllocation methods */
void   streaming_protobufs__resource_allocation__init
                     (StreamingProtobufs__ResourceAllocation         *message);
size_t streaming_protobufs__resource_allocation__get_packed_size
                     (const StreamingProtobufs__ResourceAllocation   *message);
size_t streaming_protobufs__resource_allocation__pack
                     (const StreamingProtobufs__ResourceAllocation   *message,
                      uint8_t             *out);
size_t streaming_protobufs__resource_allocation__pack_to_buffer
                     (const StreamingProtobufs__ResourceAllocation   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ResourceAllocation *
       streaming_protobufs__resource_allocation__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__resource_allocation__free_unpacked
                     (StreamingProtobufs__ResourceAllocation *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PDSCHAggregationFactor methods */
void   streaming_protobufs__pdsch__aggregation_factor__init
                     (StreamingProtobufs__PDSCHAggregationFactor         *message);
size_t streaming_protobufs__pdsch__aggregation_factor__get_packed_size
                     (const StreamingProtobufs__PDSCHAggregationFactor   *message);
size_t streaming_protobufs__pdsch__aggregation_factor__pack
                     (const StreamingProtobufs__PDSCHAggregationFactor   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pdsch__aggregation_factor__pack_to_buffer
                     (const StreamingProtobufs__PDSCHAggregationFactor   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PDSCHAggregationFactor *
       streaming_protobufs__pdsch__aggregation_factor__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pdsch__aggregation_factor__free_unpacked
                     (StreamingProtobufs__PDSCHAggregationFactor *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__RateMatchPatternGroup methods */
void   streaming_protobufs__rate_match_pattern_group__init
                     (StreamingProtobufs__RateMatchPatternGroup         *message);
size_t streaming_protobufs__rate_match_pattern_group__get_packed_size
                     (const StreamingProtobufs__RateMatchPatternGroup   *message);
size_t streaming_protobufs__rate_match_pattern_group__pack
                     (const StreamingProtobufs__RateMatchPatternGroup   *message,
                      uint8_t             *out);
size_t streaming_protobufs__rate_match_pattern_group__pack_to_buffer
                     (const StreamingProtobufs__RateMatchPatternGroup   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__RateMatchPatternGroup *
       streaming_protobufs__rate_match_pattern_group__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__rate_match_pattern_group__free_unpacked
                     (StreamingProtobufs__RateMatchPatternGroup *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__RateMatchPatternGroupItem methods */
void   streaming_protobufs__rate_match_pattern_group_item__init
                     (StreamingProtobufs__RateMatchPatternGroupItem         *message);
size_t streaming_protobufs__rate_match_pattern_group_item__get_packed_size
                     (const StreamingProtobufs__RateMatchPatternGroupItem   *message);
size_t streaming_protobufs__rate_match_pattern_group_item__pack
                     (const StreamingProtobufs__RateMatchPatternGroupItem   *message,
                      uint8_t             *out);
size_t streaming_protobufs__rate_match_pattern_group_item__pack_to_buffer
                     (const StreamingProtobufs__RateMatchPatternGroupItem   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__RateMatchPatternGroupItem *
       streaming_protobufs__rate_match_pattern_group_item__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__rate_match_pattern_group_item__free_unpacked
                     (StreamingProtobufs__RateMatchPatternGroupItem *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__RBGSize methods */
void   streaming_protobufs__rbg__size__init
                     (StreamingProtobufs__RBGSize         *message);
size_t streaming_protobufs__rbg__size__get_packed_size
                     (const StreamingProtobufs__RBGSize   *message);
size_t streaming_protobufs__rbg__size__pack
                     (const StreamingProtobufs__RBGSize   *message,
                      uint8_t             *out);
size_t streaming_protobufs__rbg__size__pack_to_buffer
                     (const StreamingProtobufs__RBGSize   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__RBGSize *
       streaming_protobufs__rbg__size__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__rbg__size__free_unpacked
                     (StreamingProtobufs__RBGSize *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MCSTable methods */
void   streaming_protobufs__mcs__table__init
                     (StreamingProtobufs__MCSTable         *message);
size_t streaming_protobufs__mcs__table__get_packed_size
                     (const StreamingProtobufs__MCSTable   *message);
size_t streaming_protobufs__mcs__table__pack
                     (const StreamingProtobufs__MCSTable   *message,
                      uint8_t             *out);
size_t streaming_protobufs__mcs__table__pack_to_buffer
                     (const StreamingProtobufs__MCSTable   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MCSTable *
       streaming_protobufs__mcs__table__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__mcs__table__free_unpacked
                     (StreamingProtobufs__MCSTable *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MaxNrofCodeWordsScheduledByDCI methods */
void   streaming_protobufs__max_nrof_code_words_scheduled_by_dci__init
                     (StreamingProtobufs__MaxNrofCodeWordsScheduledByDCI         *message);
size_t streaming_protobufs__max_nrof_code_words_scheduled_by_dci__get_packed_size
                     (const StreamingProtobufs__MaxNrofCodeWordsScheduledByDCI   *message);
size_t streaming_protobufs__max_nrof_code_words_scheduled_by_dci__pack
                     (const StreamingProtobufs__MaxNrofCodeWordsScheduledByDCI   *message,
                      uint8_t             *out);
size_t streaming_protobufs__max_nrof_code_words_scheduled_by_dci__pack_to_buffer
                     (const StreamingProtobufs__MaxNrofCodeWordsScheduledByDCI   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MaxNrofCodeWordsScheduledByDCI *
       streaming_protobufs__max_nrof_code_words_scheduled_by_dci__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__max_nrof_code_words_scheduled_by_dci__free_unpacked
                     (StreamingProtobufs__MaxNrofCodeWordsScheduledByDCI *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__StaticBundling methods */
void   streaming_protobufs__static_bundling__init
                     (StreamingProtobufs__StaticBundling         *message);
size_t streaming_protobufs__static_bundling__get_packed_size
                     (const StreamingProtobufs__StaticBundling   *message);
size_t streaming_protobufs__static_bundling__pack
                     (const StreamingProtobufs__StaticBundling   *message,
                      uint8_t             *out);
size_t streaming_protobufs__static_bundling__pack_to_buffer
                     (const StreamingProtobufs__StaticBundling   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__StaticBundling *
       streaming_protobufs__static_bundling__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__static_bundling__free_unpacked
                     (StreamingProtobufs__StaticBundling *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__BundleSize methods */
void   streaming_protobufs__bundle_size__init
                     (StreamingProtobufs__BundleSize         *message);
size_t streaming_protobufs__bundle_size__get_packed_size
                     (const StreamingProtobufs__BundleSize   *message);
size_t streaming_protobufs__bundle_size__pack
                     (const StreamingProtobufs__BundleSize   *message,
                      uint8_t             *out);
size_t streaming_protobufs__bundle_size__pack_to_buffer
                     (const StreamingProtobufs__BundleSize   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__BundleSize *
       streaming_protobufs__bundle_size__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__bundle_size__free_unpacked
                     (StreamingProtobufs__BundleSize *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__DynamicBundling methods */
void   streaming_protobufs__dynamic_bundling__init
                     (StreamingProtobufs__DynamicBundling         *message);
size_t streaming_protobufs__dynamic_bundling__get_packed_size
                     (const StreamingProtobufs__DynamicBundling   *message);
size_t streaming_protobufs__dynamic_bundling__pack
                     (const StreamingProtobufs__DynamicBundling   *message,
                      uint8_t             *out);
size_t streaming_protobufs__dynamic_bundling__pack_to_buffer
                     (const StreamingProtobufs__DynamicBundling   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__DynamicBundling *
       streaming_protobufs__dynamic_bundling__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__dynamic_bundling__free_unpacked
                     (StreamingProtobufs__DynamicBundling *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__BundleSizeSet1 methods */
void   streaming_protobufs__bundle_size_set1__init
                     (StreamingProtobufs__BundleSizeSet1         *message);
size_t streaming_protobufs__bundle_size_set1__get_packed_size
                     (const StreamingProtobufs__BundleSizeSet1   *message);
size_t streaming_protobufs__bundle_size_set1__pack
                     (const StreamingProtobufs__BundleSizeSet1   *message,
                      uint8_t             *out);
size_t streaming_protobufs__bundle_size_set1__pack_to_buffer
                     (const StreamingProtobufs__BundleSizeSet1   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__BundleSizeSet1 *
       streaming_protobufs__bundle_size_set1__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__bundle_size_set1__free_unpacked
                     (StreamingProtobufs__BundleSizeSet1 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__BundleSizeSet2 methods */
void   streaming_protobufs__bundle_size_set2__init
                     (StreamingProtobufs__BundleSizeSet2         *message);
size_t streaming_protobufs__bundle_size_set2__get_packed_size
                     (const StreamingProtobufs__BundleSizeSet2   *message);
size_t streaming_protobufs__bundle_size_set2__pack
                     (const StreamingProtobufs__BundleSizeSet2   *message,
                      uint8_t             *out);
size_t streaming_protobufs__bundle_size_set2__pack_to_buffer
                     (const StreamingProtobufs__BundleSizeSet2   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__BundleSizeSet2 *
       streaming_protobufs__bundle_size_set2__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__bundle_size_set2__free_unpacked
                     (StreamingProtobufs__BundleSizeSet2 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ZPCSIRSResource methods */
void   streaming_protobufs__zp__csi__rs__resource__init
                     (StreamingProtobufs__ZPCSIRSResource         *message);
size_t streaming_protobufs__zp__csi__rs__resource__get_packed_size
                     (const StreamingProtobufs__ZPCSIRSResource   *message);
size_t streaming_protobufs__zp__csi__rs__resource__pack
                     (const StreamingProtobufs__ZPCSIRSResource   *message,
                      uint8_t             *out);
size_t streaming_protobufs__zp__csi__rs__resource__pack_to_buffer
                     (const StreamingProtobufs__ZPCSIRSResource   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ZPCSIRSResource *
       streaming_protobufs__zp__csi__rs__resource__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__zp__csi__rs__resource__free_unpacked
                     (StreamingProtobufs__ZPCSIRSResource *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CSIRSResourceMapping methods */
void   streaming_protobufs__csi__rs__resource_mapping__init
                     (StreamingProtobufs__CSIRSResourceMapping         *message);
size_t streaming_protobufs__csi__rs__resource_mapping__get_packed_size
                     (const StreamingProtobufs__CSIRSResourceMapping   *message);
size_t streaming_protobufs__csi__rs__resource_mapping__pack
                     (const StreamingProtobufs__CSIRSResourceMapping   *message,
                      uint8_t             *out);
size_t streaming_protobufs__csi__rs__resource_mapping__pack_to_buffer
                     (const StreamingProtobufs__CSIRSResourceMapping   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CSIRSResourceMapping *
       streaming_protobufs__csi__rs__resource_mapping__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__csi__rs__resource_mapping__free_unpacked
                     (StreamingProtobufs__CSIRSResourceMapping *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__NrofPorts methods */
void   streaming_protobufs__nrof_ports__init
                     (StreamingProtobufs__NrofPorts         *message);
size_t streaming_protobufs__nrof_ports__get_packed_size
                     (const StreamingProtobufs__NrofPorts   *message);
size_t streaming_protobufs__nrof_ports__pack
                     (const StreamingProtobufs__NrofPorts   *message,
                      uint8_t             *out);
size_t streaming_protobufs__nrof_ports__pack_to_buffer
                     (const StreamingProtobufs__NrofPorts   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__NrofPorts *
       streaming_protobufs__nrof_ports__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__nrof_ports__free_unpacked
                     (StreamingProtobufs__NrofPorts *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CDMType methods */
void   streaming_protobufs__cdm__type__init
                     (StreamingProtobufs__CDMType         *message);
size_t streaming_protobufs__cdm__type__get_packed_size
                     (const StreamingProtobufs__CDMType   *message);
size_t streaming_protobufs__cdm__type__pack
                     (const StreamingProtobufs__CDMType   *message,
                      uint8_t             *out);
size_t streaming_protobufs__cdm__type__pack_to_buffer
                     (const StreamingProtobufs__CDMType   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CDMType *
       streaming_protobufs__cdm__type__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__cdm__type__free_unpacked
                     (StreamingProtobufs__CDMType *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__Dot5 methods */
void   streaming_protobufs__dot5__init
                     (StreamingProtobufs__Dot5         *message);
size_t streaming_protobufs__dot5__get_packed_size
                     (const StreamingProtobufs__Dot5   *message);
size_t streaming_protobufs__dot5__pack
                     (const StreamingProtobufs__Dot5   *message,
                      uint8_t             *out);
size_t streaming_protobufs__dot5__pack_to_buffer
                     (const StreamingProtobufs__Dot5   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__Dot5 *
       streaming_protobufs__dot5__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__dot5__free_unpacked
                     (StreamingProtobufs__Dot5 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CSIFrequencyOccupation methods */
void   streaming_protobufs__csi__frequency_occupation__init
                     (StreamingProtobufs__CSIFrequencyOccupation         *message);
size_t streaming_protobufs__csi__frequency_occupation__get_packed_size
                     (const StreamingProtobufs__CSIFrequencyOccupation   *message);
size_t streaming_protobufs__csi__frequency_occupation__pack
                     (const StreamingProtobufs__CSIFrequencyOccupation   *message,
                      uint8_t             *out);
size_t streaming_protobufs__csi__frequency_occupation__pack_to_buffer
                     (const StreamingProtobufs__CSIFrequencyOccupation   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CSIFrequencyOccupation *
       streaming_protobufs__csi__frequency_occupation__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__csi__frequency_occupation__free_unpacked
                     (StreamingProtobufs__CSIFrequencyOccupation *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CSIResourcePeriodicityAndOffset methods */
void   streaming_protobufs__csi__resource_periodicity_and_offset__init
                     (StreamingProtobufs__CSIResourcePeriodicityAndOffset         *message);
size_t streaming_protobufs__csi__resource_periodicity_and_offset__get_packed_size
                     (const StreamingProtobufs__CSIResourcePeriodicityAndOffset   *message);
size_t streaming_protobufs__csi__resource_periodicity_and_offset__pack
                     (const StreamingProtobufs__CSIResourcePeriodicityAndOffset   *message,
                      uint8_t             *out);
size_t streaming_protobufs__csi__resource_periodicity_and_offset__pack_to_buffer
                     (const StreamingProtobufs__CSIResourcePeriodicityAndOffset   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CSIResourcePeriodicityAndOffset *
       streaming_protobufs__csi__resource_periodicity_and_offset__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__csi__resource_periodicity_and_offset__free_unpacked
                     (StreamingProtobufs__CSIResourcePeriodicityAndOffset *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ZPCSIRSResourceSet methods */
void   streaming_protobufs__zp__csi__rs__resource_set__init
                     (StreamingProtobufs__ZPCSIRSResourceSet         *message);
size_t streaming_protobufs__zp__csi__rs__resource_set__get_packed_size
                     (const StreamingProtobufs__ZPCSIRSResourceSet   *message);
size_t streaming_protobufs__zp__csi__rs__resource_set__pack
                     (const StreamingProtobufs__ZPCSIRSResourceSet   *message,
                      uint8_t             *out);
size_t streaming_protobufs__zp__csi__rs__resource_set__pack_to_buffer
                     (const StreamingProtobufs__ZPCSIRSResourceSet   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ZPCSIRSResourceSet *
       streaming_protobufs__zp__csi__rs__resource_set__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__zp__csi__rs__resource_set__free_unpacked
                     (StreamingProtobufs__ZPCSIRSResourceSet *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SPSConfig methods */
void   streaming_protobufs__sps__config__init
                     (StreamingProtobufs__SPSConfig         *message);
size_t streaming_protobufs__sps__config__get_packed_size
                     (const StreamingProtobufs__SPSConfig   *message);
size_t streaming_protobufs__sps__config__pack
                     (const StreamingProtobufs__SPSConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__sps__config__pack_to_buffer
                     (const StreamingProtobufs__SPSConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SPSConfig *
       streaming_protobufs__sps__config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__sps__config__free_unpacked
                     (StreamingProtobufs__SPSConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SPSConfigPeriodicity methods */
void   streaming_protobufs__sps__config_periodicity__init
                     (StreamingProtobufs__SPSConfigPeriodicity         *message);
size_t streaming_protobufs__sps__config_periodicity__get_packed_size
                     (const StreamingProtobufs__SPSConfigPeriodicity   *message);
size_t streaming_protobufs__sps__config_periodicity__pack
                     (const StreamingProtobufs__SPSConfigPeriodicity   *message,
                      uint8_t             *out);
size_t streaming_protobufs__sps__config_periodicity__pack_to_buffer
                     (const StreamingProtobufs__SPSConfigPeriodicity   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SPSConfigPeriodicity *
       streaming_protobufs__sps__config_periodicity__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__sps__config_periodicity__free_unpacked
                     (StreamingProtobufs__SPSConfigPeriodicity *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SPSMCSTable methods */
void   streaming_protobufs__sps__mcs__table__init
                     (StreamingProtobufs__SPSMCSTable         *message);
size_t streaming_protobufs__sps__mcs__table__get_packed_size
                     (const StreamingProtobufs__SPSMCSTable   *message);
size_t streaming_protobufs__sps__mcs__table__pack
                     (const StreamingProtobufs__SPSMCSTable   *message,
                      uint8_t             *out);
size_t streaming_protobufs__sps__mcs__table__pack_to_buffer
                     (const StreamingProtobufs__SPSMCSTable   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SPSMCSTable *
       streaming_protobufs__sps__mcs__table__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__sps__mcs__table__free_unpacked
                     (StreamingProtobufs__SPSMCSTable *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__RadioLinkMonitoringConfig methods */
void   streaming_protobufs__radio_link_monitoring_config__init
                     (StreamingProtobufs__RadioLinkMonitoringConfig         *message);
size_t streaming_protobufs__radio_link_monitoring_config__get_packed_size
                     (const StreamingProtobufs__RadioLinkMonitoringConfig   *message);
size_t streaming_protobufs__radio_link_monitoring_config__pack
                     (const StreamingProtobufs__RadioLinkMonitoringConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__radio_link_monitoring_config__pack_to_buffer
                     (const StreamingProtobufs__RadioLinkMonitoringConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__RadioLinkMonitoringConfig *
       streaming_protobufs__radio_link_monitoring_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__radio_link_monitoring_config__free_unpacked
                     (StreamingProtobufs__RadioLinkMonitoringConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__RadioLinkMonitoringRS methods */
void   streaming_protobufs__radio_link_monitoring_rs__init
                     (StreamingProtobufs__RadioLinkMonitoringRS         *message);
size_t streaming_protobufs__radio_link_monitoring_rs__get_packed_size
                     (const StreamingProtobufs__RadioLinkMonitoringRS   *message);
size_t streaming_protobufs__radio_link_monitoring_rs__pack
                     (const StreamingProtobufs__RadioLinkMonitoringRS   *message,
                      uint8_t             *out);
size_t streaming_protobufs__radio_link_monitoring_rs__pack_to_buffer
                     (const StreamingProtobufs__RadioLinkMonitoringRS   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__RadioLinkMonitoringRS *
       streaming_protobufs__radio_link_monitoring_rs__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__radio_link_monitoring_rs__free_unpacked
                     (StreamingProtobufs__RadioLinkMonitoringRS *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__Purpose methods */
void   streaming_protobufs__purpose__init
                     (StreamingProtobufs__Purpose         *message);
size_t streaming_protobufs__purpose__get_packed_size
                     (const StreamingProtobufs__Purpose   *message);
size_t streaming_protobufs__purpose__pack
                     (const StreamingProtobufs__Purpose   *message,
                      uint8_t             *out);
size_t streaming_protobufs__purpose__pack_to_buffer
                     (const StreamingProtobufs__Purpose   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__Purpose *
       streaming_protobufs__purpose__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__purpose__free_unpacked
                     (StreamingProtobufs__Purpose *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__BeamFailureInstanceMaxCount methods */
void   streaming_protobufs__beam_failure_instance_max_count__init
                     (StreamingProtobufs__BeamFailureInstanceMaxCount         *message);
size_t streaming_protobufs__beam_failure_instance_max_count__get_packed_size
                     (const StreamingProtobufs__BeamFailureInstanceMaxCount   *message);
size_t streaming_protobufs__beam_failure_instance_max_count__pack
                     (const StreamingProtobufs__BeamFailureInstanceMaxCount   *message,
                      uint8_t             *out);
size_t streaming_protobufs__beam_failure_instance_max_count__pack_to_buffer
                     (const StreamingProtobufs__BeamFailureInstanceMaxCount   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__BeamFailureInstanceMaxCount *
       streaming_protobufs__beam_failure_instance_max_count__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__beam_failure_instance_max_count__free_unpacked
                     (StreamingProtobufs__BeamFailureInstanceMaxCount *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__BeamFailureDetectionTimer methods */
void   streaming_protobufs__beam_failure_detection_timer__init
                     (StreamingProtobufs__BeamFailureDetectionTimer         *message);
size_t streaming_protobufs__beam_failure_detection_timer__get_packed_size
                     (const StreamingProtobufs__BeamFailureDetectionTimer   *message);
size_t streaming_protobufs__beam_failure_detection_timer__pack
                     (const StreamingProtobufs__BeamFailureDetectionTimer   *message,
                      uint8_t             *out);
size_t streaming_protobufs__beam_failure_detection_timer__pack_to_buffer
                     (const StreamingProtobufs__BeamFailureDetectionTimer   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__BeamFailureDetectionTimer *
       streaming_protobufs__beam_failure_detection_timer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__beam_failure_detection_timer__free_unpacked
                     (StreamingProtobufs__BeamFailureDetectionTimer *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__BWPDownlink methods */
void   streaming_protobufs__bwp__downlink__init
                     (StreamingProtobufs__BWPDownlink         *message);
size_t streaming_protobufs__bwp__downlink__get_packed_size
                     (const StreamingProtobufs__BWPDownlink   *message);
size_t streaming_protobufs__bwp__downlink__pack
                     (const StreamingProtobufs__BWPDownlink   *message,
                      uint8_t             *out);
size_t streaming_protobufs__bwp__downlink__pack_to_buffer
                     (const StreamingProtobufs__BWPDownlink   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__BWPDownlink *
       streaming_protobufs__bwp__downlink__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__bwp__downlink__free_unpacked
                     (StreamingProtobufs__BWPDownlink *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__BWPInactivityTimer methods */
void   streaming_protobufs__bwp__inactivity_timer__init
                     (StreamingProtobufs__BWPInactivityTimer         *message);
size_t streaming_protobufs__bwp__inactivity_timer__get_packed_size
                     (const StreamingProtobufs__BWPInactivityTimer   *message);
size_t streaming_protobufs__bwp__inactivity_timer__pack
                     (const StreamingProtobufs__BWPInactivityTimer   *message,
                      uint8_t             *out);
size_t streaming_protobufs__bwp__inactivity_timer__pack_to_buffer
                     (const StreamingProtobufs__BWPInactivityTimer   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__BWPInactivityTimer *
       streaming_protobufs__bwp__inactivity_timer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__bwp__inactivity_timer__free_unpacked
                     (StreamingProtobufs__BWPInactivityTimer *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__UplinkConfig methods */
void   streaming_protobufs__uplink_config__init
                     (StreamingProtobufs__UplinkConfig         *message);
size_t streaming_protobufs__uplink_config__get_packed_size
                     (const StreamingProtobufs__UplinkConfig   *message);
size_t streaming_protobufs__uplink_config__pack
                     (const StreamingProtobufs__UplinkConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__uplink_config__pack_to_buffer
                     (const StreamingProtobufs__UplinkConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__UplinkConfig *
       streaming_protobufs__uplink_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__uplink_config__free_unpacked
                     (StreamingProtobufs__UplinkConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__BWPUplinkDedicated methods */
void   streaming_protobufs__bwp__uplink_dedicated__init
                     (StreamingProtobufs__BWPUplinkDedicated         *message);
size_t streaming_protobufs__bwp__uplink_dedicated__get_packed_size
                     (const StreamingProtobufs__BWPUplinkDedicated   *message);
size_t streaming_protobufs__bwp__uplink_dedicated__pack
                     (const StreamingProtobufs__BWPUplinkDedicated   *message,
                      uint8_t             *out);
size_t streaming_protobufs__bwp__uplink_dedicated__pack_to_buffer
                     (const StreamingProtobufs__BWPUplinkDedicated   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__BWPUplinkDedicated *
       streaming_protobufs__bwp__uplink_dedicated__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__bwp__uplink_dedicated__free_unpacked
                     (StreamingProtobufs__BWPUplinkDedicated *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PUCCHConfig methods */
void   streaming_protobufs__pucch__config__init
                     (StreamingProtobufs__PUCCHConfig         *message);
size_t streaming_protobufs__pucch__config__get_packed_size
                     (const StreamingProtobufs__PUCCHConfig   *message);
size_t streaming_protobufs__pucch__config__pack
                     (const StreamingProtobufs__PUCCHConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pucch__config__pack_to_buffer
                     (const StreamingProtobufs__PUCCHConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PUCCHConfig *
       streaming_protobufs__pucch__config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pucch__config__free_unpacked
                     (StreamingProtobufs__PUCCHConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PUCCHResourceSet methods */
void   streaming_protobufs__pucch__resource_set__init
                     (StreamingProtobufs__PUCCHResourceSet         *message);
size_t streaming_protobufs__pucch__resource_set__get_packed_size
                     (const StreamingProtobufs__PUCCHResourceSet   *message);
size_t streaming_protobufs__pucch__resource_set__pack
                     (const StreamingProtobufs__PUCCHResourceSet   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pucch__resource_set__pack_to_buffer
                     (const StreamingProtobufs__PUCCHResourceSet   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PUCCHResourceSet *
       streaming_protobufs__pucch__resource_set__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pucch__resource_set__free_unpacked
                     (StreamingProtobufs__PUCCHResourceSet *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PUCCHResource methods */
void   streaming_protobufs__pucch__resource__init
                     (StreamingProtobufs__PUCCHResource         *message);
size_t streaming_protobufs__pucch__resource__get_packed_size
                     (const StreamingProtobufs__PUCCHResource   *message);
size_t streaming_protobufs__pucch__resource__pack
                     (const StreamingProtobufs__PUCCHResource   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pucch__resource__pack_to_buffer
                     (const StreamingProtobufs__PUCCHResource   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PUCCHResource *
       streaming_protobufs__pucch__resource__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pucch__resource__free_unpacked
                     (StreamingProtobufs__PUCCHResource *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PUCCHFormat0 methods */
void   streaming_protobufs__pucch_format0__init
                     (StreamingProtobufs__PUCCHFormat0         *message);
size_t streaming_protobufs__pucch_format0__get_packed_size
                     (const StreamingProtobufs__PUCCHFormat0   *message);
size_t streaming_protobufs__pucch_format0__pack
                     (const StreamingProtobufs__PUCCHFormat0   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pucch_format0__pack_to_buffer
                     (const StreamingProtobufs__PUCCHFormat0   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PUCCHFormat0 *
       streaming_protobufs__pucch_format0__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pucch_format0__free_unpacked
                     (StreamingProtobufs__PUCCHFormat0 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PUCCHFormat1 methods */
void   streaming_protobufs__pucch_format1__init
                     (StreamingProtobufs__PUCCHFormat1         *message);
size_t streaming_protobufs__pucch_format1__get_packed_size
                     (const StreamingProtobufs__PUCCHFormat1   *message);
size_t streaming_protobufs__pucch_format1__pack
                     (const StreamingProtobufs__PUCCHFormat1   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pucch_format1__pack_to_buffer
                     (const StreamingProtobufs__PUCCHFormat1   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PUCCHFormat1 *
       streaming_protobufs__pucch_format1__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pucch_format1__free_unpacked
                     (StreamingProtobufs__PUCCHFormat1 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PUCCHFormat2 methods */
void   streaming_protobufs__pucch_format2__init
                     (StreamingProtobufs__PUCCHFormat2         *message);
size_t streaming_protobufs__pucch_format2__get_packed_size
                     (const StreamingProtobufs__PUCCHFormat2   *message);
size_t streaming_protobufs__pucch_format2__pack
                     (const StreamingProtobufs__PUCCHFormat2   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pucch_format2__pack_to_buffer
                     (const StreamingProtobufs__PUCCHFormat2   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PUCCHFormat2 *
       streaming_protobufs__pucch_format2__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pucch_format2__free_unpacked
                     (StreamingProtobufs__PUCCHFormat2 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PUCCHFormat3 methods */
void   streaming_protobufs__pucch_format3__init
                     (StreamingProtobufs__PUCCHFormat3         *message);
size_t streaming_protobufs__pucch_format3__get_packed_size
                     (const StreamingProtobufs__PUCCHFormat3   *message);
size_t streaming_protobufs__pucch_format3__pack
                     (const StreamingProtobufs__PUCCHFormat3   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pucch_format3__pack_to_buffer
                     (const StreamingProtobufs__PUCCHFormat3   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PUCCHFormat3 *
       streaming_protobufs__pucch_format3__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pucch_format3__free_unpacked
                     (StreamingProtobufs__PUCCHFormat3 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PUCCHFormat4 methods */
void   streaming_protobufs__pucch_format4__init
                     (StreamingProtobufs__PUCCHFormat4         *message);
size_t streaming_protobufs__pucch_format4__get_packed_size
                     (const StreamingProtobufs__PUCCHFormat4   *message);
size_t streaming_protobufs__pucch_format4__pack
                     (const StreamingProtobufs__PUCCHFormat4   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pucch_format4__pack_to_buffer
                     (const StreamingProtobufs__PUCCHFormat4   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PUCCHFormat4 *
       streaming_protobufs__pucch_format4__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pucch_format4__free_unpacked
                     (StreamingProtobufs__PUCCHFormat4 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__OCCLength methods */
void   streaming_protobufs__occ__length__init
                     (StreamingProtobufs__OCCLength         *message);
size_t streaming_protobufs__occ__length__get_packed_size
                     (const StreamingProtobufs__OCCLength   *message);
size_t streaming_protobufs__occ__length__pack
                     (const StreamingProtobufs__OCCLength   *message,
                      uint8_t             *out);
size_t streaming_protobufs__occ__length__pack_to_buffer
                     (const StreamingProtobufs__OCCLength   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__OCCLength *
       streaming_protobufs__occ__length__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__occ__length__free_unpacked
                     (StreamingProtobufs__OCCLength *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__OCCIndex methods */
void   streaming_protobufs__occ__index__init
                     (StreamingProtobufs__OCCIndex         *message);
size_t streaming_protobufs__occ__index__get_packed_size
                     (const StreamingProtobufs__OCCIndex   *message);
size_t streaming_protobufs__occ__index__pack
                     (const StreamingProtobufs__OCCIndex   *message,
                      uint8_t             *out);
size_t streaming_protobufs__occ__index__pack_to_buffer
                     (const StreamingProtobufs__OCCIndex   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__OCCIndex *
       streaming_protobufs__occ__index__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__occ__index__free_unpacked
                     (StreamingProtobufs__OCCIndex *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PUCCHFormatConfig methods */
void   streaming_protobufs__pucch__format_config__init
                     (StreamingProtobufs__PUCCHFormatConfig         *message);
size_t streaming_protobufs__pucch__format_config__get_packed_size
                     (const StreamingProtobufs__PUCCHFormatConfig   *message);
size_t streaming_protobufs__pucch__format_config__pack
                     (const StreamingProtobufs__PUCCHFormatConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pucch__format_config__pack_to_buffer
                     (const StreamingProtobufs__PUCCHFormatConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PUCCHFormatConfig *
       streaming_protobufs__pucch__format_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pucch__format_config__free_unpacked
                     (StreamingProtobufs__PUCCHFormatConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PUCCHMaxCodeRate methods */
void   streaming_protobufs__pucch__max_code_rate__init
                     (StreamingProtobufs__PUCCHMaxCodeRate         *message);
size_t streaming_protobufs__pucch__max_code_rate__get_packed_size
                     (const StreamingProtobufs__PUCCHMaxCodeRate   *message);
size_t streaming_protobufs__pucch__max_code_rate__pack
                     (const StreamingProtobufs__PUCCHMaxCodeRate   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pucch__max_code_rate__pack_to_buffer
                     (const StreamingProtobufs__PUCCHMaxCodeRate   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PUCCHMaxCodeRate *
       streaming_protobufs__pucch__max_code_rate__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pucch__max_code_rate__free_unpacked
                     (StreamingProtobufs__PUCCHMaxCodeRate *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__NrofSlots methods */
void   streaming_protobufs__nrof_slots__init
                     (StreamingProtobufs__NrofSlots         *message);
size_t streaming_protobufs__nrof_slots__get_packed_size
                     (const StreamingProtobufs__NrofSlots   *message);
size_t streaming_protobufs__nrof_slots__pack
                     (const StreamingProtobufs__NrofSlots   *message,
                      uint8_t             *out);
size_t streaming_protobufs__nrof_slots__pack_to_buffer
                     (const StreamingProtobufs__NrofSlots   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__NrofSlots *
       streaming_protobufs__nrof_slots__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__nrof_slots__free_unpacked
                     (StreamingProtobufs__NrofSlots *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SchedulingRequestResourceConfig methods */
void   streaming_protobufs__scheduling_request_resource_config__init
                     (StreamingProtobufs__SchedulingRequestResourceConfig         *message);
size_t streaming_protobufs__scheduling_request_resource_config__get_packed_size
                     (const StreamingProtobufs__SchedulingRequestResourceConfig   *message);
size_t streaming_protobufs__scheduling_request_resource_config__pack
                     (const StreamingProtobufs__SchedulingRequestResourceConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__scheduling_request_resource_config__pack_to_buffer
                     (const StreamingProtobufs__SchedulingRequestResourceConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SchedulingRequestResourceConfig *
       streaming_protobufs__scheduling_request_resource_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__scheduling_request_resource_config__free_unpacked
                     (StreamingProtobufs__SchedulingRequestResourceConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PUCCHSpatialRelationInfo methods */
void   streaming_protobufs__pucch__spatial_relation_info__init
                     (StreamingProtobufs__PUCCHSpatialRelationInfo         *message);
size_t streaming_protobufs__pucch__spatial_relation_info__get_packed_size
                     (const StreamingProtobufs__PUCCHSpatialRelationInfo   *message);
size_t streaming_protobufs__pucch__spatial_relation_info__pack
                     (const StreamingProtobufs__PUCCHSpatialRelationInfo   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pucch__spatial_relation_info__pack_to_buffer
                     (const StreamingProtobufs__PUCCHSpatialRelationInfo   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PUCCHSpatialRelationInfo *
       streaming_protobufs__pucch__spatial_relation_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pucch__spatial_relation_info__free_unpacked
                     (StreamingProtobufs__PUCCHSpatialRelationInfo *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__Srs methods */
void   streaming_protobufs__srs__init
                     (StreamingProtobufs__Srs         *message);
size_t streaming_protobufs__srs__get_packed_size
                     (const StreamingProtobufs__Srs   *message);
size_t streaming_protobufs__srs__pack
                     (const StreamingProtobufs__Srs   *message,
                      uint8_t             *out);
size_t streaming_protobufs__srs__pack_to_buffer
                     (const StreamingProtobufs__Srs   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__Srs *
       streaming_protobufs__srs__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__srs__free_unpacked
                     (StreamingProtobufs__Srs *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ClosedLoopIndex methods */
void   streaming_protobufs__closed_loop_index__init
                     (StreamingProtobufs__ClosedLoopIndex         *message);
size_t streaming_protobufs__closed_loop_index__get_packed_size
                     (const StreamingProtobufs__ClosedLoopIndex   *message);
size_t streaming_protobufs__closed_loop_index__pack
                     (const StreamingProtobufs__ClosedLoopIndex   *message,
                      uint8_t             *out);
size_t streaming_protobufs__closed_loop_index__pack_to_buffer
                     (const StreamingProtobufs__ClosedLoopIndex   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ClosedLoopIndex *
       streaming_protobufs__closed_loop_index__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__closed_loop_index__free_unpacked
                     (StreamingProtobufs__ClosedLoopIndex *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PUCCHPowerControl methods */
void   streaming_protobufs__pucch__power_control__init
                     (StreamingProtobufs__PUCCHPowerControl         *message);
size_t streaming_protobufs__pucch__power_control__get_packed_size
                     (const StreamingProtobufs__PUCCHPowerControl   *message);
size_t streaming_protobufs__pucch__power_control__pack
                     (const StreamingProtobufs__PUCCHPowerControl   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pucch__power_control__pack_to_buffer
                     (const StreamingProtobufs__PUCCHPowerControl   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PUCCHPowerControl *
       streaming_protobufs__pucch__power_control__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pucch__power_control__free_unpacked
                     (StreamingProtobufs__PUCCHPowerControl *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__P0PUCCH methods */
void   streaming_protobufs__p0__pucch__init
                     (StreamingProtobufs__P0PUCCH         *message);
size_t streaming_protobufs__p0__pucch__get_packed_size
                     (const StreamingProtobufs__P0PUCCH   *message);
size_t streaming_protobufs__p0__pucch__pack
                     (const StreamingProtobufs__P0PUCCH   *message,
                      uint8_t             *out);
size_t streaming_protobufs__p0__pucch__pack_to_buffer
                     (const StreamingProtobufs__P0PUCCH   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__P0PUCCH *
       streaming_protobufs__p0__pucch__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__p0__pucch__free_unpacked
                     (StreamingProtobufs__P0PUCCH *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PUCCHPathlossReferenceRS methods */
void   streaming_protobufs__pucch__pathloss_reference_rs__init
                     (StreamingProtobufs__PUCCHPathlossReferenceRS         *message);
size_t streaming_protobufs__pucch__pathloss_reference_rs__get_packed_size
                     (const StreamingProtobufs__PUCCHPathlossReferenceRS   *message);
size_t streaming_protobufs__pucch__pathloss_reference_rs__pack
                     (const StreamingProtobufs__PUCCHPathlossReferenceRS   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pucch__pathloss_reference_rs__pack_to_buffer
                     (const StreamingProtobufs__PUCCHPathlossReferenceRS   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PUCCHPathlossReferenceRS *
       streaming_protobufs__pucch__pathloss_reference_rs__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pucch__pathloss_reference_rs__free_unpacked
                     (StreamingProtobufs__PUCCHPathlossReferenceRS *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__TwoPUCCHPCAdjustmentStates methods */
void   streaming_protobufs__two_pucch__pc__adjustment_states__init
                     (StreamingProtobufs__TwoPUCCHPCAdjustmentStates         *message);
size_t streaming_protobufs__two_pucch__pc__adjustment_states__get_packed_size
                     (const StreamingProtobufs__TwoPUCCHPCAdjustmentStates   *message);
size_t streaming_protobufs__two_pucch__pc__adjustment_states__pack
                     (const StreamingProtobufs__TwoPUCCHPCAdjustmentStates   *message,
                      uint8_t             *out);
size_t streaming_protobufs__two_pucch__pc__adjustment_states__pack_to_buffer
                     (const StreamingProtobufs__TwoPUCCHPCAdjustmentStates   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__TwoPUCCHPCAdjustmentStates *
       streaming_protobufs__two_pucch__pc__adjustment_states__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__two_pucch__pc__adjustment_states__free_unpacked
                     (StreamingProtobufs__TwoPUCCHPCAdjustmentStates *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PUSCHServingCellConfig methods */
void   streaming_protobufs__pusch__serving_cell_config__init
                     (StreamingProtobufs__PUSCHServingCellConfig         *message);
size_t streaming_protobufs__pusch__serving_cell_config__get_packed_size
                     (const StreamingProtobufs__PUSCHServingCellConfig   *message);
size_t streaming_protobufs__pusch__serving_cell_config__pack
                     (const StreamingProtobufs__PUSCHServingCellConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pusch__serving_cell_config__pack_to_buffer
                     (const StreamingProtobufs__PUSCHServingCellConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PUSCHServingCellConfig *
       streaming_protobufs__pusch__serving_cell_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pusch__serving_cell_config__free_unpacked
                     (StreamingProtobufs__PUSCHServingCellConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PUSCHCodeBlockGroupTransmission methods */
void   streaming_protobufs__pusch__code_block_group_transmission__init
                     (StreamingProtobufs__PUSCHCodeBlockGroupTransmission         *message);
size_t streaming_protobufs__pusch__code_block_group_transmission__get_packed_size
                     (const StreamingProtobufs__PUSCHCodeBlockGroupTransmission   *message);
size_t streaming_protobufs__pusch__code_block_group_transmission__pack
                     (const StreamingProtobufs__PUSCHCodeBlockGroupTransmission   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pusch__code_block_group_transmission__pack_to_buffer
                     (const StreamingProtobufs__PUSCHCodeBlockGroupTransmission   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PUSCHCodeBlockGroupTransmission *
       streaming_protobufs__pusch__code_block_group_transmission__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pusch__code_block_group_transmission__free_unpacked
                     (StreamingProtobufs__PUSCHCodeBlockGroupTransmission *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__RateMatching methods */
void   streaming_protobufs__rate_matching__init
                     (StreamingProtobufs__RateMatching         *message);
size_t streaming_protobufs__rate_matching__get_packed_size
                     (const StreamingProtobufs__RateMatching   *message);
size_t streaming_protobufs__rate_matching__pack
                     (const StreamingProtobufs__RateMatching   *message,
                      uint8_t             *out);
size_t streaming_protobufs__rate_matching__pack_to_buffer
                     (const StreamingProtobufs__RateMatching   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__RateMatching *
       streaming_protobufs__rate_matching__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__rate_matching__free_unpacked
                     (StreamingProtobufs__RateMatching *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SRSCarrierSwitching methods */
void   streaming_protobufs__srs__carrier_switching__init
                     (StreamingProtobufs__SRSCarrierSwitching         *message);
size_t streaming_protobufs__srs__carrier_switching__get_packed_size
                     (const StreamingProtobufs__SRSCarrierSwitching   *message);
size_t streaming_protobufs__srs__carrier_switching__pack
                     (const StreamingProtobufs__SRSCarrierSwitching   *message,
                      uint8_t             *out);
size_t streaming_protobufs__srs__carrier_switching__pack_to_buffer
                     (const StreamingProtobufs__SRSCarrierSwitching   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SRSCarrierSwitching *
       streaming_protobufs__srs__carrier_switching__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__srs__carrier_switching__free_unpacked
                     (StreamingProtobufs__SRSCarrierSwitching *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SRSSwitchFromCarrier methods */
void   streaming_protobufs__srs__switch_from_carrier__init
                     (StreamingProtobufs__SRSSwitchFromCarrier         *message);
size_t streaming_protobufs__srs__switch_from_carrier__get_packed_size
                     (const StreamingProtobufs__SRSSwitchFromCarrier   *message);
size_t streaming_protobufs__srs__switch_from_carrier__pack
                     (const StreamingProtobufs__SRSSwitchFromCarrier   *message,
                      uint8_t             *out);
size_t streaming_protobufs__srs__switch_from_carrier__pack_to_buffer
                     (const StreamingProtobufs__SRSSwitchFromCarrier   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SRSSwitchFromCarrier *
       streaming_protobufs__srs__switch_from_carrier__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__srs__switch_from_carrier__free_unpacked
                     (StreamingProtobufs__SRSSwitchFromCarrier *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SRSTPCPDCCHConfigList methods */
void   streaming_protobufs__srs__tpc__pdcch__config_list__init
                     (StreamingProtobufs__SRSTPCPDCCHConfigList         *message);
size_t streaming_protobufs__srs__tpc__pdcch__config_list__get_packed_size
                     (const StreamingProtobufs__SRSTPCPDCCHConfigList   *message);
size_t streaming_protobufs__srs__tpc__pdcch__config_list__pack
                     (const StreamingProtobufs__SRSTPCPDCCHConfigList   *message,
                      uint8_t             *out);
size_t streaming_protobufs__srs__tpc__pdcch__config_list__pack_to_buffer
                     (const StreamingProtobufs__SRSTPCPDCCHConfigList   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SRSTPCPDCCHConfigList *
       streaming_protobufs__srs__tpc__pdcch__config_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__srs__tpc__pdcch__config_list__free_unpacked
                     (StreamingProtobufs__SRSTPCPDCCHConfigList *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SRSTPCPDCCHConfig methods */
void   streaming_protobufs__srs__tpc__pdcch__config__init
                     (StreamingProtobufs__SRSTPCPDCCHConfig         *message);
size_t streaming_protobufs__srs__tpc__pdcch__config__get_packed_size
                     (const StreamingProtobufs__SRSTPCPDCCHConfig   *message);
size_t streaming_protobufs__srs__tpc__pdcch__config__pack
                     (const StreamingProtobufs__SRSTPCPDCCHConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__srs__tpc__pdcch__config__pack_to_buffer
                     (const StreamingProtobufs__SRSTPCPDCCHConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SRSTPCPDCCHConfig *
       streaming_protobufs__srs__tpc__pdcch__config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__srs__tpc__pdcch__config__free_unpacked
                     (StreamingProtobufs__SRSTPCPDCCHConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SRSCCSetIndex methods */
void   streaming_protobufs__srs__cc__set_index__init
                     (StreamingProtobufs__SRSCCSetIndex         *message);
size_t streaming_protobufs__srs__cc__set_index__get_packed_size
                     (const StreamingProtobufs__SRSCCSetIndex   *message);
size_t streaming_protobufs__srs__cc__set_index__pack
                     (const StreamingProtobufs__SRSCCSetIndex   *message,
                      uint8_t             *out);
size_t streaming_protobufs__srs__cc__set_index__pack_to_buffer
                     (const StreamingProtobufs__SRSCCSetIndex   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SRSCCSetIndex *
       streaming_protobufs__srs__cc__set_index__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__srs__cc__set_index__free_unpacked
                     (StreamingProtobufs__SRSCCSetIndex *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PUSCHConfig methods */
void   streaming_protobufs__pusch__config__init
                     (StreamingProtobufs__PUSCHConfig         *message);
size_t streaming_protobufs__pusch__config__get_packed_size
                     (const StreamingProtobufs__PUSCHConfig   *message);
size_t streaming_protobufs__pusch__config__pack
                     (const StreamingProtobufs__PUSCHConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pusch__config__pack_to_buffer
                     (const StreamingProtobufs__PUSCHConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PUSCHConfig *
       streaming_protobufs__pusch__config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pusch__config__free_unpacked
                     (StreamingProtobufs__PUSCHConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__TxConfig methods */
void   streaming_protobufs__tx__config__init
                     (StreamingProtobufs__TxConfig         *message);
size_t streaming_protobufs__tx__config__get_packed_size
                     (const StreamingProtobufs__TxConfig   *message);
size_t streaming_protobufs__tx__config__pack
                     (const StreamingProtobufs__TxConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__tx__config__pack_to_buffer
                     (const StreamingProtobufs__TxConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__TxConfig *
       streaming_protobufs__tx__config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__tx__config__free_unpacked
                     (StreamingProtobufs__TxConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__DMRSUplinkConfig methods */
void   streaming_protobufs__dmrs__uplink_config__init
                     (StreamingProtobufs__DMRSUplinkConfig         *message);
size_t streaming_protobufs__dmrs__uplink_config__get_packed_size
                     (const StreamingProtobufs__DMRSUplinkConfig   *message);
size_t streaming_protobufs__dmrs__uplink_config__pack
                     (const StreamingProtobufs__DMRSUplinkConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__dmrs__uplink_config__pack_to_buffer
                     (const StreamingProtobufs__DMRSUplinkConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__DMRSUplinkConfig *
       streaming_protobufs__dmrs__uplink_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__dmrs__uplink_config__free_unpacked
                     (StreamingProtobufs__DMRSUplinkConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PTRSUplinkConfig methods */
void   streaming_protobufs__ptrs__uplink_config__init
                     (StreamingProtobufs__PTRSUplinkConfig         *message);
size_t streaming_protobufs__ptrs__uplink_config__get_packed_size
                     (const StreamingProtobufs__PTRSUplinkConfig   *message);
size_t streaming_protobufs__ptrs__uplink_config__pack
                     (const StreamingProtobufs__PTRSUplinkConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__ptrs__uplink_config__pack_to_buffer
                     (const StreamingProtobufs__PTRSUplinkConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PTRSUplinkConfig *
       streaming_protobufs__ptrs__uplink_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__ptrs__uplink_config__free_unpacked
                     (StreamingProtobufs__PTRSUplinkConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__TransformPrecoderDisabled methods */
void   streaming_protobufs__transform_precoder_disabled__init
                     (StreamingProtobufs__TransformPrecoderDisabled         *message);
size_t streaming_protobufs__transform_precoder_disabled__get_packed_size
                     (const StreamingProtobufs__TransformPrecoderDisabled   *message);
size_t streaming_protobufs__transform_precoder_disabled__pack
                     (const StreamingProtobufs__TransformPrecoderDisabled   *message,
                      uint8_t             *out);
size_t streaming_protobufs__transform_precoder_disabled__pack_to_buffer
                     (const StreamingProtobufs__TransformPrecoderDisabled   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__TransformPrecoderDisabled *
       streaming_protobufs__transform_precoder_disabled__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__transform_precoder_disabled__free_unpacked
                     (StreamingProtobufs__TransformPrecoderDisabled *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MaxNrofPorts methods */
void   streaming_protobufs__max_nrof_ports__init
                     (StreamingProtobufs__MaxNrofPorts         *message);
size_t streaming_protobufs__max_nrof_ports__get_packed_size
                     (const StreamingProtobufs__MaxNrofPorts   *message);
size_t streaming_protobufs__max_nrof_ports__pack
                     (const StreamingProtobufs__MaxNrofPorts   *message,
                      uint8_t             *out);
size_t streaming_protobufs__max_nrof_ports__pack_to_buffer
                     (const StreamingProtobufs__MaxNrofPorts   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MaxNrofPorts *
       streaming_protobufs__max_nrof_ports__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__max_nrof_ports__free_unpacked
                     (StreamingProtobufs__MaxNrofPorts *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PTRSPower methods */
void   streaming_protobufs__ptrs__power__init
                     (StreamingProtobufs__PTRSPower         *message);
size_t streaming_protobufs__ptrs__power__get_packed_size
                     (const StreamingProtobufs__PTRSPower   *message);
size_t streaming_protobufs__ptrs__power__pack
                     (const StreamingProtobufs__PTRSPower   *message,
                      uint8_t             *out);
size_t streaming_protobufs__ptrs__power__pack_to_buffer
                     (const StreamingProtobufs__PTRSPower   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PTRSPower *
       streaming_protobufs__ptrs__power__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__ptrs__power__free_unpacked
                     (StreamingProtobufs__PTRSPower *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__TransformPrecoderEnabled methods */
void   streaming_protobufs__transform_precoder_enabled__init
                     (StreamingProtobufs__TransformPrecoderEnabled         *message);
size_t streaming_protobufs__transform_precoder_enabled__get_packed_size
                     (const StreamingProtobufs__TransformPrecoderEnabled   *message);
size_t streaming_protobufs__transform_precoder_enabled__pack
                     (const StreamingProtobufs__TransformPrecoderEnabled   *message,
                      uint8_t             *out);
size_t streaming_protobufs__transform_precoder_enabled__pack_to_buffer
                     (const StreamingProtobufs__TransformPrecoderEnabled   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__TransformPrecoderEnabled *
       streaming_protobufs__transform_precoder_enabled__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__transform_precoder_enabled__free_unpacked
                     (StreamingProtobufs__TransformPrecoderEnabled *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__TimeDensityTransformPrecoding methods */
void   streaming_protobufs__time_density_transform_precoding__init
                     (StreamingProtobufs__TimeDensityTransformPrecoding         *message);
size_t streaming_protobufs__time_density_transform_precoding__get_packed_size
                     (const StreamingProtobufs__TimeDensityTransformPrecoding   *message);
size_t streaming_protobufs__time_density_transform_precoding__pack
                     (const StreamingProtobufs__TimeDensityTransformPrecoding   *message,
                      uint8_t             *out);
size_t streaming_protobufs__time_density_transform_precoding__pack_to_buffer
                     (const StreamingProtobufs__TimeDensityTransformPrecoding   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__TimeDensityTransformPrecoding *
       streaming_protobufs__time_density_transform_precoding__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__time_density_transform_precoding__free_unpacked
                     (StreamingProtobufs__TimeDensityTransformPrecoding *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__TransformPrecodingDisabled methods */
void   streaming_protobufs__transform_precoding_disabled__init
                     (StreamingProtobufs__TransformPrecodingDisabled         *message);
size_t streaming_protobufs__transform_precoding_disabled__get_packed_size
                     (const StreamingProtobufs__TransformPrecodingDisabled   *message);
size_t streaming_protobufs__transform_precoding_disabled__pack
                     (const StreamingProtobufs__TransformPrecodingDisabled   *message,
                      uint8_t             *out);
size_t streaming_protobufs__transform_precoding_disabled__pack_to_buffer
                     (const StreamingProtobufs__TransformPrecodingDisabled   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__TransformPrecodingDisabled *
       streaming_protobufs__transform_precoding_disabled__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__transform_precoding_disabled__free_unpacked
                     (StreamingProtobufs__TransformPrecodingDisabled *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__TransformPrecodingEnabled methods */
void   streaming_protobufs__transform_precoding_enabled__init
                     (StreamingProtobufs__TransformPrecodingEnabled         *message);
size_t streaming_protobufs__transform_precoding_enabled__get_packed_size
                     (const StreamingProtobufs__TransformPrecodingEnabled   *message);
size_t streaming_protobufs__transform_precoding_enabled__pack
                     (const StreamingProtobufs__TransformPrecodingEnabled   *message,
                      uint8_t             *out);
size_t streaming_protobufs__transform_precoding_enabled__pack_to_buffer
                     (const StreamingProtobufs__TransformPrecodingEnabled   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__TransformPrecodingEnabled *
       streaming_protobufs__transform_precoding_enabled__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__transform_precoding_enabled__free_unpacked
                     (StreamingProtobufs__TransformPrecodingEnabled *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PUSCHPowerControl methods */
void   streaming_protobufs__pusch__power_control__init
                     (StreamingProtobufs__PUSCHPowerControl         *message);
size_t streaming_protobufs__pusch__power_control__get_packed_size
                     (const StreamingProtobufs__PUSCHPowerControl   *message);
size_t streaming_protobufs__pusch__power_control__pack
                     (const StreamingProtobufs__PUSCHPowerControl   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pusch__power_control__pack_to_buffer
                     (const StreamingProtobufs__PUSCHPowerControl   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PUSCHPowerControl *
       streaming_protobufs__pusch__power_control__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pusch__power_control__free_unpacked
                     (StreamingProtobufs__PUSCHPowerControl *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__Alpha methods */
void   streaming_protobufs__alpha__init
                     (StreamingProtobufs__Alpha         *message);
size_t streaming_protobufs__alpha__get_packed_size
                     (const StreamingProtobufs__Alpha   *message);
size_t streaming_protobufs__alpha__pack
                     (const StreamingProtobufs__Alpha   *message,
                      uint8_t             *out);
size_t streaming_protobufs__alpha__pack_to_buffer
                     (const StreamingProtobufs__Alpha   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__Alpha *
       streaming_protobufs__alpha__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__alpha__free_unpacked
                     (StreamingProtobufs__Alpha *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__P0PUSCHAlphaSet methods */
void   streaming_protobufs__p0__pusch__alpha_set__init
                     (StreamingProtobufs__P0PUSCHAlphaSet         *message);
size_t streaming_protobufs__p0__pusch__alpha_set__get_packed_size
                     (const StreamingProtobufs__P0PUSCHAlphaSet   *message);
size_t streaming_protobufs__p0__pusch__alpha_set__pack
                     (const StreamingProtobufs__P0PUSCHAlphaSet   *message,
                      uint8_t             *out);
size_t streaming_protobufs__p0__pusch__alpha_set__pack_to_buffer
                     (const StreamingProtobufs__P0PUSCHAlphaSet   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__P0PUSCHAlphaSet *
       streaming_protobufs__p0__pusch__alpha_set__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__p0__pusch__alpha_set__free_unpacked
                     (StreamingProtobufs__P0PUSCHAlphaSet *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PUSCHPathlossReferenceRS methods */
void   streaming_protobufs__pusch__pathloss_reference_rs__init
                     (StreamingProtobufs__PUSCHPathlossReferenceRS         *message);
size_t streaming_protobufs__pusch__pathloss_reference_rs__get_packed_size
                     (const StreamingProtobufs__PUSCHPathlossReferenceRS   *message);
size_t streaming_protobufs__pusch__pathloss_reference_rs__pack
                     (const StreamingProtobufs__PUSCHPathlossReferenceRS   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pusch__pathloss_reference_rs__pack_to_buffer
                     (const StreamingProtobufs__PUSCHPathlossReferenceRS   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PUSCHPathlossReferenceRS *
       streaming_protobufs__pusch__pathloss_reference_rs__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pusch__pathloss_reference_rs__free_unpacked
                     (StreamingProtobufs__PUSCHPathlossReferenceRS *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__TwoPUSCHPCAdjustmentStates methods */
void   streaming_protobufs__two_pusch__pc__adjustment_states__init
                     (StreamingProtobufs__TwoPUSCHPCAdjustmentStates         *message);
size_t streaming_protobufs__two_pusch__pc__adjustment_states__get_packed_size
                     (const StreamingProtobufs__TwoPUSCHPCAdjustmentStates   *message);
size_t streaming_protobufs__two_pusch__pc__adjustment_states__pack
                     (const StreamingProtobufs__TwoPUSCHPCAdjustmentStates   *message,
                      uint8_t             *out);
size_t streaming_protobufs__two_pusch__pc__adjustment_states__pack_to_buffer
                     (const StreamingProtobufs__TwoPUSCHPCAdjustmentStates   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__TwoPUSCHPCAdjustmentStates *
       streaming_protobufs__two_pusch__pc__adjustment_states__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__two_pusch__pc__adjustment_states__free_unpacked
                     (StreamingProtobufs__TwoPUSCHPCAdjustmentStates *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SRIPUSCHPowerControl methods */
void   streaming_protobufs__sri__pusch__power_control__init
                     (StreamingProtobufs__SRIPUSCHPowerControl         *message);
size_t streaming_protobufs__sri__pusch__power_control__get_packed_size
                     (const StreamingProtobufs__SRIPUSCHPowerControl   *message);
size_t streaming_protobufs__sri__pusch__power_control__pack
                     (const StreamingProtobufs__SRIPUSCHPowerControl   *message,
                      uint8_t             *out);
size_t streaming_protobufs__sri__pusch__power_control__pack_to_buffer
                     (const StreamingProtobufs__SRIPUSCHPowerControl   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SRIPUSCHPowerControl *
       streaming_protobufs__sri__pusch__power_control__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__sri__pusch__power_control__free_unpacked
                     (StreamingProtobufs__SRIPUSCHPowerControl *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__FrequencyHopping methods */
void   streaming_protobufs__frequency_hopping__init
                     (StreamingProtobufs__FrequencyHopping         *message);
size_t streaming_protobufs__frequency_hopping__get_packed_size
                     (const StreamingProtobufs__FrequencyHopping   *message);
size_t streaming_protobufs__frequency_hopping__pack
                     (const StreamingProtobufs__FrequencyHopping   *message,
                      uint8_t             *out);
size_t streaming_protobufs__frequency_hopping__pack_to_buffer
                     (const StreamingProtobufs__FrequencyHopping   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__FrequencyHopping *
       streaming_protobufs__frequency_hopping__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__frequency_hopping__free_unpacked
                     (StreamingProtobufs__FrequencyHopping *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PUSCHAggregationFactor methods */
void   streaming_protobufs__pusch__aggregation_factor__init
                     (StreamingProtobufs__PUSCHAggregationFactor         *message);
size_t streaming_protobufs__pusch__aggregation_factor__get_packed_size
                     (const StreamingProtobufs__PUSCHAggregationFactor   *message);
size_t streaming_protobufs__pusch__aggregation_factor__pack
                     (const StreamingProtobufs__PUSCHAggregationFactor   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pusch__aggregation_factor__pack_to_buffer
                     (const StreamingProtobufs__PUSCHAggregationFactor   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PUSCHAggregationFactor *
       streaming_protobufs__pusch__aggregation_factor__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pusch__aggregation_factor__free_unpacked
                     (StreamingProtobufs__PUSCHAggregationFactor *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CodebookSubset methods */
void   streaming_protobufs__codebook_subset__init
                     (StreamingProtobufs__CodebookSubset         *message);
size_t streaming_protobufs__codebook_subset__get_packed_size
                     (const StreamingProtobufs__CodebookSubset   *message);
size_t streaming_protobufs__codebook_subset__pack
                     (const StreamingProtobufs__CodebookSubset   *message,
                      uint8_t             *out);
size_t streaming_protobufs__codebook_subset__pack_to_buffer
                     (const StreamingProtobufs__CodebookSubset   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CodebookSubset *
       streaming_protobufs__codebook_subset__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__codebook_subset__free_unpacked
                     (StreamingProtobufs__CodebookSubset *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__RBGSize2 methods */
void   streaming_protobufs__rbg__size2__init
                     (StreamingProtobufs__RBGSize2         *message);
size_t streaming_protobufs__rbg__size2__get_packed_size
                     (const StreamingProtobufs__RBGSize2   *message);
size_t streaming_protobufs__rbg__size2__pack
                     (const StreamingProtobufs__RBGSize2   *message,
                      uint8_t             *out);
size_t streaming_protobufs__rbg__size2__pack_to_buffer
                     (const StreamingProtobufs__RBGSize2   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__RBGSize2 *
       streaming_protobufs__rbg__size2__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__rbg__size2__free_unpacked
                     (StreamingProtobufs__RBGSize2 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__UCIOnPUSCH methods */
void   streaming_protobufs__uci__on_pusch__init
                     (StreamingProtobufs__UCIOnPUSCH         *message);
size_t streaming_protobufs__uci__on_pusch__get_packed_size
                     (const StreamingProtobufs__UCIOnPUSCH   *message);
size_t streaming_protobufs__uci__on_pusch__pack
                     (const StreamingProtobufs__UCIOnPUSCH   *message,
                      uint8_t             *out);
size_t streaming_protobufs__uci__on_pusch__pack_to_buffer
                     (const StreamingProtobufs__UCIOnPUSCH   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__UCIOnPUSCH *
       streaming_protobufs__uci__on_pusch__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__uci__on_pusch__free_unpacked
                     (StreamingProtobufs__UCIOnPUSCH *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__BetaOffsetsList methods */
void   streaming_protobufs__beta_offsets_list__init
                     (StreamingProtobufs__BetaOffsetsList         *message);
size_t streaming_protobufs__beta_offsets_list__get_packed_size
                     (const StreamingProtobufs__BetaOffsetsList   *message);
size_t streaming_protobufs__beta_offsets_list__pack
                     (const StreamingProtobufs__BetaOffsetsList   *message,
                      uint8_t             *out);
size_t streaming_protobufs__beta_offsets_list__pack_to_buffer
                     (const StreamingProtobufs__BetaOffsetsList   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__BetaOffsetsList *
       streaming_protobufs__beta_offsets_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__beta_offsets_list__free_unpacked
                     (StreamingProtobufs__BetaOffsetsList *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__Scaling methods */
void   streaming_protobufs__scaling__init
                     (StreamingProtobufs__Scaling         *message);
size_t streaming_protobufs__scaling__get_packed_size
                     (const StreamingProtobufs__Scaling   *message);
size_t streaming_protobufs__scaling__pack
                     (const StreamingProtobufs__Scaling   *message,
                      uint8_t             *out);
size_t streaming_protobufs__scaling__pack_to_buffer
                     (const StreamingProtobufs__Scaling   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__Scaling *
       streaming_protobufs__scaling__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__scaling__free_unpacked
                     (StreamingProtobufs__Scaling *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ConfiguredGrantConfig methods */
void   streaming_protobufs__configured_grant_config__init
                     (StreamingProtobufs__ConfiguredGrantConfig         *message);
size_t streaming_protobufs__configured_grant_config__get_packed_size
                     (const StreamingProtobufs__ConfiguredGrantConfig   *message);
size_t streaming_protobufs__configured_grant_config__pack
                     (const StreamingProtobufs__ConfiguredGrantConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__configured_grant_config__pack_to_buffer
                     (const StreamingProtobufs__ConfiguredGrantConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ConfiguredGrantConfig *
       streaming_protobufs__configured_grant_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__configured_grant_config__free_unpacked
                     (StreamingProtobufs__ConfiguredGrantConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CGUCIOnPUSCH methods */
void   streaming_protobufs__cg__uci__on_pusch__init
                     (StreamingProtobufs__CGUCIOnPUSCH         *message);
size_t streaming_protobufs__cg__uci__on_pusch__get_packed_size
                     (const StreamingProtobufs__CGUCIOnPUSCH   *message);
size_t streaming_protobufs__cg__uci__on_pusch__pack
                     (const StreamingProtobufs__CGUCIOnPUSCH   *message,
                      uint8_t             *out);
size_t streaming_protobufs__cg__uci__on_pusch__pack_to_buffer
                     (const StreamingProtobufs__CGUCIOnPUSCH   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CGUCIOnPUSCH *
       streaming_protobufs__cg__uci__on_pusch__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__cg__uci__on_pusch__free_unpacked
                     (StreamingProtobufs__CGUCIOnPUSCH *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__BetaOffsets methods */
void   streaming_protobufs__beta_offsets__init
                     (StreamingProtobufs__BetaOffsets         *message);
size_t streaming_protobufs__beta_offsets__get_packed_size
                     (const StreamingProtobufs__BetaOffsets   *message);
size_t streaming_protobufs__beta_offsets__pack
                     (const StreamingProtobufs__BetaOffsets   *message,
                      uint8_t             *out);
size_t streaming_protobufs__beta_offsets__pack_to_buffer
                     (const StreamingProtobufs__BetaOffsets   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__BetaOffsets *
       streaming_protobufs__beta_offsets__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__beta_offsets__free_unpacked
                     (StreamingProtobufs__BetaOffsets *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PowerControlLoopToUse methods */
void   streaming_protobufs__power_control_loop_to_use__init
                     (StreamingProtobufs__PowerControlLoopToUse         *message);
size_t streaming_protobufs__power_control_loop_to_use__get_packed_size
                     (const StreamingProtobufs__PowerControlLoopToUse   *message);
size_t streaming_protobufs__power_control_loop_to_use__pack
                     (const StreamingProtobufs__PowerControlLoopToUse   *message,
                      uint8_t             *out);
size_t streaming_protobufs__power_control_loop_to_use__pack_to_buffer
                     (const StreamingProtobufs__PowerControlLoopToUse   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PowerControlLoopToUse *
       streaming_protobufs__power_control_loop_to_use__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__power_control_loop_to_use__free_unpacked
                     (StreamingProtobufs__PowerControlLoopToUse *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__RepK methods */
void   streaming_protobufs__rep_k__init
                     (StreamingProtobufs__RepK         *message);
size_t streaming_protobufs__rep_k__get_packed_size
                     (const StreamingProtobufs__RepK   *message);
size_t streaming_protobufs__rep_k__pack
                     (const StreamingProtobufs__RepK   *message,
                      uint8_t             *out);
size_t streaming_protobufs__rep_k__pack_to_buffer
                     (const StreamingProtobufs__RepK   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__RepK *
       streaming_protobufs__rep_k__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__rep_k__free_unpacked
                     (StreamingProtobufs__RepK *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__RepKRV methods */
void   streaming_protobufs__rep_k__rv__init
                     (StreamingProtobufs__RepKRV         *message);
size_t streaming_protobufs__rep_k__rv__get_packed_size
                     (const StreamingProtobufs__RepKRV   *message);
size_t streaming_protobufs__rep_k__rv__pack
                     (const StreamingProtobufs__RepKRV   *message,
                      uint8_t             *out);
size_t streaming_protobufs__rep_k__rv__pack_to_buffer
                     (const StreamingProtobufs__RepKRV   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__RepKRV *
       streaming_protobufs__rep_k__rv__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__rep_k__rv__free_unpacked
                     (StreamingProtobufs__RepKRV *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__GrantPeriodicity methods */
void   streaming_protobufs__grant_periodicity__init
                     (StreamingProtobufs__GrantPeriodicity         *message);
size_t streaming_protobufs__grant_periodicity__get_packed_size
                     (const StreamingProtobufs__GrantPeriodicity   *message);
size_t streaming_protobufs__grant_periodicity__pack
                     (const StreamingProtobufs__GrantPeriodicity   *message,
                      uint8_t             *out);
size_t streaming_protobufs__grant_periodicity__pack_to_buffer
                     (const StreamingProtobufs__GrantPeriodicity   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__GrantPeriodicity *
       streaming_protobufs__grant_periodicity__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__grant_periodicity__free_unpacked
                     (StreamingProtobufs__GrantPeriodicity *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__RRCConfiguredUplinkGrant methods */
void   streaming_protobufs__rrc__configured_uplink_grant__init
                     (StreamingProtobufs__RRCConfiguredUplinkGrant         *message);
size_t streaming_protobufs__rrc__configured_uplink_grant__get_packed_size
                     (const StreamingProtobufs__RRCConfiguredUplinkGrant   *message);
size_t streaming_protobufs__rrc__configured_uplink_grant__pack
                     (const StreamingProtobufs__RRCConfiguredUplinkGrant   *message,
                      uint8_t             *out);
size_t streaming_protobufs__rrc__configured_uplink_grant__pack_to_buffer
                     (const StreamingProtobufs__RRCConfiguredUplinkGrant   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__RRCConfiguredUplinkGrant *
       streaming_protobufs__rrc__configured_uplink_grant__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__rrc__configured_uplink_grant__free_unpacked
                     (StreamingProtobufs__RRCConfiguredUplinkGrant *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SRSConfig methods */
void   streaming_protobufs__srs__config__init
                     (StreamingProtobufs__SRSConfig         *message);
size_t streaming_protobufs__srs__config__get_packed_size
                     (const StreamingProtobufs__SRSConfig   *message);
size_t streaming_protobufs__srs__config__pack
                     (const StreamingProtobufs__SRSConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__srs__config__pack_to_buffer
                     (const StreamingProtobufs__SRSConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SRSConfig *
       streaming_protobufs__srs__config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__srs__config__free_unpacked
                     (StreamingProtobufs__SRSConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SRSResourceSet methods */
void   streaming_protobufs__srs__resource_set__init
                     (StreamingProtobufs__SRSResourceSet         *message);
size_t streaming_protobufs__srs__resource_set__get_packed_size
                     (const StreamingProtobufs__SRSResourceSet   *message);
size_t streaming_protobufs__srs__resource_set__pack
                     (const StreamingProtobufs__SRSResourceSet   *message,
                      uint8_t             *out);
size_t streaming_protobufs__srs__resource_set__pack_to_buffer
                     (const StreamingProtobufs__SRSResourceSet   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SRSResourceSet *
       streaming_protobufs__srs__resource_set__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__srs__resource_set__free_unpacked
                     (StreamingProtobufs__SRSResourceSet *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SRSResourceSetTypeAperiodic methods */
void   streaming_protobufs__srs__resource_set_type__aperiodic__init
                     (StreamingProtobufs__SRSResourceSetTypeAperiodic         *message);
size_t streaming_protobufs__srs__resource_set_type__aperiodic__get_packed_size
                     (const StreamingProtobufs__SRSResourceSetTypeAperiodic   *message);
size_t streaming_protobufs__srs__resource_set_type__aperiodic__pack
                     (const StreamingProtobufs__SRSResourceSetTypeAperiodic   *message,
                      uint8_t             *out);
size_t streaming_protobufs__srs__resource_set_type__aperiodic__pack_to_buffer
                     (const StreamingProtobufs__SRSResourceSetTypeAperiodic   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SRSResourceSetTypeAperiodic *
       streaming_protobufs__srs__resource_set_type__aperiodic__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__srs__resource_set_type__aperiodic__free_unpacked
                     (StreamingProtobufs__SRSResourceSetTypeAperiodic *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SRSResourceSetTypeSemiPersistent methods */
void   streaming_protobufs__srs__resource_set_type__semi__persistent__init
                     (StreamingProtobufs__SRSResourceSetTypeSemiPersistent         *message);
size_t streaming_protobufs__srs__resource_set_type__semi__persistent__get_packed_size
                     (const StreamingProtobufs__SRSResourceSetTypeSemiPersistent   *message);
size_t streaming_protobufs__srs__resource_set_type__semi__persistent__pack
                     (const StreamingProtobufs__SRSResourceSetTypeSemiPersistent   *message,
                      uint8_t             *out);
size_t streaming_protobufs__srs__resource_set_type__semi__persistent__pack_to_buffer
                     (const StreamingProtobufs__SRSResourceSetTypeSemiPersistent   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SRSResourceSetTypeSemiPersistent *
       streaming_protobufs__srs__resource_set_type__semi__persistent__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__srs__resource_set_type__semi__persistent__free_unpacked
                     (StreamingProtobufs__SRSResourceSetTypeSemiPersistent *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SRSResourceSetTypePeriodic methods */
void   streaming_protobufs__srs__resource_set_type__periodic__init
                     (StreamingProtobufs__SRSResourceSetTypePeriodic         *message);
size_t streaming_protobufs__srs__resource_set_type__periodic__get_packed_size
                     (const StreamingProtobufs__SRSResourceSetTypePeriodic   *message);
size_t streaming_protobufs__srs__resource_set_type__periodic__pack
                     (const StreamingProtobufs__SRSResourceSetTypePeriodic   *message,
                      uint8_t             *out);
size_t streaming_protobufs__srs__resource_set_type__periodic__pack_to_buffer
                     (const StreamingProtobufs__SRSResourceSetTypePeriodic   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SRSResourceSetTypePeriodic *
       streaming_protobufs__srs__resource_set_type__periodic__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__srs__resource_set_type__periodic__free_unpacked
                     (StreamingProtobufs__SRSResourceSetTypePeriodic *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SRSResourceSetUsage methods */
void   streaming_protobufs__srs__resource_set__usage__init
                     (StreamingProtobufs__SRSResourceSetUsage         *message);
size_t streaming_protobufs__srs__resource_set__usage__get_packed_size
                     (const StreamingProtobufs__SRSResourceSetUsage   *message);
size_t streaming_protobufs__srs__resource_set__usage__pack
                     (const StreamingProtobufs__SRSResourceSetUsage   *message,
                      uint8_t             *out);
size_t streaming_protobufs__srs__resource_set__usage__pack_to_buffer
                     (const StreamingProtobufs__SRSResourceSetUsage   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SRSResourceSetUsage *
       streaming_protobufs__srs__resource_set__usage__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__srs__resource_set__usage__free_unpacked
                     (StreamingProtobufs__SRSResourceSetUsage *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SRSPowerControlAdjustmentStates methods */
void   streaming_protobufs__srs__power_control_adjustment_states__init
                     (StreamingProtobufs__SRSPowerControlAdjustmentStates         *message);
size_t streaming_protobufs__srs__power_control_adjustment_states__get_packed_size
                     (const StreamingProtobufs__SRSPowerControlAdjustmentStates   *message);
size_t streaming_protobufs__srs__power_control_adjustment_states__pack
                     (const StreamingProtobufs__SRSPowerControlAdjustmentStates   *message,
                      uint8_t             *out);
size_t streaming_protobufs__srs__power_control_adjustment_states__pack_to_buffer
                     (const StreamingProtobufs__SRSPowerControlAdjustmentStates   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SRSPowerControlAdjustmentStates *
       streaming_protobufs__srs__power_control_adjustment_states__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__srs__power_control_adjustment_states__free_unpacked
                     (StreamingProtobufs__SRSPowerControlAdjustmentStates *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SRSResource methods */
void   streaming_protobufs__srs__resource__init
                     (StreamingProtobufs__SRSResource         *message);
size_t streaming_protobufs__srs__resource__get_packed_size
                     (const StreamingProtobufs__SRSResource   *message);
size_t streaming_protobufs__srs__resource__pack
                     (const StreamingProtobufs__SRSResource   *message,
                      uint8_t             *out);
size_t streaming_protobufs__srs__resource__pack_to_buffer
                     (const StreamingProtobufs__SRSResource   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SRSResource *
       streaming_protobufs__srs__resource__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__srs__resource__free_unpacked
                     (StreamingProtobufs__SRSResource *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__NrofSRSPorts methods */
void   streaming_protobufs__nrof_srs__ports__init
                     (StreamingProtobufs__NrofSRSPorts         *message);
size_t streaming_protobufs__nrof_srs__ports__get_packed_size
                     (const StreamingProtobufs__NrofSRSPorts   *message);
size_t streaming_protobufs__nrof_srs__ports__pack
                     (const StreamingProtobufs__NrofSRSPorts   *message,
                      uint8_t             *out);
size_t streaming_protobufs__nrof_srs__ports__pack_to_buffer
                     (const StreamingProtobufs__NrofSRSPorts   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__NrofSRSPorts *
       streaming_protobufs__nrof_srs__ports__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__nrof_srs__ports__free_unpacked
                     (StreamingProtobufs__NrofSRSPorts *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PTRSPortIndex methods */
void   streaming_protobufs__ptrs__port_index__init
                     (StreamingProtobufs__PTRSPortIndex         *message);
size_t streaming_protobufs__ptrs__port_index__get_packed_size
                     (const StreamingProtobufs__PTRSPortIndex   *message);
size_t streaming_protobufs__ptrs__port_index__pack
                     (const StreamingProtobufs__PTRSPortIndex   *message,
                      uint8_t             *out);
size_t streaming_protobufs__ptrs__port_index__pack_to_buffer
                     (const StreamingProtobufs__PTRSPortIndex   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PTRSPortIndex *
       streaming_protobufs__ptrs__port_index__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__ptrs__port_index__free_unpacked
                     (StreamingProtobufs__PTRSPortIndex *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__N2 methods */
void   streaming_protobufs__n2__init
                     (StreamingProtobufs__N2         *message);
size_t streaming_protobufs__n2__get_packed_size
                     (const StreamingProtobufs__N2   *message);
size_t streaming_protobufs__n2__pack
                     (const StreamingProtobufs__N2   *message,
                      uint8_t             *out);
size_t streaming_protobufs__n2__pack_to_buffer
                     (const StreamingProtobufs__N2   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__N2 *
       streaming_protobufs__n2__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__n2__free_unpacked
                     (StreamingProtobufs__N2 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__N4 methods */
void   streaming_protobufs__n4__init
                     (StreamingProtobufs__N4         *message);
size_t streaming_protobufs__n4__get_packed_size
                     (const StreamingProtobufs__N4   *message);
size_t streaming_protobufs__n4__pack
                     (const StreamingProtobufs__N4   *message,
                      uint8_t             *out);
size_t streaming_protobufs__n4__pack_to_buffer
                     (const StreamingProtobufs__N4   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__N4 *
       streaming_protobufs__n4__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__n4__free_unpacked
                     (StreamingProtobufs__N4 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ResourceMapping methods */
void   streaming_protobufs__resource_mapping__init
                     (StreamingProtobufs__ResourceMapping         *message);
size_t streaming_protobufs__resource_mapping__get_packed_size
                     (const StreamingProtobufs__ResourceMapping   *message);
size_t streaming_protobufs__resource_mapping__pack
                     (const StreamingProtobufs__ResourceMapping   *message,
                      uint8_t             *out);
size_t streaming_protobufs__resource_mapping__pack_to_buffer
                     (const StreamingProtobufs__ResourceMapping   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ResourceMapping *
       streaming_protobufs__resource_mapping__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__resource_mapping__free_unpacked
                     (StreamingProtobufs__ResourceMapping *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__NrofSymbols methods */
void   streaming_protobufs__nrof_symbols__init
                     (StreamingProtobufs__NrofSymbols         *message);
size_t streaming_protobufs__nrof_symbols__get_packed_size
                     (const StreamingProtobufs__NrofSymbols   *message);
size_t streaming_protobufs__nrof_symbols__pack
                     (const StreamingProtobufs__NrofSymbols   *message,
                      uint8_t             *out);
size_t streaming_protobufs__nrof_symbols__pack_to_buffer
                     (const StreamingProtobufs__NrofSymbols   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__NrofSymbols *
       streaming_protobufs__nrof_symbols__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__nrof_symbols__free_unpacked
                     (StreamingProtobufs__NrofSymbols *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__RepetitionFactor methods */
void   streaming_protobufs__repetition_factor__init
                     (StreamingProtobufs__RepetitionFactor         *message);
size_t streaming_protobufs__repetition_factor__get_packed_size
                     (const StreamingProtobufs__RepetitionFactor   *message);
size_t streaming_protobufs__repetition_factor__pack
                     (const StreamingProtobufs__RepetitionFactor   *message,
                      uint8_t             *out);
size_t streaming_protobufs__repetition_factor__pack_to_buffer
                     (const StreamingProtobufs__RepetitionFactor   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__RepetitionFactor *
       streaming_protobufs__repetition_factor__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__repetition_factor__free_unpacked
                     (StreamingProtobufs__RepetitionFactor *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__FreqHopping methods */
void   streaming_protobufs__freq_hopping__init
                     (StreamingProtobufs__FreqHopping         *message);
size_t streaming_protobufs__freq_hopping__get_packed_size
                     (const StreamingProtobufs__FreqHopping   *message);
size_t streaming_protobufs__freq_hopping__pack
                     (const StreamingProtobufs__FreqHopping   *message,
                      uint8_t             *out);
size_t streaming_protobufs__freq_hopping__pack_to_buffer
                     (const StreamingProtobufs__FreqHopping   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__FreqHopping *
       streaming_protobufs__freq_hopping__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__freq_hopping__free_unpacked
                     (StreamingProtobufs__FreqHopping *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__GroupOrSequenceHopping methods */
void   streaming_protobufs__group_or_sequence_hopping__init
                     (StreamingProtobufs__GroupOrSequenceHopping         *message);
size_t streaming_protobufs__group_or_sequence_hopping__get_packed_size
                     (const StreamingProtobufs__GroupOrSequenceHopping   *message);
size_t streaming_protobufs__group_or_sequence_hopping__pack
                     (const StreamingProtobufs__GroupOrSequenceHopping   *message,
                      uint8_t             *out);
size_t streaming_protobufs__group_or_sequence_hopping__pack_to_buffer
                     (const StreamingProtobufs__GroupOrSequenceHopping   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__GroupOrSequenceHopping *
       streaming_protobufs__group_or_sequence_hopping__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__group_or_sequence_hopping__free_unpacked
                     (StreamingProtobufs__GroupOrSequenceHopping *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SRSResourceTypeAperiodic methods */
void   streaming_protobufs__srs__resource_type__aperiodic__init
                     (StreamingProtobufs__SRSResourceTypeAperiodic         *message);
size_t streaming_protobufs__srs__resource_type__aperiodic__get_packed_size
                     (const StreamingProtobufs__SRSResourceTypeAperiodic   *message);
size_t streaming_protobufs__srs__resource_type__aperiodic__pack
                     (const StreamingProtobufs__SRSResourceTypeAperiodic   *message,
                      uint8_t             *out);
size_t streaming_protobufs__srs__resource_type__aperiodic__pack_to_buffer
                     (const StreamingProtobufs__SRSResourceTypeAperiodic   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SRSResourceTypeAperiodic *
       streaming_protobufs__srs__resource_type__aperiodic__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__srs__resource_type__aperiodic__free_unpacked
                     (StreamingProtobufs__SRSResourceTypeAperiodic *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SRSResourceTypeSemiPersistent methods */
void   streaming_protobufs__srs__resource_type__semi__persistent__init
                     (StreamingProtobufs__SRSResourceTypeSemiPersistent         *message);
size_t streaming_protobufs__srs__resource_type__semi__persistent__get_packed_size
                     (const StreamingProtobufs__SRSResourceTypeSemiPersistent   *message);
size_t streaming_protobufs__srs__resource_type__semi__persistent__pack
                     (const StreamingProtobufs__SRSResourceTypeSemiPersistent   *message,
                      uint8_t             *out);
size_t streaming_protobufs__srs__resource_type__semi__persistent__pack_to_buffer
                     (const StreamingProtobufs__SRSResourceTypeSemiPersistent   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SRSResourceTypeSemiPersistent *
       streaming_protobufs__srs__resource_type__semi__persistent__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__srs__resource_type__semi__persistent__free_unpacked
                     (StreamingProtobufs__SRSResourceTypeSemiPersistent *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SRSPeriodicityAndOffset methods */
void   streaming_protobufs__srs__periodicity_and_offset__init
                     (StreamingProtobufs__SRSPeriodicityAndOffset         *message);
size_t streaming_protobufs__srs__periodicity_and_offset__get_packed_size
                     (const StreamingProtobufs__SRSPeriodicityAndOffset   *message);
size_t streaming_protobufs__srs__periodicity_and_offset__pack
                     (const StreamingProtobufs__SRSPeriodicityAndOffset   *message,
                      uint8_t             *out);
size_t streaming_protobufs__srs__periodicity_and_offset__pack_to_buffer
                     (const StreamingProtobufs__SRSPeriodicityAndOffset   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SRSPeriodicityAndOffset *
       streaming_protobufs__srs__periodicity_and_offset__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__srs__periodicity_and_offset__free_unpacked
                     (StreamingProtobufs__SRSPeriodicityAndOffset *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SRSResourceTypePeriodic methods */
void   streaming_protobufs__srs__resource_type__periodic__init
                     (StreamingProtobufs__SRSResourceTypePeriodic         *message);
size_t streaming_protobufs__srs__resource_type__periodic__get_packed_size
                     (const StreamingProtobufs__SRSResourceTypePeriodic   *message);
size_t streaming_protobufs__srs__resource_type__periodic__pack
                     (const StreamingProtobufs__SRSResourceTypePeriodic   *message,
                      uint8_t             *out);
size_t streaming_protobufs__srs__resource_type__periodic__pack_to_buffer
                     (const StreamingProtobufs__SRSResourceTypePeriodic   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SRSResourceTypePeriodic *
       streaming_protobufs__srs__resource_type__periodic__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__srs__resource_type__periodic__free_unpacked
                     (StreamingProtobufs__SRSResourceTypePeriodic *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SRSSpatialRelationInfo methods */
void   streaming_protobufs__srs__spatial_relation_info__init
                     (StreamingProtobufs__SRSSpatialRelationInfo         *message);
size_t streaming_protobufs__srs__spatial_relation_info__get_packed_size
                     (const StreamingProtobufs__SRSSpatialRelationInfo   *message);
size_t streaming_protobufs__srs__spatial_relation_info__pack
                     (const StreamingProtobufs__SRSSpatialRelationInfo   *message,
                      uint8_t             *out);
size_t streaming_protobufs__srs__spatial_relation_info__pack_to_buffer
                     (const StreamingProtobufs__SRSSpatialRelationInfo   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SRSSpatialRelationInfo *
       streaming_protobufs__srs__spatial_relation_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__srs__spatial_relation_info__free_unpacked
                     (StreamingProtobufs__SRSSpatialRelationInfo *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__BeamFailureRecoveryConfig methods */
void   streaming_protobufs__beam_failure_recovery_config__init
                     (StreamingProtobufs__BeamFailureRecoveryConfig         *message);
size_t streaming_protobufs__beam_failure_recovery_config__get_packed_size
                     (const StreamingProtobufs__BeamFailureRecoveryConfig   *message);
size_t streaming_protobufs__beam_failure_recovery_config__pack
                     (const StreamingProtobufs__BeamFailureRecoveryConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__beam_failure_recovery_config__pack_to_buffer
                     (const StreamingProtobufs__BeamFailureRecoveryConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__BeamFailureRecoveryConfig *
       streaming_protobufs__beam_failure_recovery_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__beam_failure_recovery_config__free_unpacked
                     (StreamingProtobufs__BeamFailureRecoveryConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PRACHResourceDedicatedBFR methods */
void   streaming_protobufs__prach__resource_dedicated_bfr__init
                     (StreamingProtobufs__PRACHResourceDedicatedBFR         *message);
size_t streaming_protobufs__prach__resource_dedicated_bfr__get_packed_size
                     (const StreamingProtobufs__PRACHResourceDedicatedBFR   *message);
size_t streaming_protobufs__prach__resource_dedicated_bfr__pack
                     (const StreamingProtobufs__PRACHResourceDedicatedBFR   *message,
                      uint8_t             *out);
size_t streaming_protobufs__prach__resource_dedicated_bfr__pack_to_buffer
                     (const StreamingProtobufs__PRACHResourceDedicatedBFR   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PRACHResourceDedicatedBFR *
       streaming_protobufs__prach__resource_dedicated_bfr__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__prach__resource_dedicated_bfr__free_unpacked
                     (StreamingProtobufs__PRACHResourceDedicatedBFR *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__BFRSSBResource methods */
void   streaming_protobufs__bfr__ssb__resource__init
                     (StreamingProtobufs__BFRSSBResource         *message);
size_t streaming_protobufs__bfr__ssb__resource__get_packed_size
                     (const StreamingProtobufs__BFRSSBResource   *message);
size_t streaming_protobufs__bfr__ssb__resource__pack
                     (const StreamingProtobufs__BFRSSBResource   *message,
                      uint8_t             *out);
size_t streaming_protobufs__bfr__ssb__resource__pack_to_buffer
                     (const StreamingProtobufs__BFRSSBResource   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__BFRSSBResource *
       streaming_protobufs__bfr__ssb__resource__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__bfr__ssb__resource__free_unpacked
                     (StreamingProtobufs__BFRSSBResource *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__BFRCSIRSResource methods */
void   streaming_protobufs__bfr__csirs__resource__init
                     (StreamingProtobufs__BFRCSIRSResource         *message);
size_t streaming_protobufs__bfr__csirs__resource__get_packed_size
                     (const StreamingProtobufs__BFRCSIRSResource   *message);
size_t streaming_protobufs__bfr__csirs__resource__pack
                     (const StreamingProtobufs__BFRCSIRSResource   *message,
                      uint8_t             *out);
size_t streaming_protobufs__bfr__csirs__resource__pack_to_buffer
                     (const StreamingProtobufs__BFRCSIRSResource   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__BFRCSIRSResource *
       streaming_protobufs__bfr__csirs__resource__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__bfr__csirs__resource__free_unpacked
                     (StreamingProtobufs__BFRCSIRSResource *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SSBPerRACHOccasion methods */
void   streaming_protobufs__ssb_per_rach__occasion__init
                     (StreamingProtobufs__SSBPerRACHOccasion         *message);
size_t streaming_protobufs__ssb_per_rach__occasion__get_packed_size
                     (const StreamingProtobufs__SSBPerRACHOccasion   *message);
size_t streaming_protobufs__ssb_per_rach__occasion__pack
                     (const StreamingProtobufs__SSBPerRACHOccasion   *message,
                      uint8_t             *out);
size_t streaming_protobufs__ssb_per_rach__occasion__pack_to_buffer
                     (const StreamingProtobufs__SSBPerRACHOccasion   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SSBPerRACHOccasion *
       streaming_protobufs__ssb_per_rach__occasion__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__ssb_per_rach__occasion__free_unpacked
                     (StreamingProtobufs__SSBPerRACHOccasion *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__BeamFailureRecoveryTimer methods */
void   streaming_protobufs__beam_failure_recovery_timer__init
                     (StreamingProtobufs__BeamFailureRecoveryTimer         *message);
size_t streaming_protobufs__beam_failure_recovery_timer__get_packed_size
                     (const StreamingProtobufs__BeamFailureRecoveryTimer   *message);
size_t streaming_protobufs__beam_failure_recovery_timer__pack
                     (const StreamingProtobufs__BeamFailureRecoveryTimer   *message,
                      uint8_t             *out);
size_t streaming_protobufs__beam_failure_recovery_timer__pack_to_buffer
                     (const StreamingProtobufs__BeamFailureRecoveryTimer   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__BeamFailureRecoveryTimer *
       streaming_protobufs__beam_failure_recovery_timer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__beam_failure_recovery_timer__free_unpacked
                     (StreamingProtobufs__BeamFailureRecoveryTimer *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PDCCHServingCellConfig methods */
void   streaming_protobufs__pdcch__serving_cell_config__init
                     (StreamingProtobufs__PDCCHServingCellConfig         *message);
size_t streaming_protobufs__pdcch__serving_cell_config__get_packed_size
                     (const StreamingProtobufs__PDCCHServingCellConfig   *message);
size_t streaming_protobufs__pdcch__serving_cell_config__pack
                     (const StreamingProtobufs__PDCCHServingCellConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pdcch__serving_cell_config__pack_to_buffer
                     (const StreamingProtobufs__PDCCHServingCellConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PDCCHServingCellConfig *
       streaming_protobufs__pdcch__serving_cell_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pdcch__serving_cell_config__free_unpacked
                     (StreamingProtobufs__PDCCHServingCellConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SlotFormatIndicator methods */
void   streaming_protobufs__slot_format_indicator__init
                     (StreamingProtobufs__SlotFormatIndicator         *message);
size_t streaming_protobufs__slot_format_indicator__get_packed_size
                     (const StreamingProtobufs__SlotFormatIndicator   *message);
size_t streaming_protobufs__slot_format_indicator__pack
                     (const StreamingProtobufs__SlotFormatIndicator   *message,
                      uint8_t             *out);
size_t streaming_protobufs__slot_format_indicator__pack_to_buffer
                     (const StreamingProtobufs__SlotFormatIndicator   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SlotFormatIndicator *
       streaming_protobufs__slot_format_indicator__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__slot_format_indicator__free_unpacked
                     (StreamingProtobufs__SlotFormatIndicator *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SlotFormatCombinationsPerCell methods */
void   streaming_protobufs__slot_format_combinations_per_cell__init
                     (StreamingProtobufs__SlotFormatCombinationsPerCell         *message);
size_t streaming_protobufs__slot_format_combinations_per_cell__get_packed_size
                     (const StreamingProtobufs__SlotFormatCombinationsPerCell   *message);
size_t streaming_protobufs__slot_format_combinations_per_cell__pack
                     (const StreamingProtobufs__SlotFormatCombinationsPerCell   *message,
                      uint8_t             *out);
size_t streaming_protobufs__slot_format_combinations_per_cell__pack_to_buffer
                     (const StreamingProtobufs__SlotFormatCombinationsPerCell   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SlotFormatCombinationsPerCell *
       streaming_protobufs__slot_format_combinations_per_cell__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__slot_format_combinations_per_cell__free_unpacked
                     (StreamingProtobufs__SlotFormatCombinationsPerCell *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SlotFormatCombination methods */
void   streaming_protobufs__slot_format_combination__init
                     (StreamingProtobufs__SlotFormatCombination         *message);
size_t streaming_protobufs__slot_format_combination__get_packed_size
                     (const StreamingProtobufs__SlotFormatCombination   *message);
size_t streaming_protobufs__slot_format_combination__pack
                     (const StreamingProtobufs__SlotFormatCombination   *message,
                      uint8_t             *out);
size_t streaming_protobufs__slot_format_combination__pack_to_buffer
                     (const StreamingProtobufs__SlotFormatCombination   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SlotFormatCombination *
       streaming_protobufs__slot_format_combination__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__slot_format_combination__free_unpacked
                     (StreamingProtobufs__SlotFormatCombination *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PDSCHServingCellConfig methods */
void   streaming_protobufs__pdsch__serving_cell_config__init
                     (StreamingProtobufs__PDSCHServingCellConfig         *message);
size_t streaming_protobufs__pdsch__serving_cell_config__get_packed_size
                     (const StreamingProtobufs__PDSCHServingCellConfig   *message);
size_t streaming_protobufs__pdsch__serving_cell_config__pack
                     (const StreamingProtobufs__PDSCHServingCellConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pdsch__serving_cell_config__pack_to_buffer
                     (const StreamingProtobufs__PDSCHServingCellConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PDSCHServingCellConfig *
       streaming_protobufs__pdsch__serving_cell_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pdsch__serving_cell_config__free_unpacked
                     (StreamingProtobufs__PDSCHServingCellConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PDSCHCodeBlockGroupTransmission methods */
void   streaming_protobufs__pdsch__code_block_group_transmission__init
                     (StreamingProtobufs__PDSCHCodeBlockGroupTransmission         *message);
size_t streaming_protobufs__pdsch__code_block_group_transmission__get_packed_size
                     (const StreamingProtobufs__PDSCHCodeBlockGroupTransmission   *message);
size_t streaming_protobufs__pdsch__code_block_group_transmission__pack
                     (const StreamingProtobufs__PDSCHCodeBlockGroupTransmission   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pdsch__code_block_group_transmission__pack_to_buffer
                     (const StreamingProtobufs__PDSCHCodeBlockGroupTransmission   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PDSCHCodeBlockGroupTransmission *
       streaming_protobufs__pdsch__code_block_group_transmission__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pdsch__code_block_group_transmission__free_unpacked
                     (StreamingProtobufs__PDSCHCodeBlockGroupTransmission *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MaxCodeBlockGroupsPerTransportBlock methods */
void   streaming_protobufs__max_code_block_groups_per_transport_block__init
                     (StreamingProtobufs__MaxCodeBlockGroupsPerTransportBlock         *message);
size_t streaming_protobufs__max_code_block_groups_per_transport_block__get_packed_size
                     (const StreamingProtobufs__MaxCodeBlockGroupsPerTransportBlock   *message);
size_t streaming_protobufs__max_code_block_groups_per_transport_block__pack
                     (const StreamingProtobufs__MaxCodeBlockGroupsPerTransportBlock   *message,
                      uint8_t             *out);
size_t streaming_protobufs__max_code_block_groups_per_transport_block__pack_to_buffer
                     (const StreamingProtobufs__MaxCodeBlockGroupsPerTransportBlock   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MaxCodeBlockGroupsPerTransportBlock *
       streaming_protobufs__max_code_block_groups_per_transport_block__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__max_code_block_groups_per_transport_block__free_unpacked
                     (StreamingProtobufs__MaxCodeBlockGroupsPerTransportBlock *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__XOverhead methods */
void   streaming_protobufs__xoverhead__init
                     (StreamingProtobufs__XOverhead         *message);
size_t streaming_protobufs__xoverhead__get_packed_size
                     (const StreamingProtobufs__XOverhead   *message);
size_t streaming_protobufs__xoverhead__pack
                     (const StreamingProtobufs__XOverhead   *message,
                      uint8_t             *out);
size_t streaming_protobufs__xoverhead__pack_to_buffer
                     (const StreamingProtobufs__XOverhead   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__XOverhead *
       streaming_protobufs__xoverhead__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__xoverhead__free_unpacked
                     (StreamingProtobufs__XOverhead *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__NrofHARQProcessesForPDSCH methods */
void   streaming_protobufs__nrof_harq__processes_for_pdsch__init
                     (StreamingProtobufs__NrofHARQProcessesForPDSCH         *message);
size_t streaming_protobufs__nrof_harq__processes_for_pdsch__get_packed_size
                     (const StreamingProtobufs__NrofHARQProcessesForPDSCH   *message);
size_t streaming_protobufs__nrof_harq__processes_for_pdsch__pack
                     (const StreamingProtobufs__NrofHARQProcessesForPDSCH   *message,
                      uint8_t             *out);
size_t streaming_protobufs__nrof_harq__processes_for_pdsch__pack_to_buffer
                     (const StreamingProtobufs__NrofHARQProcessesForPDSCH   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__NrofHARQProcessesForPDSCH *
       streaming_protobufs__nrof_harq__processes_for_pdsch__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__nrof_harq__processes_for_pdsch__free_unpacked
                     (StreamingProtobufs__NrofHARQProcessesForPDSCH *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CSIMeasConfig methods */
void   streaming_protobufs__csi__meas_config__init
                     (StreamingProtobufs__CSIMeasConfig         *message);
size_t streaming_protobufs__csi__meas_config__get_packed_size
                     (const StreamingProtobufs__CSIMeasConfig   *message);
size_t streaming_protobufs__csi__meas_config__pack
                     (const StreamingProtobufs__CSIMeasConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__csi__meas_config__pack_to_buffer
                     (const StreamingProtobufs__CSIMeasConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CSIMeasConfig *
       streaming_protobufs__csi__meas_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__csi__meas_config__free_unpacked
                     (StreamingProtobufs__CSIMeasConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__NZPCSIRSResource methods */
void   streaming_protobufs__nzp__csi__rs__resource__init
                     (StreamingProtobufs__NZPCSIRSResource         *message);
size_t streaming_protobufs__nzp__csi__rs__resource__get_packed_size
                     (const StreamingProtobufs__NZPCSIRSResource   *message);
size_t streaming_protobufs__nzp__csi__rs__resource__pack
                     (const StreamingProtobufs__NZPCSIRSResource   *message,
                      uint8_t             *out);
size_t streaming_protobufs__nzp__csi__rs__resource__pack_to_buffer
                     (const StreamingProtobufs__NZPCSIRSResource   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__NZPCSIRSResource *
       streaming_protobufs__nzp__csi__rs__resource__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__nzp__csi__rs__resource__free_unpacked
                     (StreamingProtobufs__NZPCSIRSResource *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PowerControlOffsetSS methods */
void   streaming_protobufs__power_control_offset_ss__init
                     (StreamingProtobufs__PowerControlOffsetSS         *message);
size_t streaming_protobufs__power_control_offset_ss__get_packed_size
                     (const StreamingProtobufs__PowerControlOffsetSS   *message);
size_t streaming_protobufs__power_control_offset_ss__pack
                     (const StreamingProtobufs__PowerControlOffsetSS   *message,
                      uint8_t             *out);
size_t streaming_protobufs__power_control_offset_ss__pack_to_buffer
                     (const StreamingProtobufs__PowerControlOffsetSS   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PowerControlOffsetSS *
       streaming_protobufs__power_control_offset_ss__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__power_control_offset_ss__free_unpacked
                     (StreamingProtobufs__PowerControlOffsetSS *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__NZPCSIRSResourceSet methods */
void   streaming_protobufs__nzp__csi__rs__resource_set__init
                     (StreamingProtobufs__NZPCSIRSResourceSet         *message);
size_t streaming_protobufs__nzp__csi__rs__resource_set__get_packed_size
                     (const StreamingProtobufs__NZPCSIRSResourceSet   *message);
size_t streaming_protobufs__nzp__csi__rs__resource_set__pack
                     (const StreamingProtobufs__NZPCSIRSResourceSet   *message,
                      uint8_t             *out);
size_t streaming_protobufs__nzp__csi__rs__resource_set__pack_to_buffer
                     (const StreamingProtobufs__NZPCSIRSResourceSet   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__NZPCSIRSResourceSet *
       streaming_protobufs__nzp__csi__rs__resource_set__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__nzp__csi__rs__resource_set__free_unpacked
                     (StreamingProtobufs__NZPCSIRSResourceSet *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CSIIMResource methods */
void   streaming_protobufs__csi__im__resource__init
                     (StreamingProtobufs__CSIIMResource         *message);
size_t streaming_protobufs__csi__im__resource__get_packed_size
                     (const StreamingProtobufs__CSIIMResource   *message);
size_t streaming_protobufs__csi__im__resource__pack
                     (const StreamingProtobufs__CSIIMResource   *message,
                      uint8_t             *out);
size_t streaming_protobufs__csi__im__resource__pack_to_buffer
                     (const StreamingProtobufs__CSIIMResource   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CSIIMResource *
       streaming_protobufs__csi__im__resource__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__csi__im__resource__free_unpacked
                     (StreamingProtobufs__CSIIMResource *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__Pattern0 methods */
void   streaming_protobufs__pattern0__init
                     (StreamingProtobufs__Pattern0         *message);
size_t streaming_protobufs__pattern0__get_packed_size
                     (const StreamingProtobufs__Pattern0   *message);
size_t streaming_protobufs__pattern0__pack
                     (const StreamingProtobufs__Pattern0   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pattern0__pack_to_buffer
                     (const StreamingProtobufs__Pattern0   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__Pattern0 *
       streaming_protobufs__pattern0__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pattern0__free_unpacked
                     (StreamingProtobufs__Pattern0 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SubcarrierLocationP0 methods */
void   streaming_protobufs__subcarrier_location_p0__init
                     (StreamingProtobufs__SubcarrierLocationP0         *message);
size_t streaming_protobufs__subcarrier_location_p0__get_packed_size
                     (const StreamingProtobufs__SubcarrierLocationP0   *message);
size_t streaming_protobufs__subcarrier_location_p0__pack
                     (const StreamingProtobufs__SubcarrierLocationP0   *message,
                      uint8_t             *out);
size_t streaming_protobufs__subcarrier_location_p0__pack_to_buffer
                     (const StreamingProtobufs__SubcarrierLocationP0   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SubcarrierLocationP0 *
       streaming_protobufs__subcarrier_location_p0__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__subcarrier_location_p0__free_unpacked
                     (StreamingProtobufs__SubcarrierLocationP0 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__Pattern1 methods */
void   streaming_protobufs__pattern1__init
                     (StreamingProtobufs__Pattern1         *message);
size_t streaming_protobufs__pattern1__get_packed_size
                     (const StreamingProtobufs__Pattern1   *message);
size_t streaming_protobufs__pattern1__pack
                     (const StreamingProtobufs__Pattern1   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pattern1__pack_to_buffer
                     (const StreamingProtobufs__Pattern1   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__Pattern1 *
       streaming_protobufs__pattern1__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pattern1__free_unpacked
                     (StreamingProtobufs__Pattern1 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SubcarrierLocationP1 methods */
void   streaming_protobufs__subcarrier_location_p1__init
                     (StreamingProtobufs__SubcarrierLocationP1         *message);
size_t streaming_protobufs__subcarrier_location_p1__get_packed_size
                     (const StreamingProtobufs__SubcarrierLocationP1   *message);
size_t streaming_protobufs__subcarrier_location_p1__pack
                     (const StreamingProtobufs__SubcarrierLocationP1   *message,
                      uint8_t             *out);
size_t streaming_protobufs__subcarrier_location_p1__pack_to_buffer
                     (const StreamingProtobufs__SubcarrierLocationP1   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SubcarrierLocationP1 *
       streaming_protobufs__subcarrier_location_p1__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__subcarrier_location_p1__free_unpacked
                     (StreamingProtobufs__SubcarrierLocationP1 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CSIIMResourceSet methods */
void   streaming_protobufs__csi__im__resource_set__init
                     (StreamingProtobufs__CSIIMResourceSet         *message);
size_t streaming_protobufs__csi__im__resource_set__get_packed_size
                     (const StreamingProtobufs__CSIIMResourceSet   *message);
size_t streaming_protobufs__csi__im__resource_set__pack
                     (const StreamingProtobufs__CSIIMResourceSet   *message,
                      uint8_t             *out);
size_t streaming_protobufs__csi__im__resource_set__pack_to_buffer
                     (const StreamingProtobufs__CSIIMResourceSet   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CSIIMResourceSet *
       streaming_protobufs__csi__im__resource_set__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__csi__im__resource_set__free_unpacked
                     (StreamingProtobufs__CSIIMResourceSet *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CSISSBResourceSet methods */
void   streaming_protobufs__csi__ssb__resource_set__init
                     (StreamingProtobufs__CSISSBResourceSet         *message);
size_t streaming_protobufs__csi__ssb__resource_set__get_packed_size
                     (const StreamingProtobufs__CSISSBResourceSet   *message);
size_t streaming_protobufs__csi__ssb__resource_set__pack
                     (const StreamingProtobufs__CSISSBResourceSet   *message,
                      uint8_t             *out);
size_t streaming_protobufs__csi__ssb__resource_set__pack_to_buffer
                     (const StreamingProtobufs__CSISSBResourceSet   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CSISSBResourceSet *
       streaming_protobufs__csi__ssb__resource_set__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__csi__ssb__resource_set__free_unpacked
                     (StreamingProtobufs__CSISSBResourceSet *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CSIResourceConfig methods */
void   streaming_protobufs__csi__resource_config__init
                     (StreamingProtobufs__CSIResourceConfig         *message);
size_t streaming_protobufs__csi__resource_config__get_packed_size
                     (const StreamingProtobufs__CSIResourceConfig   *message);
size_t streaming_protobufs__csi__resource_config__pack
                     (const StreamingProtobufs__CSIResourceConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__csi__resource_config__pack_to_buffer
                     (const StreamingProtobufs__CSIResourceConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CSIResourceConfig *
       streaming_protobufs__csi__resource_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__csi__resource_config__free_unpacked
                     (StreamingProtobufs__CSIResourceConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__NZPCSIRSSSB methods */
void   streaming_protobufs__nzp__csi__rs__ssb__init
                     (StreamingProtobufs__NZPCSIRSSSB         *message);
size_t streaming_protobufs__nzp__csi__rs__ssb__get_packed_size
                     (const StreamingProtobufs__NZPCSIRSSSB   *message);
size_t streaming_protobufs__nzp__csi__rs__ssb__pack
                     (const StreamingProtobufs__NZPCSIRSSSB   *message,
                      uint8_t             *out);
size_t streaming_protobufs__nzp__csi__rs__ssb__pack_to_buffer
                     (const StreamingProtobufs__NZPCSIRSSSB   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__NZPCSIRSSSB *
       streaming_protobufs__nzp__csi__rs__ssb__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__nzp__csi__rs__ssb__free_unpacked
                     (StreamingProtobufs__NZPCSIRSSSB *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CSIIMResourceSetList methods */
void   streaming_protobufs__csi__im__resource_set_list__init
                     (StreamingProtobufs__CSIIMResourceSetList         *message);
size_t streaming_protobufs__csi__im__resource_set_list__get_packed_size
                     (const StreamingProtobufs__CSIIMResourceSetList   *message);
size_t streaming_protobufs__csi__im__resource_set_list__pack
                     (const StreamingProtobufs__CSIIMResourceSetList   *message,
                      uint8_t             *out);
size_t streaming_protobufs__csi__im__resource_set_list__pack_to_buffer
                     (const StreamingProtobufs__CSIIMResourceSetList   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CSIIMResourceSetList *
       streaming_protobufs__csi__im__resource_set_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__csi__im__resource_set_list__free_unpacked
                     (StreamingProtobufs__CSIIMResourceSetList *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ResourceType methods */
void   streaming_protobufs__resource_type__init
                     (StreamingProtobufs__ResourceType         *message);
size_t streaming_protobufs__resource_type__get_packed_size
                     (const StreamingProtobufs__ResourceType   *message);
size_t streaming_protobufs__resource_type__pack
                     (const StreamingProtobufs__ResourceType   *message,
                      uint8_t             *out);
size_t streaming_protobufs__resource_type__pack_to_buffer
                     (const StreamingProtobufs__ResourceType   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ResourceType *
       streaming_protobufs__resource_type__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__resource_type__free_unpacked
                     (StreamingProtobufs__ResourceType *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CSIReportConfig methods */
void   streaming_protobufs__csi__report_config__init
                     (StreamingProtobufs__CSIReportConfig         *message);
size_t streaming_protobufs__csi__report_config__get_packed_size
                     (const StreamingProtobufs__CSIReportConfig   *message);
size_t streaming_protobufs__csi__report_config__pack
                     (const StreamingProtobufs__CSIReportConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__csi__report_config__pack_to_buffer
                     (const StreamingProtobufs__CSIReportConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CSIReportConfig *
       streaming_protobufs__csi__report_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__csi__report_config__free_unpacked
                     (StreamingProtobufs__CSIReportConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CSIReportConfigTypePeriodic methods */
void   streaming_protobufs__csi__report_config_type__periodic__init
                     (StreamingProtobufs__CSIReportConfigTypePeriodic         *message);
size_t streaming_protobufs__csi__report_config_type__periodic__get_packed_size
                     (const StreamingProtobufs__CSIReportConfigTypePeriodic   *message);
size_t streaming_protobufs__csi__report_config_type__periodic__pack
                     (const StreamingProtobufs__CSIReportConfigTypePeriodic   *message,
                      uint8_t             *out);
size_t streaming_protobufs__csi__report_config_type__periodic__pack_to_buffer
                     (const StreamingProtobufs__CSIReportConfigTypePeriodic   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CSIReportConfigTypePeriodic *
       streaming_protobufs__csi__report_config_type__periodic__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__csi__report_config_type__periodic__free_unpacked
                     (StreamingProtobufs__CSIReportConfigTypePeriodic *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CSIReportPeriodicityAndOffset methods */
void   streaming_protobufs__csi__report_periodicity_and_offset__init
                     (StreamingProtobufs__CSIReportPeriodicityAndOffset         *message);
size_t streaming_protobufs__csi__report_periodicity_and_offset__get_packed_size
                     (const StreamingProtobufs__CSIReportPeriodicityAndOffset   *message);
size_t streaming_protobufs__csi__report_periodicity_and_offset__pack
                     (const StreamingProtobufs__CSIReportPeriodicityAndOffset   *message,
                      uint8_t             *out);
size_t streaming_protobufs__csi__report_periodicity_and_offset__pack_to_buffer
                     (const StreamingProtobufs__CSIReportPeriodicityAndOffset   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CSIReportPeriodicityAndOffset *
       streaming_protobufs__csi__report_periodicity_and_offset__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__csi__report_periodicity_and_offset__free_unpacked
                     (StreamingProtobufs__CSIReportPeriodicityAndOffset *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PUCCHCSIResource methods */
void   streaming_protobufs__pucch__csi__resource__init
                     (StreamingProtobufs__PUCCHCSIResource         *message);
size_t streaming_protobufs__pucch__csi__resource__get_packed_size
                     (const StreamingProtobufs__PUCCHCSIResource   *message);
size_t streaming_protobufs__pucch__csi__resource__pack
                     (const StreamingProtobufs__PUCCHCSIResource   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pucch__csi__resource__pack_to_buffer
                     (const StreamingProtobufs__PUCCHCSIResource   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PUCCHCSIResource *
       streaming_protobufs__pucch__csi__resource__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pucch__csi__resource__free_unpacked
                     (StreamingProtobufs__PUCCHCSIResource *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CSIReportConfigTypeSemiPersistentOnPUCCH methods */
void   streaming_protobufs__csi__report_config_type__semi_persistent_on_pucch__init
                     (StreamingProtobufs__CSIReportConfigTypeSemiPersistentOnPUCCH         *message);
size_t streaming_protobufs__csi__report_config_type__semi_persistent_on_pucch__get_packed_size
                     (const StreamingProtobufs__CSIReportConfigTypeSemiPersistentOnPUCCH   *message);
size_t streaming_protobufs__csi__report_config_type__semi_persistent_on_pucch__pack
                     (const StreamingProtobufs__CSIReportConfigTypeSemiPersistentOnPUCCH   *message,
                      uint8_t             *out);
size_t streaming_protobufs__csi__report_config_type__semi_persistent_on_pucch__pack_to_buffer
                     (const StreamingProtobufs__CSIReportConfigTypeSemiPersistentOnPUCCH   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CSIReportConfigTypeSemiPersistentOnPUCCH *
       streaming_protobufs__csi__report_config_type__semi_persistent_on_pucch__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__csi__report_config_type__semi_persistent_on_pucch__free_unpacked
                     (StreamingProtobufs__CSIReportConfigTypeSemiPersistentOnPUCCH *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CSIReportConfigTypeSemiPersistentOnPUSCH methods */
void   streaming_protobufs__csi__report_config_type__semi_persistent_on_pusch__init
                     (StreamingProtobufs__CSIReportConfigTypeSemiPersistentOnPUSCH         *message);
size_t streaming_protobufs__csi__report_config_type__semi_persistent_on_pusch__get_packed_size
                     (const StreamingProtobufs__CSIReportConfigTypeSemiPersistentOnPUSCH   *message);
size_t streaming_protobufs__csi__report_config_type__semi_persistent_on_pusch__pack
                     (const StreamingProtobufs__CSIReportConfigTypeSemiPersistentOnPUSCH   *message,
                      uint8_t             *out);
size_t streaming_protobufs__csi__report_config_type__semi_persistent_on_pusch__pack_to_buffer
                     (const StreamingProtobufs__CSIReportConfigTypeSemiPersistentOnPUSCH   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CSIReportConfigTypeSemiPersistentOnPUSCH *
       streaming_protobufs__csi__report_config_type__semi_persistent_on_pusch__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__csi__report_config_type__semi_persistent_on_pusch__free_unpacked
                     (StreamingProtobufs__CSIReportConfigTypeSemiPersistentOnPUSCH *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ReportSlotConfig methods */
void   streaming_protobufs__report_slot_config__init
                     (StreamingProtobufs__ReportSlotConfig         *message);
size_t streaming_protobufs__report_slot_config__get_packed_size
                     (const StreamingProtobufs__ReportSlotConfig   *message);
size_t streaming_protobufs__report_slot_config__pack
                     (const StreamingProtobufs__ReportSlotConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__report_slot_config__pack_to_buffer
                     (const StreamingProtobufs__ReportSlotConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ReportSlotConfig *
       streaming_protobufs__report_slot_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__report_slot_config__free_unpacked
                     (StreamingProtobufs__ReportSlotConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CSIReportConfigTypeAperiodic methods */
void   streaming_protobufs__csi__report_config_type__aperiodic__init
                     (StreamingProtobufs__CSIReportConfigTypeAperiodic         *message);
size_t streaming_protobufs__csi__report_config_type__aperiodic__get_packed_size
                     (const StreamingProtobufs__CSIReportConfigTypeAperiodic   *message);
size_t streaming_protobufs__csi__report_config_type__aperiodic__pack
                     (const StreamingProtobufs__CSIReportConfigTypeAperiodic   *message,
                      uint8_t             *out);
size_t streaming_protobufs__csi__report_config_type__aperiodic__pack_to_buffer
                     (const StreamingProtobufs__CSIReportConfigTypeAperiodic   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CSIReportConfigTypeAperiodic *
       streaming_protobufs__csi__report_config_type__aperiodic__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__csi__report_config_type__aperiodic__free_unpacked
                     (StreamingProtobufs__CSIReportConfigTypeAperiodic *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CRIRII1CQI methods */
void   streaming_protobufs__cri__ri_i1__cqi__init
                     (StreamingProtobufs__CRIRII1CQI         *message);
size_t streaming_protobufs__cri__ri_i1__cqi__get_packed_size
                     (const StreamingProtobufs__CRIRII1CQI   *message);
size_t streaming_protobufs__cri__ri_i1__cqi__pack
                     (const StreamingProtobufs__CRIRII1CQI   *message,
                      uint8_t             *out);
size_t streaming_protobufs__cri__ri_i1__cqi__pack_to_buffer
                     (const StreamingProtobufs__CRIRII1CQI   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CRIRII1CQI *
       streaming_protobufs__cri__ri_i1__cqi__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__cri__ri_i1__cqi__free_unpacked
                     (StreamingProtobufs__CRIRII1CQI *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ReportFreqConfiguration methods */
void   streaming_protobufs__report_freq_configuration__init
                     (StreamingProtobufs__ReportFreqConfiguration         *message);
size_t streaming_protobufs__report_freq_configuration__get_packed_size
                     (const StreamingProtobufs__ReportFreqConfiguration   *message);
size_t streaming_protobufs__report_freq_configuration__pack
                     (const StreamingProtobufs__ReportFreqConfiguration   *message,
                      uint8_t             *out);
size_t streaming_protobufs__report_freq_configuration__pack_to_buffer
                     (const StreamingProtobufs__ReportFreqConfiguration   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ReportFreqConfiguration *
       streaming_protobufs__report_freq_configuration__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__report_freq_configuration__free_unpacked
                     (StreamingProtobufs__ReportFreqConfiguration *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CQIFormatIndicator methods */
void   streaming_protobufs__cqi__format_indicator__init
                     (StreamingProtobufs__CQIFormatIndicator         *message);
size_t streaming_protobufs__cqi__format_indicator__get_packed_size
                     (const StreamingProtobufs__CQIFormatIndicator   *message);
size_t streaming_protobufs__cqi__format_indicator__pack
                     (const StreamingProtobufs__CQIFormatIndicator   *message,
                      uint8_t             *out);
size_t streaming_protobufs__cqi__format_indicator__pack_to_buffer
                     (const StreamingProtobufs__CQIFormatIndicator   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CQIFormatIndicator *
       streaming_protobufs__cqi__format_indicator__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__cqi__format_indicator__free_unpacked
                     (StreamingProtobufs__CQIFormatIndicator *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PMIFormatIndicator methods */
void   streaming_protobufs__pmi__format_indicator__init
                     (StreamingProtobufs__PMIFormatIndicator         *message);
size_t streaming_protobufs__pmi__format_indicator__get_packed_size
                     (const StreamingProtobufs__PMIFormatIndicator   *message);
size_t streaming_protobufs__pmi__format_indicator__pack
                     (const StreamingProtobufs__PMIFormatIndicator   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pmi__format_indicator__pack_to_buffer
                     (const StreamingProtobufs__PMIFormatIndicator   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PMIFormatIndicator *
       streaming_protobufs__pmi__format_indicator__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pmi__format_indicator__free_unpacked
                     (StreamingProtobufs__PMIFormatIndicator *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CodebookConfig methods */
void   streaming_protobufs__codebook_config__init
                     (StreamingProtobufs__CodebookConfig         *message);
size_t streaming_protobufs__codebook_config__get_packed_size
                     (const StreamingProtobufs__CodebookConfig   *message);
size_t streaming_protobufs__codebook_config__pack
                     (const StreamingProtobufs__CodebookConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__codebook_config__pack_to_buffer
                     (const StreamingProtobufs__CodebookConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CodebookConfig *
       streaming_protobufs__codebook_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__codebook_config__free_unpacked
                     (StreamingProtobufs__CodebookConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CodebookTypeType1 methods */
void   streaming_protobufs__codebook_type__type1__init
                     (StreamingProtobufs__CodebookTypeType1         *message);
size_t streaming_protobufs__codebook_type__type1__get_packed_size
                     (const StreamingProtobufs__CodebookTypeType1   *message);
size_t streaming_protobufs__codebook_type__type1__pack
                     (const StreamingProtobufs__CodebookTypeType1   *message,
                      uint8_t             *out);
size_t streaming_protobufs__codebook_type__type1__pack_to_buffer
                     (const StreamingProtobufs__CodebookTypeType1   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CodebookTypeType1 *
       streaming_protobufs__codebook_type__type1__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__codebook_type__type1__free_unpacked
                     (StreamingProtobufs__CodebookTypeType1 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CodebookSubTypeSinglePanel methods */
void   streaming_protobufs__codebook_sub_type__single_panel__init
                     (StreamingProtobufs__CodebookSubTypeSinglePanel         *message);
size_t streaming_protobufs__codebook_sub_type__single_panel__get_packed_size
                     (const StreamingProtobufs__CodebookSubTypeSinglePanel   *message);
size_t streaming_protobufs__codebook_sub_type__single_panel__pack
                     (const StreamingProtobufs__CodebookSubTypeSinglePanel   *message,
                      uint8_t             *out);
size_t streaming_protobufs__codebook_sub_type__single_panel__pack_to_buffer
                     (const StreamingProtobufs__CodebookSubTypeSinglePanel   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CodebookSubTypeSinglePanel *
       streaming_protobufs__codebook_sub_type__single_panel__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__codebook_sub_type__single_panel__free_unpacked
                     (StreamingProtobufs__CodebookSubTypeSinglePanel *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CodebookNrOfAntennaPortsTwo methods */
void   streaming_protobufs__codebook_nr_of_antenna_ports__two__init
                     (StreamingProtobufs__CodebookNrOfAntennaPortsTwo         *message);
size_t streaming_protobufs__codebook_nr_of_antenna_ports__two__get_packed_size
                     (const StreamingProtobufs__CodebookNrOfAntennaPortsTwo   *message);
size_t streaming_protobufs__codebook_nr_of_antenna_ports__two__pack
                     (const StreamingProtobufs__CodebookNrOfAntennaPortsTwo   *message,
                      uint8_t             *out);
size_t streaming_protobufs__codebook_nr_of_antenna_ports__two__pack_to_buffer
                     (const StreamingProtobufs__CodebookNrOfAntennaPortsTwo   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CodebookNrOfAntennaPortsTwo *
       streaming_protobufs__codebook_nr_of_antenna_ports__two__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__codebook_nr_of_antenna_ports__two__free_unpacked
                     (StreamingProtobufs__CodebookNrOfAntennaPortsTwo *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CodebookNrOfAntennaPortsMoreThanTwo methods */
void   streaming_protobufs__codebook_nr_of_antenna_ports__more_than_two__init
                     (StreamingProtobufs__CodebookNrOfAntennaPortsMoreThanTwo         *message);
size_t streaming_protobufs__codebook_nr_of_antenna_ports__more_than_two__get_packed_size
                     (const StreamingProtobufs__CodebookNrOfAntennaPortsMoreThanTwo   *message);
size_t streaming_protobufs__codebook_nr_of_antenna_ports__more_than_two__pack
                     (const StreamingProtobufs__CodebookNrOfAntennaPortsMoreThanTwo   *message,
                      uint8_t             *out);
size_t streaming_protobufs__codebook_nr_of_antenna_ports__more_than_two__pack_to_buffer
                     (const StreamingProtobufs__CodebookNrOfAntennaPortsMoreThanTwo   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CodebookNrOfAntennaPortsMoreThanTwo *
       streaming_protobufs__codebook_nr_of_antenna_ports__more_than_two__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__codebook_nr_of_antenna_ports__more_than_two__free_unpacked
                     (StreamingProtobufs__CodebookNrOfAntennaPortsMoreThanTwo *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CodebookSubTypeMultiPanel methods */
void   streaming_protobufs__codebook_sub_type__multi_panel__init
                     (StreamingProtobufs__CodebookSubTypeMultiPanel         *message);
size_t streaming_protobufs__codebook_sub_type__multi_panel__get_packed_size
                     (const StreamingProtobufs__CodebookSubTypeMultiPanel   *message);
size_t streaming_protobufs__codebook_sub_type__multi_panel__pack
                     (const StreamingProtobufs__CodebookSubTypeMultiPanel   *message,
                      uint8_t             *out);
size_t streaming_protobufs__codebook_sub_type__multi_panel__pack_to_buffer
                     (const StreamingProtobufs__CodebookSubTypeMultiPanel   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CodebookSubTypeMultiPanel *
       streaming_protobufs__codebook_sub_type__multi_panel__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__codebook_sub_type__multi_panel__free_unpacked
                     (StreamingProtobufs__CodebookSubTypeMultiPanel *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CodebookTypeType2 methods */
void   streaming_protobufs__codebook_type__type2__init
                     (StreamingProtobufs__CodebookTypeType2         *message);
size_t streaming_protobufs__codebook_type__type2__get_packed_size
                     (const StreamingProtobufs__CodebookTypeType2   *message);
size_t streaming_protobufs__codebook_type__type2__pack
                     (const StreamingProtobufs__CodebookTypeType2   *message,
                      uint8_t             *out);
size_t streaming_protobufs__codebook_type__type2__pack_to_buffer
                     (const StreamingProtobufs__CodebookTypeType2   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CodebookTypeType2 *
       streaming_protobufs__codebook_type__type2__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__codebook_type__type2__free_unpacked
                     (StreamingProtobufs__CodebookTypeType2 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CodebookSubTypeTypeII methods */
void   streaming_protobufs__codebook_sub_type__type_ii__init
                     (StreamingProtobufs__CodebookSubTypeTypeII         *message);
size_t streaming_protobufs__codebook_sub_type__type_ii__get_packed_size
                     (const StreamingProtobufs__CodebookSubTypeTypeII   *message);
size_t streaming_protobufs__codebook_sub_type__type_ii__pack
                     (const StreamingProtobufs__CodebookSubTypeTypeII   *message,
                      uint8_t             *out);
size_t streaming_protobufs__codebook_sub_type__type_ii__pack_to_buffer
                     (const StreamingProtobufs__CodebookSubTypeTypeII   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CodebookSubTypeTypeII *
       streaming_protobufs__codebook_sub_type__type_ii__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__codebook_sub_type__type_ii__free_unpacked
                     (StreamingProtobufs__CodebookSubTypeTypeII *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CodebookSubTypeTypeIIPortSelection methods */
void   streaming_protobufs__codebook_sub_type__type_ii__port_selection__init
                     (StreamingProtobufs__CodebookSubTypeTypeIIPortSelection         *message);
size_t streaming_protobufs__codebook_sub_type__type_ii__port_selection__get_packed_size
                     (const StreamingProtobufs__CodebookSubTypeTypeIIPortSelection   *message);
size_t streaming_protobufs__codebook_sub_type__type_ii__port_selection__pack
                     (const StreamingProtobufs__CodebookSubTypeTypeIIPortSelection   *message,
                      uint8_t             *out);
size_t streaming_protobufs__codebook_sub_type__type_ii__port_selection__pack_to_buffer
                     (const StreamingProtobufs__CodebookSubTypeTypeIIPortSelection   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CodebookSubTypeTypeIIPortSelection *
       streaming_protobufs__codebook_sub_type__type_ii__port_selection__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__codebook_sub_type__type_ii__port_selection__free_unpacked
                     (StreamingProtobufs__CodebookSubTypeTypeIIPortSelection *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PhaseAlphabetSize methods */
void   streaming_protobufs__phase_alphabet_size__init
                     (StreamingProtobufs__PhaseAlphabetSize         *message);
size_t streaming_protobufs__phase_alphabet_size__get_packed_size
                     (const StreamingProtobufs__PhaseAlphabetSize   *message);
size_t streaming_protobufs__phase_alphabet_size__pack
                     (const StreamingProtobufs__PhaseAlphabetSize   *message,
                      uint8_t             *out);
size_t streaming_protobufs__phase_alphabet_size__pack_to_buffer
                     (const StreamingProtobufs__PhaseAlphabetSize   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PhaseAlphabetSize *
       streaming_protobufs__phase_alphabet_size__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__phase_alphabet_size__free_unpacked
                     (StreamingProtobufs__PhaseAlphabetSize *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__NumberOfBeams methods */
void   streaming_protobufs__number_of_beams__init
                     (StreamingProtobufs__NumberOfBeams         *message);
size_t streaming_protobufs__number_of_beams__get_packed_size
                     (const StreamingProtobufs__NumberOfBeams   *message);
size_t streaming_protobufs__number_of_beams__pack
                     (const StreamingProtobufs__NumberOfBeams   *message,
                      uint8_t             *out);
size_t streaming_protobufs__number_of_beams__pack_to_buffer
                     (const StreamingProtobufs__NumberOfBeams   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__NumberOfBeams *
       streaming_protobufs__number_of_beams__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__number_of_beams__free_unpacked
                     (StreamingProtobufs__NumberOfBeams *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PortSelectionSamplingSize methods */
void   streaming_protobufs__port_selection_sampling_size__init
                     (StreamingProtobufs__PortSelectionSamplingSize         *message);
size_t streaming_protobufs__port_selection_sampling_size__get_packed_size
                     (const StreamingProtobufs__PortSelectionSamplingSize   *message);
size_t streaming_protobufs__port_selection_sampling_size__pack
                     (const StreamingProtobufs__PortSelectionSamplingSize   *message,
                      uint8_t             *out);
size_t streaming_protobufs__port_selection_sampling_size__pack_to_buffer
                     (const StreamingProtobufs__PortSelectionSamplingSize   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PortSelectionSamplingSize *
       streaming_protobufs__port_selection_sampling_size__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__port_selection_sampling_size__free_unpacked
                     (StreamingProtobufs__PortSelectionSamplingSize *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CSIReportConfigDummy methods */
void   streaming_protobufs__csi__report_config_dummy__init
                     (StreamingProtobufs__CSIReportConfigDummy         *message);
size_t streaming_protobufs__csi__report_config_dummy__get_packed_size
                     (const StreamingProtobufs__CSIReportConfigDummy   *message);
size_t streaming_protobufs__csi__report_config_dummy__pack
                     (const StreamingProtobufs__CSIReportConfigDummy   *message,
                      uint8_t             *out);
size_t streaming_protobufs__csi__report_config_dummy__pack_to_buffer
                     (const StreamingProtobufs__CSIReportConfigDummy   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CSIReportConfigDummy *
       streaming_protobufs__csi__report_config_dummy__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__csi__report_config_dummy__free_unpacked
                     (StreamingProtobufs__CSIReportConfigDummy *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__GroupBasedBeamReportingDisabled methods */
void   streaming_protobufs__group_based_beam_reporting__disabled__init
                     (StreamingProtobufs__GroupBasedBeamReportingDisabled         *message);
size_t streaming_protobufs__group_based_beam_reporting__disabled__get_packed_size
                     (const StreamingProtobufs__GroupBasedBeamReportingDisabled   *message);
size_t streaming_protobufs__group_based_beam_reporting__disabled__pack
                     (const StreamingProtobufs__GroupBasedBeamReportingDisabled   *message,
                      uint8_t             *out);
size_t streaming_protobufs__group_based_beam_reporting__disabled__pack_to_buffer
                     (const StreamingProtobufs__GroupBasedBeamReportingDisabled   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__GroupBasedBeamReportingDisabled *
       streaming_protobufs__group_based_beam_reporting__disabled__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__group_based_beam_reporting__disabled__free_unpacked
                     (StreamingProtobufs__GroupBasedBeamReportingDisabled *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__NrofReportedRS methods */
void   streaming_protobufs__nrof_reported_rs__init
                     (StreamingProtobufs__NrofReportedRS         *message);
size_t streaming_protobufs__nrof_reported_rs__get_packed_size
                     (const StreamingProtobufs__NrofReportedRS   *message);
size_t streaming_protobufs__nrof_reported_rs__pack
                     (const StreamingProtobufs__NrofReportedRS   *message,
                      uint8_t             *out);
size_t streaming_protobufs__nrof_reported_rs__pack_to_buffer
                     (const StreamingProtobufs__NrofReportedRS   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__NrofReportedRS *
       streaming_protobufs__nrof_reported_rs__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__nrof_reported_rs__free_unpacked
                     (StreamingProtobufs__NrofReportedRS *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CQITable methods */
void   streaming_protobufs__cqi__table__init
                     (StreamingProtobufs__CQITable         *message);
size_t streaming_protobufs__cqi__table__get_packed_size
                     (const StreamingProtobufs__CQITable   *message);
size_t streaming_protobufs__cqi__table__pack
                     (const StreamingProtobufs__CQITable   *message,
                      uint8_t             *out);
size_t streaming_protobufs__cqi__table__pack_to_buffer
                     (const StreamingProtobufs__CQITable   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CQITable *
       streaming_protobufs__cqi__table__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__cqi__table__free_unpacked
                     (StreamingProtobufs__CQITable *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SubbandSize methods */
void   streaming_protobufs__subband_size__init
                     (StreamingProtobufs__SubbandSize         *message);
size_t streaming_protobufs__subband_size__get_packed_size
                     (const StreamingProtobufs__SubbandSize   *message);
size_t streaming_protobufs__subband_size__pack
                     (const StreamingProtobufs__SubbandSize   *message,
                      uint8_t             *out);
size_t streaming_protobufs__subband_size__pack_to_buffer
                     (const StreamingProtobufs__SubbandSize   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SubbandSize *
       streaming_protobufs__subband_size__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__subband_size__free_unpacked
                     (StreamingProtobufs__SubbandSize *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PortIndexFor8Ranks methods */
void   streaming_protobufs__port_index_for8_ranks__init
                     (StreamingProtobufs__PortIndexFor8Ranks         *message);
size_t streaming_protobufs__port_index_for8_ranks__get_packed_size
                     (const StreamingProtobufs__PortIndexFor8Ranks   *message);
size_t streaming_protobufs__port_index_for8_ranks__pack
                     (const StreamingProtobufs__PortIndexFor8Ranks   *message,
                      uint8_t             *out);
size_t streaming_protobufs__port_index_for8_ranks__pack_to_buffer
                     (const StreamingProtobufs__PortIndexFor8Ranks   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PortIndexFor8Ranks *
       streaming_protobufs__port_index_for8_ranks__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__port_index_for8_ranks__free_unpacked
                     (StreamingProtobufs__PortIndexFor8Ranks *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PortIndex8 methods */
void   streaming_protobufs__port_index8__init
                     (StreamingProtobufs__PortIndex8         *message);
size_t streaming_protobufs__port_index8__get_packed_size
                     (const StreamingProtobufs__PortIndex8   *message);
size_t streaming_protobufs__port_index8__pack
                     (const StreamingProtobufs__PortIndex8   *message,
                      uint8_t             *out);
size_t streaming_protobufs__port_index8__pack_to_buffer
                     (const StreamingProtobufs__PortIndex8   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PortIndex8 *
       streaming_protobufs__port_index8__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__port_index8__free_unpacked
                     (StreamingProtobufs__PortIndex8 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PortIndex4 methods */
void   streaming_protobufs__port_index4__init
                     (StreamingProtobufs__PortIndex4         *message);
size_t streaming_protobufs__port_index4__get_packed_size
                     (const StreamingProtobufs__PortIndex4   *message);
size_t streaming_protobufs__port_index4__pack
                     (const StreamingProtobufs__PortIndex4   *message,
                      uint8_t             *out);
size_t streaming_protobufs__port_index4__pack_to_buffer
                     (const StreamingProtobufs__PortIndex4   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PortIndex4 *
       streaming_protobufs__port_index4__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__port_index4__free_unpacked
                     (StreamingProtobufs__PortIndex4 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PortIndex2 methods */
void   streaming_protobufs__port_index2__init
                     (StreamingProtobufs__PortIndex2         *message);
size_t streaming_protobufs__port_index2__get_packed_size
                     (const StreamingProtobufs__PortIndex2   *message);
size_t streaming_protobufs__port_index2__pack
                     (const StreamingProtobufs__PortIndex2   *message,
                      uint8_t             *out);
size_t streaming_protobufs__port_index2__pack_to_buffer
                     (const StreamingProtobufs__PortIndex2   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PortIndex2 *
       streaming_protobufs__port_index2__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__port_index2__free_unpacked
                     (StreamingProtobufs__PortIndex2 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SemiPersistentOnPUSCHV1530 methods */
void   streaming_protobufs__semi_persistent_on_pusch_v1530__init
                     (StreamingProtobufs__SemiPersistentOnPUSCHV1530         *message);
size_t streaming_protobufs__semi_persistent_on_pusch_v1530__get_packed_size
                     (const StreamingProtobufs__SemiPersistentOnPUSCHV1530   *message);
size_t streaming_protobufs__semi_persistent_on_pusch_v1530__pack
                     (const StreamingProtobufs__SemiPersistentOnPUSCHV1530   *message,
                      uint8_t             *out);
size_t streaming_protobufs__semi_persistent_on_pusch_v1530__pack_to_buffer
                     (const StreamingProtobufs__SemiPersistentOnPUSCHV1530   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SemiPersistentOnPUSCHV1530 *
       streaming_protobufs__semi_persistent_on_pusch_v1530__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__semi_persistent_on_pusch_v1530__free_unpacked
                     (StreamingProtobufs__SemiPersistentOnPUSCHV1530 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CSIAperiodicTriggerStateList methods */
void   streaming_protobufs__csi__aperiodic_trigger_state_list__init
                     (StreamingProtobufs__CSIAperiodicTriggerStateList         *message);
size_t streaming_protobufs__csi__aperiodic_trigger_state_list__get_packed_size
                     (const StreamingProtobufs__CSIAperiodicTriggerStateList   *message);
size_t streaming_protobufs__csi__aperiodic_trigger_state_list__pack
                     (const StreamingProtobufs__CSIAperiodicTriggerStateList   *message,
                      uint8_t             *out);
size_t streaming_protobufs__csi__aperiodic_trigger_state_list__pack_to_buffer
                     (const StreamingProtobufs__CSIAperiodicTriggerStateList   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CSIAperiodicTriggerStateList *
       streaming_protobufs__csi__aperiodic_trigger_state_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__csi__aperiodic_trigger_state_list__free_unpacked
                     (StreamingProtobufs__CSIAperiodicTriggerStateList *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CSIAperiodicTriggerState methods */
void   streaming_protobufs__csi__aperiodic_trigger_state__init
                     (StreamingProtobufs__CSIAperiodicTriggerState         *message);
size_t streaming_protobufs__csi__aperiodic_trigger_state__get_packed_size
                     (const StreamingProtobufs__CSIAperiodicTriggerState   *message);
size_t streaming_protobufs__csi__aperiodic_trigger_state__pack
                     (const StreamingProtobufs__CSIAperiodicTriggerState   *message,
                      uint8_t             *out);
size_t streaming_protobufs__csi__aperiodic_trigger_state__pack_to_buffer
                     (const StreamingProtobufs__CSIAperiodicTriggerState   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CSIAperiodicTriggerState *
       streaming_protobufs__csi__aperiodic_trigger_state__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__csi__aperiodic_trigger_state__free_unpacked
                     (StreamingProtobufs__CSIAperiodicTriggerState *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CSIAssociatedReportConfigInfo methods */
void   streaming_protobufs__csi__associated_report_config_info__init
                     (StreamingProtobufs__CSIAssociatedReportConfigInfo         *message);
size_t streaming_protobufs__csi__associated_report_config_info__get_packed_size
                     (const StreamingProtobufs__CSIAssociatedReportConfigInfo   *message);
size_t streaming_protobufs__csi__associated_report_config_info__pack
                     (const StreamingProtobufs__CSIAssociatedReportConfigInfo   *message,
                      uint8_t             *out);
size_t streaming_protobufs__csi__associated_report_config_info__pack_to_buffer
                     (const StreamingProtobufs__CSIAssociatedReportConfigInfo   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CSIAssociatedReportConfigInfo *
       streaming_protobufs__csi__associated_report_config_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__csi__associated_report_config_info__free_unpacked
                     (StreamingProtobufs__CSIAssociatedReportConfigInfo *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__NZPCSIRS methods */
void   streaming_protobufs__nzp__csi__rs__init
                     (StreamingProtobufs__NZPCSIRS         *message);
size_t streaming_protobufs__nzp__csi__rs__get_packed_size
                     (const StreamingProtobufs__NZPCSIRS   *message);
size_t streaming_protobufs__nzp__csi__rs__pack
                     (const StreamingProtobufs__NZPCSIRS   *message,
                      uint8_t             *out);
size_t streaming_protobufs__nzp__csi__rs__pack_to_buffer
                     (const StreamingProtobufs__NZPCSIRS   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__NZPCSIRS *
       streaming_protobufs__nzp__csi__rs__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__nzp__csi__rs__free_unpacked
                     (StreamingProtobufs__NZPCSIRS *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CSISemiPersistentOnPUSCHTriggerStateList methods */
void   streaming_protobufs__csi__semi_persistent_on_pusch__trigger_state_list__init
                     (StreamingProtobufs__CSISemiPersistentOnPUSCHTriggerStateList         *message);
size_t streaming_protobufs__csi__semi_persistent_on_pusch__trigger_state_list__get_packed_size
                     (const StreamingProtobufs__CSISemiPersistentOnPUSCHTriggerStateList   *message);
size_t streaming_protobufs__csi__semi_persistent_on_pusch__trigger_state_list__pack
                     (const StreamingProtobufs__CSISemiPersistentOnPUSCHTriggerStateList   *message,
                      uint8_t             *out);
size_t streaming_protobufs__csi__semi_persistent_on_pusch__trigger_state_list__pack_to_buffer
                     (const StreamingProtobufs__CSISemiPersistentOnPUSCHTriggerStateList   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CSISemiPersistentOnPUSCHTriggerStateList *
       streaming_protobufs__csi__semi_persistent_on_pusch__trigger_state_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__csi__semi_persistent_on_pusch__trigger_state_list__free_unpacked
                     (StreamingProtobufs__CSISemiPersistentOnPUSCHTriggerStateList *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CSISemiPersistentOnPUSCHTriggerState methods */
void   streaming_protobufs__csi__semi_persistent_on_pusch__trigger_state__init
                     (StreamingProtobufs__CSISemiPersistentOnPUSCHTriggerState         *message);
size_t streaming_protobufs__csi__semi_persistent_on_pusch__trigger_state__get_packed_size
                     (const StreamingProtobufs__CSISemiPersistentOnPUSCHTriggerState   *message);
size_t streaming_protobufs__csi__semi_persistent_on_pusch__trigger_state__pack
                     (const StreamingProtobufs__CSISemiPersistentOnPUSCHTriggerState   *message,
                      uint8_t             *out);
size_t streaming_protobufs__csi__semi_persistent_on_pusch__trigger_state__pack_to_buffer
                     (const StreamingProtobufs__CSISemiPersistentOnPUSCHTriggerState   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CSISemiPersistentOnPUSCHTriggerState *
       streaming_protobufs__csi__semi_persistent_on_pusch__trigger_state__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__csi__semi_persistent_on_pusch__trigger_state__free_unpacked
                     (StreamingProtobufs__CSISemiPersistentOnPUSCHTriggerState *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SCellDeactivationTimer methods */
void   streaming_protobufs__scell_deactivation_timer__init
                     (StreamingProtobufs__SCellDeactivationTimer         *message);
size_t streaming_protobufs__scell_deactivation_timer__get_packed_size
                     (const StreamingProtobufs__SCellDeactivationTimer   *message);
size_t streaming_protobufs__scell_deactivation_timer__pack
                     (const StreamingProtobufs__SCellDeactivationTimer   *message,
                      uint8_t             *out);
size_t streaming_protobufs__scell_deactivation_timer__pack_to_buffer
                     (const StreamingProtobufs__SCellDeactivationTimer   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SCellDeactivationTimer *
       streaming_protobufs__scell_deactivation_timer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__scell_deactivation_timer__free_unpacked
                     (StreamingProtobufs__SCellDeactivationTimer *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CrossCarrierSchedulingConfig methods */
void   streaming_protobufs__cross_carrier_scheduling_config__init
                     (StreamingProtobufs__CrossCarrierSchedulingConfig         *message);
size_t streaming_protobufs__cross_carrier_scheduling_config__get_packed_size
                     (const StreamingProtobufs__CrossCarrierSchedulingConfig   *message);
size_t streaming_protobufs__cross_carrier_scheduling_config__pack
                     (const StreamingProtobufs__CrossCarrierSchedulingConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__cross_carrier_scheduling_config__pack_to_buffer
                     (const StreamingProtobufs__CrossCarrierSchedulingConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CrossCarrierSchedulingConfig *
       streaming_protobufs__cross_carrier_scheduling_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__cross_carrier_scheduling_config__free_unpacked
                     (StreamingProtobufs__CrossCarrierSchedulingConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__OwnCrossCarrierSchedulingConfig methods */
void   streaming_protobufs__own_cross_carrier_scheduling_config__init
                     (StreamingProtobufs__OwnCrossCarrierSchedulingConfig         *message);
size_t streaming_protobufs__own_cross_carrier_scheduling_config__get_packed_size
                     (const StreamingProtobufs__OwnCrossCarrierSchedulingConfig   *message);
size_t streaming_protobufs__own_cross_carrier_scheduling_config__pack
                     (const StreamingProtobufs__OwnCrossCarrierSchedulingConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__own_cross_carrier_scheduling_config__pack_to_buffer
                     (const StreamingProtobufs__OwnCrossCarrierSchedulingConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__OwnCrossCarrierSchedulingConfig *
       streaming_protobufs__own_cross_carrier_scheduling_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__own_cross_carrier_scheduling_config__free_unpacked
                     (StreamingProtobufs__OwnCrossCarrierSchedulingConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__OtherCrossCarrierSchedulingConfig methods */
void   streaming_protobufs__other_cross_carrier_scheduling_config__init
                     (StreamingProtobufs__OtherCrossCarrierSchedulingConfig         *message);
size_t streaming_protobufs__other_cross_carrier_scheduling_config__get_packed_size
                     (const StreamingProtobufs__OtherCrossCarrierSchedulingConfig   *message);
size_t streaming_protobufs__other_cross_carrier_scheduling_config__pack
                     (const StreamingProtobufs__OtherCrossCarrierSchedulingConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__other_cross_carrier_scheduling_config__pack_to_buffer
                     (const StreamingProtobufs__OtherCrossCarrierSchedulingConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__OtherCrossCarrierSchedulingConfig *
       streaming_protobufs__other_cross_carrier_scheduling_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__other_cross_carrier_scheduling_config__free_unpacked
                     (StreamingProtobufs__OtherCrossCarrierSchedulingConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PathlossReferenceLinking methods */
void   streaming_protobufs__pathloss_reference_linking__init
                     (StreamingProtobufs__PathlossReferenceLinking         *message);
size_t streaming_protobufs__pathloss_reference_linking__get_packed_size
                     (const StreamingProtobufs__PathlossReferenceLinking   *message);
size_t streaming_protobufs__pathloss_reference_linking__pack
                     (const StreamingProtobufs__PathlossReferenceLinking   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pathloss_reference_linking__pack_to_buffer
                     (const StreamingProtobufs__PathlossReferenceLinking   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PathlossReferenceLinking *
       streaming_protobufs__pathloss_reference_linking__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pathloss_reference_linking__free_unpacked
                     (StreamingProtobufs__PathlossReferenceLinking *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MeasConfig methods */
void   streaming_protobufs__meas_config__init
                     (StreamingProtobufs__MeasConfig         *message);
size_t streaming_protobufs__meas_config__get_packed_size
                     (const StreamingProtobufs__MeasConfig   *message);
size_t streaming_protobufs__meas_config__pack
                     (const StreamingProtobufs__MeasConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__meas_config__pack_to_buffer
                     (const StreamingProtobufs__MeasConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MeasConfig *
       streaming_protobufs__meas_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__meas_config__free_unpacked
                     (StreamingProtobufs__MeasConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MeasObjectToRemoveList methods */
void   streaming_protobufs__meas_object_to_remove_list__init
                     (StreamingProtobufs__MeasObjectToRemoveList         *message);
size_t streaming_protobufs__meas_object_to_remove_list__get_packed_size
                     (const StreamingProtobufs__MeasObjectToRemoveList   *message);
size_t streaming_protobufs__meas_object_to_remove_list__pack
                     (const StreamingProtobufs__MeasObjectToRemoveList   *message,
                      uint8_t             *out);
size_t streaming_protobufs__meas_object_to_remove_list__pack_to_buffer
                     (const StreamingProtobufs__MeasObjectToRemoveList   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MeasObjectToRemoveList *
       streaming_protobufs__meas_object_to_remove_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__meas_object_to_remove_list__free_unpacked
                     (StreamingProtobufs__MeasObjectToRemoveList *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MeasObjectToAddModList methods */
void   streaming_protobufs__meas_object_to_add_mod_list__init
                     (StreamingProtobufs__MeasObjectToAddModList         *message);
size_t streaming_protobufs__meas_object_to_add_mod_list__get_packed_size
                     (const StreamingProtobufs__MeasObjectToAddModList   *message);
size_t streaming_protobufs__meas_object_to_add_mod_list__pack
                     (const StreamingProtobufs__MeasObjectToAddModList   *message,
                      uint8_t             *out);
size_t streaming_protobufs__meas_object_to_add_mod_list__pack_to_buffer
                     (const StreamingProtobufs__MeasObjectToAddModList   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MeasObjectToAddModList *
       streaming_protobufs__meas_object_to_add_mod_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__meas_object_to_add_mod_list__free_unpacked
                     (StreamingProtobufs__MeasObjectToAddModList *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ReportConfigToRemoveList methods */
void   streaming_protobufs__report_config_to_remove_list__init
                     (StreamingProtobufs__ReportConfigToRemoveList         *message);
size_t streaming_protobufs__report_config_to_remove_list__get_packed_size
                     (const StreamingProtobufs__ReportConfigToRemoveList   *message);
size_t streaming_protobufs__report_config_to_remove_list__pack
                     (const StreamingProtobufs__ReportConfigToRemoveList   *message,
                      uint8_t             *out);
size_t streaming_protobufs__report_config_to_remove_list__pack_to_buffer
                     (const StreamingProtobufs__ReportConfigToRemoveList   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ReportConfigToRemoveList *
       streaming_protobufs__report_config_to_remove_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__report_config_to_remove_list__free_unpacked
                     (StreamingProtobufs__ReportConfigToRemoveList *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ReportConfigToAddModList methods */
void   streaming_protobufs__report_config_to_add_mod_list__init
                     (StreamingProtobufs__ReportConfigToAddModList         *message);
size_t streaming_protobufs__report_config_to_add_mod_list__get_packed_size
                     (const StreamingProtobufs__ReportConfigToAddModList   *message);
size_t streaming_protobufs__report_config_to_add_mod_list__pack
                     (const StreamingProtobufs__ReportConfigToAddModList   *message,
                      uint8_t             *out);
size_t streaming_protobufs__report_config_to_add_mod_list__pack_to_buffer
                     (const StreamingProtobufs__ReportConfigToAddModList   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ReportConfigToAddModList *
       streaming_protobufs__report_config_to_add_mod_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__report_config_to_add_mod_list__free_unpacked
                     (StreamingProtobufs__ReportConfigToAddModList *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MeasIdToRemoveList methods */
void   streaming_protobufs__meas_id_to_remove_list__init
                     (StreamingProtobufs__MeasIdToRemoveList         *message);
size_t streaming_protobufs__meas_id_to_remove_list__get_packed_size
                     (const StreamingProtobufs__MeasIdToRemoveList   *message);
size_t streaming_protobufs__meas_id_to_remove_list__pack
                     (const StreamingProtobufs__MeasIdToRemoveList   *message,
                      uint8_t             *out);
size_t streaming_protobufs__meas_id_to_remove_list__pack_to_buffer
                     (const StreamingProtobufs__MeasIdToRemoveList   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MeasIdToRemoveList *
       streaming_protobufs__meas_id_to_remove_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__meas_id_to_remove_list__free_unpacked
                     (StreamingProtobufs__MeasIdToRemoveList *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MeasIdToAddModList methods */
void   streaming_protobufs__meas_id_to_add_mod_list__init
                     (StreamingProtobufs__MeasIdToAddModList         *message);
size_t streaming_protobufs__meas_id_to_add_mod_list__get_packed_size
                     (const StreamingProtobufs__MeasIdToAddModList   *message);
size_t streaming_protobufs__meas_id_to_add_mod_list__pack
                     (const StreamingProtobufs__MeasIdToAddModList   *message,
                      uint8_t             *out);
size_t streaming_protobufs__meas_id_to_add_mod_list__pack_to_buffer
                     (const StreamingProtobufs__MeasIdToAddModList   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MeasIdToAddModList *
       streaming_protobufs__meas_id_to_add_mod_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__meas_id_to_add_mod_list__free_unpacked
                     (StreamingProtobufs__MeasIdToAddModList *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MeasObjectToAddMod methods */
void   streaming_protobufs__meas_object_to_add_mod__init
                     (StreamingProtobufs__MeasObjectToAddMod         *message);
size_t streaming_protobufs__meas_object_to_add_mod__get_packed_size
                     (const StreamingProtobufs__MeasObjectToAddMod   *message);
size_t streaming_protobufs__meas_object_to_add_mod__pack
                     (const StreamingProtobufs__MeasObjectToAddMod   *message,
                      uint8_t             *out);
size_t streaming_protobufs__meas_object_to_add_mod__pack_to_buffer
                     (const StreamingProtobufs__MeasObjectToAddMod   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MeasObjectToAddMod *
       streaming_protobufs__meas_object_to_add_mod__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__meas_object_to_add_mod__free_unpacked
                     (StreamingProtobufs__MeasObjectToAddMod *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MeasObjectNR methods */
void   streaming_protobufs__meas_object_nr__init
                     (StreamingProtobufs__MeasObjectNR         *message);
size_t streaming_protobufs__meas_object_nr__get_packed_size
                     (const StreamingProtobufs__MeasObjectNR   *message);
size_t streaming_protobufs__meas_object_nr__pack
                     (const StreamingProtobufs__MeasObjectNR   *message,
                      uint8_t             *out);
size_t streaming_protobufs__meas_object_nr__pack_to_buffer
                     (const StreamingProtobufs__MeasObjectNR   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MeasObjectNR *
       streaming_protobufs__meas_object_nr__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__meas_object_nr__free_unpacked
                     (StreamingProtobufs__MeasObjectNR *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ReferenceSignalConfig methods */
void   streaming_protobufs__reference_signal_config__init
                     (StreamingProtobufs__ReferenceSignalConfig         *message);
size_t streaming_protobufs__reference_signal_config__get_packed_size
                     (const StreamingProtobufs__ReferenceSignalConfig   *message);
size_t streaming_protobufs__reference_signal_config__pack
                     (const StreamingProtobufs__ReferenceSignalConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__reference_signal_config__pack_to_buffer
                     (const StreamingProtobufs__ReferenceSignalConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ReferenceSignalConfig *
       streaming_protobufs__reference_signal_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__reference_signal_config__free_unpacked
                     (StreamingProtobufs__ReferenceSignalConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SSBConfigMobility methods */
void   streaming_protobufs__ssb__config_mobility__init
                     (StreamingProtobufs__SSBConfigMobility         *message);
size_t streaming_protobufs__ssb__config_mobility__get_packed_size
                     (const StreamingProtobufs__SSBConfigMobility   *message);
size_t streaming_protobufs__ssb__config_mobility__pack
                     (const StreamingProtobufs__SSBConfigMobility   *message,
                      uint8_t             *out);
size_t streaming_protobufs__ssb__config_mobility__pack_to_buffer
                     (const StreamingProtobufs__SSBConfigMobility   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SSBConfigMobility *
       streaming_protobufs__ssb__config_mobility__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__ssb__config_mobility__free_unpacked
                     (StreamingProtobufs__SSBConfigMobility *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SSBToMeasure methods */
void   streaming_protobufs__ssb__to_measure__init
                     (StreamingProtobufs__SSBToMeasure         *message);
size_t streaming_protobufs__ssb__to_measure__get_packed_size
                     (const StreamingProtobufs__SSBToMeasure   *message);
size_t streaming_protobufs__ssb__to_measure__pack
                     (const StreamingProtobufs__SSBToMeasure   *message,
                      uint8_t             *out);
size_t streaming_protobufs__ssb__to_measure__pack_to_buffer
                     (const StreamingProtobufs__SSBToMeasure   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SSBToMeasure *
       streaming_protobufs__ssb__to_measure__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__ssb__to_measure__free_unpacked
                     (StreamingProtobufs__SSBToMeasure *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SSRSSIMeasurement methods */
void   streaming_protobufs__ss__rssi__measurement__init
                     (StreamingProtobufs__SSRSSIMeasurement         *message);
size_t streaming_protobufs__ss__rssi__measurement__get_packed_size
                     (const StreamingProtobufs__SSRSSIMeasurement   *message);
size_t streaming_protobufs__ss__rssi__measurement__pack
                     (const StreamingProtobufs__SSRSSIMeasurement   *message,
                      uint8_t             *out);
size_t streaming_protobufs__ss__rssi__measurement__pack_to_buffer
                     (const StreamingProtobufs__SSRSSIMeasurement   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SSRSSIMeasurement *
       streaming_protobufs__ss__rssi__measurement__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__ss__rssi__measurement__free_unpacked
                     (StreamingProtobufs__SSRSSIMeasurement *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CSIRSResourceConfigMobility methods */
void   streaming_protobufs__csi__rs__resource_config_mobility__init
                     (StreamingProtobufs__CSIRSResourceConfigMobility         *message);
size_t streaming_protobufs__csi__rs__resource_config_mobility__get_packed_size
                     (const StreamingProtobufs__CSIRSResourceConfigMobility   *message);
size_t streaming_protobufs__csi__rs__resource_config_mobility__pack
                     (const StreamingProtobufs__CSIRSResourceConfigMobility   *message,
                      uint8_t             *out);
size_t streaming_protobufs__csi__rs__resource_config_mobility__pack_to_buffer
                     (const StreamingProtobufs__CSIRSResourceConfigMobility   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CSIRSResourceConfigMobility *
       streaming_protobufs__csi__rs__resource_config_mobility__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__csi__rs__resource_config_mobility__free_unpacked
                     (StreamingProtobufs__CSIRSResourceConfigMobility *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CSIRSCellMobility methods */
void   streaming_protobufs__csi__rs__cell_mobility__init
                     (StreamingProtobufs__CSIRSCellMobility         *message);
size_t streaming_protobufs__csi__rs__cell_mobility__get_packed_size
                     (const StreamingProtobufs__CSIRSCellMobility   *message);
size_t streaming_protobufs__csi__rs__cell_mobility__pack
                     (const StreamingProtobufs__CSIRSCellMobility   *message,
                      uint8_t             *out);
size_t streaming_protobufs__csi__rs__cell_mobility__pack_to_buffer
                     (const StreamingProtobufs__CSIRSCellMobility   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CSIRSCellMobility *
       streaming_protobufs__csi__rs__cell_mobility__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__csi__rs__cell_mobility__free_unpacked
                     (StreamingProtobufs__CSIRSCellMobility *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CSIRSMeasurementBW methods */
void   streaming_protobufs__csi__rs__measurement_bw__init
                     (StreamingProtobufs__CSIRSMeasurementBW         *message);
size_t streaming_protobufs__csi__rs__measurement_bw__get_packed_size
                     (const StreamingProtobufs__CSIRSMeasurementBW   *message);
size_t streaming_protobufs__csi__rs__measurement_bw__pack
                     (const StreamingProtobufs__CSIRSMeasurementBW   *message,
                      uint8_t             *out);
size_t streaming_protobufs__csi__rs__measurement_bw__pack_to_buffer
                     (const StreamingProtobufs__CSIRSMeasurementBW   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CSIRSMeasurementBW *
       streaming_protobufs__csi__rs__measurement_bw__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__csi__rs__measurement_bw__free_unpacked
                     (StreamingProtobufs__CSIRSMeasurementBW *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__Density methods */
void   streaming_protobufs__density__init
                     (StreamingProtobufs__Density         *message);
size_t streaming_protobufs__density__get_packed_size
                     (const StreamingProtobufs__Density   *message);
size_t streaming_protobufs__density__pack
                     (const StreamingProtobufs__Density   *message,
                      uint8_t             *out);
size_t streaming_protobufs__density__pack_to_buffer
                     (const StreamingProtobufs__Density   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__Density *
       streaming_protobufs__density__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__density__free_unpacked
                     (StreamingProtobufs__Density *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CSIRSResourceMobility methods */
void   streaming_protobufs__csi__rs__resource__mobility__init
                     (StreamingProtobufs__CSIRSResourceMobility         *message);
size_t streaming_protobufs__csi__rs__resource__mobility__get_packed_size
                     (const StreamingProtobufs__CSIRSResourceMobility   *message);
size_t streaming_protobufs__csi__rs__resource__mobility__pack
                     (const StreamingProtobufs__CSIRSResourceMobility   *message,
                      uint8_t             *out);
size_t streaming_protobufs__csi__rs__resource__mobility__pack_to_buffer
                     (const StreamingProtobufs__CSIRSResourceMobility   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CSIRSResourceMobility *
       streaming_protobufs__csi__rs__resource__mobility__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__csi__rs__resource__mobility__free_unpacked
                     (StreamingProtobufs__CSIRSResourceMobility *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__AssociatedSSB methods */
void   streaming_protobufs__associated_ssb__init
                     (StreamingProtobufs__AssociatedSSB         *message);
size_t streaming_protobufs__associated_ssb__get_packed_size
                     (const StreamingProtobufs__AssociatedSSB   *message);
size_t streaming_protobufs__associated_ssb__pack
                     (const StreamingProtobufs__AssociatedSSB   *message,
                      uint8_t             *out);
size_t streaming_protobufs__associated_ssb__pack_to_buffer
                     (const StreamingProtobufs__AssociatedSSB   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__AssociatedSSB *
       streaming_protobufs__associated_ssb__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__associated_ssb__free_unpacked
                     (StreamingProtobufs__AssociatedSSB *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ThresholdNR methods */
void   streaming_protobufs__threshold_nr__init
                     (StreamingProtobufs__ThresholdNR         *message);
size_t streaming_protobufs__threshold_nr__get_packed_size
                     (const StreamingProtobufs__ThresholdNR   *message);
size_t streaming_protobufs__threshold_nr__pack
                     (const StreamingProtobufs__ThresholdNR   *message,
                      uint8_t             *out);
size_t streaming_protobufs__threshold_nr__pack_to_buffer
                     (const StreamingProtobufs__ThresholdNR   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ThresholdNR *
       streaming_protobufs__threshold_nr__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__threshold_nr__free_unpacked
                     (StreamingProtobufs__ThresholdNR *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__QOffsetRangeList methods */
void   streaming_protobufs__q__offset_range_list__init
                     (StreamingProtobufs__QOffsetRangeList         *message);
size_t streaming_protobufs__q__offset_range_list__get_packed_size
                     (const StreamingProtobufs__QOffsetRangeList   *message);
size_t streaming_protobufs__q__offset_range_list__pack
                     (const StreamingProtobufs__QOffsetRangeList   *message,
                      uint8_t             *out);
size_t streaming_protobufs__q__offset_range_list__pack_to_buffer
                     (const StreamingProtobufs__QOffsetRangeList   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__QOffsetRangeList *
       streaming_protobufs__q__offset_range_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__q__offset_range_list__free_unpacked
                     (StreamingProtobufs__QOffsetRangeList *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__QOffsetRange methods */
void   streaming_protobufs__q__offset_range__init
                     (StreamingProtobufs__QOffsetRange         *message);
size_t streaming_protobufs__q__offset_range__get_packed_size
                     (const StreamingProtobufs__QOffsetRange   *message);
size_t streaming_protobufs__q__offset_range__pack
                     (const StreamingProtobufs__QOffsetRange   *message,
                      uint8_t             *out);
size_t streaming_protobufs__q__offset_range__pack_to_buffer
                     (const StreamingProtobufs__QOffsetRange   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__QOffsetRange *
       streaming_protobufs__q__offset_range__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__q__offset_range__free_unpacked
                     (StreamingProtobufs__QOffsetRange *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CellsToAddModList methods */
void   streaming_protobufs__cells_to_add_mod_list__init
                     (StreamingProtobufs__CellsToAddModList         *message);
size_t streaming_protobufs__cells_to_add_mod_list__get_packed_size
                     (const StreamingProtobufs__CellsToAddModList   *message);
size_t streaming_protobufs__cells_to_add_mod_list__pack
                     (const StreamingProtobufs__CellsToAddModList   *message,
                      uint8_t             *out);
size_t streaming_protobufs__cells_to_add_mod_list__pack_to_buffer
                     (const StreamingProtobufs__CellsToAddModList   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CellsToAddModList *
       streaming_protobufs__cells_to_add_mod_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__cells_to_add_mod_list__free_unpacked
                     (StreamingProtobufs__CellsToAddModList *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CellsToAddMod methods */
void   streaming_protobufs__cells_to_add_mod__init
                     (StreamingProtobufs__CellsToAddMod         *message);
size_t streaming_protobufs__cells_to_add_mod__get_packed_size
                     (const StreamingProtobufs__CellsToAddMod   *message);
size_t streaming_protobufs__cells_to_add_mod__pack
                     (const StreamingProtobufs__CellsToAddMod   *message,
                      uint8_t             *out);
size_t streaming_protobufs__cells_to_add_mod__pack_to_buffer
                     (const StreamingProtobufs__CellsToAddMod   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CellsToAddMod *
       streaming_protobufs__cells_to_add_mod__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__cells_to_add_mod__free_unpacked
                     (StreamingProtobufs__CellsToAddMod *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PCIList methods */
void   streaming_protobufs__pci__list__init
                     (StreamingProtobufs__PCIList         *message);
size_t streaming_protobufs__pci__list__get_packed_size
                     (const StreamingProtobufs__PCIList   *message);
size_t streaming_protobufs__pci__list__pack
                     (const StreamingProtobufs__PCIList   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pci__list__pack_to_buffer
                     (const StreamingProtobufs__PCIList   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PCIList *
       streaming_protobufs__pci__list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pci__list__free_unpacked
                     (StreamingProtobufs__PCIList *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PCIRangeIndexList methods */
void   streaming_protobufs__pci__range_index_list__init
                     (StreamingProtobufs__PCIRangeIndexList         *message);
size_t streaming_protobufs__pci__range_index_list__get_packed_size
                     (const StreamingProtobufs__PCIRangeIndexList   *message);
size_t streaming_protobufs__pci__range_index_list__pack
                     (const StreamingProtobufs__PCIRangeIndexList   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pci__range_index_list__pack_to_buffer
                     (const StreamingProtobufs__PCIRangeIndexList   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PCIRangeIndexList *
       streaming_protobufs__pci__range_index_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pci__range_index_list__free_unpacked
                     (StreamingProtobufs__PCIRangeIndexList *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PCIRangeElement methods */
void   streaming_protobufs__pci__range_element__init
                     (StreamingProtobufs__PCIRangeElement         *message);
size_t streaming_protobufs__pci__range_element__get_packed_size
                     (const StreamingProtobufs__PCIRangeElement   *message);
size_t streaming_protobufs__pci__range_element__pack
                     (const StreamingProtobufs__PCIRangeElement   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pci__range_element__pack_to_buffer
                     (const StreamingProtobufs__PCIRangeElement   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PCIRangeElement *
       streaming_protobufs__pci__range_element__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pci__range_element__free_unpacked
                     (StreamingProtobufs__PCIRangeElement *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PCIRange methods */
void   streaming_protobufs__pci__range__init
                     (StreamingProtobufs__PCIRange         *message);
size_t streaming_protobufs__pci__range__get_packed_size
                     (const StreamingProtobufs__PCIRange   *message);
size_t streaming_protobufs__pci__range__pack
                     (const StreamingProtobufs__PCIRange   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pci__range__pack_to_buffer
                     (const StreamingProtobufs__PCIRange   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PCIRange *
       streaming_protobufs__pci__range__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pci__range__free_unpacked
                     (StreamingProtobufs__PCIRange *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__Range methods */
void   streaming_protobufs__range__init
                     (StreamingProtobufs__Range         *message);
size_t streaming_protobufs__range__get_packed_size
                     (const StreamingProtobufs__Range   *message);
size_t streaming_protobufs__range__pack
                     (const StreamingProtobufs__Range   *message,
                      uint8_t             *out);
size_t streaming_protobufs__range__pack_to_buffer
                     (const StreamingProtobufs__Range   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__Range *
       streaming_protobufs__range__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__range__free_unpacked
                     (StreamingProtobufs__Range *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MeasCycleSCellV1530 methods */
void   streaming_protobufs__meas_cycle_scell_v1530__init
                     (StreamingProtobufs__MeasCycleSCellV1530         *message);
size_t streaming_protobufs__meas_cycle_scell_v1530__get_packed_size
                     (const StreamingProtobufs__MeasCycleSCellV1530   *message);
size_t streaming_protobufs__meas_cycle_scell_v1530__pack
                     (const StreamingProtobufs__MeasCycleSCellV1530   *message,
                      uint8_t             *out);
size_t streaming_protobufs__meas_cycle_scell_v1530__pack_to_buffer
                     (const StreamingProtobufs__MeasCycleSCellV1530   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MeasCycleSCellV1530 *
       streaming_protobufs__meas_cycle_scell_v1530__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__meas_cycle_scell_v1530__free_unpacked
                     (StreamingProtobufs__MeasCycleSCellV1530 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MeasObjectEUTRA methods */
void   streaming_protobufs__meas_object_eutra__init
                     (StreamingProtobufs__MeasObjectEUTRA         *message);
size_t streaming_protobufs__meas_object_eutra__get_packed_size
                     (const StreamingProtobufs__MeasObjectEUTRA   *message);
size_t streaming_protobufs__meas_object_eutra__pack
                     (const StreamingProtobufs__MeasObjectEUTRA   *message,
                      uint8_t             *out);
size_t streaming_protobufs__meas_object_eutra__pack_to_buffer
                     (const StreamingProtobufs__MeasObjectEUTRA   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MeasObjectEUTRA *
       streaming_protobufs__meas_object_eutra__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__meas_object_eutra__free_unpacked
                     (StreamingProtobufs__MeasObjectEUTRA *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__EUTRAAllowedMeasBandwidth methods */
void   streaming_protobufs__eutra__allowed_meas_bandwidth__init
                     (StreamingProtobufs__EUTRAAllowedMeasBandwidth         *message);
size_t streaming_protobufs__eutra__allowed_meas_bandwidth__get_packed_size
                     (const StreamingProtobufs__EUTRAAllowedMeasBandwidth   *message);
size_t streaming_protobufs__eutra__allowed_meas_bandwidth__pack
                     (const StreamingProtobufs__EUTRAAllowedMeasBandwidth   *message,
                      uint8_t             *out);
size_t streaming_protobufs__eutra__allowed_meas_bandwidth__pack_to_buffer
                     (const StreamingProtobufs__EUTRAAllowedMeasBandwidth   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__EUTRAAllowedMeasBandwidth *
       streaming_protobufs__eutra__allowed_meas_bandwidth__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__eutra__allowed_meas_bandwidth__free_unpacked
                     (StreamingProtobufs__EUTRAAllowedMeasBandwidth *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__EUTRACellIndexList methods */
void   streaming_protobufs__eutra__cell_index_list__init
                     (StreamingProtobufs__EUTRACellIndexList         *message);
size_t streaming_protobufs__eutra__cell_index_list__get_packed_size
                     (const StreamingProtobufs__EUTRACellIndexList   *message);
size_t streaming_protobufs__eutra__cell_index_list__pack
                     (const StreamingProtobufs__EUTRACellIndexList   *message,
                      uint8_t             *out);
size_t streaming_protobufs__eutra__cell_index_list__pack_to_buffer
                     (const StreamingProtobufs__EUTRACellIndexList   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__EUTRACellIndexList *
       streaming_protobufs__eutra__cell_index_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__eutra__cell_index_list__free_unpacked
                     (StreamingProtobufs__EUTRACellIndexList *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__EUTRACell methods */
void   streaming_protobufs__eutra__cell__init
                     (StreamingProtobufs__EUTRACell         *message);
size_t streaming_protobufs__eutra__cell__get_packed_size
                     (const StreamingProtobufs__EUTRACell   *message);
size_t streaming_protobufs__eutra__cell__pack
                     (const StreamingProtobufs__EUTRACell   *message,
                      uint8_t             *out);
size_t streaming_protobufs__eutra__cell__pack_to_buffer
                     (const StreamingProtobufs__EUTRACell   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__EUTRACell *
       streaming_protobufs__eutra__cell__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__eutra__cell__free_unpacked
                     (StreamingProtobufs__EUTRACell *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__EUTRAQOffsetRange methods */
void   streaming_protobufs__eutra__q__offset_range__init
                     (StreamingProtobufs__EUTRAQOffsetRange         *message);
size_t streaming_protobufs__eutra__q__offset_range__get_packed_size
                     (const StreamingProtobufs__EUTRAQOffsetRange   *message);
size_t streaming_protobufs__eutra__q__offset_range__pack
                     (const StreamingProtobufs__EUTRAQOffsetRange   *message,
                      uint8_t             *out);
size_t streaming_protobufs__eutra__q__offset_range__pack_to_buffer
                     (const StreamingProtobufs__EUTRAQOffsetRange   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__EUTRAQOffsetRange *
       streaming_protobufs__eutra__q__offset_range__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__eutra__q__offset_range__free_unpacked
                     (StreamingProtobufs__EUTRAQOffsetRange *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__EUTRABlackCell methods */
void   streaming_protobufs__eutra__black_cell__init
                     (StreamingProtobufs__EUTRABlackCell         *message);
size_t streaming_protobufs__eutra__black_cell__get_packed_size
                     (const StreamingProtobufs__EUTRABlackCell   *message);
size_t streaming_protobufs__eutra__black_cell__pack
                     (const StreamingProtobufs__EUTRABlackCell   *message,
                      uint8_t             *out);
size_t streaming_protobufs__eutra__black_cell__pack_to_buffer
                     (const StreamingProtobufs__EUTRABlackCell   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__EUTRABlackCell *
       streaming_protobufs__eutra__black_cell__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__eutra__black_cell__free_unpacked
                     (StreamingProtobufs__EUTRABlackCell *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__EUTRAPhysCellIdRange methods */
void   streaming_protobufs__eutra__phys_cell_id_range__init
                     (StreamingProtobufs__EUTRAPhysCellIdRange         *message);
size_t streaming_protobufs__eutra__phys_cell_id_range__get_packed_size
                     (const StreamingProtobufs__EUTRAPhysCellIdRange   *message);
size_t streaming_protobufs__eutra__phys_cell_id_range__pack
                     (const StreamingProtobufs__EUTRAPhysCellIdRange   *message,
                      uint8_t             *out);
size_t streaming_protobufs__eutra__phys_cell_id_range__pack_to_buffer
                     (const StreamingProtobufs__EUTRAPhysCellIdRange   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__EUTRAPhysCellIdRange *
       streaming_protobufs__eutra__phys_cell_id_range__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__eutra__phys_cell_id_range__free_unpacked
                     (StreamingProtobufs__EUTRAPhysCellIdRange *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__EUTRARange methods */
void   streaming_protobufs__eutra__range__init
                     (StreamingProtobufs__EUTRARange         *message);
size_t streaming_protobufs__eutra__range__get_packed_size
                     (const StreamingProtobufs__EUTRARange   *message);
size_t streaming_protobufs__eutra__range__pack
                     (const StreamingProtobufs__EUTRARange   *message,
                      uint8_t             *out);
size_t streaming_protobufs__eutra__range__pack_to_buffer
                     (const StreamingProtobufs__EUTRARange   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__EUTRARange *
       streaming_protobufs__eutra__range__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__eutra__range__free_unpacked
                     (StreamingProtobufs__EUTRARange *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ReportConfigToAddMod methods */
void   streaming_protobufs__report_config_to_add_mod__init
                     (StreamingProtobufs__ReportConfigToAddMod         *message);
size_t streaming_protobufs__report_config_to_add_mod__get_packed_size
                     (const StreamingProtobufs__ReportConfigToAddMod   *message);
size_t streaming_protobufs__report_config_to_add_mod__pack
                     (const StreamingProtobufs__ReportConfigToAddMod   *message,
                      uint8_t             *out);
size_t streaming_protobufs__report_config_to_add_mod__pack_to_buffer
                     (const StreamingProtobufs__ReportConfigToAddMod   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ReportConfigToAddMod *
       streaming_protobufs__report_config_to_add_mod__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__report_config_to_add_mod__free_unpacked
                     (StreamingProtobufs__ReportConfigToAddMod *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ReportConfigNR methods */
void   streaming_protobufs__report_config_nr__init
                     (StreamingProtobufs__ReportConfigNR         *message);
size_t streaming_protobufs__report_config_nr__get_packed_size
                     (const StreamingProtobufs__ReportConfigNR   *message);
size_t streaming_protobufs__report_config_nr__pack
                     (const StreamingProtobufs__ReportConfigNR   *message,
                      uint8_t             *out);
size_t streaming_protobufs__report_config_nr__pack_to_buffer
                     (const StreamingProtobufs__ReportConfigNR   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ReportConfigNR *
       streaming_protobufs__report_config_nr__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__report_config_nr__free_unpacked
                     (StreamingProtobufs__ReportConfigNR *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PeriodicalReportConfig methods */
void   streaming_protobufs__periodical_report_config__init
                     (StreamingProtobufs__PeriodicalReportConfig         *message);
size_t streaming_protobufs__periodical_report_config__get_packed_size
                     (const StreamingProtobufs__PeriodicalReportConfig   *message);
size_t streaming_protobufs__periodical_report_config__pack
                     (const StreamingProtobufs__PeriodicalReportConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__periodical_report_config__pack_to_buffer
                     (const StreamingProtobufs__PeriodicalReportConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PeriodicalReportConfig *
       streaming_protobufs__periodical_report_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__periodical_report_config__free_unpacked
                     (StreamingProtobufs__PeriodicalReportConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__NRRSType methods */
void   streaming_protobufs__nr__rs__type__init
                     (StreamingProtobufs__NRRSType         *message);
size_t streaming_protobufs__nr__rs__type__get_packed_size
                     (const StreamingProtobufs__NRRSType   *message);
size_t streaming_protobufs__nr__rs__type__pack
                     (const StreamingProtobufs__NRRSType   *message,
                      uint8_t             *out);
size_t streaming_protobufs__nr__rs__type__pack_to_buffer
                     (const StreamingProtobufs__NRRSType   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__NRRSType *
       streaming_protobufs__nr__rs__type__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__nr__rs__type__free_unpacked
                     (StreamingProtobufs__NRRSType *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__NRFreqInfo methods */
void   streaming_protobufs__nr__freq_info__init
                     (StreamingProtobufs__NRFreqInfo         *message);
size_t streaming_protobufs__nr__freq_info__get_packed_size
                     (const StreamingProtobufs__NRFreqInfo   *message);
size_t streaming_protobufs__nr__freq_info__pack
                     (const StreamingProtobufs__NRFreqInfo   *message,
                      uint8_t             *out);
size_t streaming_protobufs__nr__freq_info__pack_to_buffer
                     (const StreamingProtobufs__NRFreqInfo   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__NRFreqInfo *
       streaming_protobufs__nr__freq_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__nr__freq_info__free_unpacked
                     (StreamingProtobufs__NRFreqInfo *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ReportInterval methods */
void   streaming_protobufs__report_interval__init
                     (StreamingProtobufs__ReportInterval         *message);
size_t streaming_protobufs__report_interval__get_packed_size
                     (const StreamingProtobufs__ReportInterval   *message);
size_t streaming_protobufs__report_interval__pack
                     (const StreamingProtobufs__ReportInterval   *message,
                      uint8_t             *out);
size_t streaming_protobufs__report_interval__pack_to_buffer
                     (const StreamingProtobufs__ReportInterval   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ReportInterval *
       streaming_protobufs__report_interval__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__report_interval__free_unpacked
                     (StreamingProtobufs__ReportInterval *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ReportAmount methods */
void   streaming_protobufs__report_amount__init
                     (StreamingProtobufs__ReportAmount         *message);
size_t streaming_protobufs__report_amount__get_packed_size
                     (const StreamingProtobufs__ReportAmount   *message);
size_t streaming_protobufs__report_amount__pack
                     (const StreamingProtobufs__ReportAmount   *message,
                      uint8_t             *out);
size_t streaming_protobufs__report_amount__pack_to_buffer
                     (const StreamingProtobufs__ReportAmount   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ReportAmount *
       streaming_protobufs__report_amount__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__report_amount__free_unpacked
                     (StreamingProtobufs__ReportAmount *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MeasReportQuantity methods */
void   streaming_protobufs__meas_report_quantity__init
                     (StreamingProtobufs__MeasReportQuantity         *message);
size_t streaming_protobufs__meas_report_quantity__get_packed_size
                     (const StreamingProtobufs__MeasReportQuantity   *message);
size_t streaming_protobufs__meas_report_quantity__pack
                     (const StreamingProtobufs__MeasReportQuantity   *message,
                      uint8_t             *out);
size_t streaming_protobufs__meas_report_quantity__pack_to_buffer
                     (const StreamingProtobufs__MeasReportQuantity   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MeasReportQuantity *
       streaming_protobufs__meas_report_quantity__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__meas_report_quantity__free_unpacked
                     (StreamingProtobufs__MeasReportQuantity *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__EventTriggerConfig methods */
void   streaming_protobufs__event_trigger_config__init
                     (StreamingProtobufs__EventTriggerConfig         *message);
size_t streaming_protobufs__event_trigger_config__get_packed_size
                     (const StreamingProtobufs__EventTriggerConfig   *message);
size_t streaming_protobufs__event_trigger_config__pack
                     (const StreamingProtobufs__EventTriggerConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__event_trigger_config__pack_to_buffer
                     (const StreamingProtobufs__EventTriggerConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__EventTriggerConfig *
       streaming_protobufs__event_trigger_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__event_trigger_config__free_unpacked
                     (StreamingProtobufs__EventTriggerConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__EventA1 methods */
void   streaming_protobufs__event_a1__init
                     (StreamingProtobufs__EventA1         *message);
size_t streaming_protobufs__event_a1__get_packed_size
                     (const StreamingProtobufs__EventA1   *message);
size_t streaming_protobufs__event_a1__pack
                     (const StreamingProtobufs__EventA1   *message,
                      uint8_t             *out);
size_t streaming_protobufs__event_a1__pack_to_buffer
                     (const StreamingProtobufs__EventA1   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__EventA1 *
       streaming_protobufs__event_a1__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__event_a1__free_unpacked
                     (StreamingProtobufs__EventA1 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__EventA2 methods */
void   streaming_protobufs__event_a2__init
                     (StreamingProtobufs__EventA2         *message);
size_t streaming_protobufs__event_a2__get_packed_size
                     (const StreamingProtobufs__EventA2   *message);
size_t streaming_protobufs__event_a2__pack
                     (const StreamingProtobufs__EventA2   *message,
                      uint8_t             *out);
size_t streaming_protobufs__event_a2__pack_to_buffer
                     (const StreamingProtobufs__EventA2   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__EventA2 *
       streaming_protobufs__event_a2__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__event_a2__free_unpacked
                     (StreamingProtobufs__EventA2 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__EventA3 methods */
void   streaming_protobufs__event_a3__init
                     (StreamingProtobufs__EventA3         *message);
size_t streaming_protobufs__event_a3__get_packed_size
                     (const StreamingProtobufs__EventA3   *message);
size_t streaming_protobufs__event_a3__pack
                     (const StreamingProtobufs__EventA3   *message,
                      uint8_t             *out);
size_t streaming_protobufs__event_a3__pack_to_buffer
                     (const StreamingProtobufs__EventA3   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__EventA3 *
       streaming_protobufs__event_a3__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__event_a3__free_unpacked
                     (StreamingProtobufs__EventA3 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__EventA4 methods */
void   streaming_protobufs__event_a4__init
                     (StreamingProtobufs__EventA4         *message);
size_t streaming_protobufs__event_a4__get_packed_size
                     (const StreamingProtobufs__EventA4   *message);
size_t streaming_protobufs__event_a4__pack
                     (const StreamingProtobufs__EventA4   *message,
                      uint8_t             *out);
size_t streaming_protobufs__event_a4__pack_to_buffer
                     (const StreamingProtobufs__EventA4   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__EventA4 *
       streaming_protobufs__event_a4__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__event_a4__free_unpacked
                     (StreamingProtobufs__EventA4 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__EventA5 methods */
void   streaming_protobufs__event_a5__init
                     (StreamingProtobufs__EventA5         *message);
size_t streaming_protobufs__event_a5__get_packed_size
                     (const StreamingProtobufs__EventA5   *message);
size_t streaming_protobufs__event_a5__pack
                     (const StreamingProtobufs__EventA5   *message,
                      uint8_t             *out);
size_t streaming_protobufs__event_a5__pack_to_buffer
                     (const StreamingProtobufs__EventA5   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__EventA5 *
       streaming_protobufs__event_a5__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__event_a5__free_unpacked
                     (StreamingProtobufs__EventA5 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__EventA6 methods */
void   streaming_protobufs__event_a6__init
                     (StreamingProtobufs__EventA6         *message);
size_t streaming_protobufs__event_a6__get_packed_size
                     (const StreamingProtobufs__EventA6   *message);
size_t streaming_protobufs__event_a6__pack
                     (const StreamingProtobufs__EventA6   *message,
                      uint8_t             *out);
size_t streaming_protobufs__event_a6__pack_to_buffer
                     (const StreamingProtobufs__EventA6   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__EventA6 *
       streaming_protobufs__event_a6__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__event_a6__free_unpacked
                     (StreamingProtobufs__EventA6 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MeasTriggerQuantity methods */
void   streaming_protobufs__meas_trigger_quantity__init
                     (StreamingProtobufs__MeasTriggerQuantity         *message);
size_t streaming_protobufs__meas_trigger_quantity__get_packed_size
                     (const StreamingProtobufs__MeasTriggerQuantity   *message);
size_t streaming_protobufs__meas_trigger_quantity__pack
                     (const StreamingProtobufs__MeasTriggerQuantity   *message,
                      uint8_t             *out);
size_t streaming_protobufs__meas_trigger_quantity__pack_to_buffer
                     (const StreamingProtobufs__MeasTriggerQuantity   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MeasTriggerQuantity *
       streaming_protobufs__meas_trigger_quantity__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__meas_trigger_quantity__free_unpacked
                     (StreamingProtobufs__MeasTriggerQuantity *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__TimeToTrigger methods */
void   streaming_protobufs__time_to_trigger__init
                     (StreamingProtobufs__TimeToTrigger         *message);
size_t streaming_protobufs__time_to_trigger__get_packed_size
                     (const StreamingProtobufs__TimeToTrigger   *message);
size_t streaming_protobufs__time_to_trigger__pack
                     (const StreamingProtobufs__TimeToTrigger   *message,
                      uint8_t             *out);
size_t streaming_protobufs__time_to_trigger__pack_to_buffer
                     (const StreamingProtobufs__TimeToTrigger   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__TimeToTrigger *
       streaming_protobufs__time_to_trigger__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__time_to_trigger__free_unpacked
                     (StreamingProtobufs__TimeToTrigger *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MeasTriggerQuantityOffset methods */
void   streaming_protobufs__meas_trigger_quantity_offset__init
                     (StreamingProtobufs__MeasTriggerQuantityOffset         *message);
size_t streaming_protobufs__meas_trigger_quantity_offset__get_packed_size
                     (const StreamingProtobufs__MeasTriggerQuantityOffset   *message);
size_t streaming_protobufs__meas_trigger_quantity_offset__pack
                     (const StreamingProtobufs__MeasTriggerQuantityOffset   *message,
                      uint8_t             *out);
size_t streaming_protobufs__meas_trigger_quantity_offset__pack_to_buffer
                     (const StreamingProtobufs__MeasTriggerQuantityOffset   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MeasTriggerQuantityOffset *
       streaming_protobufs__meas_trigger_quantity_offset__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__meas_trigger_quantity_offset__free_unpacked
                     (StreamingProtobufs__MeasTriggerQuantityOffset *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ReportAddNeighMeas methods */
void   streaming_protobufs__report_add_neigh_meas__init
                     (StreamingProtobufs__ReportAddNeighMeas         *message);
size_t streaming_protobufs__report_add_neigh_meas__get_packed_size
                     (const StreamingProtobufs__ReportAddNeighMeas   *message);
size_t streaming_protobufs__report_add_neigh_meas__pack
                     (const StreamingProtobufs__ReportAddNeighMeas   *message,
                      uint8_t             *out);
size_t streaming_protobufs__report_add_neigh_meas__pack_to_buffer
                     (const StreamingProtobufs__ReportAddNeighMeas   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ReportAddNeighMeas *
       streaming_protobufs__report_add_neigh_meas__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__report_add_neigh_meas__free_unpacked
                     (StreamingProtobufs__ReportAddNeighMeas *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ReportCGI methods */
void   streaming_protobufs__report_cgi__init
                     (StreamingProtobufs__ReportCGI         *message);
size_t streaming_protobufs__report_cgi__get_packed_size
                     (const StreamingProtobufs__ReportCGI   *message);
size_t streaming_protobufs__report_cgi__pack
                     (const StreamingProtobufs__ReportCGI   *message,
                      uint8_t             *out);
size_t streaming_protobufs__report_cgi__pack_to_buffer
                     (const StreamingProtobufs__ReportCGI   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ReportCGI *
       streaming_protobufs__report_cgi__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__report_cgi__free_unpacked
                     (StreamingProtobufs__ReportCGI *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ReportConfigInterRAT methods */
void   streaming_protobufs__report_config_inter_rat__init
                     (StreamingProtobufs__ReportConfigInterRAT         *message);
size_t streaming_protobufs__report_config_inter_rat__get_packed_size
                     (const StreamingProtobufs__ReportConfigInterRAT   *message);
size_t streaming_protobufs__report_config_inter_rat__pack
                     (const StreamingProtobufs__ReportConfigInterRAT   *message,
                      uint8_t             *out);
size_t streaming_protobufs__report_config_inter_rat__pack_to_buffer
                     (const StreamingProtobufs__ReportConfigInterRAT   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ReportConfigInterRAT *
       streaming_protobufs__report_config_inter_rat__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__report_config_inter_rat__free_unpacked
                     (StreamingProtobufs__ReportConfigInterRAT *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PeriodicalReportConfigInterRAT methods */
void   streaming_protobufs__periodical_report_config_inter_rat__init
                     (StreamingProtobufs__PeriodicalReportConfigInterRAT         *message);
size_t streaming_protobufs__periodical_report_config_inter_rat__get_packed_size
                     (const StreamingProtobufs__PeriodicalReportConfigInterRAT   *message);
size_t streaming_protobufs__periodical_report_config_inter_rat__pack
                     (const StreamingProtobufs__PeriodicalReportConfigInterRAT   *message,
                      uint8_t             *out);
size_t streaming_protobufs__periodical_report_config_inter_rat__pack_to_buffer
                     (const StreamingProtobufs__PeriodicalReportConfigInterRAT   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PeriodicalReportConfigInterRAT *
       streaming_protobufs__periodical_report_config_inter_rat__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__periodical_report_config_inter_rat__free_unpacked
                     (StreamingProtobufs__PeriodicalReportConfigInterRAT *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__EventTriggerConfigInterRAT methods */
void   streaming_protobufs__event_trigger_config_inter_rat__init
                     (StreamingProtobufs__EventTriggerConfigInterRAT         *message);
size_t streaming_protobufs__event_trigger_config_inter_rat__get_packed_size
                     (const StreamingProtobufs__EventTriggerConfigInterRAT   *message);
size_t streaming_protobufs__event_trigger_config_inter_rat__pack
                     (const StreamingProtobufs__EventTriggerConfigInterRAT   *message,
                      uint8_t             *out);
size_t streaming_protobufs__event_trigger_config_inter_rat__pack_to_buffer
                     (const StreamingProtobufs__EventTriggerConfigInterRAT   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__EventTriggerConfigInterRAT *
       streaming_protobufs__event_trigger_config_inter_rat__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__event_trigger_config_inter_rat__free_unpacked
                     (StreamingProtobufs__EventTriggerConfigInterRAT *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__EventB1 methods */
void   streaming_protobufs__event_b1__init
                     (StreamingProtobufs__EventB1         *message);
size_t streaming_protobufs__event_b1__get_packed_size
                     (const StreamingProtobufs__EventB1   *message);
size_t streaming_protobufs__event_b1__pack
                     (const StreamingProtobufs__EventB1   *message,
                      uint8_t             *out);
size_t streaming_protobufs__event_b1__pack_to_buffer
                     (const StreamingProtobufs__EventB1   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__EventB1 *
       streaming_protobufs__event_b1__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__event_b1__free_unpacked
                     (StreamingProtobufs__EventB1 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__EventB2 methods */
void   streaming_protobufs__event_b2__init
                     (StreamingProtobufs__EventB2         *message);
size_t streaming_protobufs__event_b2__get_packed_size
                     (const StreamingProtobufs__EventB2   *message);
size_t streaming_protobufs__event_b2__pack
                     (const StreamingProtobufs__EventB2   *message,
                      uint8_t             *out);
size_t streaming_protobufs__event_b2__pack_to_buffer
                     (const StreamingProtobufs__EventB2   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__EventB2 *
       streaming_protobufs__event_b2__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__event_b2__free_unpacked
                     (StreamingProtobufs__EventB2 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MeasTriggerQuantityEUTRA methods */
void   streaming_protobufs__meas_trigger_quantity_eutra__init
                     (StreamingProtobufs__MeasTriggerQuantityEUTRA         *message);
size_t streaming_protobufs__meas_trigger_quantity_eutra__get_packed_size
                     (const StreamingProtobufs__MeasTriggerQuantityEUTRA   *message);
size_t streaming_protobufs__meas_trigger_quantity_eutra__pack
                     (const StreamingProtobufs__MeasTriggerQuantityEUTRA   *message,
                      uint8_t             *out);
size_t streaming_protobufs__meas_trigger_quantity_eutra__pack_to_buffer
                     (const StreamingProtobufs__MeasTriggerQuantityEUTRA   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MeasTriggerQuantityEUTRA *
       streaming_protobufs__meas_trigger_quantity_eutra__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__meas_trigger_quantity_eutra__free_unpacked
                     (StreamingProtobufs__MeasTriggerQuantityEUTRA *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ReportCGIEUTRA methods */
void   streaming_protobufs__report_cgi__eutra__init
                     (StreamingProtobufs__ReportCGIEUTRA         *message);
size_t streaming_protobufs__report_cgi__eutra__get_packed_size
                     (const StreamingProtobufs__ReportCGIEUTRA   *message);
size_t streaming_protobufs__report_cgi__eutra__pack
                     (const StreamingProtobufs__ReportCGIEUTRA   *message,
                      uint8_t             *out);
size_t streaming_protobufs__report_cgi__eutra__pack_to_buffer
                     (const StreamingProtobufs__ReportCGIEUTRA   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ReportCGIEUTRA *
       streaming_protobufs__report_cgi__eutra__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__report_cgi__eutra__free_unpacked
                     (StreamingProtobufs__ReportCGIEUTRA *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MeasIdToAddMod methods */
void   streaming_protobufs__meas_id_to_add_mod__init
                     (StreamingProtobufs__MeasIdToAddMod         *message);
size_t streaming_protobufs__meas_id_to_add_mod__get_packed_size
                     (const StreamingProtobufs__MeasIdToAddMod   *message);
size_t streaming_protobufs__meas_id_to_add_mod__pack
                     (const StreamingProtobufs__MeasIdToAddMod   *message,
                      uint8_t             *out);
size_t streaming_protobufs__meas_id_to_add_mod__pack_to_buffer
                     (const StreamingProtobufs__MeasIdToAddMod   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MeasIdToAddMod *
       streaming_protobufs__meas_id_to_add_mod__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__meas_id_to_add_mod__free_unpacked
                     (StreamingProtobufs__MeasIdToAddMod *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__QuantityConfig methods */
void   streaming_protobufs__quantity_config__init
                     (StreamingProtobufs__QuantityConfig         *message);
size_t streaming_protobufs__quantity_config__get_packed_size
                     (const StreamingProtobufs__QuantityConfig   *message);
size_t streaming_protobufs__quantity_config__pack
                     (const StreamingProtobufs__QuantityConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__quantity_config__pack_to_buffer
                     (const StreamingProtobufs__QuantityConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__QuantityConfig *
       streaming_protobufs__quantity_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__quantity_config__free_unpacked
                     (StreamingProtobufs__QuantityConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__QuantityConfigNR methods */
void   streaming_protobufs__quantity_config_nr__init
                     (StreamingProtobufs__QuantityConfigNR         *message);
size_t streaming_protobufs__quantity_config_nr__get_packed_size
                     (const StreamingProtobufs__QuantityConfigNR   *message);
size_t streaming_protobufs__quantity_config_nr__pack
                     (const StreamingProtobufs__QuantityConfigNR   *message,
                      uint8_t             *out);
size_t streaming_protobufs__quantity_config_nr__pack_to_buffer
                     (const StreamingProtobufs__QuantityConfigNR   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__QuantityConfigNR *
       streaming_protobufs__quantity_config_nr__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__quantity_config_nr__free_unpacked
                     (StreamingProtobufs__QuantityConfigNR *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__QuantityConfigRS methods */
void   streaming_protobufs__quantity_config_rs__init
                     (StreamingProtobufs__QuantityConfigRS         *message);
size_t streaming_protobufs__quantity_config_rs__get_packed_size
                     (const StreamingProtobufs__QuantityConfigRS   *message);
size_t streaming_protobufs__quantity_config_rs__pack
                     (const StreamingProtobufs__QuantityConfigRS   *message,
                      uint8_t             *out);
size_t streaming_protobufs__quantity_config_rs__pack_to_buffer
                     (const StreamingProtobufs__QuantityConfigRS   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__QuantityConfigRS *
       streaming_protobufs__quantity_config_rs__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__quantity_config_rs__free_unpacked
                     (StreamingProtobufs__QuantityConfigRS *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__FilterConfig methods */
void   streaming_protobufs__filter_config__init
                     (StreamingProtobufs__FilterConfig         *message);
size_t streaming_protobufs__filter_config__get_packed_size
                     (const StreamingProtobufs__FilterConfig   *message);
size_t streaming_protobufs__filter_config__pack
                     (const StreamingProtobufs__FilterConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__filter_config__pack_to_buffer
                     (const StreamingProtobufs__FilterConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__FilterConfig *
       streaming_protobufs__filter_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__filter_config__free_unpacked
                     (StreamingProtobufs__FilterConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__FilterCoefficient methods */
void   streaming_protobufs__filter_coefficient__init
                     (StreamingProtobufs__FilterCoefficient         *message);
size_t streaming_protobufs__filter_coefficient__get_packed_size
                     (const StreamingProtobufs__FilterCoefficient   *message);
size_t streaming_protobufs__filter_coefficient__pack
                     (const StreamingProtobufs__FilterCoefficient   *message,
                      uint8_t             *out);
size_t streaming_protobufs__filter_coefficient__pack_to_buffer
                     (const StreamingProtobufs__FilterCoefficient   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__FilterCoefficient *
       streaming_protobufs__filter_coefficient__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__filter_coefficient__free_unpacked
                     (StreamingProtobufs__FilterCoefficient *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MeasGapConfig methods */
void   streaming_protobufs__meas_gap_config__init
                     (StreamingProtobufs__MeasGapConfig         *message);
size_t streaming_protobufs__meas_gap_config__get_packed_size
                     (const StreamingProtobufs__MeasGapConfig   *message);
size_t streaming_protobufs__meas_gap_config__pack
                     (const StreamingProtobufs__MeasGapConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__meas_gap_config__pack_to_buffer
                     (const StreamingProtobufs__MeasGapConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MeasGapConfig *
       streaming_protobufs__meas_gap_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__meas_gap_config__free_unpacked
                     (StreamingProtobufs__MeasGapConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__GapConfig methods */
void   streaming_protobufs__gap_config__init
                     (StreamingProtobufs__GapConfig         *message);
size_t streaming_protobufs__gap_config__get_packed_size
                     (const StreamingProtobufs__GapConfig   *message);
size_t streaming_protobufs__gap_config__pack
                     (const StreamingProtobufs__GapConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__gap_config__pack_to_buffer
                     (const StreamingProtobufs__GapConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__GapConfig *
       streaming_protobufs__gap_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__gap_config__free_unpacked
                     (StreamingProtobufs__GapConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MGL methods */
void   streaming_protobufs__mgl__init
                     (StreamingProtobufs__MGL         *message);
size_t streaming_protobufs__mgl__get_packed_size
                     (const StreamingProtobufs__MGL   *message);
size_t streaming_protobufs__mgl__pack
                     (const StreamingProtobufs__MGL   *message,
                      uint8_t             *out);
size_t streaming_protobufs__mgl__pack_to_buffer
                     (const StreamingProtobufs__MGL   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MGL *
       streaming_protobufs__mgl__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__mgl__free_unpacked
                     (StreamingProtobufs__MGL *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MGRP methods */
void   streaming_protobufs__mgrp__init
                     (StreamingProtobufs__MGRP         *message);
size_t streaming_protobufs__mgrp__get_packed_size
                     (const StreamingProtobufs__MGRP   *message);
size_t streaming_protobufs__mgrp__pack
                     (const StreamingProtobufs__MGRP   *message,
                      uint8_t             *out);
size_t streaming_protobufs__mgrp__pack_to_buffer
                     (const StreamingProtobufs__MGRP   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MGRP *
       streaming_protobufs__mgrp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__mgrp__free_unpacked
                     (StreamingProtobufs__MGRP *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MGTA methods */
void   streaming_protobufs__mgta__init
                     (StreamingProtobufs__MGTA         *message);
size_t streaming_protobufs__mgta__get_packed_size
                     (const StreamingProtobufs__MGTA   *message);
size_t streaming_protobufs__mgta__pack
                     (const StreamingProtobufs__MGTA   *message,
                      uint8_t             *out);
size_t streaming_protobufs__mgta__pack_to_buffer
                     (const StreamingProtobufs__MGTA   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MGTA *
       streaming_protobufs__mgta__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__mgta__free_unpacked
                     (StreamingProtobufs__MGTA *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MeasGapSharingConfig methods */
void   streaming_protobufs__meas_gap_sharing_config__init
                     (StreamingProtobufs__MeasGapSharingConfig         *message);
size_t streaming_protobufs__meas_gap_sharing_config__get_packed_size
                     (const StreamingProtobufs__MeasGapSharingConfig   *message);
size_t streaming_protobufs__meas_gap_sharing_config__pack
                     (const StreamingProtobufs__MeasGapSharingConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__meas_gap_sharing_config__pack_to_buffer
                     (const StreamingProtobufs__MeasGapSharingConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MeasGapSharingConfig *
       streaming_protobufs__meas_gap_sharing_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__meas_gap_sharing_config__free_unpacked
                     (StreamingProtobufs__MeasGapSharingConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MeasGapSharingScheme methods */
void   streaming_protobufs__meas_gap_sharing_scheme__init
                     (StreamingProtobufs__MeasGapSharingScheme         *message);
size_t streaming_protobufs__meas_gap_sharing_scheme__get_packed_size
                     (const StreamingProtobufs__MeasGapSharingScheme   *message);
size_t streaming_protobufs__meas_gap_sharing_scheme__pack
                     (const StreamingProtobufs__MeasGapSharingScheme   *message,
                      uint8_t             *out);
size_t streaming_protobufs__meas_gap_sharing_scheme__pack_to_buffer
                     (const StreamingProtobufs__MeasGapSharingScheme   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MeasGapSharingScheme *
       streaming_protobufs__meas_gap_sharing_scheme__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__meas_gap_sharing_scheme__free_unpacked
                     (StreamingProtobufs__MeasGapSharingScheme *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__OtherConfig methods */
void   streaming_protobufs__other_config__init
                     (StreamingProtobufs__OtherConfig         *message);
size_t streaming_protobufs__other_config__get_packed_size
                     (const StreamingProtobufs__OtherConfig   *message);
size_t streaming_protobufs__other_config__pack
                     (const StreamingProtobufs__OtherConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__other_config__pack_to_buffer
                     (const StreamingProtobufs__OtherConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__OtherConfig *
       streaming_protobufs__other_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__other_config__free_unpacked
                     (StreamingProtobufs__OtherConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__DelayBudgetReportingProhibitTimer methods */
void   streaming_protobufs__delay_budget_reporting_prohibit_timer__init
                     (StreamingProtobufs__DelayBudgetReportingProhibitTimer         *message);
size_t streaming_protobufs__delay_budget_reporting_prohibit_timer__get_packed_size
                     (const StreamingProtobufs__DelayBudgetReportingProhibitTimer   *message);
size_t streaming_protobufs__delay_budget_reporting_prohibit_timer__pack
                     (const StreamingProtobufs__DelayBudgetReportingProhibitTimer   *message,
                      uint8_t             *out);
size_t streaming_protobufs__delay_budget_reporting_prohibit_timer__pack_to_buffer
                     (const StreamingProtobufs__DelayBudgetReportingProhibitTimer   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__DelayBudgetReportingProhibitTimer *
       streaming_protobufs__delay_budget_reporting_prohibit_timer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__delay_budget_reporting_prohibit_timer__free_unpacked
                     (StreamingProtobufs__DelayBudgetReportingProhibitTimer *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__OtherConfigV1540 methods */
void   streaming_protobufs__other_config_v1540__init
                     (StreamingProtobufs__OtherConfigV1540         *message);
size_t streaming_protobufs__other_config_v1540__get_packed_size
                     (const StreamingProtobufs__OtherConfigV1540   *message);
size_t streaming_protobufs__other_config_v1540__pack
                     (const StreamingProtobufs__OtherConfigV1540   *message,
                      uint8_t             *out);
size_t streaming_protobufs__other_config_v1540__pack_to_buffer
                     (const StreamingProtobufs__OtherConfigV1540   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__OtherConfigV1540 *
       streaming_protobufs__other_config_v1540__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__other_config_v1540__free_unpacked
                     (StreamingProtobufs__OtherConfigV1540 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__OverheatingAssistanceConfig methods */
void   streaming_protobufs__overheating_assistance_config__init
                     (StreamingProtobufs__OverheatingAssistanceConfig         *message);
size_t streaming_protobufs__overheating_assistance_config__get_packed_size
                     (const StreamingProtobufs__OverheatingAssistanceConfig   *message);
size_t streaming_protobufs__overheating_assistance_config__pack
                     (const StreamingProtobufs__OverheatingAssistanceConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__overheating_assistance_config__pack_to_buffer
                     (const StreamingProtobufs__OverheatingAssistanceConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__OverheatingAssistanceConfig *
       streaming_protobufs__overheating_assistance_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__overheating_assistance_config__free_unpacked
                     (StreamingProtobufs__OverheatingAssistanceConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SCellConfig methods */
void   streaming_protobufs__scell_config__init
                     (StreamingProtobufs__SCellConfig         *message);
size_t streaming_protobufs__scell_config__get_packed_size
                     (const StreamingProtobufs__SCellConfig   *message);
size_t streaming_protobufs__scell_config__pack
                     (const StreamingProtobufs__SCellConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__scell_config__pack_to_buffer
                     (const StreamingProtobufs__SCellConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SCellConfig *
       streaming_protobufs__scell_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__scell_config__free_unpacked
                     (StreamingProtobufs__SCellConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SearchSpace methods */
void   streaming_protobufs__search_space__init
                     (StreamingProtobufs__SearchSpace         *message);
size_t streaming_protobufs__search_space__get_packed_size
                     (const StreamingProtobufs__SearchSpace   *message);
size_t streaming_protobufs__search_space__pack
                     (const StreamingProtobufs__SearchSpace   *message,
                      uint8_t             *out);
size_t streaming_protobufs__search_space__pack_to_buffer
                     (const StreamingProtobufs__SearchSpace   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SearchSpace *
       streaming_protobufs__search_space__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__search_space__free_unpacked
                     (StreamingProtobufs__SearchSpace *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__NrofCandidates methods */
void   streaming_protobufs__nrof_candidates__init
                     (StreamingProtobufs__NrofCandidates         *message);
size_t streaming_protobufs__nrof_candidates__get_packed_size
                     (const StreamingProtobufs__NrofCandidates   *message);
size_t streaming_protobufs__nrof_candidates__pack
                     (const StreamingProtobufs__NrofCandidates   *message,
                      uint8_t             *out);
size_t streaming_protobufs__nrof_candidates__pack_to_buffer
                     (const StreamingProtobufs__NrofCandidates   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__NrofCandidates *
       streaming_protobufs__nrof_candidates__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__nrof_candidates__free_unpacked
                     (StreamingProtobufs__NrofCandidates *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__AggregationLevel methods */
void   streaming_protobufs__aggregation_level__init
                     (StreamingProtobufs__AggregationLevel         *message);
size_t streaming_protobufs__aggregation_level__get_packed_size
                     (const StreamingProtobufs__AggregationLevel   *message);
size_t streaming_protobufs__aggregation_level__pack
                     (const StreamingProtobufs__AggregationLevel   *message,
                      uint8_t             *out);
size_t streaming_protobufs__aggregation_level__pack_to_buffer
                     (const StreamingProtobufs__AggregationLevel   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__AggregationLevel *
       streaming_protobufs__aggregation_level__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__aggregation_level__free_unpacked
                     (StreamingProtobufs__AggregationLevel *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__Common methods */
void   streaming_protobufs__common__init
                     (StreamingProtobufs__Common         *message);
size_t streaming_protobufs__common__get_packed_size
                     (const StreamingProtobufs__Common   *message);
size_t streaming_protobufs__common__pack
                     (const StreamingProtobufs__Common   *message,
                      uint8_t             *out);
size_t streaming_protobufs__common__pack_to_buffer
                     (const StreamingProtobufs__Common   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__Common *
       streaming_protobufs__common__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__common__free_unpacked
                     (StreamingProtobufs__Common *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__DCIFormat00AndFormat10 methods */
void   streaming_protobufs__dci__format0_0__and_format1_0__init
                     (StreamingProtobufs__DCIFormat00AndFormat10         *message);
size_t streaming_protobufs__dci__format0_0__and_format1_0__get_packed_size
                     (const StreamingProtobufs__DCIFormat00AndFormat10   *message);
size_t streaming_protobufs__dci__format0_0__and_format1_0__pack
                     (const StreamingProtobufs__DCIFormat00AndFormat10   *message,
                      uint8_t             *out);
size_t streaming_protobufs__dci__format0_0__and_format1_0__pack_to_buffer
                     (const StreamingProtobufs__DCIFormat00AndFormat10   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__DCIFormat00AndFormat10 *
       streaming_protobufs__dci__format0_0__and_format1_0__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__dci__format0_0__and_format1_0__free_unpacked
                     (StreamingProtobufs__DCIFormat00AndFormat10 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__DCIFormat20 methods */
void   streaming_protobufs__dci__format2_0__init
                     (StreamingProtobufs__DCIFormat20         *message);
size_t streaming_protobufs__dci__format2_0__get_packed_size
                     (const StreamingProtobufs__DCIFormat20   *message);
size_t streaming_protobufs__dci__format2_0__pack
                     (const StreamingProtobufs__DCIFormat20   *message,
                      uint8_t             *out);
size_t streaming_protobufs__dci__format2_0__pack_to_buffer
                     (const StreamingProtobufs__DCIFormat20   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__DCIFormat20 *
       streaming_protobufs__dci__format2_0__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__dci__format2_0__free_unpacked
                     (StreamingProtobufs__DCIFormat20 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__NrofCandidatesSFI methods */
void   streaming_protobufs__nrof_candidates__sfi__init
                     (StreamingProtobufs__NrofCandidatesSFI         *message);
size_t streaming_protobufs__nrof_candidates__sfi__get_packed_size
                     (const StreamingProtobufs__NrofCandidatesSFI   *message);
size_t streaming_protobufs__nrof_candidates__sfi__pack
                     (const StreamingProtobufs__NrofCandidatesSFI   *message,
                      uint8_t             *out);
size_t streaming_protobufs__nrof_candidates__sfi__pack_to_buffer
                     (const StreamingProtobufs__NrofCandidatesSFI   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__NrofCandidatesSFI *
       streaming_protobufs__nrof_candidates__sfi__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__nrof_candidates__sfi__free_unpacked
                     (StreamingProtobufs__NrofCandidatesSFI *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__AggregationLevelSFI methods */
void   streaming_protobufs__aggregation_level__sfi__init
                     (StreamingProtobufs__AggregationLevelSFI         *message);
size_t streaming_protobufs__aggregation_level__sfi__get_packed_size
                     (const StreamingProtobufs__AggregationLevelSFI   *message);
size_t streaming_protobufs__aggregation_level__sfi__pack
                     (const StreamingProtobufs__AggregationLevelSFI   *message,
                      uint8_t             *out);
size_t streaming_protobufs__aggregation_level__sfi__pack_to_buffer
                     (const StreamingProtobufs__AggregationLevelSFI   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__AggregationLevelSFI *
       streaming_protobufs__aggregation_level__sfi__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__aggregation_level__sfi__free_unpacked
                     (StreamingProtobufs__AggregationLevelSFI *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__DCIFormat21 methods */
void   streaming_protobufs__dci__format2_1__init
                     (StreamingProtobufs__DCIFormat21         *message);
size_t streaming_protobufs__dci__format2_1__get_packed_size
                     (const StreamingProtobufs__DCIFormat21   *message);
size_t streaming_protobufs__dci__format2_1__pack
                     (const StreamingProtobufs__DCIFormat21   *message,
                      uint8_t             *out);
size_t streaming_protobufs__dci__format2_1__pack_to_buffer
                     (const StreamingProtobufs__DCIFormat21   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__DCIFormat21 *
       streaming_protobufs__dci__format2_1__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__dci__format2_1__free_unpacked
                     (StreamingProtobufs__DCIFormat21 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__DCIFormat22 methods */
void   streaming_protobufs__dci__format2_2__init
                     (StreamingProtobufs__DCIFormat22         *message);
size_t streaming_protobufs__dci__format2_2__get_packed_size
                     (const StreamingProtobufs__DCIFormat22   *message);
size_t streaming_protobufs__dci__format2_2__pack
                     (const StreamingProtobufs__DCIFormat22   *message,
                      uint8_t             *out);
size_t streaming_protobufs__dci__format2_2__pack_to_buffer
                     (const StreamingProtobufs__DCIFormat22   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__DCIFormat22 *
       streaming_protobufs__dci__format2_2__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__dci__format2_2__free_unpacked
                     (StreamingProtobufs__DCIFormat22 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__DCIFormat23 methods */
void   streaming_protobufs__dci__format2_3__init
                     (StreamingProtobufs__DCIFormat23         *message);
size_t streaming_protobufs__dci__format2_3__get_packed_size
                     (const StreamingProtobufs__DCIFormat23   *message);
size_t streaming_protobufs__dci__format2_3__pack
                     (const StreamingProtobufs__DCIFormat23   *message,
                      uint8_t             *out);
size_t streaming_protobufs__dci__format2_3__pack_to_buffer
                     (const StreamingProtobufs__DCIFormat23   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__DCIFormat23 *
       streaming_protobufs__dci__format2_3__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__dci__format2_3__free_unpacked
                     (StreamingProtobufs__DCIFormat23 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__Dummy1 methods */
void   streaming_protobufs__dummy1__init
                     (StreamingProtobufs__Dummy1         *message);
size_t streaming_protobufs__dummy1__get_packed_size
                     (const StreamingProtobufs__Dummy1   *message);
size_t streaming_protobufs__dummy1__pack
                     (const StreamingProtobufs__Dummy1   *message,
                      uint8_t             *out);
size_t streaming_protobufs__dummy1__pack_to_buffer
                     (const StreamingProtobufs__Dummy1   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__Dummy1 *
       streaming_protobufs__dummy1__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__dummy1__free_unpacked
                     (StreamingProtobufs__Dummy1 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__Dummy2 methods */
void   streaming_protobufs__dummy2__init
                     (StreamingProtobufs__Dummy2         *message);
size_t streaming_protobufs__dummy2__get_packed_size
                     (const StreamingProtobufs__Dummy2   *message);
size_t streaming_protobufs__dummy2__pack
                     (const StreamingProtobufs__Dummy2   *message,
                      uint8_t             *out);
size_t streaming_protobufs__dummy2__pack_to_buffer
                     (const StreamingProtobufs__Dummy2   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__Dummy2 *
       streaming_protobufs__dummy2__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__dummy2__free_unpacked
                     (StreamingProtobufs__Dummy2 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__UESpecific methods */
void   streaming_protobufs__ue__specific__init
                     (StreamingProtobufs__UESpecific         *message);
size_t streaming_protobufs__ue__specific__get_packed_size
                     (const StreamingProtobufs__UESpecific   *message);
size_t streaming_protobufs__ue__specific__pack
                     (const StreamingProtobufs__UESpecific   *message,
                      uint8_t             *out);
size_t streaming_protobufs__ue__specific__pack_to_buffer
                     (const StreamingProtobufs__UESpecific   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__UESpecific *
       streaming_protobufs__ue__specific__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__ue__specific__free_unpacked
                     (StreamingProtobufs__UESpecific *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__DCIFormats methods */
void   streaming_protobufs__dci__formats__init
                     (StreamingProtobufs__DCIFormats         *message);
size_t streaming_protobufs__dci__formats__get_packed_size
                     (const StreamingProtobufs__DCIFormats   *message);
size_t streaming_protobufs__dci__formats__pack
                     (const StreamingProtobufs__DCIFormats   *message,
                      uint8_t             *out);
size_t streaming_protobufs__dci__formats__pack_to_buffer
                     (const StreamingProtobufs__DCIFormats   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__DCIFormats *
       streaming_protobufs__dci__formats__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__dci__formats__free_unpacked
                     (StreamingProtobufs__DCIFormats *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MeasResultCellListSFTD methods */
void   streaming_protobufs__meas_result_cell_list_sftd__init
                     (StreamingProtobufs__MeasResultCellListSFTD         *message);
size_t streaming_protobufs__meas_result_cell_list_sftd__get_packed_size
                     (const StreamingProtobufs__MeasResultCellListSFTD   *message);
size_t streaming_protobufs__meas_result_cell_list_sftd__pack
                     (const StreamingProtobufs__MeasResultCellListSFTD   *message,
                      uint8_t             *out);
size_t streaming_protobufs__meas_result_cell_list_sftd__pack_to_buffer
                     (const StreamingProtobufs__MeasResultCellListSFTD   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MeasResultCellListSFTD *
       streaming_protobufs__meas_result_cell_list_sftd__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__meas_result_cell_list_sftd__free_unpacked
                     (StreamingProtobufs__MeasResultCellListSFTD *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MeasResultCellSFTD methods */
void   streaming_protobufs__meas_result_cell_sftd__init
                     (StreamingProtobufs__MeasResultCellSFTD         *message);
size_t streaming_protobufs__meas_result_cell_sftd__get_packed_size
                     (const StreamingProtobufs__MeasResultCellSFTD   *message);
size_t streaming_protobufs__meas_result_cell_sftd__pack
                     (const StreamingProtobufs__MeasResultCellSFTD   *message,
                      uint8_t             *out);
size_t streaming_protobufs__meas_result_cell_sftd__pack_to_buffer
                     (const StreamingProtobufs__MeasResultCellSFTD   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MeasResultCellSFTD *
       streaming_protobufs__meas_result_cell_sftd__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__meas_result_cell_sftd__free_unpacked
                     (StreamingProtobufs__MeasResultCellSFTD *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MeasResultList2NR methods */
void   streaming_protobufs__meas_result_list2_nr__init
                     (StreamingProtobufs__MeasResultList2NR         *message);
size_t streaming_protobufs__meas_result_list2_nr__get_packed_size
                     (const StreamingProtobufs__MeasResultList2NR   *message);
size_t streaming_protobufs__meas_result_list2_nr__pack
                     (const StreamingProtobufs__MeasResultList2NR   *message,
                      uint8_t             *out);
size_t streaming_protobufs__meas_result_list2_nr__pack_to_buffer
                     (const StreamingProtobufs__MeasResultList2NR   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MeasResultList2NR *
       streaming_protobufs__meas_result_list2_nr__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__meas_result_list2_nr__free_unpacked
                     (StreamingProtobufs__MeasResultList2NR *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MeasResult2NR methods */
void   streaming_protobufs__meas_result2_nr__init
                     (StreamingProtobufs__MeasResult2NR         *message);
size_t streaming_protobufs__meas_result2_nr__get_packed_size
                     (const StreamingProtobufs__MeasResult2NR   *message);
size_t streaming_protobufs__meas_result2_nr__pack
                     (const StreamingProtobufs__MeasResult2NR   *message,
                      uint8_t             *out);
size_t streaming_protobufs__meas_result2_nr__pack_to_buffer
                     (const StreamingProtobufs__MeasResult2NR   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MeasResult2NR *
       streaming_protobufs__meas_result2_nr__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__meas_result2_nr__free_unpacked
                     (StreamingProtobufs__MeasResult2NR *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MeasQuantityResults methods */
void   streaming_protobufs__meas_quantity_results__init
                     (StreamingProtobufs__MeasQuantityResults         *message);
size_t streaming_protobufs__meas_quantity_results__get_packed_size
                     (const StreamingProtobufs__MeasQuantityResults   *message);
size_t streaming_protobufs__meas_quantity_results__pack
                     (const StreamingProtobufs__MeasQuantityResults   *message,
                      uint8_t             *out);
size_t streaming_protobufs__meas_quantity_results__pack_to_buffer
                     (const StreamingProtobufs__MeasQuantityResults   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MeasQuantityResults *
       streaming_protobufs__meas_quantity_results__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__meas_quantity_results__free_unpacked
                     (StreamingProtobufs__MeasQuantityResults *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ResultsPerSSBIndex methods */
void   streaming_protobufs__results_per_ssb__index__init
                     (StreamingProtobufs__ResultsPerSSBIndex         *message);
size_t streaming_protobufs__results_per_ssb__index__get_packed_size
                     (const StreamingProtobufs__ResultsPerSSBIndex   *message);
size_t streaming_protobufs__results_per_ssb__index__pack
                     (const StreamingProtobufs__ResultsPerSSBIndex   *message,
                      uint8_t             *out);
size_t streaming_protobufs__results_per_ssb__index__pack_to_buffer
                     (const StreamingProtobufs__ResultsPerSSBIndex   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ResultsPerSSBIndex *
       streaming_protobufs__results_per_ssb__index__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__results_per_ssb__index__free_unpacked
                     (StreamingProtobufs__ResultsPerSSBIndex *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ResultsPerCSIRSIndex methods */
void   streaming_protobufs__results_per_csi__rs__index__init
                     (StreamingProtobufs__ResultsPerCSIRSIndex         *message);
size_t streaming_protobufs__results_per_csi__rs__index__get_packed_size
                     (const StreamingProtobufs__ResultsPerCSIRSIndex   *message);
size_t streaming_protobufs__results_per_csi__rs__index__pack
                     (const StreamingProtobufs__ResultsPerCSIRSIndex   *message,
                      uint8_t             *out);
size_t streaming_protobufs__results_per_csi__rs__index__pack_to_buffer
                     (const StreamingProtobufs__ResultsPerCSIRSIndex   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ResultsPerCSIRSIndex *
       streaming_protobufs__results_per_csi__rs__index__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__results_per_csi__rs__index__free_unpacked
                     (StreamingProtobufs__ResultsPerCSIRSIndex *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MeasQuantityResultsEUTRA methods */
void   streaming_protobufs__meas_quantity_results_eutra__init
                     (StreamingProtobufs__MeasQuantityResultsEUTRA         *message);
size_t streaming_protobufs__meas_quantity_results_eutra__get_packed_size
                     (const StreamingProtobufs__MeasQuantityResultsEUTRA   *message);
size_t streaming_protobufs__meas_quantity_results_eutra__pack
                     (const StreamingProtobufs__MeasQuantityResultsEUTRA   *message,
                      uint8_t             *out);
size_t streaming_protobufs__meas_quantity_results_eutra__pack_to_buffer
                     (const StreamingProtobufs__MeasQuantityResultsEUTRA   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MeasQuantityResultsEUTRA *
       streaming_protobufs__meas_quantity_results_eutra__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__meas_quantity_results_eutra__free_unpacked
                     (StreamingProtobufs__MeasQuantityResultsEUTRA *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CellResults methods */
void   streaming_protobufs__cell_results__init
                     (StreamingProtobufs__CellResults         *message);
size_t streaming_protobufs__cell_results__get_packed_size
                     (const StreamingProtobufs__CellResults   *message);
size_t streaming_protobufs__cell_results__pack
                     (const StreamingProtobufs__CellResults   *message,
                      uint8_t             *out);
size_t streaming_protobufs__cell_results__pack_to_buffer
                     (const StreamingProtobufs__CellResults   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CellResults *
       streaming_protobufs__cell_results__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__cell_results__free_unpacked
                     (StreamingProtobufs__CellResults *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ResultsPerCSIRSIndexList methods */
void   streaming_protobufs__results_per_csi__rs__index_list__init
                     (StreamingProtobufs__ResultsPerCSIRSIndexList         *message);
size_t streaming_protobufs__results_per_csi__rs__index_list__get_packed_size
                     (const StreamingProtobufs__ResultsPerCSIRSIndexList   *message);
size_t streaming_protobufs__results_per_csi__rs__index_list__pack
                     (const StreamingProtobufs__ResultsPerCSIRSIndexList   *message,
                      uint8_t             *out);
size_t streaming_protobufs__results_per_csi__rs__index_list__pack_to_buffer
                     (const StreamingProtobufs__ResultsPerCSIRSIndexList   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ResultsPerCSIRSIndexList *
       streaming_protobufs__results_per_csi__rs__index_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__results_per_csi__rs__index_list__free_unpacked
                     (StreamingProtobufs__ResultsPerCSIRSIndexList *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ResultsPerSSBIndexList methods */
void   streaming_protobufs__results_per_ssb__index_list__init
                     (StreamingProtobufs__ResultsPerSSBIndexList         *message);
size_t streaming_protobufs__results_per_ssb__index_list__get_packed_size
                     (const StreamingProtobufs__ResultsPerSSBIndexList   *message);
size_t streaming_protobufs__results_per_ssb__index_list__pack
                     (const StreamingProtobufs__ResultsPerSSBIndexList   *message,
                      uint8_t             *out);
size_t streaming_protobufs__results_per_ssb__index_list__pack_to_buffer
                     (const StreamingProtobufs__ResultsPerSSBIndexList   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ResultsPerSSBIndexList *
       streaming_protobufs__results_per_ssb__index_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__results_per_ssb__index_list__free_unpacked
                     (StreamingProtobufs__ResultsPerSSBIndexList *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__RsIndexResults methods */
void   streaming_protobufs__rs_index_results__init
                     (StreamingProtobufs__RsIndexResults         *message);
size_t streaming_protobufs__rs_index_results__get_packed_size
                     (const StreamingProtobufs__RsIndexResults   *message);
size_t streaming_protobufs__rs_index_results__pack
                     (const StreamingProtobufs__RsIndexResults   *message,
                      uint8_t             *out);
size_t streaming_protobufs__rs_index_results__pack_to_buffer
                     (const StreamingProtobufs__RsIndexResults   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__RsIndexResults *
       streaming_protobufs__rs_index_results__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__rs_index_results__free_unpacked
                     (StreamingProtobufs__RsIndexResults *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MeasResult methods */
void   streaming_protobufs__meas_result__init
                     (StreamingProtobufs__MeasResult         *message);
size_t streaming_protobufs__meas_result__get_packed_size
                     (const StreamingProtobufs__MeasResult   *message);
size_t streaming_protobufs__meas_result__pack
                     (const StreamingProtobufs__MeasResult   *message,
                      uint8_t             *out);
size_t streaming_protobufs__meas_result__pack_to_buffer
                     (const StreamingProtobufs__MeasResult   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MeasResult *
       streaming_protobufs__meas_result__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__meas_result__free_unpacked
                     (StreamingProtobufs__MeasResult *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PLMNIdentity methods */
void   streaming_protobufs__plmn__identity__init
                     (StreamingProtobufs__PLMNIdentity         *message);
size_t streaming_protobufs__plmn__identity__get_packed_size
                     (const StreamingProtobufs__PLMNIdentity   *message);
size_t streaming_protobufs__plmn__identity__pack
                     (const StreamingProtobufs__PLMNIdentity   *message,
                      uint8_t             *out);
size_t streaming_protobufs__plmn__identity__pack_to_buffer
                     (const StreamingProtobufs__PLMNIdentity   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PLMNIdentity *
       streaming_protobufs__plmn__identity__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__plmn__identity__free_unpacked
                     (StreamingProtobufs__PLMNIdentity *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MNC methods */
void   streaming_protobufs__mnc__init
                     (StreamingProtobufs__MNC         *message);
size_t streaming_protobufs__mnc__get_packed_size
                     (const StreamingProtobufs__MNC   *message);
size_t streaming_protobufs__mnc__pack
                     (const StreamingProtobufs__MNC   *message,
                      uint8_t             *out);
size_t streaming_protobufs__mnc__pack_to_buffer
                     (const StreamingProtobufs__MNC   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MNC *
       streaming_protobufs__mnc__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__mnc__free_unpacked
                     (StreamingProtobufs__MNC *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MCC methods */
void   streaming_protobufs__mcc__init
                     (StreamingProtobufs__MCC         *message);
size_t streaming_protobufs__mcc__get_packed_size
                     (const StreamingProtobufs__MCC   *message);
size_t streaming_protobufs__mcc__pack
                     (const StreamingProtobufs__MCC   *message,
                      uint8_t             *out);
size_t streaming_protobufs__mcc__pack_to_buffer
                     (const StreamingProtobufs__MCC   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MCC *
       streaming_protobufs__mcc__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__mcc__free_unpacked
                     (StreamingProtobufs__MCC *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PLMNIdentityEUTRA5GC methods */
void   streaming_protobufs__plmn__identity__eutra_5_gc__init
                     (StreamingProtobufs__PLMNIdentityEUTRA5GC         *message);
size_t streaming_protobufs__plmn__identity__eutra_5_gc__get_packed_size
                     (const StreamingProtobufs__PLMNIdentityEUTRA5GC   *message);
size_t streaming_protobufs__plmn__identity__eutra_5_gc__pack
                     (const StreamingProtobufs__PLMNIdentityEUTRA5GC   *message,
                      uint8_t             *out);
size_t streaming_protobufs__plmn__identity__eutra_5_gc__pack_to_buffer
                     (const StreamingProtobufs__PLMNIdentityEUTRA5GC   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PLMNIdentityEUTRA5GC *
       streaming_protobufs__plmn__identity__eutra_5_gc__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__plmn__identity__eutra_5_gc__free_unpacked
                     (StreamingProtobufs__PLMNIdentityEUTRA5GC *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PLMNIdentityListEUTRA5GC methods */
void   streaming_protobufs__plmn__identity_list__eutra_5_gc__init
                     (StreamingProtobufs__PLMNIdentityListEUTRA5GC         *message);
size_t streaming_protobufs__plmn__identity_list__eutra_5_gc__get_packed_size
                     (const StreamingProtobufs__PLMNIdentityListEUTRA5GC   *message);
size_t streaming_protobufs__plmn__identity_list__eutra_5_gc__pack
                     (const StreamingProtobufs__PLMNIdentityListEUTRA5GC   *message,
                      uint8_t             *out);
size_t streaming_protobufs__plmn__identity_list__eutra_5_gc__pack_to_buffer
                     (const StreamingProtobufs__PLMNIdentityListEUTRA5GC   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PLMNIdentityListEUTRA5GC *
       streaming_protobufs__plmn__identity_list__eutra_5_gc__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__plmn__identity_list__eutra_5_gc__free_unpacked
                     (StreamingProtobufs__PLMNIdentityListEUTRA5GC *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CellAccessRelatedInfoEUTRA5GC methods */
void   streaming_protobufs__cell_access_related_info__eutra_5_gc__init
                     (StreamingProtobufs__CellAccessRelatedInfoEUTRA5GC         *message);
size_t streaming_protobufs__cell_access_related_info__eutra_5_gc__get_packed_size
                     (const StreamingProtobufs__CellAccessRelatedInfoEUTRA5GC   *message);
size_t streaming_protobufs__cell_access_related_info__eutra_5_gc__pack
                     (const StreamingProtobufs__CellAccessRelatedInfoEUTRA5GC   *message,
                      uint8_t             *out);
size_t streaming_protobufs__cell_access_related_info__eutra_5_gc__pack_to_buffer
                     (const StreamingProtobufs__CellAccessRelatedInfoEUTRA5GC   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CellAccessRelatedInfoEUTRA5GC *
       streaming_protobufs__cell_access_related_info__eutra_5_gc__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__cell_access_related_info__eutra_5_gc__free_unpacked
                     (StreamingProtobufs__CellAccessRelatedInfoEUTRA5GC *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PLMNIdentityListEUTRAEPC methods */
void   streaming_protobufs__plmn__identity_list__eutra__epc__init
                     (StreamingProtobufs__PLMNIdentityListEUTRAEPC         *message);
size_t streaming_protobufs__plmn__identity_list__eutra__epc__get_packed_size
                     (const StreamingProtobufs__PLMNIdentityListEUTRAEPC   *message);
size_t streaming_protobufs__plmn__identity_list__eutra__epc__pack
                     (const StreamingProtobufs__PLMNIdentityListEUTRAEPC   *message,
                      uint8_t             *out);
size_t streaming_protobufs__plmn__identity_list__eutra__epc__pack_to_buffer
                     (const StreamingProtobufs__PLMNIdentityListEUTRAEPC   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PLMNIdentityListEUTRAEPC *
       streaming_protobufs__plmn__identity_list__eutra__epc__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__plmn__identity_list__eutra__epc__free_unpacked
                     (StreamingProtobufs__PLMNIdentityListEUTRAEPC *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CellAccessRelatedInfoEUTRAEPC methods */
void   streaming_protobufs__cell_access_related_info__eutra__epc__init
                     (StreamingProtobufs__CellAccessRelatedInfoEUTRAEPC         *message);
size_t streaming_protobufs__cell_access_related_info__eutra__epc__get_packed_size
                     (const StreamingProtobufs__CellAccessRelatedInfoEUTRAEPC   *message);
size_t streaming_protobufs__cell_access_related_info__eutra__epc__pack
                     (const StreamingProtobufs__CellAccessRelatedInfoEUTRAEPC   *message,
                      uint8_t             *out);
size_t streaming_protobufs__cell_access_related_info__eutra__epc__pack_to_buffer
                     (const StreamingProtobufs__CellAccessRelatedInfoEUTRAEPC   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CellAccessRelatedInfoEUTRAEPC *
       streaming_protobufs__cell_access_related_info__eutra__epc__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__cell_access_related_info__eutra__epc__free_unpacked
                     (StreamingProtobufs__CellAccessRelatedInfoEUTRAEPC *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CGIInfoEPC methods */
void   streaming_protobufs__cgi_info__epc__init
                     (StreamingProtobufs__CGIInfoEPC         *message);
size_t streaming_protobufs__cgi_info__epc__get_packed_size
                     (const StreamingProtobufs__CGIInfoEPC   *message);
size_t streaming_protobufs__cgi_info__epc__pack
                     (const StreamingProtobufs__CGIInfoEPC   *message,
                      uint8_t             *out);
size_t streaming_protobufs__cgi_info__epc__pack_to_buffer
                     (const StreamingProtobufs__CGIInfoEPC   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CGIInfoEPC *
       streaming_protobufs__cgi_info__epc__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__cgi_info__epc__free_unpacked
                     (StreamingProtobufs__CGIInfoEPC *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PLMNIdentityInfo methods */
void   streaming_protobufs__plmn__identity_info__init
                     (StreamingProtobufs__PLMNIdentityInfo         *message);
size_t streaming_protobufs__plmn__identity_info__get_packed_size
                     (const StreamingProtobufs__PLMNIdentityInfo   *message);
size_t streaming_protobufs__plmn__identity_info__pack
                     (const StreamingProtobufs__PLMNIdentityInfo   *message,
                      uint8_t             *out);
size_t streaming_protobufs__plmn__identity_info__pack_to_buffer
                     (const StreamingProtobufs__PLMNIdentityInfo   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PLMNIdentityInfo *
       streaming_protobufs__plmn__identity_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__plmn__identity_info__free_unpacked
                     (StreamingProtobufs__PLMNIdentityInfo *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PDCCHConfigSIB1 methods */
void   streaming_protobufs__pdcch__config_sib1__init
                     (StreamingProtobufs__PDCCHConfigSIB1         *message);
size_t streaming_protobufs__pdcch__config_sib1__get_packed_size
                     (const StreamingProtobufs__PDCCHConfigSIB1   *message);
size_t streaming_protobufs__pdcch__config_sib1__pack
                     (const StreamingProtobufs__PDCCHConfigSIB1   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pdcch__config_sib1__pack_to_buffer
                     (const StreamingProtobufs__PDCCHConfigSIB1   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PDCCHConfigSIB1 *
       streaming_protobufs__pdcch__config_sib1__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pdcch__config_sib1__free_unpacked
                     (StreamingProtobufs__PDCCHConfigSIB1 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__NoSIB1 methods */
void   streaming_protobufs__no_sib1__init
                     (StreamingProtobufs__NoSIB1         *message);
size_t streaming_protobufs__no_sib1__get_packed_size
                     (const StreamingProtobufs__NoSIB1   *message);
size_t streaming_protobufs__no_sib1__pack
                     (const StreamingProtobufs__NoSIB1   *message,
                      uint8_t             *out);
size_t streaming_protobufs__no_sib1__pack_to_buffer
                     (const StreamingProtobufs__NoSIB1   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__NoSIB1 *
       streaming_protobufs__no_sib1__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__no_sib1__free_unpacked
                     (StreamingProtobufs__NoSIB1 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PLMNIdentityInfoList methods */
void   streaming_protobufs__plmn__identity_info_list__init
                     (StreamingProtobufs__PLMNIdentityInfoList         *message);
size_t streaming_protobufs__plmn__identity_info_list__get_packed_size
                     (const StreamingProtobufs__PLMNIdentityInfoList   *message);
size_t streaming_protobufs__plmn__identity_info_list__pack
                     (const StreamingProtobufs__PLMNIdentityInfoList   *message,
                      uint8_t             *out);
size_t streaming_protobufs__plmn__identity_info_list__pack_to_buffer
                     (const StreamingProtobufs__PLMNIdentityInfoList   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PLMNIdentityInfoList *
       streaming_protobufs__plmn__identity_info_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__plmn__identity_info_list__free_unpacked
                     (StreamingProtobufs__PLMNIdentityInfoList *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MultiFrequencyBandListNR methods */
void   streaming_protobufs__multi_frequency_band_list_nr__init
                     (StreamingProtobufs__MultiFrequencyBandListNR         *message);
size_t streaming_protobufs__multi_frequency_band_list_nr__get_packed_size
                     (const StreamingProtobufs__MultiFrequencyBandListNR   *message);
size_t streaming_protobufs__multi_frequency_band_list_nr__pack
                     (const StreamingProtobufs__MultiFrequencyBandListNR   *message,
                      uint8_t             *out);
size_t streaming_protobufs__multi_frequency_band_list_nr__pack_to_buffer
                     (const StreamingProtobufs__MultiFrequencyBandListNR   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MultiFrequencyBandListNR *
       streaming_protobufs__multi_frequency_band_list_nr__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__multi_frequency_band_list_nr__free_unpacked
                     (StreamingProtobufs__MultiFrequencyBandListNR *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CGIInfo methods */
void   streaming_protobufs__cgi__info__init
                     (StreamingProtobufs__CGIInfo         *message);
size_t streaming_protobufs__cgi__info__get_packed_size
                     (const StreamingProtobufs__CGIInfo   *message);
size_t streaming_protobufs__cgi__info__pack
                     (const StreamingProtobufs__CGIInfo   *message,
                      uint8_t             *out);
size_t streaming_protobufs__cgi__info__pack_to_buffer
                     (const StreamingProtobufs__CGIInfo   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CGIInfo *
       streaming_protobufs__cgi__info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__cgi__info__free_unpacked
                     (StreamingProtobufs__CGIInfo *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MultiBandInfoListEUTRA methods */
void   streaming_protobufs__multi_band_info_list_eutra__init
                     (StreamingProtobufs__MultiBandInfoListEUTRA         *message);
size_t streaming_protobufs__multi_band_info_list_eutra__get_packed_size
                     (const StreamingProtobufs__MultiBandInfoListEUTRA   *message);
size_t streaming_protobufs__multi_band_info_list_eutra__pack
                     (const StreamingProtobufs__MultiBandInfoListEUTRA   *message,
                      uint8_t             *out);
size_t streaming_protobufs__multi_band_info_list_eutra__pack_to_buffer
                     (const StreamingProtobufs__MultiBandInfoListEUTRA   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MultiBandInfoListEUTRA *
       streaming_protobufs__multi_band_info_list_eutra__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__multi_band_info_list_eutra__free_unpacked
                     (StreamingProtobufs__MultiBandInfoListEUTRA *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__EUTRACGIInfo methods */
void   streaming_protobufs__eutra__cgi__info__init
                     (StreamingProtobufs__EUTRACGIInfo         *message);
size_t streaming_protobufs__eutra__cgi__info__get_packed_size
                     (const StreamingProtobufs__EUTRACGIInfo   *message);
size_t streaming_protobufs__eutra__cgi__info__pack
                     (const StreamingProtobufs__EUTRACGIInfo   *message,
                      uint8_t             *out);
size_t streaming_protobufs__eutra__cgi__info__pack_to_buffer
                     (const StreamingProtobufs__EUTRACGIInfo   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__EUTRACGIInfo *
       streaming_protobufs__eutra__cgi__info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__eutra__cgi__info__free_unpacked
                     (StreamingProtobufs__EUTRACGIInfo *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MeasResultNR methods */
void   streaming_protobufs__meas_result_nr__init
                     (StreamingProtobufs__MeasResultNR         *message);
size_t streaming_protobufs__meas_result_nr__get_packed_size
                     (const StreamingProtobufs__MeasResultNR   *message);
size_t streaming_protobufs__meas_result_nr__pack
                     (const StreamingProtobufs__MeasResultNR   *message,
                      uint8_t             *out);
size_t streaming_protobufs__meas_result_nr__pack_to_buffer
                     (const StreamingProtobufs__MeasResultNR   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MeasResultNR *
       streaming_protobufs__meas_result_nr__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__meas_result_nr__free_unpacked
                     (StreamingProtobufs__MeasResultNR *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MeasResultEUTRA methods */
void   streaming_protobufs__meas_result_eutra__init
                     (StreamingProtobufs__MeasResultEUTRA         *message);
size_t streaming_protobufs__meas_result_eutra__get_packed_size
                     (const StreamingProtobufs__MeasResultEUTRA   *message);
size_t streaming_protobufs__meas_result_eutra__pack
                     (const StreamingProtobufs__MeasResultEUTRA   *message,
                      uint8_t             *out);
size_t streaming_protobufs__meas_result_eutra__pack_to_buffer
                     (const StreamingProtobufs__MeasResultEUTRA   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MeasResultEUTRA *
       streaming_protobufs__meas_result_eutra__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__meas_result_eutra__free_unpacked
                     (StreamingProtobufs__MeasResultEUTRA *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MeasResultServMO methods */
void   streaming_protobufs__meas_result_serv_mo__init
                     (StreamingProtobufs__MeasResultServMO         *message);
size_t streaming_protobufs__meas_result_serv_mo__get_packed_size
                     (const StreamingProtobufs__MeasResultServMO   *message);
size_t streaming_protobufs__meas_result_serv_mo__pack
                     (const StreamingProtobufs__MeasResultServMO   *message,
                      uint8_t             *out);
size_t streaming_protobufs__meas_result_serv_mo__pack_to_buffer
                     (const StreamingProtobufs__MeasResultServMO   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MeasResultServMO *
       streaming_protobufs__meas_result_serv_mo__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__meas_result_serv_mo__free_unpacked
                     (StreamingProtobufs__MeasResultServMO *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MeasResultServMOList methods */
void   streaming_protobufs__meas_result_serv_molist__init
                     (StreamingProtobufs__MeasResultServMOList         *message);
size_t streaming_protobufs__meas_result_serv_molist__get_packed_size
                     (const StreamingProtobufs__MeasResultServMOList   *message);
size_t streaming_protobufs__meas_result_serv_molist__pack
                     (const StreamingProtobufs__MeasResultServMOList   *message,
                      uint8_t             *out);
size_t streaming_protobufs__meas_result_serv_molist__pack_to_buffer
                     (const StreamingProtobufs__MeasResultServMOList   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MeasResultServMOList *
       streaming_protobufs__meas_result_serv_molist__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__meas_result_serv_molist__free_unpacked
                     (StreamingProtobufs__MeasResultServMOList *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MeasResultListNR methods */
void   streaming_protobufs__meas_result_list_nr__init
                     (StreamingProtobufs__MeasResultListNR         *message);
size_t streaming_protobufs__meas_result_list_nr__get_packed_size
                     (const StreamingProtobufs__MeasResultListNR   *message);
size_t streaming_protobufs__meas_result_list_nr__pack
                     (const StreamingProtobufs__MeasResultListNR   *message,
                      uint8_t             *out);
size_t streaming_protobufs__meas_result_list_nr__pack_to_buffer
                     (const StreamingProtobufs__MeasResultListNR   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MeasResultListNR *
       streaming_protobufs__meas_result_list_nr__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__meas_result_list_nr__free_unpacked
                     (StreamingProtobufs__MeasResultListNR *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MeasResultListEUTRA methods */
void   streaming_protobufs__meas_result_list_eutra__init
                     (StreamingProtobufs__MeasResultListEUTRA         *message);
size_t streaming_protobufs__meas_result_list_eutra__get_packed_size
                     (const StreamingProtobufs__MeasResultListEUTRA   *message);
size_t streaming_protobufs__meas_result_list_eutra__pack
                     (const StreamingProtobufs__MeasResultListEUTRA   *message,
                      uint8_t             *out);
size_t streaming_protobufs__meas_result_list_eutra__pack_to_buffer
                     (const StreamingProtobufs__MeasResultListEUTRA   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MeasResultListEUTRA *
       streaming_protobufs__meas_result_list_eutra__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__meas_result_list_eutra__free_unpacked
                     (StreamingProtobufs__MeasResultListEUTRA *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MeasResults methods */
void   streaming_protobufs__meas_results__init
                     (StreamingProtobufs__MeasResults         *message);
size_t streaming_protobufs__meas_results__get_packed_size
                     (const StreamingProtobufs__MeasResults   *message);
size_t streaming_protobufs__meas_results__pack
                     (const StreamingProtobufs__MeasResults   *message,
                      uint8_t             *out);
size_t streaming_protobufs__meas_results__pack_to_buffer
                     (const StreamingProtobufs__MeasResults   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MeasResults *
       streaming_protobufs__meas_results__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__meas_results__free_unpacked
                     (StreamingProtobufs__MeasResults *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__DRXInfo methods */
void   streaming_protobufs__drx__info__init
                     (StreamingProtobufs__DRXInfo         *message);
size_t streaming_protobufs__drx__info__get_packed_size
                     (const StreamingProtobufs__DRXInfo   *message);
size_t streaming_protobufs__drx__info__pack
                     (const StreamingProtobufs__DRXInfo   *message,
                      uint8_t             *out);
size_t streaming_protobufs__drx__info__pack_to_buffer
                     (const StreamingProtobufs__DRXInfo   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__DRXInfo *
       streaming_protobufs__drx__info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__drx__info__free_unpacked
                     (StreamingProtobufs__DRXInfo *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__RadioBearerConfig methods */
void   streaming_protobufs__radio_bearer_config__init
                     (StreamingProtobufs__RadioBearerConfig         *message);
size_t streaming_protobufs__radio_bearer_config__get_packed_size
                     (const StreamingProtobufs__RadioBearerConfig   *message);
size_t streaming_protobufs__radio_bearer_config__pack
                     (const StreamingProtobufs__RadioBearerConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__radio_bearer_config__pack_to_buffer
                     (const StreamingProtobufs__RadioBearerConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__RadioBearerConfig *
       streaming_protobufs__radio_bearer_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__radio_bearer_config__free_unpacked
                     (StreamingProtobufs__RadioBearerConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SRBToAddModList methods */
void   streaming_protobufs__srb__to_add_mod_list__init
                     (StreamingProtobufs__SRBToAddModList         *message);
size_t streaming_protobufs__srb__to_add_mod_list__get_packed_size
                     (const StreamingProtobufs__SRBToAddModList   *message);
size_t streaming_protobufs__srb__to_add_mod_list__pack
                     (const StreamingProtobufs__SRBToAddModList   *message,
                      uint8_t             *out);
size_t streaming_protobufs__srb__to_add_mod_list__pack_to_buffer
                     (const StreamingProtobufs__SRBToAddModList   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SRBToAddModList *
       streaming_protobufs__srb__to_add_mod_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__srb__to_add_mod_list__free_unpacked
                     (StreamingProtobufs__SRBToAddModList *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SRBToAddMod methods */
void   streaming_protobufs__srb__to_add_mod__init
                     (StreamingProtobufs__SRBToAddMod         *message);
size_t streaming_protobufs__srb__to_add_mod__get_packed_size
                     (const StreamingProtobufs__SRBToAddMod   *message);
size_t streaming_protobufs__srb__to_add_mod__pack
                     (const StreamingProtobufs__SRBToAddMod   *message,
                      uint8_t             *out);
size_t streaming_protobufs__srb__to_add_mod__pack_to_buffer
                     (const StreamingProtobufs__SRBToAddMod   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SRBToAddMod *
       streaming_protobufs__srb__to_add_mod__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__srb__to_add_mod__free_unpacked
                     (StreamingProtobufs__SRBToAddMod *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PDCPConfig methods */
void   streaming_protobufs__pdcp__config__init
                     (StreamingProtobufs__PDCPConfig         *message);
size_t streaming_protobufs__pdcp__config__get_packed_size
                     (const StreamingProtobufs__PDCPConfig   *message);
size_t streaming_protobufs__pdcp__config__pack
                     (const StreamingProtobufs__PDCPConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pdcp__config__pack_to_buffer
                     (const StreamingProtobufs__PDCPConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PDCPConfig *
       streaming_protobufs__pdcp__config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pdcp__config__free_unpacked
                     (StreamingProtobufs__PDCPConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__DRB methods */
void   streaming_protobufs__drb__init
                     (StreamingProtobufs__DRB         *message);
size_t streaming_protobufs__drb__get_packed_size
                     (const StreamingProtobufs__DRB   *message);
size_t streaming_protobufs__drb__pack
                     (const StreamingProtobufs__DRB   *message,
                      uint8_t             *out);
size_t streaming_protobufs__drb__pack_to_buffer
                     (const StreamingProtobufs__DRB   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__DRB *
       streaming_protobufs__drb__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__drb__free_unpacked
                     (StreamingProtobufs__DRB *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__DiscardTimer methods */
void   streaming_protobufs__discard_timer__init
                     (StreamingProtobufs__DiscardTimer         *message);
size_t streaming_protobufs__discard_timer__get_packed_size
                     (const StreamingProtobufs__DiscardTimer   *message);
size_t streaming_protobufs__discard_timer__pack
                     (const StreamingProtobufs__DiscardTimer   *message,
                      uint8_t             *out);
size_t streaming_protobufs__discard_timer__pack_to_buffer
                     (const StreamingProtobufs__DiscardTimer   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__DiscardTimer *
       streaming_protobufs__discard_timer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__discard_timer__free_unpacked
                     (StreamingProtobufs__DiscardTimer *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PDCPSNSize methods */
void   streaming_protobufs__pdcp__sn__size__init
                     (StreamingProtobufs__PDCPSNSize         *message);
size_t streaming_protobufs__pdcp__sn__size__get_packed_size
                     (const StreamingProtobufs__PDCPSNSize   *message);
size_t streaming_protobufs__pdcp__sn__size__pack
                     (const StreamingProtobufs__PDCPSNSize   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pdcp__sn__size__pack_to_buffer
                     (const StreamingProtobufs__PDCPSNSize   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PDCPSNSize *
       streaming_protobufs__pdcp__sn__size__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pdcp__sn__size__free_unpacked
                     (StreamingProtobufs__PDCPSNSize *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__Rohc methods */
void   streaming_protobufs__rohc__init
                     (StreamingProtobufs__Rohc         *message);
size_t streaming_protobufs__rohc__get_packed_size
                     (const StreamingProtobufs__Rohc   *message);
size_t streaming_protobufs__rohc__pack
                     (const StreamingProtobufs__Rohc   *message,
                      uint8_t             *out);
size_t streaming_protobufs__rohc__pack_to_buffer
                     (const StreamingProtobufs__Rohc   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__Rohc *
       streaming_protobufs__rohc__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__rohc__free_unpacked
                     (StreamingProtobufs__Rohc *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__RohcProfiles methods */
void   streaming_protobufs__rohc_profiles__init
                     (StreamingProtobufs__RohcProfiles         *message);
size_t streaming_protobufs__rohc_profiles__get_packed_size
                     (const StreamingProtobufs__RohcProfiles   *message);
size_t streaming_protobufs__rohc_profiles__pack
                     (const StreamingProtobufs__RohcProfiles   *message,
                      uint8_t             *out);
size_t streaming_protobufs__rohc_profiles__pack_to_buffer
                     (const StreamingProtobufs__RohcProfiles   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__RohcProfiles *
       streaming_protobufs__rohc_profiles__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__rohc_profiles__free_unpacked
                     (StreamingProtobufs__RohcProfiles *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__UplinkOnlyROHC methods */
void   streaming_protobufs__uplink_only_rohc__init
                     (StreamingProtobufs__UplinkOnlyROHC         *message);
size_t streaming_protobufs__uplink_only_rohc__get_packed_size
                     (const StreamingProtobufs__UplinkOnlyROHC   *message);
size_t streaming_protobufs__uplink_only_rohc__pack
                     (const StreamingProtobufs__UplinkOnlyROHC   *message,
                      uint8_t             *out);
size_t streaming_protobufs__uplink_only_rohc__pack_to_buffer
                     (const StreamingProtobufs__UplinkOnlyROHC   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__UplinkOnlyROHC *
       streaming_protobufs__uplink_only_rohc__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__uplink_only_rohc__free_unpacked
                     (StreamingProtobufs__UplinkOnlyROHC *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__UplinkOnlyROHCProfiles methods */
void   streaming_protobufs__uplink_only_rohcprofiles__init
                     (StreamingProtobufs__UplinkOnlyROHCProfiles         *message);
size_t streaming_protobufs__uplink_only_rohcprofiles__get_packed_size
                     (const StreamingProtobufs__UplinkOnlyROHCProfiles   *message);
size_t streaming_protobufs__uplink_only_rohcprofiles__pack
                     (const StreamingProtobufs__UplinkOnlyROHCProfiles   *message,
                      uint8_t             *out);
size_t streaming_protobufs__uplink_only_rohcprofiles__pack_to_buffer
                     (const StreamingProtobufs__UplinkOnlyROHCProfiles   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__UplinkOnlyROHCProfiles *
       streaming_protobufs__uplink_only_rohcprofiles__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__uplink_only_rohcprofiles__free_unpacked
                     (StreamingProtobufs__UplinkOnlyROHCProfiles *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MoreThanOneRLC methods */
void   streaming_protobufs__more_than_one_rlc__init
                     (StreamingProtobufs__MoreThanOneRLC         *message);
size_t streaming_protobufs__more_than_one_rlc__get_packed_size
                     (const StreamingProtobufs__MoreThanOneRLC   *message);
size_t streaming_protobufs__more_than_one_rlc__pack
                     (const StreamingProtobufs__MoreThanOneRLC   *message,
                      uint8_t             *out);
size_t streaming_protobufs__more_than_one_rlc__pack_to_buffer
                     (const StreamingProtobufs__MoreThanOneRLC   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MoreThanOneRLC *
       streaming_protobufs__more_than_one_rlc__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__more_than_one_rlc__free_unpacked
                     (StreamingProtobufs__MoreThanOneRLC *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PrimaryPath methods */
void   streaming_protobufs__primary_path__init
                     (StreamingProtobufs__PrimaryPath         *message);
size_t streaming_protobufs__primary_path__get_packed_size
                     (const StreamingProtobufs__PrimaryPath   *message);
size_t streaming_protobufs__primary_path__pack
                     (const StreamingProtobufs__PrimaryPath   *message,
                      uint8_t             *out);
size_t streaming_protobufs__primary_path__pack_to_buffer
                     (const StreamingProtobufs__PrimaryPath   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PrimaryPath *
       streaming_protobufs__primary_path__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__primary_path__free_unpacked
                     (StreamingProtobufs__PrimaryPath *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ULDataSplitThreshold methods */
void   streaming_protobufs__ul__data_split_threshold__init
                     (StreamingProtobufs__ULDataSplitThreshold         *message);
size_t streaming_protobufs__ul__data_split_threshold__get_packed_size
                     (const StreamingProtobufs__ULDataSplitThreshold   *message);
size_t streaming_protobufs__ul__data_split_threshold__pack
                     (const StreamingProtobufs__ULDataSplitThreshold   *message,
                      uint8_t             *out);
size_t streaming_protobufs__ul__data_split_threshold__pack_to_buffer
                     (const StreamingProtobufs__ULDataSplitThreshold   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ULDataSplitThreshold *
       streaming_protobufs__ul__data_split_threshold__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__ul__data_split_threshold__free_unpacked
                     (StreamingProtobufs__ULDataSplitThreshold *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__TReordering methods */
void   streaming_protobufs__t__reordering__init
                     (StreamingProtobufs__TReordering         *message);
size_t streaming_protobufs__t__reordering__get_packed_size
                     (const StreamingProtobufs__TReordering   *message);
size_t streaming_protobufs__t__reordering__pack
                     (const StreamingProtobufs__TReordering   *message,
                      uint8_t             *out);
size_t streaming_protobufs__t__reordering__pack_to_buffer
                     (const StreamingProtobufs__TReordering   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__TReordering *
       streaming_protobufs__t__reordering__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__t__reordering__free_unpacked
                     (StreamingProtobufs__TReordering *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__DRBToAddModList methods */
void   streaming_protobufs__drb__to_add_mod_list__init
                     (StreamingProtobufs__DRBToAddModList         *message);
size_t streaming_protobufs__drb__to_add_mod_list__get_packed_size
                     (const StreamingProtobufs__DRBToAddModList   *message);
size_t streaming_protobufs__drb__to_add_mod_list__pack
                     (const StreamingProtobufs__DRBToAddModList   *message,
                      uint8_t             *out);
size_t streaming_protobufs__drb__to_add_mod_list__pack_to_buffer
                     (const StreamingProtobufs__DRBToAddModList   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__DRBToAddModList *
       streaming_protobufs__drb__to_add_mod_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__drb__to_add_mod_list__free_unpacked
                     (StreamingProtobufs__DRBToAddModList *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__DRBToAddMod methods */
void   streaming_protobufs__drb__to_add_mod__init
                     (StreamingProtobufs__DRBToAddMod         *message);
size_t streaming_protobufs__drb__to_add_mod__get_packed_size
                     (const StreamingProtobufs__DRBToAddMod   *message);
size_t streaming_protobufs__drb__to_add_mod__pack
                     (const StreamingProtobufs__DRBToAddMod   *message,
                      uint8_t             *out);
size_t streaming_protobufs__drb__to_add_mod__pack_to_buffer
                     (const StreamingProtobufs__DRBToAddMod   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__DRBToAddMod *
       streaming_protobufs__drb__to_add_mod__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__drb__to_add_mod__free_unpacked
                     (StreamingProtobufs__DRBToAddMod *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__DRBToReleaseList methods */
void   streaming_protobufs__drb__to_release_list__init
                     (StreamingProtobufs__DRBToReleaseList         *message);
size_t streaming_protobufs__drb__to_release_list__get_packed_size
                     (const StreamingProtobufs__DRBToReleaseList   *message);
size_t streaming_protobufs__drb__to_release_list__pack
                     (const StreamingProtobufs__DRBToReleaseList   *message,
                      uint8_t             *out);
size_t streaming_protobufs__drb__to_release_list__pack_to_buffer
                     (const StreamingProtobufs__DRBToReleaseList   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__DRBToReleaseList *
       streaming_protobufs__drb__to_release_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__drb__to_release_list__free_unpacked
                     (StreamingProtobufs__DRBToReleaseList *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SDAPConfig methods */
void   streaming_protobufs__sdap__config__init
                     (StreamingProtobufs__SDAPConfig         *message);
size_t streaming_protobufs__sdap__config__get_packed_size
                     (const StreamingProtobufs__SDAPConfig   *message);
size_t streaming_protobufs__sdap__config__pack
                     (const StreamingProtobufs__SDAPConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__sdap__config__pack_to_buffer
                     (const StreamingProtobufs__SDAPConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SDAPConfig *
       streaming_protobufs__sdap__config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__sdap__config__free_unpacked
                     (StreamingProtobufs__SDAPConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SDAPHeader methods */
void   streaming_protobufs__sdap__header__init
                     (StreamingProtobufs__SDAPHeader         *message);
size_t streaming_protobufs__sdap__header__get_packed_size
                     (const StreamingProtobufs__SDAPHeader   *message);
size_t streaming_protobufs__sdap__header__pack
                     (const StreamingProtobufs__SDAPHeader   *message,
                      uint8_t             *out);
size_t streaming_protobufs__sdap__header__pack_to_buffer
                     (const StreamingProtobufs__SDAPHeader   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SDAPHeader *
       streaming_protobufs__sdap__header__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__sdap__header__free_unpacked
                     (StreamingProtobufs__SDAPHeader *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SecurityConfig methods */
void   streaming_protobufs__security_config__init
                     (StreamingProtobufs__SecurityConfig         *message);
size_t streaming_protobufs__security_config__get_packed_size
                     (const StreamingProtobufs__SecurityConfig   *message);
size_t streaming_protobufs__security_config__pack
                     (const StreamingProtobufs__SecurityConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__security_config__pack_to_buffer
                     (const StreamingProtobufs__SecurityConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SecurityConfig *
       streaming_protobufs__security_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__security_config__free_unpacked
                     (StreamingProtobufs__SecurityConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SecurityAlgorithmConfig methods */
void   streaming_protobufs__security_algorithm_config__init
                     (StreamingProtobufs__SecurityAlgorithmConfig         *message);
size_t streaming_protobufs__security_algorithm_config__get_packed_size
                     (const StreamingProtobufs__SecurityAlgorithmConfig   *message);
size_t streaming_protobufs__security_algorithm_config__pack
                     (const StreamingProtobufs__SecurityAlgorithmConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__security_algorithm_config__pack_to_buffer
                     (const StreamingProtobufs__SecurityAlgorithmConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SecurityAlgorithmConfig *
       streaming_protobufs__security_algorithm_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__security_algorithm_config__free_unpacked
                     (StreamingProtobufs__SecurityAlgorithmConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CipheringAlgorithm methods */
void   streaming_protobufs__ciphering_algorithm__init
                     (StreamingProtobufs__CipheringAlgorithm         *message);
size_t streaming_protobufs__ciphering_algorithm__get_packed_size
                     (const StreamingProtobufs__CipheringAlgorithm   *message);
size_t streaming_protobufs__ciphering_algorithm__pack
                     (const StreamingProtobufs__CipheringAlgorithm   *message,
                      uint8_t             *out);
size_t streaming_protobufs__ciphering_algorithm__pack_to_buffer
                     (const StreamingProtobufs__CipheringAlgorithm   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CipheringAlgorithm *
       streaming_protobufs__ciphering_algorithm__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__ciphering_algorithm__free_unpacked
                     (StreamingProtobufs__CipheringAlgorithm *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__IntegrityProtAlgorithm methods */
void   streaming_protobufs__integrity_prot_algorithm__init
                     (StreamingProtobufs__IntegrityProtAlgorithm         *message);
size_t streaming_protobufs__integrity_prot_algorithm__get_packed_size
                     (const StreamingProtobufs__IntegrityProtAlgorithm   *message);
size_t streaming_protobufs__integrity_prot_algorithm__pack
                     (const StreamingProtobufs__IntegrityProtAlgorithm   *message,
                      uint8_t             *out);
size_t streaming_protobufs__integrity_prot_algorithm__pack_to_buffer
                     (const StreamingProtobufs__IntegrityProtAlgorithm   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__IntegrityProtAlgorithm *
       streaming_protobufs__integrity_prot_algorithm__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__integrity_prot_algorithm__free_unpacked
                     (StreamingProtobufs__IntegrityProtAlgorithm *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__KeyToUse methods */
void   streaming_protobufs__key_to_use__init
                     (StreamingProtobufs__KeyToUse         *message);
size_t streaming_protobufs__key_to_use__get_packed_size
                     (const StreamingProtobufs__KeyToUse   *message);
size_t streaming_protobufs__key_to_use__pack
                     (const StreamingProtobufs__KeyToUse   *message,
                      uint8_t             *out);
size_t streaming_protobufs__key_to_use__pack_to_buffer
                     (const StreamingProtobufs__KeyToUse   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__KeyToUse *
       streaming_protobufs__key_to_use__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__key_to_use__free_unpacked
                     (StreamingProtobufs__KeyToUse *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__UplinkTxDirectCurrentList methods */
void   streaming_protobufs__uplink_tx_direct_current_list__init
                     (StreamingProtobufs__UplinkTxDirectCurrentList         *message);
size_t streaming_protobufs__uplink_tx_direct_current_list__get_packed_size
                     (const StreamingProtobufs__UplinkTxDirectCurrentList   *message);
size_t streaming_protobufs__uplink_tx_direct_current_list__pack
                     (const StreamingProtobufs__UplinkTxDirectCurrentList   *message,
                      uint8_t             *out);
size_t streaming_protobufs__uplink_tx_direct_current_list__pack_to_buffer
                     (const StreamingProtobufs__UplinkTxDirectCurrentList   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__UplinkTxDirectCurrentList *
       streaming_protobufs__uplink_tx_direct_current_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__uplink_tx_direct_current_list__free_unpacked
                     (StreamingProtobufs__UplinkTxDirectCurrentList *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__UplinkTxDirectCurrentCell methods */
void   streaming_protobufs__uplink_tx_direct_current_cell__init
                     (StreamingProtobufs__UplinkTxDirectCurrentCell         *message);
size_t streaming_protobufs__uplink_tx_direct_current_cell__get_packed_size
                     (const StreamingProtobufs__UplinkTxDirectCurrentCell   *message);
size_t streaming_protobufs__uplink_tx_direct_current_cell__pack
                     (const StreamingProtobufs__UplinkTxDirectCurrentCell   *message,
                      uint8_t             *out);
size_t streaming_protobufs__uplink_tx_direct_current_cell__pack_to_buffer
                     (const StreamingProtobufs__UplinkTxDirectCurrentCell   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__UplinkTxDirectCurrentCell *
       streaming_protobufs__uplink_tx_direct_current_cell__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__uplink_tx_direct_current_cell__free_unpacked
                     (StreamingProtobufs__UplinkTxDirectCurrentCell *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__UplinkTxDirectCurrentBWP methods */
void   streaming_protobufs__uplink_tx_direct_current_bwp__init
                     (StreamingProtobufs__UplinkTxDirectCurrentBWP         *message);
size_t streaming_protobufs__uplink_tx_direct_current_bwp__get_packed_size
                     (const StreamingProtobufs__UplinkTxDirectCurrentBWP   *message);
size_t streaming_protobufs__uplink_tx_direct_current_bwp__pack
                     (const StreamingProtobufs__UplinkTxDirectCurrentBWP   *message,
                      uint8_t             *out);
size_t streaming_protobufs__uplink_tx_direct_current_bwp__pack_to_buffer
                     (const StreamingProtobufs__UplinkTxDirectCurrentBWP   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__UplinkTxDirectCurrentBWP *
       streaming_protobufs__uplink_tx_direct_current_bwp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__uplink_tx_direct_current_bwp__free_unpacked
                     (StreamingProtobufs__UplinkTxDirectCurrentBWP *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__CellAccessRelatedInfo methods */
void   streaming_protobufs__cell_access_related_info__init
                     (StreamingProtobufs__CellAccessRelatedInfo         *message);
size_t streaming_protobufs__cell_access_related_info__get_packed_size
                     (const StreamingProtobufs__CellAccessRelatedInfo   *message);
size_t streaming_protobufs__cell_access_related_info__pack
                     (const StreamingProtobufs__CellAccessRelatedInfo   *message,
                      uint8_t             *out);
size_t streaming_protobufs__cell_access_related_info__pack_to_buffer
                     (const StreamingProtobufs__CellAccessRelatedInfo   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__CellAccessRelatedInfo *
       streaming_protobufs__cell_access_related_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__cell_access_related_info__free_unpacked
                     (StreamingProtobufs__CellAccessRelatedInfo *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ConnEstFailureControl methods */
void   streaming_protobufs__conn_est_failure_control__init
                     (StreamingProtobufs__ConnEstFailureControl         *message);
size_t streaming_protobufs__conn_est_failure_control__get_packed_size
                     (const StreamingProtobufs__ConnEstFailureControl   *message);
size_t streaming_protobufs__conn_est_failure_control__pack
                     (const StreamingProtobufs__ConnEstFailureControl   *message,
                      uint8_t             *out);
size_t streaming_protobufs__conn_est_failure_control__pack_to_buffer
                     (const StreamingProtobufs__ConnEstFailureControl   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ConnEstFailureControl *
       streaming_protobufs__conn_est_failure_control__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__conn_est_failure_control__free_unpacked
                     (StreamingProtobufs__ConnEstFailureControl *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ConnEstFailCount methods */
void   streaming_protobufs__conn_est_fail_count__init
                     (StreamingProtobufs__ConnEstFailCount         *message);
size_t streaming_protobufs__conn_est_fail_count__get_packed_size
                     (const StreamingProtobufs__ConnEstFailCount   *message);
size_t streaming_protobufs__conn_est_fail_count__pack
                     (const StreamingProtobufs__ConnEstFailCount   *message,
                      uint8_t             *out);
size_t streaming_protobufs__conn_est_fail_count__pack_to_buffer
                     (const StreamingProtobufs__ConnEstFailCount   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ConnEstFailCount *
       streaming_protobufs__conn_est_fail_count__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__conn_est_fail_count__free_unpacked
                     (StreamingProtobufs__ConnEstFailCount *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ConnEstFailOffsetValidity methods */
void   streaming_protobufs__conn_est_fail_offset_validity__init
                     (StreamingProtobufs__ConnEstFailOffsetValidity         *message);
size_t streaming_protobufs__conn_est_fail_offset_validity__get_packed_size
                     (const StreamingProtobufs__ConnEstFailOffsetValidity   *message);
size_t streaming_protobufs__conn_est_fail_offset_validity__pack
                     (const StreamingProtobufs__ConnEstFailOffsetValidity   *message,
                      uint8_t             *out);
size_t streaming_protobufs__conn_est_fail_offset_validity__pack_to_buffer
                     (const StreamingProtobufs__ConnEstFailOffsetValidity   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ConnEstFailOffsetValidity *
       streaming_protobufs__conn_est_fail_offset_validity__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__conn_est_fail_offset_validity__free_unpacked
                     (StreamingProtobufs__ConnEstFailOffsetValidity *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SISchedulingInfo methods */
void   streaming_protobufs__si__scheduling_info__init
                     (StreamingProtobufs__SISchedulingInfo         *message);
size_t streaming_protobufs__si__scheduling_info__get_packed_size
                     (const StreamingProtobufs__SISchedulingInfo   *message);
size_t streaming_protobufs__si__scheduling_info__pack
                     (const StreamingProtobufs__SISchedulingInfo   *message,
                      uint8_t             *out);
size_t streaming_protobufs__si__scheduling_info__pack_to_buffer
                     (const StreamingProtobufs__SISchedulingInfo   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SISchedulingInfo *
       streaming_protobufs__si__scheduling_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__si__scheduling_info__free_unpacked
                     (StreamingProtobufs__SISchedulingInfo *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SIWindowLength methods */
void   streaming_protobufs__si__window_length__init
                     (StreamingProtobufs__SIWindowLength         *message);
size_t streaming_protobufs__si__window_length__get_packed_size
                     (const StreamingProtobufs__SIWindowLength   *message);
size_t streaming_protobufs__si__window_length__pack
                     (const StreamingProtobufs__SIWindowLength   *message,
                      uint8_t             *out);
size_t streaming_protobufs__si__window_length__pack_to_buffer
                     (const StreamingProtobufs__SIWindowLength   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SIWindowLength *
       streaming_protobufs__si__window_length__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__si__window_length__free_unpacked
                     (StreamingProtobufs__SIWindowLength *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SchedulingInfo methods */
void   streaming_protobufs__scheduling_info__init
                     (StreamingProtobufs__SchedulingInfo         *message);
size_t streaming_protobufs__scheduling_info__get_packed_size
                     (const StreamingProtobufs__SchedulingInfo   *message);
size_t streaming_protobufs__scheduling_info__pack
                     (const StreamingProtobufs__SchedulingInfo   *message,
                      uint8_t             *out);
size_t streaming_protobufs__scheduling_info__pack_to_buffer
                     (const StreamingProtobufs__SchedulingInfo   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SchedulingInfo *
       streaming_protobufs__scheduling_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__scheduling_info__free_unpacked
                     (StreamingProtobufs__SchedulingInfo *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SIBMapping methods */
void   streaming_protobufs__sib__mapping__init
                     (StreamingProtobufs__SIBMapping         *message);
size_t streaming_protobufs__sib__mapping__get_packed_size
                     (const StreamingProtobufs__SIBMapping   *message);
size_t streaming_protobufs__sib__mapping__pack
                     (const StreamingProtobufs__SIBMapping   *message,
                      uint8_t             *out);
size_t streaming_protobufs__sib__mapping__pack_to_buffer
                     (const StreamingProtobufs__SIBMapping   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SIBMapping *
       streaming_protobufs__sib__mapping__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__sib__mapping__free_unpacked
                     (StreamingProtobufs__SIBMapping *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SIBroadcastStatus methods */
void   streaming_protobufs__si__broadcast_status__init
                     (StreamingProtobufs__SIBroadcastStatus         *message);
size_t streaming_protobufs__si__broadcast_status__get_packed_size
                     (const StreamingProtobufs__SIBroadcastStatus   *message);
size_t streaming_protobufs__si__broadcast_status__pack
                     (const StreamingProtobufs__SIBroadcastStatus   *message,
                      uint8_t             *out);
size_t streaming_protobufs__si__broadcast_status__pack_to_buffer
                     (const StreamingProtobufs__SIBroadcastStatus   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SIBroadcastStatus *
       streaming_protobufs__si__broadcast_status__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__si__broadcast_status__free_unpacked
                     (StreamingProtobufs__SIBroadcastStatus *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SIPeriodicity methods */
void   streaming_protobufs__si__periodicity__init
                     (StreamingProtobufs__SIPeriodicity         *message);
size_t streaming_protobufs__si__periodicity__get_packed_size
                     (const StreamingProtobufs__SIPeriodicity   *message);
size_t streaming_protobufs__si__periodicity__pack
                     (const StreamingProtobufs__SIPeriodicity   *message,
                      uint8_t             *out);
size_t streaming_protobufs__si__periodicity__pack_to_buffer
                     (const StreamingProtobufs__SIPeriodicity   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SIPeriodicity *
       streaming_protobufs__si__periodicity__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__si__periodicity__free_unpacked
                     (StreamingProtobufs__SIPeriodicity *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SIBTypeInfo methods */
void   streaming_protobufs__sib__type_info__init
                     (StreamingProtobufs__SIBTypeInfo         *message);
size_t streaming_protobufs__sib__type_info__get_packed_size
                     (const StreamingProtobufs__SIBTypeInfo   *message);
size_t streaming_protobufs__sib__type_info__pack
                     (const StreamingProtobufs__SIBTypeInfo   *message,
                      uint8_t             *out);
size_t streaming_protobufs__sib__type_info__pack_to_buffer
                     (const StreamingProtobufs__SIBTypeInfo   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SIBTypeInfo *
       streaming_protobufs__sib__type_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__sib__type_info__free_unpacked
                     (StreamingProtobufs__SIBTypeInfo *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SIBTypeInfoType methods */
void   streaming_protobufs__sib__type_info_type__init
                     (StreamingProtobufs__SIBTypeInfoType         *message);
size_t streaming_protobufs__sib__type_info_type__get_packed_size
                     (const StreamingProtobufs__SIBTypeInfoType   *message);
size_t streaming_protobufs__sib__type_info_type__pack
                     (const StreamingProtobufs__SIBTypeInfoType   *message,
                      uint8_t             *out);
size_t streaming_protobufs__sib__type_info_type__pack_to_buffer
                     (const StreamingProtobufs__SIBTypeInfoType   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SIBTypeInfoType *
       streaming_protobufs__sib__type_info_type__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__sib__type_info_type__free_unpacked
                     (StreamingProtobufs__SIBTypeInfoType *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SIRequestConfig methods */
void   streaming_protobufs__si__request_config__init
                     (StreamingProtobufs__SIRequestConfig         *message);
size_t streaming_protobufs__si__request_config__get_packed_size
                     (const StreamingProtobufs__SIRequestConfig   *message);
size_t streaming_protobufs__si__request_config__pack
                     (const StreamingProtobufs__SIRequestConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__si__request_config__pack_to_buffer
                     (const StreamingProtobufs__SIRequestConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SIRequestConfig *
       streaming_protobufs__si__request_config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__si__request_config__free_unpacked
                     (StreamingProtobufs__SIRequestConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SIRequestPeriod methods */
void   streaming_protobufs__si__request_period__init
                     (StreamingProtobufs__SIRequestPeriod         *message);
size_t streaming_protobufs__si__request_period__get_packed_size
                     (const StreamingProtobufs__SIRequestPeriod   *message);
size_t streaming_protobufs__si__request_period__pack
                     (const StreamingProtobufs__SIRequestPeriod   *message,
                      uint8_t             *out);
size_t streaming_protobufs__si__request_period__pack_to_buffer
                     (const StreamingProtobufs__SIRequestPeriod   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SIRequestPeriod *
       streaming_protobufs__si__request_period__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__si__request_period__free_unpacked
                     (StreamingProtobufs__SIRequestPeriod *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__RACHOccasionsSI methods */
void   streaming_protobufs__rach__occasions_si__init
                     (StreamingProtobufs__RACHOccasionsSI         *message);
size_t streaming_protobufs__rach__occasions_si__get_packed_size
                     (const StreamingProtobufs__RACHOccasionsSI   *message);
size_t streaming_protobufs__rach__occasions_si__pack
                     (const StreamingProtobufs__RACHOccasionsSI   *message,
                      uint8_t             *out);
size_t streaming_protobufs__rach__occasions_si__pack_to_buffer
                     (const StreamingProtobufs__RACHOccasionsSI   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__RACHOccasionsSI *
       streaming_protobufs__rach__occasions_si__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__rach__occasions_si__free_unpacked
                     (StreamingProtobufs__RACHOccasionsSI *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SIRequestResources methods */
void   streaming_protobufs__si__request_resources__init
                     (StreamingProtobufs__SIRequestResources         *message);
size_t streaming_protobufs__si__request_resources__get_packed_size
                     (const StreamingProtobufs__SIRequestResources   *message);
size_t streaming_protobufs__si__request_resources__pack
                     (const StreamingProtobufs__SIRequestResources   *message,
                      uint8_t             *out);
size_t streaming_protobufs__si__request_resources__pack_to_buffer
                     (const StreamingProtobufs__SIRequestResources   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SIRequestResources *
       streaming_protobufs__si__request_resources__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__si__request_resources__free_unpacked
                     (StreamingProtobufs__SIRequestResources *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__ServingCellConfigCommonSIB methods */
void   streaming_protobufs__serving_cell_config_common_sib__init
                     (StreamingProtobufs__ServingCellConfigCommonSIB         *message);
size_t streaming_protobufs__serving_cell_config_common_sib__get_packed_size
                     (const StreamingProtobufs__ServingCellConfigCommonSIB   *message);
size_t streaming_protobufs__serving_cell_config_common_sib__pack
                     (const StreamingProtobufs__ServingCellConfigCommonSIB   *message,
                      uint8_t             *out);
size_t streaming_protobufs__serving_cell_config_common_sib__pack_to_buffer
                     (const StreamingProtobufs__ServingCellConfigCommonSIB   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__ServingCellConfigCommonSIB *
       streaming_protobufs__serving_cell_config_common_sib__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__serving_cell_config_common_sib__free_unpacked
                     (StreamingProtobufs__ServingCellConfigCommonSIB *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__DownlinkConfigCommonSIB methods */
void   streaming_protobufs__downlink_config_common_sib__init
                     (StreamingProtobufs__DownlinkConfigCommonSIB         *message);
size_t streaming_protobufs__downlink_config_common_sib__get_packed_size
                     (const StreamingProtobufs__DownlinkConfigCommonSIB   *message);
size_t streaming_protobufs__downlink_config_common_sib__pack
                     (const StreamingProtobufs__DownlinkConfigCommonSIB   *message,
                      uint8_t             *out);
size_t streaming_protobufs__downlink_config_common_sib__pack_to_buffer
                     (const StreamingProtobufs__DownlinkConfigCommonSIB   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__DownlinkConfigCommonSIB *
       streaming_protobufs__downlink_config_common_sib__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__downlink_config_common_sib__free_unpacked
                     (StreamingProtobufs__DownlinkConfigCommonSIB *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__FrequencyInfoDLSIB methods */
void   streaming_protobufs__frequency_info_dl__sib__init
                     (StreamingProtobufs__FrequencyInfoDLSIB         *message);
size_t streaming_protobufs__frequency_info_dl__sib__get_packed_size
                     (const StreamingProtobufs__FrequencyInfoDLSIB   *message);
size_t streaming_protobufs__frequency_info_dl__sib__pack
                     (const StreamingProtobufs__FrequencyInfoDLSIB   *message,
                      uint8_t             *out);
size_t streaming_protobufs__frequency_info_dl__sib__pack_to_buffer
                     (const StreamingProtobufs__FrequencyInfoDLSIB   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__FrequencyInfoDLSIB *
       streaming_protobufs__frequency_info_dl__sib__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__frequency_info_dl__sib__free_unpacked
                     (StreamingProtobufs__FrequencyInfoDLSIB *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MultiFrequencyBandListNRSIB methods */
void   streaming_protobufs__multi_frequency_band_list_nr__sib__init
                     (StreamingProtobufs__MultiFrequencyBandListNRSIB         *message);
size_t streaming_protobufs__multi_frequency_band_list_nr__sib__get_packed_size
                     (const StreamingProtobufs__MultiFrequencyBandListNRSIB   *message);
size_t streaming_protobufs__multi_frequency_band_list_nr__sib__pack
                     (const StreamingProtobufs__MultiFrequencyBandListNRSIB   *message,
                      uint8_t             *out);
size_t streaming_protobufs__multi_frequency_band_list_nr__sib__pack_to_buffer
                     (const StreamingProtobufs__MultiFrequencyBandListNRSIB   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MultiFrequencyBandListNRSIB *
       streaming_protobufs__multi_frequency_band_list_nr__sib__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__multi_frequency_band_list_nr__sib__free_unpacked
                     (StreamingProtobufs__MultiFrequencyBandListNRSIB *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__NRMultiBandInfo methods */
void   streaming_protobufs__nr__multi_band_info__init
                     (StreamingProtobufs__NRMultiBandInfo         *message);
size_t streaming_protobufs__nr__multi_band_info__get_packed_size
                     (const StreamingProtobufs__NRMultiBandInfo   *message);
size_t streaming_protobufs__nr__multi_band_info__pack
                     (const StreamingProtobufs__NRMultiBandInfo   *message,
                      uint8_t             *out);
size_t streaming_protobufs__nr__multi_band_info__pack_to_buffer
                     (const StreamingProtobufs__NRMultiBandInfo   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__NRMultiBandInfo *
       streaming_protobufs__nr__multi_band_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__nr__multi_band_info__free_unpacked
                     (StreamingProtobufs__NRMultiBandInfo *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__NRNSPmaxList methods */
void   streaming_protobufs__nr__ns__pmax_list__init
                     (StreamingProtobufs__NRNSPmaxList         *message);
size_t streaming_protobufs__nr__ns__pmax_list__get_packed_size
                     (const StreamingProtobufs__NRNSPmaxList   *message);
size_t streaming_protobufs__nr__ns__pmax_list__pack
                     (const StreamingProtobufs__NRNSPmaxList   *message,
                      uint8_t             *out);
size_t streaming_protobufs__nr__ns__pmax_list__pack_to_buffer
                     (const StreamingProtobufs__NRNSPmaxList   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__NRNSPmaxList *
       streaming_protobufs__nr__ns__pmax_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__nr__ns__pmax_list__free_unpacked
                     (StreamingProtobufs__NRNSPmaxList *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__NRNSPmaxValue methods */
void   streaming_protobufs__nr__ns__pmax_value__init
                     (StreamingProtobufs__NRNSPmaxValue         *message);
size_t streaming_protobufs__nr__ns__pmax_value__get_packed_size
                     (const StreamingProtobufs__NRNSPmaxValue   *message);
size_t streaming_protobufs__nr__ns__pmax_value__pack
                     (const StreamingProtobufs__NRNSPmaxValue   *message,
                      uint8_t             *out);
size_t streaming_protobufs__nr__ns__pmax_value__pack_to_buffer
                     (const StreamingProtobufs__NRNSPmaxValue   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__NRNSPmaxValue *
       streaming_protobufs__nr__ns__pmax_value__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__nr__ns__pmax_value__free_unpacked
                     (StreamingProtobufs__NRNSPmaxValue *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__BCCHConfig methods */
void   streaming_protobufs__bcch__config__init
                     (StreamingProtobufs__BCCHConfig         *message);
size_t streaming_protobufs__bcch__config__get_packed_size
                     (const StreamingProtobufs__BCCHConfig   *message);
size_t streaming_protobufs__bcch__config__pack
                     (const StreamingProtobufs__BCCHConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__bcch__config__pack_to_buffer
                     (const StreamingProtobufs__BCCHConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__BCCHConfig *
       streaming_protobufs__bcch__config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__bcch__config__free_unpacked
                     (StreamingProtobufs__BCCHConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PCCHConfig methods */
void   streaming_protobufs__pcch__config__init
                     (StreamingProtobufs__PCCHConfig         *message);
size_t streaming_protobufs__pcch__config__get_packed_size
                     (const StreamingProtobufs__PCCHConfig   *message);
size_t streaming_protobufs__pcch__config__pack
                     (const StreamingProtobufs__PCCHConfig   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pcch__config__pack_to_buffer
                     (const StreamingProtobufs__PCCHConfig   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PCCHConfig *
       streaming_protobufs__pcch__config__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pcch__config__free_unpacked
                     (StreamingProtobufs__PCCHConfig *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PagingCycle methods */
void   streaming_protobufs__paging_cycle__init
                     (StreamingProtobufs__PagingCycle         *message);
size_t streaming_protobufs__paging_cycle__get_packed_size
                     (const StreamingProtobufs__PagingCycle   *message);
size_t streaming_protobufs__paging_cycle__pack
                     (const StreamingProtobufs__PagingCycle   *message,
                      uint8_t             *out);
size_t streaming_protobufs__paging_cycle__pack_to_buffer
                     (const StreamingProtobufs__PagingCycle   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PagingCycle *
       streaming_protobufs__paging_cycle__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__paging_cycle__free_unpacked
                     (StreamingProtobufs__PagingCycle *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__PCCHConfigNs methods */
void   streaming_protobufs__pcch__config_ns__init
                     (StreamingProtobufs__PCCHConfigNs         *message);
size_t streaming_protobufs__pcch__config_ns__get_packed_size
                     (const StreamingProtobufs__PCCHConfigNs   *message);
size_t streaming_protobufs__pcch__config_ns__pack
                     (const StreamingProtobufs__PCCHConfigNs   *message,
                      uint8_t             *out);
size_t streaming_protobufs__pcch__config_ns__pack_to_buffer
                     (const StreamingProtobufs__PCCHConfigNs   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__PCCHConfigNs *
       streaming_protobufs__pcch__config_ns__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__pcch__config_ns__free_unpacked
                     (StreamingProtobufs__PCCHConfigNs *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SCS15KHZoneT methods */
void   streaming_protobufs__scs15_khzone_t__init
                     (StreamingProtobufs__SCS15KHZoneT         *message);
size_t streaming_protobufs__scs15_khzone_t__get_packed_size
                     (const StreamingProtobufs__SCS15KHZoneT   *message);
size_t streaming_protobufs__scs15_khzone_t__pack
                     (const StreamingProtobufs__SCS15KHZoneT   *message,
                      uint8_t             *out);
size_t streaming_protobufs__scs15_khzone_t__pack_to_buffer
                     (const StreamingProtobufs__SCS15KHZoneT   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SCS15KHZoneT *
       streaming_protobufs__scs15_khzone_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__scs15_khzone_t__free_unpacked
                     (StreamingProtobufs__SCS15KHZoneT *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SCS30KHZoneTSCS15KHZhalfT methods */
void   streaming_protobufs__scs30_khzone_t__scs15_khzhalf_t__init
                     (StreamingProtobufs__SCS30KHZoneTSCS15KHZhalfT         *message);
size_t streaming_protobufs__scs30_khzone_t__scs15_khzhalf_t__get_packed_size
                     (const StreamingProtobufs__SCS30KHZoneTSCS15KHZhalfT   *message);
size_t streaming_protobufs__scs30_khzone_t__scs15_khzhalf_t__pack
                     (const StreamingProtobufs__SCS30KHZoneTSCS15KHZhalfT   *message,
                      uint8_t             *out);
size_t streaming_protobufs__scs30_khzone_t__scs15_khzhalf_t__pack_to_buffer
                     (const StreamingProtobufs__SCS30KHZoneTSCS15KHZhalfT   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SCS30KHZoneTSCS15KHZhalfT *
       streaming_protobufs__scs30_khzone_t__scs15_khzhalf_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__scs30_khzone_t__scs15_khzhalf_t__free_unpacked
                     (StreamingProtobufs__SCS30KHZoneTSCS15KHZhalfT *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SCS60KHZoneTSCS30KHZhalfTSCS15KHZquarterT methods */
void   streaming_protobufs__scs60_khzone_t__scs30_khzhalf_t__scs15_khzquarter_t__init
                     (StreamingProtobufs__SCS60KHZoneTSCS30KHZhalfTSCS15KHZquarterT         *message);
size_t streaming_protobufs__scs60_khzone_t__scs30_khzhalf_t__scs15_khzquarter_t__get_packed_size
                     (const StreamingProtobufs__SCS60KHZoneTSCS30KHZhalfTSCS15KHZquarterT   *message);
size_t streaming_protobufs__scs60_khzone_t__scs30_khzhalf_t__scs15_khzquarter_t__pack
                     (const StreamingProtobufs__SCS60KHZoneTSCS30KHZhalfTSCS15KHZquarterT   *message,
                      uint8_t             *out);
size_t streaming_protobufs__scs60_khzone_t__scs30_khzhalf_t__scs15_khzquarter_t__pack_to_buffer
                     (const StreamingProtobufs__SCS60KHZoneTSCS30KHZhalfTSCS15KHZquarterT   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SCS60KHZoneTSCS30KHZhalfTSCS15KHZquarterT *
       streaming_protobufs__scs60_khzone_t__scs30_khzhalf_t__scs15_khzquarter_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__scs60_khzone_t__scs30_khzhalf_t__scs15_khzquarter_t__free_unpacked
                     (StreamingProtobufs__SCS60KHZoneTSCS30KHZhalfTSCS15KHZquarterT *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SCS120KHZoneTSCS60KHZhalfTSCS30KHZquarterTSCS15KHZoneEighthT methods */
void   streaming_protobufs__scs120_khzone_t__scs60_khzhalf_t__scs30_khzquarter_t__scs15_khzone_eighth_t__init
                     (StreamingProtobufs__SCS120KHZoneTSCS60KHZhalfTSCS30KHZquarterTSCS15KHZoneEighthT         *message);
size_t streaming_protobufs__scs120_khzone_t__scs60_khzhalf_t__scs30_khzquarter_t__scs15_khzone_eighth_t__get_packed_size
                     (const StreamingProtobufs__SCS120KHZoneTSCS60KHZhalfTSCS30KHZquarterTSCS15KHZoneEighthT   *message);
size_t streaming_protobufs__scs120_khzone_t__scs60_khzhalf_t__scs30_khzquarter_t__scs15_khzone_eighth_t__pack
                     (const StreamingProtobufs__SCS120KHZoneTSCS60KHZhalfTSCS30KHZquarterTSCS15KHZoneEighthT   *message,
                      uint8_t             *out);
size_t streaming_protobufs__scs120_khzone_t__scs60_khzhalf_t__scs30_khzquarter_t__scs15_khzone_eighth_t__pack_to_buffer
                     (const StreamingProtobufs__SCS120KHZoneTSCS60KHZhalfTSCS30KHZquarterTSCS15KHZoneEighthT   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SCS120KHZoneTSCS60KHZhalfTSCS30KHZquarterTSCS15KHZoneEighthT *
       streaming_protobufs__scs120_khzone_t__scs60_khzhalf_t__scs30_khzquarter_t__scs15_khzone_eighth_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__scs120_khzone_t__scs60_khzhalf_t__scs30_khzquarter_t__scs15_khzone_eighth_t__free_unpacked
                     (StreamingProtobufs__SCS120KHZoneTSCS60KHZhalfTSCS30KHZquarterTSCS15KHZoneEighthT *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SCS120KHZhalfTSCS60KHZquarterTSCS30KHZoneEighthTSCS15KHZoneSixteenthT methods */
void   streaming_protobufs__scs120_khzhalf_t__scs60_khzquarter_t__scs30_khzone_eighth_t__scs15_khzone_sixteenth_t__init
                     (StreamingProtobufs__SCS120KHZhalfTSCS60KHZquarterTSCS30KHZoneEighthTSCS15KHZoneSixteenthT         *message);
size_t streaming_protobufs__scs120_khzhalf_t__scs60_khzquarter_t__scs30_khzone_eighth_t__scs15_khzone_sixteenth_t__get_packed_size
                     (const StreamingProtobufs__SCS120KHZhalfTSCS60KHZquarterTSCS30KHZoneEighthTSCS15KHZoneSixteenthT   *message);
size_t streaming_protobufs__scs120_khzhalf_t__scs60_khzquarter_t__scs30_khzone_eighth_t__scs15_khzone_sixteenth_t__pack
                     (const StreamingProtobufs__SCS120KHZhalfTSCS60KHZquarterTSCS30KHZoneEighthTSCS15KHZoneSixteenthT   *message,
                      uint8_t             *out);
size_t streaming_protobufs__scs120_khzhalf_t__scs60_khzquarter_t__scs30_khzone_eighth_t__scs15_khzone_sixteenth_t__pack_to_buffer
                     (const StreamingProtobufs__SCS120KHZhalfTSCS60KHZquarterTSCS30KHZoneEighthTSCS15KHZoneSixteenthT   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SCS120KHZhalfTSCS60KHZquarterTSCS30KHZoneEighthTSCS15KHZoneSixteenthT *
       streaming_protobufs__scs120_khzhalf_t__scs60_khzquarter_t__scs30_khzone_eighth_t__scs15_khzone_sixteenth_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__scs120_khzhalf_t__scs60_khzquarter_t__scs30_khzone_eighth_t__scs15_khzone_sixteenth_t__free_unpacked
                     (StreamingProtobufs__SCS120KHZhalfTSCS60KHZquarterTSCS30KHZoneEighthTSCS15KHZoneSixteenthT *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SCS120KHZquarterTSCS60KHZoneEighthTSCS30KHZoneSixteenthT methods */
void   streaming_protobufs__scs120_khzquarter_t__scs60_khzone_eighth_t__scs30_khzone_sixteenth_t__init
                     (StreamingProtobufs__SCS120KHZquarterTSCS60KHZoneEighthTSCS30KHZoneSixteenthT         *message);
size_t streaming_protobufs__scs120_khzquarter_t__scs60_khzone_eighth_t__scs30_khzone_sixteenth_t__get_packed_size
                     (const StreamingProtobufs__SCS120KHZquarterTSCS60KHZoneEighthTSCS30KHZoneSixteenthT   *message);
size_t streaming_protobufs__scs120_khzquarter_t__scs60_khzone_eighth_t__scs30_khzone_sixteenth_t__pack
                     (const StreamingProtobufs__SCS120KHZquarterTSCS60KHZoneEighthTSCS30KHZoneSixteenthT   *message,
                      uint8_t             *out);
size_t streaming_protobufs__scs120_khzquarter_t__scs60_khzone_eighth_t__scs30_khzone_sixteenth_t__pack_to_buffer
                     (const StreamingProtobufs__SCS120KHZquarterTSCS60KHZoneEighthTSCS30KHZoneSixteenthT   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SCS120KHZquarterTSCS60KHZoneEighthTSCS30KHZoneSixteenthT *
       streaming_protobufs__scs120_khzquarter_t__scs60_khzone_eighth_t__scs30_khzone_sixteenth_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__scs120_khzquarter_t__scs60_khzone_eighth_t__scs30_khzone_sixteenth_t__free_unpacked
                     (StreamingProtobufs__SCS120KHZquarterTSCS60KHZoneEighthTSCS30KHZoneSixteenthT *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SCS120KHZoneEighthTSCS60KHZoneSixteenthT methods */
void   streaming_protobufs__scs120_khzone_eighth_t__scs60_khzone_sixteenth_t__init
                     (StreamingProtobufs__SCS120KHZoneEighthTSCS60KHZoneSixteenthT         *message);
size_t streaming_protobufs__scs120_khzone_eighth_t__scs60_khzone_sixteenth_t__get_packed_size
                     (const StreamingProtobufs__SCS120KHZoneEighthTSCS60KHZoneSixteenthT   *message);
size_t streaming_protobufs__scs120_khzone_eighth_t__scs60_khzone_sixteenth_t__pack
                     (const StreamingProtobufs__SCS120KHZoneEighthTSCS60KHZoneSixteenthT   *message,
                      uint8_t             *out);
size_t streaming_protobufs__scs120_khzone_eighth_t__scs60_khzone_sixteenth_t__pack_to_buffer
                     (const StreamingProtobufs__SCS120KHZoneEighthTSCS60KHZoneSixteenthT   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SCS120KHZoneEighthTSCS60KHZoneSixteenthT *
       streaming_protobufs__scs120_khzone_eighth_t__scs60_khzone_sixteenth_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__scs120_khzone_eighth_t__scs60_khzone_sixteenth_t__free_unpacked
                     (StreamingProtobufs__SCS120KHZoneEighthTSCS60KHZoneSixteenthT *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SCS120KHZoneSixteenthT methods */
void   streaming_protobufs__scs120_khzone_sixteenth_t__init
                     (StreamingProtobufs__SCS120KHZoneSixteenthT         *message);
size_t streaming_protobufs__scs120_khzone_sixteenth_t__get_packed_size
                     (const StreamingProtobufs__SCS120KHZoneSixteenthT   *message);
size_t streaming_protobufs__scs120_khzone_sixteenth_t__pack
                     (const StreamingProtobufs__SCS120KHZoneSixteenthT   *message,
                      uint8_t             *out);
size_t streaming_protobufs__scs120_khzone_sixteenth_t__pack_to_buffer
                     (const StreamingProtobufs__SCS120KHZoneSixteenthT   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SCS120KHZoneSixteenthT *
       streaming_protobufs__scs120_khzone_sixteenth_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__scs120_khzone_sixteenth_t__free_unpacked
                     (StreamingProtobufs__SCS120KHZoneSixteenthT *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__UplinkConfigCommonSIB methods */
void   streaming_protobufs__uplink_config_common_sib__init
                     (StreamingProtobufs__UplinkConfigCommonSIB         *message);
size_t streaming_protobufs__uplink_config_common_sib__get_packed_size
                     (const StreamingProtobufs__UplinkConfigCommonSIB   *message);
size_t streaming_protobufs__uplink_config_common_sib__pack
                     (const StreamingProtobufs__UplinkConfigCommonSIB   *message,
                      uint8_t             *out);
size_t streaming_protobufs__uplink_config_common_sib__pack_to_buffer
                     (const StreamingProtobufs__UplinkConfigCommonSIB   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__UplinkConfigCommonSIB *
       streaming_protobufs__uplink_config_common_sib__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__uplink_config_common_sib__free_unpacked
                     (StreamingProtobufs__UplinkConfigCommonSIB *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__FrequencyInfoULSIB methods */
void   streaming_protobufs__frequency_info_ul__sib__init
                     (StreamingProtobufs__FrequencyInfoULSIB         *message);
size_t streaming_protobufs__frequency_info_ul__sib__get_packed_size
                     (const StreamingProtobufs__FrequencyInfoULSIB   *message);
size_t streaming_protobufs__frequency_info_ul__sib__pack
                     (const StreamingProtobufs__FrequencyInfoULSIB   *message,
                      uint8_t             *out);
size_t streaming_protobufs__frequency_info_ul__sib__pack_to_buffer
                     (const StreamingProtobufs__FrequencyInfoULSIB   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__FrequencyInfoULSIB *
       streaming_protobufs__frequency_info_ul__sib__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__frequency_info_ul__sib__free_unpacked
                     (StreamingProtobufs__FrequencyInfoULSIB *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SIBNTimingAdvanceOffset methods */
void   streaming_protobufs__sib__n__timing_advance_offset__init
                     (StreamingProtobufs__SIBNTimingAdvanceOffset         *message);
size_t streaming_protobufs__sib__n__timing_advance_offset__get_packed_size
                     (const StreamingProtobufs__SIBNTimingAdvanceOffset   *message);
size_t streaming_protobufs__sib__n__timing_advance_offset__pack
                     (const StreamingProtobufs__SIBNTimingAdvanceOffset   *message,
                      uint8_t             *out);
size_t streaming_protobufs__sib__n__timing_advance_offset__pack_to_buffer
                     (const StreamingProtobufs__SIBNTimingAdvanceOffset   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SIBNTimingAdvanceOffset *
       streaming_protobufs__sib__n__timing_advance_offset__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__sib__n__timing_advance_offset__free_unpacked
                     (StreamingProtobufs__SIBNTimingAdvanceOffset *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SIBSSBPositionsInBurst methods */
void   streaming_protobufs__sib__ssb__positions_in_burst__init
                     (StreamingProtobufs__SIBSSBPositionsInBurst         *message);
size_t streaming_protobufs__sib__ssb__positions_in_burst__get_packed_size
                     (const StreamingProtobufs__SIBSSBPositionsInBurst   *message);
size_t streaming_protobufs__sib__ssb__positions_in_burst__pack
                     (const StreamingProtobufs__SIBSSBPositionsInBurst   *message,
                      uint8_t             *out);
size_t streaming_protobufs__sib__ssb__positions_in_burst__pack_to_buffer
                     (const StreamingProtobufs__SIBSSBPositionsInBurst   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SIBSSBPositionsInBurst *
       streaming_protobufs__sib__ssb__positions_in_burst__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__sib__ssb__positions_in_burst__free_unpacked
                     (StreamingProtobufs__SIBSSBPositionsInBurst *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__SIBSSBPeriodicityServingCell methods */
void   streaming_protobufs__sib__ssb__periodicity_serving_cell__init
                     (StreamingProtobufs__SIBSSBPeriodicityServingCell         *message);
size_t streaming_protobufs__sib__ssb__periodicity_serving_cell__get_packed_size
                     (const StreamingProtobufs__SIBSSBPeriodicityServingCell   *message);
size_t streaming_protobufs__sib__ssb__periodicity_serving_cell__pack
                     (const StreamingProtobufs__SIBSSBPeriodicityServingCell   *message,
                      uint8_t             *out);
size_t streaming_protobufs__sib__ssb__periodicity_serving_cell__pack_to_buffer
                     (const StreamingProtobufs__SIBSSBPeriodicityServingCell   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__SIBSSBPeriodicityServingCell *
       streaming_protobufs__sib__ssb__periodicity_serving_cell__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__sib__ssb__periodicity_serving_cell__free_unpacked
                     (StreamingProtobufs__SIBSSBPeriodicityServingCell *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__UETimersAndConstants methods */
void   streaming_protobufs__ue__timers_and_constants__init
                     (StreamingProtobufs__UETimersAndConstants         *message);
size_t streaming_protobufs__ue__timers_and_constants__get_packed_size
                     (const StreamingProtobufs__UETimersAndConstants   *message);
size_t streaming_protobufs__ue__timers_and_constants__pack
                     (const StreamingProtobufs__UETimersAndConstants   *message,
                      uint8_t             *out);
size_t streaming_protobufs__ue__timers_and_constants__pack_to_buffer
                     (const StreamingProtobufs__UETimersAndConstants   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__UETimersAndConstants *
       streaming_protobufs__ue__timers_and_constants__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__ue__timers_and_constants__free_unpacked
                     (StreamingProtobufs__UETimersAndConstants *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__UETimersAndConstantsT300T301T319 methods */
void   streaming_protobufs__ue__timers_and_constants_t300__t301__t319__init
                     (StreamingProtobufs__UETimersAndConstantsT300T301T319         *message);
size_t streaming_protobufs__ue__timers_and_constants_t300__t301__t319__get_packed_size
                     (const StreamingProtobufs__UETimersAndConstantsT300T301T319   *message);
size_t streaming_protobufs__ue__timers_and_constants_t300__t301__t319__pack
                     (const StreamingProtobufs__UETimersAndConstantsT300T301T319   *message,
                      uint8_t             *out);
size_t streaming_protobufs__ue__timers_and_constants_t300__t301__t319__pack_to_buffer
                     (const StreamingProtobufs__UETimersAndConstantsT300T301T319   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__UETimersAndConstantsT300T301T319 *
       streaming_protobufs__ue__timers_and_constants_t300__t301__t319__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__ue__timers_and_constants_t300__t301__t319__free_unpacked
                     (StreamingProtobufs__UETimersAndConstantsT300T301T319 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__UETimersAndConstantsT310 methods */
void   streaming_protobufs__ue__timers_and_constants_t310__init
                     (StreamingProtobufs__UETimersAndConstantsT310         *message);
size_t streaming_protobufs__ue__timers_and_constants_t310__get_packed_size
                     (const StreamingProtobufs__UETimersAndConstantsT310   *message);
size_t streaming_protobufs__ue__timers_and_constants_t310__pack
                     (const StreamingProtobufs__UETimersAndConstantsT310   *message,
                      uint8_t             *out);
size_t streaming_protobufs__ue__timers_and_constants_t310__pack_to_buffer
                     (const StreamingProtobufs__UETimersAndConstantsT310   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__UETimersAndConstantsT310 *
       streaming_protobufs__ue__timers_and_constants_t310__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__ue__timers_and_constants_t310__free_unpacked
                     (StreamingProtobufs__UETimersAndConstantsT310 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__UETimersAndConstantsN310 methods */
void   streaming_protobufs__ue__timers_and_constants_n310__init
                     (StreamingProtobufs__UETimersAndConstantsN310         *message);
size_t streaming_protobufs__ue__timers_and_constants_n310__get_packed_size
                     (const StreamingProtobufs__UETimersAndConstantsN310   *message);
size_t streaming_protobufs__ue__timers_and_constants_n310__pack
                     (const StreamingProtobufs__UETimersAndConstantsN310   *message,
                      uint8_t             *out);
size_t streaming_protobufs__ue__timers_and_constants_n310__pack_to_buffer
                     (const StreamingProtobufs__UETimersAndConstantsN310   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__UETimersAndConstantsN310 *
       streaming_protobufs__ue__timers_and_constants_n310__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__ue__timers_and_constants_n310__free_unpacked
                     (StreamingProtobufs__UETimersAndConstantsN310 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__UETimersAndConstantsT311 methods */
void   streaming_protobufs__ue__timers_and_constants_t311__init
                     (StreamingProtobufs__UETimersAndConstantsT311         *message);
size_t streaming_protobufs__ue__timers_and_constants_t311__get_packed_size
                     (const StreamingProtobufs__UETimersAndConstantsT311   *message);
size_t streaming_protobufs__ue__timers_and_constants_t311__pack
                     (const StreamingProtobufs__UETimersAndConstantsT311   *message,
                      uint8_t             *out);
size_t streaming_protobufs__ue__timers_and_constants_t311__pack_to_buffer
                     (const StreamingProtobufs__UETimersAndConstantsT311   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__UETimersAndConstantsT311 *
       streaming_protobufs__ue__timers_and_constants_t311__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__ue__timers_and_constants_t311__free_unpacked
                     (StreamingProtobufs__UETimersAndConstantsT311 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__UETimersAndConstantsN311 methods */
void   streaming_protobufs__ue__timers_and_constants_n311__init
                     (StreamingProtobufs__UETimersAndConstantsN311         *message);
size_t streaming_protobufs__ue__timers_and_constants_n311__get_packed_size
                     (const StreamingProtobufs__UETimersAndConstantsN311   *message);
size_t streaming_protobufs__ue__timers_and_constants_n311__pack
                     (const StreamingProtobufs__UETimersAndConstantsN311   *message,
                      uint8_t             *out);
size_t streaming_protobufs__ue__timers_and_constants_n311__pack_to_buffer
                     (const StreamingProtobufs__UETimersAndConstantsN311   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__UETimersAndConstantsN311 *
       streaming_protobufs__ue__timers_and_constants_n311__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__ue__timers_and_constants_n311__free_unpacked
                     (StreamingProtobufs__UETimersAndConstantsN311 *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__UACBarringPerCatList methods */
void   streaming_protobufs__uac__barring_per_cat_list__init
                     (StreamingProtobufs__UACBarringPerCatList         *message);
size_t streaming_protobufs__uac__barring_per_cat_list__get_packed_size
                     (const StreamingProtobufs__UACBarringPerCatList   *message);
size_t streaming_protobufs__uac__barring_per_cat_list__pack
                     (const StreamingProtobufs__UACBarringPerCatList   *message,
                      uint8_t             *out);
size_t streaming_protobufs__uac__barring_per_cat_list__pack_to_buffer
                     (const StreamingProtobufs__UACBarringPerCatList   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__UACBarringPerCatList *
       streaming_protobufs__uac__barring_per_cat_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__uac__barring_per_cat_list__free_unpacked
                     (StreamingProtobufs__UACBarringPerCatList *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__UACBarringPerCat methods */
void   streaming_protobufs__uac__barring_per_cat__init
                     (StreamingProtobufs__UACBarringPerCat         *message);
size_t streaming_protobufs__uac__barring_per_cat__get_packed_size
                     (const StreamingProtobufs__UACBarringPerCat   *message);
size_t streaming_protobufs__uac__barring_per_cat__pack
                     (const StreamingProtobufs__UACBarringPerCat   *message,
                      uint8_t             *out);
size_t streaming_protobufs__uac__barring_per_cat__pack_to_buffer
                     (const StreamingProtobufs__UACBarringPerCat   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__UACBarringPerCat *
       streaming_protobufs__uac__barring_per_cat__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__uac__barring_per_cat__free_unpacked
                     (StreamingProtobufs__UACBarringPerCat *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__UACBarringPerPLMNList methods */
void   streaming_protobufs__uac__barring_per_plmn__list__init
                     (StreamingProtobufs__UACBarringPerPLMNList         *message);
size_t streaming_protobufs__uac__barring_per_plmn__list__get_packed_size
                     (const StreamingProtobufs__UACBarringPerPLMNList   *message);
size_t streaming_protobufs__uac__barring_per_plmn__list__pack
                     (const StreamingProtobufs__UACBarringPerPLMNList   *message,
                      uint8_t             *out);
size_t streaming_protobufs__uac__barring_per_plmn__list__pack_to_buffer
                     (const StreamingProtobufs__UACBarringPerPLMNList   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__UACBarringPerPLMNList *
       streaming_protobufs__uac__barring_per_plmn__list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__uac__barring_per_plmn__list__free_unpacked
                     (StreamingProtobufs__UACBarringPerPLMNList *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__UACBarringPerPLMN methods */
void   streaming_protobufs__uac__barring_per_plmn__init
                     (StreamingProtobufs__UACBarringPerPLMN         *message);
size_t streaming_protobufs__uac__barring_per_plmn__get_packed_size
                     (const StreamingProtobufs__UACBarringPerPLMN   *message);
size_t streaming_protobufs__uac__barring_per_plmn__pack
                     (const StreamingProtobufs__UACBarringPerPLMN   *message,
                      uint8_t             *out);
size_t streaming_protobufs__uac__barring_per_plmn__pack_to_buffer
                     (const StreamingProtobufs__UACBarringPerPLMN   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__UACBarringPerPLMN *
       streaming_protobufs__uac__barring_per_plmn__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__uac__barring_per_plmn__free_unpacked
                     (StreamingProtobufs__UACBarringPerPLMN *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__UACImplicitACBarringList methods */
void   streaming_protobufs__uac__implicit_acbarring_list__init
                     (StreamingProtobufs__UACImplicitACBarringList         *message);
size_t streaming_protobufs__uac__implicit_acbarring_list__get_packed_size
                     (const StreamingProtobufs__UACImplicitACBarringList   *message);
size_t streaming_protobufs__uac__implicit_acbarring_list__pack
                     (const StreamingProtobufs__UACImplicitACBarringList   *message,
                      uint8_t             *out);
size_t streaming_protobufs__uac__implicit_acbarring_list__pack_to_buffer
                     (const StreamingProtobufs__UACImplicitACBarringList   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__UACImplicitACBarringList *
       streaming_protobufs__uac__implicit_acbarring_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__uac__implicit_acbarring_list__free_unpacked
                     (StreamingProtobufs__UACImplicitACBarringList *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__UACBarringInfoSetList methods */
void   streaming_protobufs__uac__barring_info_set_list__init
                     (StreamingProtobufs__UACBarringInfoSetList         *message);
size_t streaming_protobufs__uac__barring_info_set_list__get_packed_size
                     (const StreamingProtobufs__UACBarringInfoSetList   *message);
size_t streaming_protobufs__uac__barring_info_set_list__pack
                     (const StreamingProtobufs__UACBarringInfoSetList   *message,
                      uint8_t             *out);
size_t streaming_protobufs__uac__barring_info_set_list__pack_to_buffer
                     (const StreamingProtobufs__UACBarringInfoSetList   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__UACBarringInfoSetList *
       streaming_protobufs__uac__barring_info_set_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__uac__barring_info_set_list__free_unpacked
                     (StreamingProtobufs__UACBarringInfoSetList *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__UACBarringInfoSet methods */
void   streaming_protobufs__uac__barring_info_set__init
                     (StreamingProtobufs__UACBarringInfoSet         *message);
size_t streaming_protobufs__uac__barring_info_set__get_packed_size
                     (const StreamingProtobufs__UACBarringInfoSet   *message);
size_t streaming_protobufs__uac__barring_info_set__pack
                     (const StreamingProtobufs__UACBarringInfoSet   *message,
                      uint8_t             *out);
size_t streaming_protobufs__uac__barring_info_set__pack_to_buffer
                     (const StreamingProtobufs__UACBarringInfoSet   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__UACBarringInfoSet *
       streaming_protobufs__uac__barring_info_set__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__uac__barring_info_set__free_unpacked
                     (StreamingProtobufs__UACBarringInfoSet *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__UACBarringFactor methods */
void   streaming_protobufs__uac__barring_factor__init
                     (StreamingProtobufs__UACBarringFactor         *message);
size_t streaming_protobufs__uac__barring_factor__get_packed_size
                     (const StreamingProtobufs__UACBarringFactor   *message);
size_t streaming_protobufs__uac__barring_factor__pack
                     (const StreamingProtobufs__UACBarringFactor   *message,
                      uint8_t             *out);
size_t streaming_protobufs__uac__barring_factor__pack_to_buffer
                     (const StreamingProtobufs__UACBarringFactor   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__UACBarringFactor *
       streaming_protobufs__uac__barring_factor__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__uac__barring_factor__free_unpacked
                     (StreamingProtobufs__UACBarringFactor *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__UACBarringTime methods */
void   streaming_protobufs__uac__barring_time__init
                     (StreamingProtobufs__UACBarringTime         *message);
size_t streaming_protobufs__uac__barring_time__get_packed_size
                     (const StreamingProtobufs__UACBarringTime   *message);
size_t streaming_protobufs__uac__barring_time__pack
                     (const StreamingProtobufs__UACBarringTime   *message,
                      uint8_t             *out);
size_t streaming_protobufs__uac__barring_time__pack_to_buffer
                     (const StreamingProtobufs__UACBarringTime   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__UACBarringTime *
       streaming_protobufs__uac__barring_time__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__uac__barring_time__free_unpacked
                     (StreamingProtobufs__UACBarringTime *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__MobilityStateParameters methods */
void   streaming_protobufs__mobility_state_parameters__init
                     (StreamingProtobufs__MobilityStateParameters         *message);
size_t streaming_protobufs__mobility_state_parameters__get_packed_size
                     (const StreamingProtobufs__MobilityStateParameters   *message);
size_t streaming_protobufs__mobility_state_parameters__pack
                     (const StreamingProtobufs__MobilityStateParameters   *message,
                      uint8_t             *out);
size_t streaming_protobufs__mobility_state_parameters__pack_to_buffer
                     (const StreamingProtobufs__MobilityStateParameters   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__MobilityStateParameters *
       streaming_protobufs__mobility_state_parameters__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__mobility_state_parameters__free_unpacked
                     (StreamingProtobufs__MobilityStateParameters *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__TEvaluationHystNormal methods */
void   streaming_protobufs__t__evaluation__hyst_normal__init
                     (StreamingProtobufs__TEvaluationHystNormal         *message);
size_t streaming_protobufs__t__evaluation__hyst_normal__get_packed_size
                     (const StreamingProtobufs__TEvaluationHystNormal   *message);
size_t streaming_protobufs__t__evaluation__hyst_normal__pack
                     (const StreamingProtobufs__TEvaluationHystNormal   *message,
                      uint8_t             *out);
size_t streaming_protobufs__t__evaluation__hyst_normal__pack_to_buffer
                     (const StreamingProtobufs__TEvaluationHystNormal   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__TEvaluationHystNormal *
       streaming_protobufs__t__evaluation__hyst_normal__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__t__evaluation__hyst_normal__free_unpacked
                     (StreamingProtobufs__TEvaluationHystNormal *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__EUTRAMultiBandInfoList methods */
void   streaming_protobufs__eutra__multi_band_info_list__init
                     (StreamingProtobufs__EUTRAMultiBandInfoList         *message);
size_t streaming_protobufs__eutra__multi_band_info_list__get_packed_size
                     (const StreamingProtobufs__EUTRAMultiBandInfoList   *message);
size_t streaming_protobufs__eutra__multi_band_info_list__pack
                     (const StreamingProtobufs__EUTRAMultiBandInfoList   *message,
                      uint8_t             *out);
size_t streaming_protobufs__eutra__multi_band_info_list__pack_to_buffer
                     (const StreamingProtobufs__EUTRAMultiBandInfoList   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__EUTRAMultiBandInfoList *
       streaming_protobufs__eutra__multi_band_info_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__eutra__multi_band_info_list__free_unpacked
                     (StreamingProtobufs__EUTRAMultiBandInfoList *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__EUTRAMultiBandInfo methods */
void   streaming_protobufs__eutra__multi_band_info__init
                     (StreamingProtobufs__EUTRAMultiBandInfo         *message);
size_t streaming_protobufs__eutra__multi_band_info__get_packed_size
                     (const StreamingProtobufs__EUTRAMultiBandInfo   *message);
size_t streaming_protobufs__eutra__multi_band_info__pack
                     (const StreamingProtobufs__EUTRAMultiBandInfo   *message,
                      uint8_t             *out);
size_t streaming_protobufs__eutra__multi_band_info__pack_to_buffer
                     (const StreamingProtobufs__EUTRAMultiBandInfo   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__EUTRAMultiBandInfo *
       streaming_protobufs__eutra__multi_band_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__eutra__multi_band_info__free_unpacked
                     (StreamingProtobufs__EUTRAMultiBandInfo *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__EUTRANSPmaxList methods */
void   streaming_protobufs__eutra__ns__pmax_list__init
                     (StreamingProtobufs__EUTRANSPmaxList         *message);
size_t streaming_protobufs__eutra__ns__pmax_list__get_packed_size
                     (const StreamingProtobufs__EUTRANSPmaxList   *message);
size_t streaming_protobufs__eutra__ns__pmax_list__pack
                     (const StreamingProtobufs__EUTRANSPmaxList   *message,
                      uint8_t             *out);
size_t streaming_protobufs__eutra__ns__pmax_list__pack_to_buffer
                     (const StreamingProtobufs__EUTRANSPmaxList   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__EUTRANSPmaxList *
       streaming_protobufs__eutra__ns__pmax_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__eutra__ns__pmax_list__free_unpacked
                     (StreamingProtobufs__EUTRANSPmaxList *message,
                      ProtobufCAllocator *allocator);
/* StreamingProtobufs__EUTRANSPmaxValue methods */
void   streaming_protobufs__eutra__ns__pmax_value__init
                     (StreamingProtobufs__EUTRANSPmaxValue         *message);
size_t streaming_protobufs__eutra__ns__pmax_value__get_packed_size
                     (const StreamingProtobufs__EUTRANSPmaxValue   *message);
size_t streaming_protobufs__eutra__ns__pmax_value__pack
                     (const StreamingProtobufs__EUTRANSPmaxValue   *message,
                      uint8_t             *out);
size_t streaming_protobufs__eutra__ns__pmax_value__pack_to_buffer
                     (const StreamingProtobufs__EUTRANSPmaxValue   *message,
                      ProtobufCBuffer     *buffer);
StreamingProtobufs__EUTRANSPmaxValue *
       streaming_protobufs__eutra__ns__pmax_value__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   streaming_protobufs__eutra__ns__pmax_value__free_unpacked
                     (StreamingProtobufs__EUTRANSPmaxValue *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*StreamingProtobufs__CellGroupConfig_Closure)
                 (const StreamingProtobufs__CellGroupConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__RLCBearerConfig_Closure)
                 (const StreamingProtobufs__RLCBearerConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__RLCConfig_Closure)
                 (const StreamingProtobufs__RLCConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__AM_Closure)
                 (const StreamingProtobufs__AM *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ULAMRLC_Closure)
                 (const StreamingProtobufs__ULAMRLC *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MaxRetxThreshold_Closure)
                 (const StreamingProtobufs__MaxRetxThreshold *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SNFieldLengthAM_Closure)
                 (const StreamingProtobufs__SNFieldLengthAM *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__TPollRetransmit_Closure)
                 (const StreamingProtobufs__TPollRetransmit *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PollPDU_Closure)
                 (const StreamingProtobufs__PollPDU *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PollByte_Closure)
                 (const StreamingProtobufs__PollByte *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__DLAMRLC_Closure)
                 (const StreamingProtobufs__DLAMRLC *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__TReassembly_Closure)
                 (const StreamingProtobufs__TReassembly *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__TStatusProhibit_Closure)
                 (const StreamingProtobufs__TStatusProhibit *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__UMBiDirectional_Closure)
                 (const StreamingProtobufs__UMBiDirectional *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ULUMRLC_Closure)
                 (const StreamingProtobufs__ULUMRLC *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SNFieldLengthUM_Closure)
                 (const StreamingProtobufs__SNFieldLengthUM *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__DLUMRLC_Closure)
                 (const StreamingProtobufs__DLUMRLC *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__UMUniDirectionalUL_Closure)
                 (const StreamingProtobufs__UMUniDirectionalUL *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__UMUniDirectionalDL_Closure)
                 (const StreamingProtobufs__UMUniDirectionalDL *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__LogicalChannelConfig_Closure)
                 (const StreamingProtobufs__LogicalChannelConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ULSpecificParameters_Closure)
                 (const StreamingProtobufs__ULSpecificParameters *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PrioritisedBitRate_Closure)
                 (const StreamingProtobufs__PrioritisedBitRate *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__BucketSizeDuration_Closure)
                 (const StreamingProtobufs__BucketSizeDuration *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SubcarrierSpacing_Closure)
                 (const StreamingProtobufs__SubcarrierSpacing *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MaxPUSCHDuration_Closure)
                 (const StreamingProtobufs__MaxPUSCHDuration *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__BitRateQueryProhibitTimer_Closure)
                 (const StreamingProtobufs__BitRateQueryProhibitTimer *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MACCellGroupConfig_Closure)
                 (const StreamingProtobufs__MACCellGroupConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__DRXConfig_Closure)
                 (const StreamingProtobufs__DRXConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MilliSeconds_Closure)
                 (const StreamingProtobufs__MilliSeconds *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__DRXInactivityTimer_Closure)
                 (const StreamingProtobufs__DRXInactivityTimer *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__DRXRetransmissionTimer_Closure)
                 (const StreamingProtobufs__DRXRetransmissionTimer *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ShortDRX_Closure)
                 (const StreamingProtobufs__ShortDRX *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__DRXShortCycle_Closure)
                 (const StreamingProtobufs__DRXShortCycle *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SchedulingRequestConfig_Closure)
                 (const StreamingProtobufs__SchedulingRequestConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SchedulingRequestToAddMod_Closure)
                 (const StreamingProtobufs__SchedulingRequestToAddMod *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SRProhibitTimer_Closure)
                 (const StreamingProtobufs__SRProhibitTimer *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SRTransMax_Closure)
                 (const StreamingProtobufs__SRTransMax *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__BSRConfig_Closure)
                 (const StreamingProtobufs__BSRConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PeriodicBSRTimer_Closure)
                 (const StreamingProtobufs__PeriodicBSRTimer *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__RetxBSRTimer_Closure)
                 (const StreamingProtobufs__RetxBSRTimer *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__LogicalChannelSRDelayTimer_Closure)
                 (const StreamingProtobufs__LogicalChannelSRDelayTimer *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__TAGConfig_Closure)
                 (const StreamingProtobufs__TAGConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__TAG_Closure)
                 (const StreamingProtobufs__TAG *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__TimeAlignmentTimer_Closure)
                 (const StreamingProtobufs__TimeAlignmentTimer *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PHRConfig_Closure)
                 (const StreamingProtobufs__PHRConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PHRPeriodicTimer_Closure)
                 (const StreamingProtobufs__PHRPeriodicTimer *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PHRProhibitTimer_Closure)
                 (const StreamingProtobufs__PHRProhibitTimer *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PHRTxPowerFactorChange_Closure)
                 (const StreamingProtobufs__PHRTxPowerFactorChange *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PHRModeOtherCG_Closure)
                 (const StreamingProtobufs__PHRModeOtherCG *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__DataInactivityTimer_Closure)
                 (const StreamingProtobufs__DataInactivityTimer *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PhysicalCellGroupConfig_Closure)
                 (const StreamingProtobufs__PhysicalCellGroupConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__XScale_Closure)
                 (const StreamingProtobufs__XScale *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SpCellConfig_Closure)
                 (const StreamingProtobufs__SpCellConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ReconfigurationWithSync_Closure)
                 (const StreamingProtobufs__ReconfigurationWithSync *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ServingCellConfigCommon_Closure)
                 (const StreamingProtobufs__ServingCellConfigCommon *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__DownlinkConfigCommon_Closure)
                 (const StreamingProtobufs__DownlinkConfigCommon *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__FrequencyInfoDL_Closure)
                 (const StreamingProtobufs__FrequencyInfoDL *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SCSSpecificCarrier_Closure)
                 (const StreamingProtobufs__SCSSpecificCarrier *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__BWPDownlinkCommon_Closure)
                 (const StreamingProtobufs__BWPDownlinkCommon *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__BWP_Closure)
                 (const StreamingProtobufs__BWP *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CyclicPrefix_Closure)
                 (const StreamingProtobufs__CyclicPrefix *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PDCCHConfigCommon_Closure)
                 (const StreamingProtobufs__PDCCHConfigCommon *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ControlResourceSet_Closure)
                 (const StreamingProtobufs__ControlResourceSet *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__Interleaved_Closure)
                 (const StreamingProtobufs__Interleaved *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__RegBundleSize_Closure)
                 (const StreamingProtobufs__RegBundleSize *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__InterleaverSize_Closure)
                 (const StreamingProtobufs__InterleaverSize *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PrecoderGranularity_Closure)
                 (const StreamingProtobufs__PrecoderGranularity *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__FirstPDCCHMonitoringOccasionOfP0_Closure)
                 (const StreamingProtobufs__FirstPDCCHMonitoringOccasionOfP0 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SequenceOfInteger_Closure)
                 (const StreamingProtobufs__SequenceOfInteger *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PDSCHConfigCommon_Closure)
                 (const StreamingProtobufs__PDSCHConfigCommon *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PDSCHTimeDomainResourceAllocationList_Closure)
                 (const StreamingProtobufs__PDSCHTimeDomainResourceAllocationList *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PDSCHTimeDomainResourceAllocation_Closure)
                 (const StreamingProtobufs__PDSCHTimeDomainResourceAllocation *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MappingType_Closure)
                 (const StreamingProtobufs__MappingType *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__UplinkConfigCommon_Closure)
                 (const StreamingProtobufs__UplinkConfigCommon *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__FrequencyInfoUL_Closure)
                 (const StreamingProtobufs__FrequencyInfoUL *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__BWPUplinkCommon_Closure)
                 (const StreamingProtobufs__BWPUplinkCommon *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__BWPUplink_Closure)
                 (const StreamingProtobufs__BWPUplink *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__RACHConfigCommon_Closure)
                 (const StreamingProtobufs__RACHConfigCommon *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__RACHConfigGeneric_Closure)
                 (const StreamingProtobufs__RACHConfigGeneric *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__Msg1FDM_Closure)
                 (const StreamingProtobufs__Msg1FDM *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PreambleTransMax_Closure)
                 (const StreamingProtobufs__PreambleTransMax *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PowerRampingStep_Closure)
                 (const StreamingProtobufs__PowerRampingStep *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__RAResponseWindow_Closure)
                 (const StreamingProtobufs__RAResponseWindow *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__Fraction_Closure)
                 (const StreamingProtobufs__Fraction *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__OtherFraction_Closure)
                 (const StreamingProtobufs__OtherFraction *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__GroupBconfigured_Closure)
                 (const StreamingProtobufs__GroupBconfigured *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__RAMsg3SizeGroupA_Closure)
                 (const StreamingProtobufs__RAMsg3SizeGroupA *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MessagePowerOffsetGroupB_Closure)
                 (const StreamingProtobufs__MessagePowerOffsetGroupB *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__RAContentionResolutionTimer_Closure)
                 (const StreamingProtobufs__RAContentionResolutionTimer *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__RestrictedSetConfig_Closure)
                 (const StreamingProtobufs__RestrictedSetConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PUSCHConfigCommon_Closure)
                 (const StreamingProtobufs__PUSCHConfigCommon *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PUSCHTimeDomainResourceAllocationList_Closure)
                 (const StreamingProtobufs__PUSCHTimeDomainResourceAllocationList *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PUSCHTimeDomainResourceAllocation_Closure)
                 (const StreamingProtobufs__PUSCHTimeDomainResourceAllocation *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PUCCHConfigCommon_Closure)
                 (const StreamingProtobufs__PUCCHConfigCommon *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PUCCHGroupHopping_Closure)
                 (const StreamingProtobufs__PUCCHGroupHopping *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__NTimingAdvanceOffset_Closure)
                 (const StreamingProtobufs__NTimingAdvanceOffset *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SSBPeriodicityServingCell_Closure)
                 (const StreamingProtobufs__SSBPeriodicityServingCell *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__DMRSTypeAPosition_Closure)
                 (const StreamingProtobufs__DMRSTypeAPosition *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__RateMatchPatternLTECRS_Closure)
                 (const StreamingProtobufs__RateMatchPatternLTECRS *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CarrierBandwidthDL_Closure)
                 (const StreamingProtobufs__CarrierBandwidthDL *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__EUTRAMBSFNSubframeConfigList_Closure)
                 (const StreamingProtobufs__EUTRAMBSFNSubframeConfigList *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__EUTRAMBSFNSubframeConfig_Closure)
                 (const StreamingProtobufs__EUTRAMBSFNSubframeConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__RadioframeAllocationPeriod_Closure)
                 (const StreamingProtobufs__RadioframeAllocationPeriod *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SubframeAllocation_Closure)
                 (const StreamingProtobufs__SubframeAllocation *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__NrofCRSPorts_Closure)
                 (const StreamingProtobufs__NrofCRSPorts *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__VShift_Closure)
                 (const StreamingProtobufs__VShift *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__RateMatchPattern_Closure)
                 (const StreamingProtobufs__RateMatchPattern *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__Bitmaps_Closure)
                 (const StreamingProtobufs__Bitmaps *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__Dummy_Closure)
                 (const StreamingProtobufs__Dummy *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__TDDULDLConfigCommon_Closure)
                 (const StreamingProtobufs__TDDULDLConfigCommon *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__TDDULDLPattern_Closure)
                 (const StreamingProtobufs__TDDULDLPattern *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__DLULTransmissionPeriodicity_Closure)
                 (const StreamingProtobufs__DLULTransmissionPeriodicity *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__DLULTransmissionPeriodicityV1530_Closure)
                 (const StreamingProtobufs__DLULTransmissionPeriodicityV1530 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__T304_Closure)
                 (const StreamingProtobufs__T304 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__RACHConfigDedicated_Closure)
                 (const StreamingProtobufs__RACHConfigDedicated *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CFRA_Closure)
                 (const StreamingProtobufs__CFRA *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__Occasions_Closure)
                 (const StreamingProtobufs__Occasions *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SSB_Closure)
                 (const StreamingProtobufs__SSB *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CFRASSBResource_Closure)
                 (const StreamingProtobufs__CFRASSBResource *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CSIRS_Closure)
                 (const StreamingProtobufs__CSIRS *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CFRACSIRSResource_Closure)
                 (const StreamingProtobufs__CFRACSIRSResource *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__RAPrioritization_Closure)
                 (const StreamingProtobufs__RAPrioritization *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PowerRampingStepHighPriority_Closure)
                 (const StreamingProtobufs__PowerRampingStepHighPriority *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ScalingFactorBI_Closure)
                 (const StreamingProtobufs__ScalingFactorBI *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SSBMTC_Closure)
                 (const StreamingProtobufs__SSBMTC *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__Duration_Closure)
                 (const StreamingProtobufs__Duration *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SSBMTC2_Closure)
                 (const StreamingProtobufs__SSBMTC2 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__Periodicity_Closure)
                 (const StreamingProtobufs__Periodicity *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__RLFTimersAndConstants_Closure)
                 (const StreamingProtobufs__RLFTimersAndConstants *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__T310_Closure)
                 (const StreamingProtobufs__T310 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__N310_Closure)
                 (const StreamingProtobufs__N310 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__N311_Closure)
                 (const StreamingProtobufs__N311 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__T311V1530_Closure)
                 (const StreamingProtobufs__T311V1530 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__RlmInSyncOutOfSyncThreshold_Closure)
                 (const StreamingProtobufs__RlmInSyncOutOfSyncThreshold *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ServingCellConfig_Closure)
                 (const StreamingProtobufs__ServingCellConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__TDDULDLConfigDedicated_Closure)
                 (const StreamingProtobufs__TDDULDLConfigDedicated *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__TDDULDLSlotConfig_Closure)
                 (const StreamingProtobufs__TDDULDLSlotConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__Explicit_Closure)
                 (const StreamingProtobufs__Explicit *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__BWPDownlinkDedicated_Closure)
                 (const StreamingProtobufs__BWPDownlinkDedicated *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PDCCHConfig_Closure)
                 (const StreamingProtobufs__PDCCHConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__DownlinkPreemption_Closure)
                 (const StreamingProtobufs__DownlinkPreemption *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__TimeFrequencySet_Closure)
                 (const StreamingProtobufs__TimeFrequencySet *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__INTConfigurationPerServingCell_Closure)
                 (const StreamingProtobufs__INTConfigurationPerServingCell *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PUSCHTPCCommandConfig_Closure)
                 (const StreamingProtobufs__PUSCHTPCCommandConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PUCCHTPCCommandConfig_Closure)
                 (const StreamingProtobufs__PUCCHTPCCommandConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SRSTPCCommandConfig_Closure)
                 (const StreamingProtobufs__SRSTPCCommandConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PDSCHConfig_Closure)
                 (const StreamingProtobufs__PDSCHConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__DMRSDownlinkConfig_Closure)
                 (const StreamingProtobufs__DMRSDownlinkConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__DMRSType_Closure)
                 (const StreamingProtobufs__DMRSType *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__DMRSAdditionalPosition_Closure)
                 (const StreamingProtobufs__DMRSAdditionalPosition *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MaxLength_Closure)
                 (const StreamingProtobufs__MaxLength *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PTRSDownlinkConfig_Closure)
                 (const StreamingProtobufs__PTRSDownlinkConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ResourceElementOffset_Closure)
                 (const StreamingProtobufs__ResourceElementOffset *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__TCIState_Closure)
                 (const StreamingProtobufs__TCIState *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__QCLInfo_Closure)
                 (const StreamingProtobufs__QCLInfo *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__QCLType_Closure)
                 (const StreamingProtobufs__QCLType *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__VRBToPRBInterleaver_Closure)
                 (const StreamingProtobufs__VRBToPRBInterleaver *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ResourceAllocation_Closure)
                 (const StreamingProtobufs__ResourceAllocation *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PDSCHAggregationFactor_Closure)
                 (const StreamingProtobufs__PDSCHAggregationFactor *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__RateMatchPatternGroup_Closure)
                 (const StreamingProtobufs__RateMatchPatternGroup *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__RateMatchPatternGroupItem_Closure)
                 (const StreamingProtobufs__RateMatchPatternGroupItem *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__RBGSize_Closure)
                 (const StreamingProtobufs__RBGSize *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MCSTable_Closure)
                 (const StreamingProtobufs__MCSTable *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MaxNrofCodeWordsScheduledByDCI_Closure)
                 (const StreamingProtobufs__MaxNrofCodeWordsScheduledByDCI *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__StaticBundling_Closure)
                 (const StreamingProtobufs__StaticBundling *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__BundleSize_Closure)
                 (const StreamingProtobufs__BundleSize *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__DynamicBundling_Closure)
                 (const StreamingProtobufs__DynamicBundling *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__BundleSizeSet1_Closure)
                 (const StreamingProtobufs__BundleSizeSet1 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__BundleSizeSet2_Closure)
                 (const StreamingProtobufs__BundleSizeSet2 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ZPCSIRSResource_Closure)
                 (const StreamingProtobufs__ZPCSIRSResource *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CSIRSResourceMapping_Closure)
                 (const StreamingProtobufs__CSIRSResourceMapping *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__NrofPorts_Closure)
                 (const StreamingProtobufs__NrofPorts *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CDMType_Closure)
                 (const StreamingProtobufs__CDMType *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__Dot5_Closure)
                 (const StreamingProtobufs__Dot5 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CSIFrequencyOccupation_Closure)
                 (const StreamingProtobufs__CSIFrequencyOccupation *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CSIResourcePeriodicityAndOffset_Closure)
                 (const StreamingProtobufs__CSIResourcePeriodicityAndOffset *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ZPCSIRSResourceSet_Closure)
                 (const StreamingProtobufs__ZPCSIRSResourceSet *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SPSConfig_Closure)
                 (const StreamingProtobufs__SPSConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SPSConfigPeriodicity_Closure)
                 (const StreamingProtobufs__SPSConfigPeriodicity *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SPSMCSTable_Closure)
                 (const StreamingProtobufs__SPSMCSTable *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__RadioLinkMonitoringConfig_Closure)
                 (const StreamingProtobufs__RadioLinkMonitoringConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__RadioLinkMonitoringRS_Closure)
                 (const StreamingProtobufs__RadioLinkMonitoringRS *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__Purpose_Closure)
                 (const StreamingProtobufs__Purpose *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__BeamFailureInstanceMaxCount_Closure)
                 (const StreamingProtobufs__BeamFailureInstanceMaxCount *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__BeamFailureDetectionTimer_Closure)
                 (const StreamingProtobufs__BeamFailureDetectionTimer *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__BWPDownlink_Closure)
                 (const StreamingProtobufs__BWPDownlink *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__BWPInactivityTimer_Closure)
                 (const StreamingProtobufs__BWPInactivityTimer *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__UplinkConfig_Closure)
                 (const StreamingProtobufs__UplinkConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__BWPUplinkDedicated_Closure)
                 (const StreamingProtobufs__BWPUplinkDedicated *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PUCCHConfig_Closure)
                 (const StreamingProtobufs__PUCCHConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PUCCHResourceSet_Closure)
                 (const StreamingProtobufs__PUCCHResourceSet *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PUCCHResource_Closure)
                 (const StreamingProtobufs__PUCCHResource *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PUCCHFormat0_Closure)
                 (const StreamingProtobufs__PUCCHFormat0 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PUCCHFormat1_Closure)
                 (const StreamingProtobufs__PUCCHFormat1 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PUCCHFormat2_Closure)
                 (const StreamingProtobufs__PUCCHFormat2 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PUCCHFormat3_Closure)
                 (const StreamingProtobufs__PUCCHFormat3 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PUCCHFormat4_Closure)
                 (const StreamingProtobufs__PUCCHFormat4 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__OCCLength_Closure)
                 (const StreamingProtobufs__OCCLength *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__OCCIndex_Closure)
                 (const StreamingProtobufs__OCCIndex *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PUCCHFormatConfig_Closure)
                 (const StreamingProtobufs__PUCCHFormatConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PUCCHMaxCodeRate_Closure)
                 (const StreamingProtobufs__PUCCHMaxCodeRate *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__NrofSlots_Closure)
                 (const StreamingProtobufs__NrofSlots *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SchedulingRequestResourceConfig_Closure)
                 (const StreamingProtobufs__SchedulingRequestResourceConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PUCCHSpatialRelationInfo_Closure)
                 (const StreamingProtobufs__PUCCHSpatialRelationInfo *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__Srs_Closure)
                 (const StreamingProtobufs__Srs *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ClosedLoopIndex_Closure)
                 (const StreamingProtobufs__ClosedLoopIndex *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PUCCHPowerControl_Closure)
                 (const StreamingProtobufs__PUCCHPowerControl *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__P0PUCCH_Closure)
                 (const StreamingProtobufs__P0PUCCH *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PUCCHPathlossReferenceRS_Closure)
                 (const StreamingProtobufs__PUCCHPathlossReferenceRS *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__TwoPUCCHPCAdjustmentStates_Closure)
                 (const StreamingProtobufs__TwoPUCCHPCAdjustmentStates *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PUSCHServingCellConfig_Closure)
                 (const StreamingProtobufs__PUSCHServingCellConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PUSCHCodeBlockGroupTransmission_Closure)
                 (const StreamingProtobufs__PUSCHCodeBlockGroupTransmission *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__RateMatching_Closure)
                 (const StreamingProtobufs__RateMatching *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SRSCarrierSwitching_Closure)
                 (const StreamingProtobufs__SRSCarrierSwitching *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SRSSwitchFromCarrier_Closure)
                 (const StreamingProtobufs__SRSSwitchFromCarrier *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SRSTPCPDCCHConfigList_Closure)
                 (const StreamingProtobufs__SRSTPCPDCCHConfigList *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SRSTPCPDCCHConfig_Closure)
                 (const StreamingProtobufs__SRSTPCPDCCHConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SRSCCSetIndex_Closure)
                 (const StreamingProtobufs__SRSCCSetIndex *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PUSCHConfig_Closure)
                 (const StreamingProtobufs__PUSCHConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__TxConfig_Closure)
                 (const StreamingProtobufs__TxConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__DMRSUplinkConfig_Closure)
                 (const StreamingProtobufs__DMRSUplinkConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PTRSUplinkConfig_Closure)
                 (const StreamingProtobufs__PTRSUplinkConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__TransformPrecoderDisabled_Closure)
                 (const StreamingProtobufs__TransformPrecoderDisabled *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MaxNrofPorts_Closure)
                 (const StreamingProtobufs__MaxNrofPorts *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PTRSPower_Closure)
                 (const StreamingProtobufs__PTRSPower *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__TransformPrecoderEnabled_Closure)
                 (const StreamingProtobufs__TransformPrecoderEnabled *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__TimeDensityTransformPrecoding_Closure)
                 (const StreamingProtobufs__TimeDensityTransformPrecoding *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__TransformPrecodingDisabled_Closure)
                 (const StreamingProtobufs__TransformPrecodingDisabled *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__TransformPrecodingEnabled_Closure)
                 (const StreamingProtobufs__TransformPrecodingEnabled *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PUSCHPowerControl_Closure)
                 (const StreamingProtobufs__PUSCHPowerControl *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__Alpha_Closure)
                 (const StreamingProtobufs__Alpha *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__P0PUSCHAlphaSet_Closure)
                 (const StreamingProtobufs__P0PUSCHAlphaSet *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PUSCHPathlossReferenceRS_Closure)
                 (const StreamingProtobufs__PUSCHPathlossReferenceRS *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__TwoPUSCHPCAdjustmentStates_Closure)
                 (const StreamingProtobufs__TwoPUSCHPCAdjustmentStates *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SRIPUSCHPowerControl_Closure)
                 (const StreamingProtobufs__SRIPUSCHPowerControl *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__FrequencyHopping_Closure)
                 (const StreamingProtobufs__FrequencyHopping *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PUSCHAggregationFactor_Closure)
                 (const StreamingProtobufs__PUSCHAggregationFactor *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CodebookSubset_Closure)
                 (const StreamingProtobufs__CodebookSubset *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__RBGSize2_Closure)
                 (const StreamingProtobufs__RBGSize2 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__UCIOnPUSCH_Closure)
                 (const StreamingProtobufs__UCIOnPUSCH *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__BetaOffsetsList_Closure)
                 (const StreamingProtobufs__BetaOffsetsList *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__Scaling_Closure)
                 (const StreamingProtobufs__Scaling *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ConfiguredGrantConfig_Closure)
                 (const StreamingProtobufs__ConfiguredGrantConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CGUCIOnPUSCH_Closure)
                 (const StreamingProtobufs__CGUCIOnPUSCH *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__BetaOffsets_Closure)
                 (const StreamingProtobufs__BetaOffsets *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PowerControlLoopToUse_Closure)
                 (const StreamingProtobufs__PowerControlLoopToUse *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__RepK_Closure)
                 (const StreamingProtobufs__RepK *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__RepKRV_Closure)
                 (const StreamingProtobufs__RepKRV *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__GrantPeriodicity_Closure)
                 (const StreamingProtobufs__GrantPeriodicity *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__RRCConfiguredUplinkGrant_Closure)
                 (const StreamingProtobufs__RRCConfiguredUplinkGrant *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SRSConfig_Closure)
                 (const StreamingProtobufs__SRSConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SRSResourceSet_Closure)
                 (const StreamingProtobufs__SRSResourceSet *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SRSResourceSetTypeAperiodic_Closure)
                 (const StreamingProtobufs__SRSResourceSetTypeAperiodic *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SRSResourceSetTypeSemiPersistent_Closure)
                 (const StreamingProtobufs__SRSResourceSetTypeSemiPersistent *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SRSResourceSetTypePeriodic_Closure)
                 (const StreamingProtobufs__SRSResourceSetTypePeriodic *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SRSResourceSetUsage_Closure)
                 (const StreamingProtobufs__SRSResourceSetUsage *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SRSPowerControlAdjustmentStates_Closure)
                 (const StreamingProtobufs__SRSPowerControlAdjustmentStates *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SRSResource_Closure)
                 (const StreamingProtobufs__SRSResource *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__NrofSRSPorts_Closure)
                 (const StreamingProtobufs__NrofSRSPorts *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PTRSPortIndex_Closure)
                 (const StreamingProtobufs__PTRSPortIndex *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__N2_Closure)
                 (const StreamingProtobufs__N2 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__N4_Closure)
                 (const StreamingProtobufs__N4 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ResourceMapping_Closure)
                 (const StreamingProtobufs__ResourceMapping *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__NrofSymbols_Closure)
                 (const StreamingProtobufs__NrofSymbols *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__RepetitionFactor_Closure)
                 (const StreamingProtobufs__RepetitionFactor *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__FreqHopping_Closure)
                 (const StreamingProtobufs__FreqHopping *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__GroupOrSequenceHopping_Closure)
                 (const StreamingProtobufs__GroupOrSequenceHopping *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SRSResourceTypeAperiodic_Closure)
                 (const StreamingProtobufs__SRSResourceTypeAperiodic *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SRSResourceTypeSemiPersistent_Closure)
                 (const StreamingProtobufs__SRSResourceTypeSemiPersistent *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SRSPeriodicityAndOffset_Closure)
                 (const StreamingProtobufs__SRSPeriodicityAndOffset *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SRSResourceTypePeriodic_Closure)
                 (const StreamingProtobufs__SRSResourceTypePeriodic *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SRSSpatialRelationInfo_Closure)
                 (const StreamingProtobufs__SRSSpatialRelationInfo *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__BeamFailureRecoveryConfig_Closure)
                 (const StreamingProtobufs__BeamFailureRecoveryConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PRACHResourceDedicatedBFR_Closure)
                 (const StreamingProtobufs__PRACHResourceDedicatedBFR *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__BFRSSBResource_Closure)
                 (const StreamingProtobufs__BFRSSBResource *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__BFRCSIRSResource_Closure)
                 (const StreamingProtobufs__BFRCSIRSResource *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SSBPerRACHOccasion_Closure)
                 (const StreamingProtobufs__SSBPerRACHOccasion *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__BeamFailureRecoveryTimer_Closure)
                 (const StreamingProtobufs__BeamFailureRecoveryTimer *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PDCCHServingCellConfig_Closure)
                 (const StreamingProtobufs__PDCCHServingCellConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SlotFormatIndicator_Closure)
                 (const StreamingProtobufs__SlotFormatIndicator *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SlotFormatCombinationsPerCell_Closure)
                 (const StreamingProtobufs__SlotFormatCombinationsPerCell *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SlotFormatCombination_Closure)
                 (const StreamingProtobufs__SlotFormatCombination *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PDSCHServingCellConfig_Closure)
                 (const StreamingProtobufs__PDSCHServingCellConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PDSCHCodeBlockGroupTransmission_Closure)
                 (const StreamingProtobufs__PDSCHCodeBlockGroupTransmission *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MaxCodeBlockGroupsPerTransportBlock_Closure)
                 (const StreamingProtobufs__MaxCodeBlockGroupsPerTransportBlock *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__XOverhead_Closure)
                 (const StreamingProtobufs__XOverhead *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__NrofHARQProcessesForPDSCH_Closure)
                 (const StreamingProtobufs__NrofHARQProcessesForPDSCH *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CSIMeasConfig_Closure)
                 (const StreamingProtobufs__CSIMeasConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__NZPCSIRSResource_Closure)
                 (const StreamingProtobufs__NZPCSIRSResource *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PowerControlOffsetSS_Closure)
                 (const StreamingProtobufs__PowerControlOffsetSS *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__NZPCSIRSResourceSet_Closure)
                 (const StreamingProtobufs__NZPCSIRSResourceSet *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CSIIMResource_Closure)
                 (const StreamingProtobufs__CSIIMResource *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__Pattern0_Closure)
                 (const StreamingProtobufs__Pattern0 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SubcarrierLocationP0_Closure)
                 (const StreamingProtobufs__SubcarrierLocationP0 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__Pattern1_Closure)
                 (const StreamingProtobufs__Pattern1 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SubcarrierLocationP1_Closure)
                 (const StreamingProtobufs__SubcarrierLocationP1 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CSIIMResourceSet_Closure)
                 (const StreamingProtobufs__CSIIMResourceSet *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CSISSBResourceSet_Closure)
                 (const StreamingProtobufs__CSISSBResourceSet *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CSIResourceConfig_Closure)
                 (const StreamingProtobufs__CSIResourceConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__NZPCSIRSSSB_Closure)
                 (const StreamingProtobufs__NZPCSIRSSSB *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CSIIMResourceSetList_Closure)
                 (const StreamingProtobufs__CSIIMResourceSetList *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ResourceType_Closure)
                 (const StreamingProtobufs__ResourceType *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CSIReportConfig_Closure)
                 (const StreamingProtobufs__CSIReportConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CSIReportConfigTypePeriodic_Closure)
                 (const StreamingProtobufs__CSIReportConfigTypePeriodic *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CSIReportPeriodicityAndOffset_Closure)
                 (const StreamingProtobufs__CSIReportPeriodicityAndOffset *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PUCCHCSIResource_Closure)
                 (const StreamingProtobufs__PUCCHCSIResource *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CSIReportConfigTypeSemiPersistentOnPUCCH_Closure)
                 (const StreamingProtobufs__CSIReportConfigTypeSemiPersistentOnPUCCH *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CSIReportConfigTypeSemiPersistentOnPUSCH_Closure)
                 (const StreamingProtobufs__CSIReportConfigTypeSemiPersistentOnPUSCH *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ReportSlotConfig_Closure)
                 (const StreamingProtobufs__ReportSlotConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CSIReportConfigTypeAperiodic_Closure)
                 (const StreamingProtobufs__CSIReportConfigTypeAperiodic *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CRIRII1CQI_Closure)
                 (const StreamingProtobufs__CRIRII1CQI *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ReportFreqConfiguration_Closure)
                 (const StreamingProtobufs__ReportFreqConfiguration *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CQIFormatIndicator_Closure)
                 (const StreamingProtobufs__CQIFormatIndicator *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PMIFormatIndicator_Closure)
                 (const StreamingProtobufs__PMIFormatIndicator *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CodebookConfig_Closure)
                 (const StreamingProtobufs__CodebookConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CodebookTypeType1_Closure)
                 (const StreamingProtobufs__CodebookTypeType1 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CodebookSubTypeSinglePanel_Closure)
                 (const StreamingProtobufs__CodebookSubTypeSinglePanel *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CodebookNrOfAntennaPortsTwo_Closure)
                 (const StreamingProtobufs__CodebookNrOfAntennaPortsTwo *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CodebookNrOfAntennaPortsMoreThanTwo_Closure)
                 (const StreamingProtobufs__CodebookNrOfAntennaPortsMoreThanTwo *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CodebookSubTypeMultiPanel_Closure)
                 (const StreamingProtobufs__CodebookSubTypeMultiPanel *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CodebookTypeType2_Closure)
                 (const StreamingProtobufs__CodebookTypeType2 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CodebookSubTypeTypeII_Closure)
                 (const StreamingProtobufs__CodebookSubTypeTypeII *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CodebookSubTypeTypeIIPortSelection_Closure)
                 (const StreamingProtobufs__CodebookSubTypeTypeIIPortSelection *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PhaseAlphabetSize_Closure)
                 (const StreamingProtobufs__PhaseAlphabetSize *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__NumberOfBeams_Closure)
                 (const StreamingProtobufs__NumberOfBeams *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PortSelectionSamplingSize_Closure)
                 (const StreamingProtobufs__PortSelectionSamplingSize *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CSIReportConfigDummy_Closure)
                 (const StreamingProtobufs__CSIReportConfigDummy *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__GroupBasedBeamReportingDisabled_Closure)
                 (const StreamingProtobufs__GroupBasedBeamReportingDisabled *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__NrofReportedRS_Closure)
                 (const StreamingProtobufs__NrofReportedRS *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CQITable_Closure)
                 (const StreamingProtobufs__CQITable *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SubbandSize_Closure)
                 (const StreamingProtobufs__SubbandSize *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PortIndexFor8Ranks_Closure)
                 (const StreamingProtobufs__PortIndexFor8Ranks *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PortIndex8_Closure)
                 (const StreamingProtobufs__PortIndex8 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PortIndex4_Closure)
                 (const StreamingProtobufs__PortIndex4 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PortIndex2_Closure)
                 (const StreamingProtobufs__PortIndex2 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SemiPersistentOnPUSCHV1530_Closure)
                 (const StreamingProtobufs__SemiPersistentOnPUSCHV1530 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CSIAperiodicTriggerStateList_Closure)
                 (const StreamingProtobufs__CSIAperiodicTriggerStateList *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CSIAperiodicTriggerState_Closure)
                 (const StreamingProtobufs__CSIAperiodicTriggerState *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CSIAssociatedReportConfigInfo_Closure)
                 (const StreamingProtobufs__CSIAssociatedReportConfigInfo *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__NZPCSIRS_Closure)
                 (const StreamingProtobufs__NZPCSIRS *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CSISemiPersistentOnPUSCHTriggerStateList_Closure)
                 (const StreamingProtobufs__CSISemiPersistentOnPUSCHTriggerStateList *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CSISemiPersistentOnPUSCHTriggerState_Closure)
                 (const StreamingProtobufs__CSISemiPersistentOnPUSCHTriggerState *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SCellDeactivationTimer_Closure)
                 (const StreamingProtobufs__SCellDeactivationTimer *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CrossCarrierSchedulingConfig_Closure)
                 (const StreamingProtobufs__CrossCarrierSchedulingConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__OwnCrossCarrierSchedulingConfig_Closure)
                 (const StreamingProtobufs__OwnCrossCarrierSchedulingConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__OtherCrossCarrierSchedulingConfig_Closure)
                 (const StreamingProtobufs__OtherCrossCarrierSchedulingConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PathlossReferenceLinking_Closure)
                 (const StreamingProtobufs__PathlossReferenceLinking *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MeasConfig_Closure)
                 (const StreamingProtobufs__MeasConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MeasObjectToRemoveList_Closure)
                 (const StreamingProtobufs__MeasObjectToRemoveList *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MeasObjectToAddModList_Closure)
                 (const StreamingProtobufs__MeasObjectToAddModList *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ReportConfigToRemoveList_Closure)
                 (const StreamingProtobufs__ReportConfigToRemoveList *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ReportConfigToAddModList_Closure)
                 (const StreamingProtobufs__ReportConfigToAddModList *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MeasIdToRemoveList_Closure)
                 (const StreamingProtobufs__MeasIdToRemoveList *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MeasIdToAddModList_Closure)
                 (const StreamingProtobufs__MeasIdToAddModList *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MeasObjectToAddMod_Closure)
                 (const StreamingProtobufs__MeasObjectToAddMod *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MeasObjectNR_Closure)
                 (const StreamingProtobufs__MeasObjectNR *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ReferenceSignalConfig_Closure)
                 (const StreamingProtobufs__ReferenceSignalConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SSBConfigMobility_Closure)
                 (const StreamingProtobufs__SSBConfigMobility *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SSBToMeasure_Closure)
                 (const StreamingProtobufs__SSBToMeasure *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SSRSSIMeasurement_Closure)
                 (const StreamingProtobufs__SSRSSIMeasurement *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CSIRSResourceConfigMobility_Closure)
                 (const StreamingProtobufs__CSIRSResourceConfigMobility *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CSIRSCellMobility_Closure)
                 (const StreamingProtobufs__CSIRSCellMobility *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CSIRSMeasurementBW_Closure)
                 (const StreamingProtobufs__CSIRSMeasurementBW *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__Density_Closure)
                 (const StreamingProtobufs__Density *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CSIRSResourceMobility_Closure)
                 (const StreamingProtobufs__CSIRSResourceMobility *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__AssociatedSSB_Closure)
                 (const StreamingProtobufs__AssociatedSSB *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ThresholdNR_Closure)
                 (const StreamingProtobufs__ThresholdNR *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__QOffsetRangeList_Closure)
                 (const StreamingProtobufs__QOffsetRangeList *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__QOffsetRange_Closure)
                 (const StreamingProtobufs__QOffsetRange *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CellsToAddModList_Closure)
                 (const StreamingProtobufs__CellsToAddModList *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CellsToAddMod_Closure)
                 (const StreamingProtobufs__CellsToAddMod *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PCIList_Closure)
                 (const StreamingProtobufs__PCIList *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PCIRangeIndexList_Closure)
                 (const StreamingProtobufs__PCIRangeIndexList *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PCIRangeElement_Closure)
                 (const StreamingProtobufs__PCIRangeElement *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PCIRange_Closure)
                 (const StreamingProtobufs__PCIRange *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__Range_Closure)
                 (const StreamingProtobufs__Range *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MeasCycleSCellV1530_Closure)
                 (const StreamingProtobufs__MeasCycleSCellV1530 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MeasObjectEUTRA_Closure)
                 (const StreamingProtobufs__MeasObjectEUTRA *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__EUTRAAllowedMeasBandwidth_Closure)
                 (const StreamingProtobufs__EUTRAAllowedMeasBandwidth *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__EUTRACellIndexList_Closure)
                 (const StreamingProtobufs__EUTRACellIndexList *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__EUTRACell_Closure)
                 (const StreamingProtobufs__EUTRACell *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__EUTRAQOffsetRange_Closure)
                 (const StreamingProtobufs__EUTRAQOffsetRange *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__EUTRABlackCell_Closure)
                 (const StreamingProtobufs__EUTRABlackCell *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__EUTRAPhysCellIdRange_Closure)
                 (const StreamingProtobufs__EUTRAPhysCellIdRange *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__EUTRARange_Closure)
                 (const StreamingProtobufs__EUTRARange *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ReportConfigToAddMod_Closure)
                 (const StreamingProtobufs__ReportConfigToAddMod *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ReportConfigNR_Closure)
                 (const StreamingProtobufs__ReportConfigNR *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PeriodicalReportConfig_Closure)
                 (const StreamingProtobufs__PeriodicalReportConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__NRRSType_Closure)
                 (const StreamingProtobufs__NRRSType *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__NRFreqInfo_Closure)
                 (const StreamingProtobufs__NRFreqInfo *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ReportInterval_Closure)
                 (const StreamingProtobufs__ReportInterval *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ReportAmount_Closure)
                 (const StreamingProtobufs__ReportAmount *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MeasReportQuantity_Closure)
                 (const StreamingProtobufs__MeasReportQuantity *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__EventTriggerConfig_Closure)
                 (const StreamingProtobufs__EventTriggerConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__EventA1_Closure)
                 (const StreamingProtobufs__EventA1 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__EventA2_Closure)
                 (const StreamingProtobufs__EventA2 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__EventA3_Closure)
                 (const StreamingProtobufs__EventA3 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__EventA4_Closure)
                 (const StreamingProtobufs__EventA4 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__EventA5_Closure)
                 (const StreamingProtobufs__EventA5 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__EventA6_Closure)
                 (const StreamingProtobufs__EventA6 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MeasTriggerQuantity_Closure)
                 (const StreamingProtobufs__MeasTriggerQuantity *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__TimeToTrigger_Closure)
                 (const StreamingProtobufs__TimeToTrigger *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MeasTriggerQuantityOffset_Closure)
                 (const StreamingProtobufs__MeasTriggerQuantityOffset *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ReportAddNeighMeas_Closure)
                 (const StreamingProtobufs__ReportAddNeighMeas *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ReportCGI_Closure)
                 (const StreamingProtobufs__ReportCGI *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ReportConfigInterRAT_Closure)
                 (const StreamingProtobufs__ReportConfigInterRAT *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PeriodicalReportConfigInterRAT_Closure)
                 (const StreamingProtobufs__PeriodicalReportConfigInterRAT *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__EventTriggerConfigInterRAT_Closure)
                 (const StreamingProtobufs__EventTriggerConfigInterRAT *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__EventB1_Closure)
                 (const StreamingProtobufs__EventB1 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__EventB2_Closure)
                 (const StreamingProtobufs__EventB2 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MeasTriggerQuantityEUTRA_Closure)
                 (const StreamingProtobufs__MeasTriggerQuantityEUTRA *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ReportCGIEUTRA_Closure)
                 (const StreamingProtobufs__ReportCGIEUTRA *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MeasIdToAddMod_Closure)
                 (const StreamingProtobufs__MeasIdToAddMod *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__QuantityConfig_Closure)
                 (const StreamingProtobufs__QuantityConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__QuantityConfigNR_Closure)
                 (const StreamingProtobufs__QuantityConfigNR *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__QuantityConfigRS_Closure)
                 (const StreamingProtobufs__QuantityConfigRS *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__FilterConfig_Closure)
                 (const StreamingProtobufs__FilterConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__FilterCoefficient_Closure)
                 (const StreamingProtobufs__FilterCoefficient *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MeasGapConfig_Closure)
                 (const StreamingProtobufs__MeasGapConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__GapConfig_Closure)
                 (const StreamingProtobufs__GapConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MGL_Closure)
                 (const StreamingProtobufs__MGL *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MGRP_Closure)
                 (const StreamingProtobufs__MGRP *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MGTA_Closure)
                 (const StreamingProtobufs__MGTA *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MeasGapSharingConfig_Closure)
                 (const StreamingProtobufs__MeasGapSharingConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MeasGapSharingScheme_Closure)
                 (const StreamingProtobufs__MeasGapSharingScheme *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__OtherConfig_Closure)
                 (const StreamingProtobufs__OtherConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__DelayBudgetReportingProhibitTimer_Closure)
                 (const StreamingProtobufs__DelayBudgetReportingProhibitTimer *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__OtherConfigV1540_Closure)
                 (const StreamingProtobufs__OtherConfigV1540 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__OverheatingAssistanceConfig_Closure)
                 (const StreamingProtobufs__OverheatingAssistanceConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SCellConfig_Closure)
                 (const StreamingProtobufs__SCellConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SearchSpace_Closure)
                 (const StreamingProtobufs__SearchSpace *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__NrofCandidates_Closure)
                 (const StreamingProtobufs__NrofCandidates *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__AggregationLevel_Closure)
                 (const StreamingProtobufs__AggregationLevel *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__Common_Closure)
                 (const StreamingProtobufs__Common *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__DCIFormat00AndFormat10_Closure)
                 (const StreamingProtobufs__DCIFormat00AndFormat10 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__DCIFormat20_Closure)
                 (const StreamingProtobufs__DCIFormat20 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__NrofCandidatesSFI_Closure)
                 (const StreamingProtobufs__NrofCandidatesSFI *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__AggregationLevelSFI_Closure)
                 (const StreamingProtobufs__AggregationLevelSFI *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__DCIFormat21_Closure)
                 (const StreamingProtobufs__DCIFormat21 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__DCIFormat22_Closure)
                 (const StreamingProtobufs__DCIFormat22 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__DCIFormat23_Closure)
                 (const StreamingProtobufs__DCIFormat23 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__Dummy1_Closure)
                 (const StreamingProtobufs__Dummy1 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__Dummy2_Closure)
                 (const StreamingProtobufs__Dummy2 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__UESpecific_Closure)
                 (const StreamingProtobufs__UESpecific *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__DCIFormats_Closure)
                 (const StreamingProtobufs__DCIFormats *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MeasResultCellListSFTD_Closure)
                 (const StreamingProtobufs__MeasResultCellListSFTD *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MeasResultCellSFTD_Closure)
                 (const StreamingProtobufs__MeasResultCellSFTD *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MeasResultList2NR_Closure)
                 (const StreamingProtobufs__MeasResultList2NR *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MeasResult2NR_Closure)
                 (const StreamingProtobufs__MeasResult2NR *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MeasQuantityResults_Closure)
                 (const StreamingProtobufs__MeasQuantityResults *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ResultsPerSSBIndex_Closure)
                 (const StreamingProtobufs__ResultsPerSSBIndex *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ResultsPerCSIRSIndex_Closure)
                 (const StreamingProtobufs__ResultsPerCSIRSIndex *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MeasQuantityResultsEUTRA_Closure)
                 (const StreamingProtobufs__MeasQuantityResultsEUTRA *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CellResults_Closure)
                 (const StreamingProtobufs__CellResults *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ResultsPerCSIRSIndexList_Closure)
                 (const StreamingProtobufs__ResultsPerCSIRSIndexList *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ResultsPerSSBIndexList_Closure)
                 (const StreamingProtobufs__ResultsPerSSBIndexList *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__RsIndexResults_Closure)
                 (const StreamingProtobufs__RsIndexResults *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MeasResult_Closure)
                 (const StreamingProtobufs__MeasResult *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PLMNIdentity_Closure)
                 (const StreamingProtobufs__PLMNIdentity *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MNC_Closure)
                 (const StreamingProtobufs__MNC *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MCC_Closure)
                 (const StreamingProtobufs__MCC *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PLMNIdentityEUTRA5GC_Closure)
                 (const StreamingProtobufs__PLMNIdentityEUTRA5GC *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PLMNIdentityListEUTRA5GC_Closure)
                 (const StreamingProtobufs__PLMNIdentityListEUTRA5GC *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CellAccessRelatedInfoEUTRA5GC_Closure)
                 (const StreamingProtobufs__CellAccessRelatedInfoEUTRA5GC *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PLMNIdentityListEUTRAEPC_Closure)
                 (const StreamingProtobufs__PLMNIdentityListEUTRAEPC *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CellAccessRelatedInfoEUTRAEPC_Closure)
                 (const StreamingProtobufs__CellAccessRelatedInfoEUTRAEPC *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CGIInfoEPC_Closure)
                 (const StreamingProtobufs__CGIInfoEPC *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PLMNIdentityInfo_Closure)
                 (const StreamingProtobufs__PLMNIdentityInfo *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PDCCHConfigSIB1_Closure)
                 (const StreamingProtobufs__PDCCHConfigSIB1 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__NoSIB1_Closure)
                 (const StreamingProtobufs__NoSIB1 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PLMNIdentityInfoList_Closure)
                 (const StreamingProtobufs__PLMNIdentityInfoList *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MultiFrequencyBandListNR_Closure)
                 (const StreamingProtobufs__MultiFrequencyBandListNR *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CGIInfo_Closure)
                 (const StreamingProtobufs__CGIInfo *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MultiBandInfoListEUTRA_Closure)
                 (const StreamingProtobufs__MultiBandInfoListEUTRA *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__EUTRACGIInfo_Closure)
                 (const StreamingProtobufs__EUTRACGIInfo *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MeasResultNR_Closure)
                 (const StreamingProtobufs__MeasResultNR *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MeasResultEUTRA_Closure)
                 (const StreamingProtobufs__MeasResultEUTRA *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MeasResultServMO_Closure)
                 (const StreamingProtobufs__MeasResultServMO *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MeasResultServMOList_Closure)
                 (const StreamingProtobufs__MeasResultServMOList *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MeasResultListNR_Closure)
                 (const StreamingProtobufs__MeasResultListNR *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MeasResultListEUTRA_Closure)
                 (const StreamingProtobufs__MeasResultListEUTRA *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MeasResults_Closure)
                 (const StreamingProtobufs__MeasResults *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__DRXInfo_Closure)
                 (const StreamingProtobufs__DRXInfo *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__RadioBearerConfig_Closure)
                 (const StreamingProtobufs__RadioBearerConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SRBToAddModList_Closure)
                 (const StreamingProtobufs__SRBToAddModList *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SRBToAddMod_Closure)
                 (const StreamingProtobufs__SRBToAddMod *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PDCPConfig_Closure)
                 (const StreamingProtobufs__PDCPConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__DRB_Closure)
                 (const StreamingProtobufs__DRB *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__DiscardTimer_Closure)
                 (const StreamingProtobufs__DiscardTimer *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PDCPSNSize_Closure)
                 (const StreamingProtobufs__PDCPSNSize *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__Rohc_Closure)
                 (const StreamingProtobufs__Rohc *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__RohcProfiles_Closure)
                 (const StreamingProtobufs__RohcProfiles *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__UplinkOnlyROHC_Closure)
                 (const StreamingProtobufs__UplinkOnlyROHC *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__UplinkOnlyROHCProfiles_Closure)
                 (const StreamingProtobufs__UplinkOnlyROHCProfiles *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MoreThanOneRLC_Closure)
                 (const StreamingProtobufs__MoreThanOneRLC *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PrimaryPath_Closure)
                 (const StreamingProtobufs__PrimaryPath *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ULDataSplitThreshold_Closure)
                 (const StreamingProtobufs__ULDataSplitThreshold *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__TReordering_Closure)
                 (const StreamingProtobufs__TReordering *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__DRBToAddModList_Closure)
                 (const StreamingProtobufs__DRBToAddModList *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__DRBToAddMod_Closure)
                 (const StreamingProtobufs__DRBToAddMod *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__DRBToReleaseList_Closure)
                 (const StreamingProtobufs__DRBToReleaseList *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SDAPConfig_Closure)
                 (const StreamingProtobufs__SDAPConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SDAPHeader_Closure)
                 (const StreamingProtobufs__SDAPHeader *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SecurityConfig_Closure)
                 (const StreamingProtobufs__SecurityConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SecurityAlgorithmConfig_Closure)
                 (const StreamingProtobufs__SecurityAlgorithmConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CipheringAlgorithm_Closure)
                 (const StreamingProtobufs__CipheringAlgorithm *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__IntegrityProtAlgorithm_Closure)
                 (const StreamingProtobufs__IntegrityProtAlgorithm *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__KeyToUse_Closure)
                 (const StreamingProtobufs__KeyToUse *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__UplinkTxDirectCurrentList_Closure)
                 (const StreamingProtobufs__UplinkTxDirectCurrentList *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__UplinkTxDirectCurrentCell_Closure)
                 (const StreamingProtobufs__UplinkTxDirectCurrentCell *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__UplinkTxDirectCurrentBWP_Closure)
                 (const StreamingProtobufs__UplinkTxDirectCurrentBWP *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__CellAccessRelatedInfo_Closure)
                 (const StreamingProtobufs__CellAccessRelatedInfo *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ConnEstFailureControl_Closure)
                 (const StreamingProtobufs__ConnEstFailureControl *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ConnEstFailCount_Closure)
                 (const StreamingProtobufs__ConnEstFailCount *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ConnEstFailOffsetValidity_Closure)
                 (const StreamingProtobufs__ConnEstFailOffsetValidity *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SISchedulingInfo_Closure)
                 (const StreamingProtobufs__SISchedulingInfo *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SIWindowLength_Closure)
                 (const StreamingProtobufs__SIWindowLength *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SchedulingInfo_Closure)
                 (const StreamingProtobufs__SchedulingInfo *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SIBMapping_Closure)
                 (const StreamingProtobufs__SIBMapping *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SIBroadcastStatus_Closure)
                 (const StreamingProtobufs__SIBroadcastStatus *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SIPeriodicity_Closure)
                 (const StreamingProtobufs__SIPeriodicity *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SIBTypeInfo_Closure)
                 (const StreamingProtobufs__SIBTypeInfo *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SIBTypeInfoType_Closure)
                 (const StreamingProtobufs__SIBTypeInfoType *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SIRequestConfig_Closure)
                 (const StreamingProtobufs__SIRequestConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SIRequestPeriod_Closure)
                 (const StreamingProtobufs__SIRequestPeriod *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__RACHOccasionsSI_Closure)
                 (const StreamingProtobufs__RACHOccasionsSI *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SIRequestResources_Closure)
                 (const StreamingProtobufs__SIRequestResources *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__ServingCellConfigCommonSIB_Closure)
                 (const StreamingProtobufs__ServingCellConfigCommonSIB *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__DownlinkConfigCommonSIB_Closure)
                 (const StreamingProtobufs__DownlinkConfigCommonSIB *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__FrequencyInfoDLSIB_Closure)
                 (const StreamingProtobufs__FrequencyInfoDLSIB *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MultiFrequencyBandListNRSIB_Closure)
                 (const StreamingProtobufs__MultiFrequencyBandListNRSIB *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__NRMultiBandInfo_Closure)
                 (const StreamingProtobufs__NRMultiBandInfo *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__NRNSPmaxList_Closure)
                 (const StreamingProtobufs__NRNSPmaxList *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__NRNSPmaxValue_Closure)
                 (const StreamingProtobufs__NRNSPmaxValue *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__BCCHConfig_Closure)
                 (const StreamingProtobufs__BCCHConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PCCHConfig_Closure)
                 (const StreamingProtobufs__PCCHConfig *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PagingCycle_Closure)
                 (const StreamingProtobufs__PagingCycle *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__PCCHConfigNs_Closure)
                 (const StreamingProtobufs__PCCHConfigNs *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SCS15KHZoneT_Closure)
                 (const StreamingProtobufs__SCS15KHZoneT *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SCS30KHZoneTSCS15KHZhalfT_Closure)
                 (const StreamingProtobufs__SCS30KHZoneTSCS15KHZhalfT *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SCS60KHZoneTSCS30KHZhalfTSCS15KHZquarterT_Closure)
                 (const StreamingProtobufs__SCS60KHZoneTSCS30KHZhalfTSCS15KHZquarterT *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SCS120KHZoneTSCS60KHZhalfTSCS30KHZquarterTSCS15KHZoneEighthT_Closure)
                 (const StreamingProtobufs__SCS120KHZoneTSCS60KHZhalfTSCS30KHZquarterTSCS15KHZoneEighthT *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SCS120KHZhalfTSCS60KHZquarterTSCS30KHZoneEighthTSCS15KHZoneSixteenthT_Closure)
                 (const StreamingProtobufs__SCS120KHZhalfTSCS60KHZquarterTSCS30KHZoneEighthTSCS15KHZoneSixteenthT *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SCS120KHZquarterTSCS60KHZoneEighthTSCS30KHZoneSixteenthT_Closure)
                 (const StreamingProtobufs__SCS120KHZquarterTSCS60KHZoneEighthTSCS30KHZoneSixteenthT *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SCS120KHZoneEighthTSCS60KHZoneSixteenthT_Closure)
                 (const StreamingProtobufs__SCS120KHZoneEighthTSCS60KHZoneSixteenthT *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SCS120KHZoneSixteenthT_Closure)
                 (const StreamingProtobufs__SCS120KHZoneSixteenthT *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__UplinkConfigCommonSIB_Closure)
                 (const StreamingProtobufs__UplinkConfigCommonSIB *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__FrequencyInfoULSIB_Closure)
                 (const StreamingProtobufs__FrequencyInfoULSIB *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SIBNTimingAdvanceOffset_Closure)
                 (const StreamingProtobufs__SIBNTimingAdvanceOffset *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SIBSSBPositionsInBurst_Closure)
                 (const StreamingProtobufs__SIBSSBPositionsInBurst *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__SIBSSBPeriodicityServingCell_Closure)
                 (const StreamingProtobufs__SIBSSBPeriodicityServingCell *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__UETimersAndConstants_Closure)
                 (const StreamingProtobufs__UETimersAndConstants *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__UETimersAndConstantsT300T301T319_Closure)
                 (const StreamingProtobufs__UETimersAndConstantsT300T301T319 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__UETimersAndConstantsT310_Closure)
                 (const StreamingProtobufs__UETimersAndConstantsT310 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__UETimersAndConstantsN310_Closure)
                 (const StreamingProtobufs__UETimersAndConstantsN310 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__UETimersAndConstantsT311_Closure)
                 (const StreamingProtobufs__UETimersAndConstantsT311 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__UETimersAndConstantsN311_Closure)
                 (const StreamingProtobufs__UETimersAndConstantsN311 *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__UACBarringPerCatList_Closure)
                 (const StreamingProtobufs__UACBarringPerCatList *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__UACBarringPerCat_Closure)
                 (const StreamingProtobufs__UACBarringPerCat *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__UACBarringPerPLMNList_Closure)
                 (const StreamingProtobufs__UACBarringPerPLMNList *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__UACBarringPerPLMN_Closure)
                 (const StreamingProtobufs__UACBarringPerPLMN *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__UACImplicitACBarringList_Closure)
                 (const StreamingProtobufs__UACImplicitACBarringList *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__UACBarringInfoSetList_Closure)
                 (const StreamingProtobufs__UACBarringInfoSetList *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__UACBarringInfoSet_Closure)
                 (const StreamingProtobufs__UACBarringInfoSet *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__UACBarringFactor_Closure)
                 (const StreamingProtobufs__UACBarringFactor *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__UACBarringTime_Closure)
                 (const StreamingProtobufs__UACBarringTime *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__MobilityStateParameters_Closure)
                 (const StreamingProtobufs__MobilityStateParameters *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__TEvaluationHystNormal_Closure)
                 (const StreamingProtobufs__TEvaluationHystNormal *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__EUTRAMultiBandInfoList_Closure)
                 (const StreamingProtobufs__EUTRAMultiBandInfoList *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__EUTRAMultiBandInfo_Closure)
                 (const StreamingProtobufs__EUTRAMultiBandInfo *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__EUTRANSPmaxList_Closure)
                 (const StreamingProtobufs__EUTRANSPmaxList *message,
                  void *closure_data);
typedef void (*StreamingProtobufs__EUTRANSPmaxValue_Closure)
                 (const StreamingProtobufs__EUTRANSPmaxValue *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor streaming_protobufs__cell_group_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__rlc__bearer_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__rlc__config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__am__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__ul__am__rlc__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__max_retx_threshold__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__max_retx_threshold__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__sn__field_length_am__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__sn__field_length_am__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__t__poll_retransmit__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__t__poll_retransmit__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__poll_pdu__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__poll_pdu__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__poll_byte__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__poll_byte__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__dl__am__rlc__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__t__reassembly__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__t__reassembly__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__t__status_prohibit__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__t__status_prohibit__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__um__bi__directional__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__ul__um__rlc__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__sn__field_length_um__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__sn__field_length_um__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__dl__um__rlc__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__um__uni__directional__ul__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__um__uni__directional__dl__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__logical_channel_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__ul__specific_parameters__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__prioritised_bit_rate__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__prioritised_bit_rate__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__bucket_size_duration__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__bucket_size_duration__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__subcarrier_spacing__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__subcarrier_spacing__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__max_pusch__duration__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__max_pusch__duration__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__bit_rate_query_prohibit_timer__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__bit_rate_query_prohibit_timer__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__mac__cell_group_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__drx__config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__milli_seconds__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__milli_seconds__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__drx__inactivity_timer__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__drx__inactivity_timer__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__drx__retransmission_timer__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__drx__retransmission_timer__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__short_drx__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__drx__short_cycle__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__drx__short_cycle__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__scheduling_request_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__scheduling_request_to_add_mod__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__sr__prohibit_timer__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__sr__prohibit_timer__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__sr__trans_max__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__sr__trans_max__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__bsr__config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__periodic_bsr__timer__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__periodic_bsr__timer__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__retx_bsr__timer__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__retx_bsr__timer__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__logical_channel_sr__delay_timer__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__logical_channel_sr__delay_timer__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__tag__config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__tag__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__time_alignment_timer__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__time_alignment_timer__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__phr__config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__phr__periodic_timer__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__phr__periodic_timer__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__phr__prohibit_timer__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__phr__prohibit_timer__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__phr__tx__power_factor_change__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__phr__tx__power_factor_change__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__phr__mode_other_cg__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__phr__mode_other_cg__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__data_inactivity_timer__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__data_inactivity_timer__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__physical_cell_group_config__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__physical_cell_group_config__pdsch__harq__ack__codebook__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__xscale__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__xscale__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__sp_cell_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__reconfiguration_with_sync__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__serving_cell_config_common__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__downlink_config_common__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__frequency_info_dl__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__scs__specific_carrier__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__bwp__downlink_common__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__bwp__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__cyclic_prefix__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__cyclic_prefix__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pdcch__config_common__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__control_resource_set__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__interleaved__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__reg__bundle_size__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__reg__bundle_size__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__interleaver_size__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__interleaver_size__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__precoder_granularity__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__precoder_granularity__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__first_pdcch__monitoring_occasion_of_p0__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__sequence__of__integer__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pdsch__config_common__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pdsch__time_domain_resource_allocation_list__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pdsch__time_domain_resource_allocation__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__mapping_type__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__mapping_type__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__uplink_config_common__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__frequency_info_ul__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__bwp__uplink_common__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__bwp__uplink__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__rach__config_common__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__rach__config_generic__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__msg1__fdm__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__msg1__fdm__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__preamble_trans_max__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__preamble_trans_max__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__power_ramping_step__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__power_ramping_step__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__ra__response_window__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__ra__response_window__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__fraction__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__fraction__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__other_fraction__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__other_fraction__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__group_bconfigured__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__ra__msg3_size_group_a__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__ra__msg3_size_group_a__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__message_power_offset_group_b__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__message_power_offset_group_b__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__ra__contention_resolution_timer__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__ra__contention_resolution_timer__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__restricted_set_config__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__restricted_set_config__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pusch__config_common__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pusch__time_domain_resource_allocation_list__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pusch__time_domain_resource_allocation__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pucch__config_common__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pucch__group_hopping__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__pucch__group_hopping__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__n__timing_advance_offset__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__n__timing_advance_offset__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__ssb__periodicity_serving_cell__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__ssb__periodicity_serving_cell__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__dmrs__type_a__position__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__dmrs__type_a__position__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__rate_match_pattern_lte__crs__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__carrier_bandwidth_dl__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__carrier_bandwidth_dl__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__eutra__mbsfn__subframe_config_list__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__eutra__mbsfn__subframe_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__radioframe_allocation_period__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__radioframe_allocation_period__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__subframe_allocation__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__nrof_crs__ports__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__nrof_crs__ports__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__v__shift__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__v__shift__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__rate_match_pattern__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__bitmaps__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__dummy__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__dummy__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__tdd__ul__dl__config_common__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__tdd__ul__dl__pattern__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__dl__ul__transmission_periodicity__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__dl__ul__transmission_periodicity__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__dl__ul__transmission_periodicity_v1530__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__dl__ul__transmission_periodicity_v1530__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__t304__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__t304__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__rach__config_dedicated__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__cfra__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__occasions__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__ssb__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__cfra__ssb__resource__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__csirs__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__cfra__csirs__resource__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__ra__prioritization__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__power_ramping_step_high_priority__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__power_ramping_step_high_priority__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__scaling_factor_bi__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__scaling_factor_bi__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__ssb__mtc__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__duration__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__duration__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__ssb__mtc2__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__periodicity__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__periodicity__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__rlf__timers_and_constants__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__t310__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__t310__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__n310__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__n310__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__n311__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__n311__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__t311_v1530__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__t311_v1530__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__rlm_in_sync_out_of_sync_threshold__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__rlm_in_sync_out_of_sync_threshold__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__serving_cell_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__tdd__ul__dl__config_dedicated__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__tdd__ul__dl__slot_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__explicit__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__bwp__downlink_dedicated__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pdcch__config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__downlink_preemption__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__time_frequency_set__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__time_frequency_set__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__int__configuration_per_serving_cell__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pusch__tpc__command_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pucch__tpc__command_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__srs__tpc__command_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pdsch__config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__dmrs__downlink_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__dmrs__type__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__dmrs__type__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__dmrs__additional_position__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__dmrs__additional_position__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__max_length__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__max_length__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__ptrs__downlink_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__resource_element_offset__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__resource_element_offset__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__tci__state__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__qcl__info__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__qcl__type__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__qcl__type__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__vrb__to_prb__interleaver__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__vrb__to_prb__interleaver__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__resource_allocation__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__resource_allocation__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pdsch__aggregation_factor__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__pdsch__aggregation_factor__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__rate_match_pattern_group__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__rate_match_pattern_group_item__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__rbg__size__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__rbg__size__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__mcs__table__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__mcs__table__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__max_nrof_code_words_scheduled_by_dci__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__max_nrof_code_words_scheduled_by_dci__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__static_bundling__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__bundle_size__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__bundle_size__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__dynamic_bundling__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__bundle_size_set1__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__bundle_size_set1__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__bundle_size_set2__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__bundle_size_set2__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__zp__csi__rs__resource__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__csi__rs__resource_mapping__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__nrof_ports__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__nrof_ports__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__cdm__type__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__cdm__type__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__dot5__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__dot5__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__csi__frequency_occupation__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__csi__resource_periodicity_and_offset__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__zp__csi__rs__resource_set__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__sps__config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__sps__config_periodicity__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__sps__config_periodicity__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__sps__mcs__table__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__sps__mcs__table__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__radio_link_monitoring_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__radio_link_monitoring_rs__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__purpose__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__purpose__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__beam_failure_instance_max_count__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__beam_failure_instance_max_count__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__beam_failure_detection_timer__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__beam_failure_detection_timer__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__bwp__downlink__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__bwp__inactivity_timer__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__bwp__inactivity_timer__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__uplink_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__bwp__uplink_dedicated__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pucch__config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pucch__resource_set__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pucch__resource__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pucch_format0__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pucch_format1__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pucch_format2__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pucch_format3__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pucch_format4__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__occ__length__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__occ__length__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__occ__index__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__occ__index__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pucch__format_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pucch__max_code_rate__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__pucch__max_code_rate__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__nrof_slots__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__nrof_slots__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__scheduling_request_resource_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pucch__spatial_relation_info__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__srs__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__closed_loop_index__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__closed_loop_index__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pucch__power_control__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__p0__pucch__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pucch__pathloss_reference_rs__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__two_pucch__pc__adjustment_states__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__two_pucch__pc__adjustment_states__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pusch__serving_cell_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pusch__code_block_group_transmission__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__rate_matching__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__rate_matching__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__srs__carrier_switching__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__srs__switch_from_carrier__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__srs__switch_from_carrier__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__srs__tpc__pdcch__config_list__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__srs__tpc__pdcch__config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__srs__cc__set_index__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pusch__config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__tx__config__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__tx__config__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__dmrs__uplink_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__ptrs__uplink_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__transform_precoder_disabled__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__max_nrof_ports__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__max_nrof_ports__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__ptrs__power__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__ptrs__power__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__transform_precoder_enabled__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__time_density_transform_precoding__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__time_density_transform_precoding__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__transform_precoding_disabled__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__transform_precoding_enabled__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pusch__power_control__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__alpha__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__alpha__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__p0__pusch__alpha_set__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pusch__pathloss_reference_rs__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__two_pusch__pc__adjustment_states__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__two_pusch__pc__adjustment_states__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__sri__pusch__power_control__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__frequency_hopping__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__frequency_hopping__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pusch__aggregation_factor__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__pusch__aggregation_factor__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__codebook_subset__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__codebook_subset__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__rbg__size2__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__rbg__size2__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__uci__on_pusch__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__beta_offsets_list__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__scaling__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__scaling__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__configured_grant_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__cg__uci__on_pusch__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__beta_offsets__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__power_control_loop_to_use__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__power_control_loop_to_use__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__rep_k__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__rep_k__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__rep_k__rv__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__rep_k__rv__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__grant_periodicity__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__grant_periodicity__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__rrc__configured_uplink_grant__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__srs__config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__srs__resource_set__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__srs__resource_set_type__aperiodic__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__srs__resource_set_type__semi__persistent__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__srs__resource_set_type__periodic__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__srs__resource_set__usage__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__srs__resource_set__usage__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__srs__power_control_adjustment_states__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__srs__power_control_adjustment_states__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__srs__resource__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__nrof_srs__ports__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__nrof_srs__ports__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__ptrs__port_index__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__ptrs__port_index__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__n2__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__n4__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__resource_mapping__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__nrof_symbols__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__nrof_symbols__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__repetition_factor__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__repetition_factor__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__freq_hopping__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__group_or_sequence_hopping__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__group_or_sequence_hopping__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__srs__resource_type__aperiodic__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__srs__resource_type__semi__persistent__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__srs__periodicity_and_offset__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__srs__resource_type__periodic__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__srs__spatial_relation_info__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__beam_failure_recovery_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__prach__resource_dedicated_bfr__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__bfr__ssb__resource__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__bfr__csirs__resource__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__ssb_per_rach__occasion__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__ssb_per_rach__occasion__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__beam_failure_recovery_timer__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__beam_failure_recovery_timer__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pdcch__serving_cell_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__slot_format_indicator__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__slot_format_combinations_per_cell__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__slot_format_combination__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pdsch__serving_cell_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pdsch__code_block_group_transmission__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__max_code_block_groups_per_transport_block__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__max_code_block_groups_per_transport_block__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__xoverhead__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__xoverhead__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__nrof_harq__processes_for_pdsch__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__nrof_harq__processes_for_pdsch__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__csi__meas_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__nzp__csi__rs__resource__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__power_control_offset_ss__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__power_control_offset_ss__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__nzp__csi__rs__resource_set__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__csi__im__resource__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pattern0__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__subcarrier_location_p0__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__subcarrier_location_p0__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pattern1__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__subcarrier_location_p1__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__subcarrier_location_p1__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__csi__im__resource_set__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__csi__ssb__resource_set__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__csi__resource_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__nzp__csi__rs__ssb__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__csi__im__resource_set_list__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__resource_type__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__resource_type__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__csi__report_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__csi__report_config_type__periodic__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__csi__report_periodicity_and_offset__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pucch__csi__resource__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__csi__report_config_type__semi_persistent_on_pucch__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__csi__report_config_type__semi_persistent_on_pusch__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__report_slot_config__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__report_slot_config__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__csi__report_config_type__aperiodic__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__cri__ri_i1__cqi__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__cri__ri_i1__cqi__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__report_freq_configuration__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__cqi__format_indicator__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__cqi__format_indicator__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pmi__format_indicator__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__pmi__format_indicator__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__codebook_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__codebook_type__type1__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__codebook_sub_type__single_panel__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__codebook_nr_of_antenna_ports__two__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__codebook_nr_of_antenna_ports__more_than_two__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__codebook_sub_type__multi_panel__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__codebook_type__type2__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__codebook_sub_type__type_ii__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__codebook_sub_type__type_ii__port_selection__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__phase_alphabet_size__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__phase_alphabet_size__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__number_of_beams__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__number_of_beams__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__port_selection_sampling_size__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__port_selection_sampling_size__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__csi__report_config_dummy__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__csi__report_config_dummy__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__group_based_beam_reporting__disabled__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__nrof_reported_rs__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__nrof_reported_rs__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__cqi__table__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__cqi__table__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__subband_size__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__subband_size__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__port_index_for8_ranks__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__port_index8__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__port_index4__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__port_index2__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__semi_persistent_on_pusch_v1530__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__semi_persistent_on_pusch_v1530__report_slot_config_v1530__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__csi__aperiodic_trigger_state_list__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__csi__aperiodic_trigger_state__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__csi__associated_report_config_info__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__nzp__csi__rs__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__csi__semi_persistent_on_pusch__trigger_state_list__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__csi__semi_persistent_on_pusch__trigger_state__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__scell_deactivation_timer__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__scell_deactivation_timer__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__cross_carrier_scheduling_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__own_cross_carrier_scheduling_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__other_cross_carrier_scheduling_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pathloss_reference_linking__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__pathloss_reference_linking__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__meas_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__meas_object_to_remove_list__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__meas_object_to_add_mod_list__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__report_config_to_remove_list__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__report_config_to_add_mod_list__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__meas_id_to_remove_list__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__meas_id_to_add_mod_list__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__meas_object_to_add_mod__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__meas_object_nr__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__reference_signal_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__ssb__config_mobility__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__ssb__to_measure__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__ss__rssi__measurement__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__csi__rs__resource_config_mobility__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__csi__rs__cell_mobility__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__csi__rs__measurement_bw__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__csi__rs__measurement_bw__nrof_prbs__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__density__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__density__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__csi__rs__resource__mobility__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__associated_ssb__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__threshold_nr__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__q__offset_range_list__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__q__offset_range__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__q__offset_range__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__cells_to_add_mod_list__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__cells_to_add_mod__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pci__list__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pci__range_index_list__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pci__range_element__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pci__range__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__range__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__range__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__meas_cycle_scell_v1530__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__meas_cycle_scell_v1530__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__meas_object_eutra__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__eutra__allowed_meas_bandwidth__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__eutra__allowed_meas_bandwidth__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__eutra__cell_index_list__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__eutra__cell__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__eutra__q__offset_range__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__eutra__q__offset_range__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__eutra__black_cell__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__eutra__phys_cell_id_range__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__eutra__range__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__eutra__range__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__report_config_to_add_mod__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__report_config_nr__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__periodical_report_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__nr__rs__type__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__nr__rs__type__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__nr__freq_info__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__report_interval__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__report_interval__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__report_amount__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__report_amount__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__meas_report_quantity__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__event_trigger_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__event_a1__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__event_a2__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__event_a3__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__event_a4__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__event_a5__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__event_a6__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__meas_trigger_quantity__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__time_to_trigger__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__time_to_trigger__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__meas_trigger_quantity_offset__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__report_add_neigh_meas__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__report_add_neigh_meas__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__report_cgi__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__report_config_inter_rat__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__periodical_report_config_inter_rat__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__event_trigger_config_inter_rat__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__event_b1__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__event_b2__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__meas_trigger_quantity_eutra__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__report_cgi__eutra__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__meas_id_to_add_mod__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__quantity_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__quantity_config_nr__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__quantity_config_rs__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__filter_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__filter_coefficient__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__filter_coefficient__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__meas_gap_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__gap_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__mgl__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__mgl__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__mgrp__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__mgrp__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__mgta__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__mgta__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__meas_gap_sharing_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__meas_gap_sharing_scheme__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__meas_gap_sharing_scheme__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__other_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__delay_budget_reporting_prohibit_timer__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__delay_budget_reporting_prohibit_timer__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__other_config_v1540__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__overheating_assistance_config__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__overheating_assistance_config__overheating_indication_prohibit_timer__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__scell_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__search_space__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__nrof_candidates__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__aggregation_level__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__aggregation_level__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__common__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__dci__format0_0__and_format1_0__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__dci__format2_0__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__nrof_candidates__sfi__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__aggregation_level__sfi__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__aggregation_level__sfi__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__dci__format2_1__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__dci__format2_2__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__dci__format2_3__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__dummy1__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__dummy1__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__dummy2__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__dummy2__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__ue__specific__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__dci__formats__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__dci__formats__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__meas_result_cell_list_sftd__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__meas_result_cell_sftd__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__meas_result_list2_nr__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__meas_result2_nr__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__meas_quantity_results__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__results_per_ssb__index__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__results_per_csi__rs__index__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__meas_quantity_results_eutra__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__cell_results__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__results_per_csi__rs__index_list__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__results_per_ssb__index_list__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__rs_index_results__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__meas_result__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__plmn__identity__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__mnc__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__mcc__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__plmn__identity__eutra_5_gc__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__plmn__identity_list__eutra_5_gc__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__cell_access_related_info__eutra_5_gc__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__plmn__identity_list__eutra__epc__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__cell_access_related_info__eutra__epc__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__cgi_info__epc__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__plmn__identity_info__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__plmn__identity_info__cell_reserved_for_operator_use__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pdcch__config_sib1__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__no_sib1__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__plmn__identity_info_list__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__multi_frequency_band_list_nr__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__cgi__info__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__multi_band_info_list_eutra__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__eutra__cgi__info__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__meas_result_nr__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__meas_result_eutra__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__meas_result_serv_mo__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__meas_result_serv_molist__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__meas_result_list_nr__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__meas_result_list_eutra__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__meas_results__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__drx__info__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__radio_bearer_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__srb__to_add_mod_list__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__srb__to_add_mod__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pdcp__config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__drb__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__discard_timer__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__discard_timer__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pdcp__sn__size__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__pdcp__sn__size__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__rohc__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__rohc_profiles__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__uplink_only_rohc__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__uplink_only_rohcprofiles__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__more_than_one_rlc__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__primary_path__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__ul__data_split_threshold__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__ul__data_split_threshold__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__t__reordering__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__t__reordering__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__drb__to_add_mod_list__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__drb__to_add_mod__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__drb__to_release_list__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__sdap__config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__sdap__header__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__sdap__header__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__security_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__security_algorithm_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__ciphering_algorithm__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__ciphering_algorithm__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__integrity_prot_algorithm__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__integrity_prot_algorithm__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__key_to_use__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__key_to_use__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__uplink_tx_direct_current_list__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__uplink_tx_direct_current_cell__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__uplink_tx_direct_current_bwp__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__cell_access_related_info__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__conn_est_failure_control__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__conn_est_fail_count__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__conn_est_fail_count__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__conn_est_fail_offset_validity__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__conn_est_fail_offset_validity__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__si__scheduling_info__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__si__window_length__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__si__window_length__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__scheduling_info__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__sib__mapping__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__si__broadcast_status__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__si__broadcast_status__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__si__periodicity__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__si__periodicity__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__sib__type_info__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__sib__type_info_type__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__sib__type_info_type__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__si__request_config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__si__request_period__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__si__request_period__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__rach__occasions_si__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__si__request_resources__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__serving_cell_config_common_sib__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__downlink_config_common_sib__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__frequency_info_dl__sib__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__multi_frequency_band_list_nr__sib__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__nr__multi_band_info__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__nr__ns__pmax_list__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__nr__ns__pmax_value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__bcch__config__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__bcch__config__modification_period_coeff__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pcch__config__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__paging_cycle__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__paging_cycle__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__pcch__config_ns__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__pcch__config_ns__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__scs15_khzone_t__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__scs30_khzone_t__scs15_khzhalf_t__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__scs60_khzone_t__scs30_khzhalf_t__scs15_khzquarter_t__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__scs120_khzone_t__scs60_khzhalf_t__scs30_khzquarter_t__scs15_khzone_eighth_t__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__scs120_khzhalf_t__scs60_khzquarter_t__scs30_khzone_eighth_t__scs15_khzone_sixteenth_t__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__scs120_khzquarter_t__scs60_khzone_eighth_t__scs30_khzone_sixteenth_t__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__scs120_khzone_eighth_t__scs60_khzone_sixteenth_t__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__scs120_khzone_sixteenth_t__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__uplink_config_common_sib__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__frequency_info_ul__sib__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__sib__n__timing_advance_offset__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__sib__n__timing_advance_offset__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__sib__ssb__positions_in_burst__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__sib__ssb__periodicity_serving_cell__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__sib__ssb__periodicity_serving_cell__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__ue__timers_and_constants__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__ue__timers_and_constants_t300__t301__t319__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__ue__timers_and_constants_t300__t301__t319__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__ue__timers_and_constants_t310__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__ue__timers_and_constants_t310__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__ue__timers_and_constants_n310__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__ue__timers_and_constants_n310__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__ue__timers_and_constants_t311__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__ue__timers_and_constants_t311__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__ue__timers_and_constants_n311__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__ue__timers_and_constants_n311__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__uac__barring_per_cat_list__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__uac__barring_per_cat__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__uac__barring_per_plmn__list__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__uac__barring_per_plmn__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__uac__implicit_acbarring_list__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__uac__barring_info_set_list__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__uac__barring_info_set__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__uac__barring_factor__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__uac__barring_factor__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__uac__barring_time__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__uac__barring_time__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__mobility_state_parameters__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__t__evaluation__hyst_normal__descriptor;
extern const ProtobufCEnumDescriptor    streaming_protobufs__t__evaluation__hyst_normal__value__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__eutra__multi_band_info_list__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__eutra__multi_band_info__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__eutra__ns__pmax_list__descriptor;
extern const ProtobufCMessageDescriptor streaming_protobufs__eutra__ns__pmax_value__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_rrc_5fcommon_5ftypes_2eproto__INCLUDED */
